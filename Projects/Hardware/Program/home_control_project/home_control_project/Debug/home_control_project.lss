
home_control_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000007a4  00800100  00003ffc  00004090  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003ffc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000072c  008008a4  008008a4  00004834  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00004834  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004864  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000340  00000000  00000000  000048a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00009727  00000000  00000000  00004be4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000115f  00000000  00000000  0000e30b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000314d  00000000  00000000  0000f46a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d98  00000000  00000000  000125b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000015bc  00000000  00000000  00013350  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000043ae  00000000  00000000  0001490c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000510  00000000  00000000  00018cba  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	96 c0       	rjmp	.+300    	; 0x12e <__ctors_end>
       2:	00 00       	nop
       4:	b3 c0       	rjmp	.+358    	; 0x16c <__bad_interrupt>
       6:	00 00       	nop
       8:	b1 c0       	rjmp	.+354    	; 0x16c <__bad_interrupt>
       a:	00 00       	nop
       c:	af c0       	rjmp	.+350    	; 0x16c <__bad_interrupt>
       e:	00 00       	nop
      10:	ad c0       	rjmp	.+346    	; 0x16c <__bad_interrupt>
      12:	00 00       	nop
      14:	ab c0       	rjmp	.+342    	; 0x16c <__bad_interrupt>
      16:	00 00       	nop
      18:	a9 c0       	rjmp	.+338    	; 0x16c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	a7 c0       	rjmp	.+334    	; 0x16c <__bad_interrupt>
      1e:	00 00       	nop
      20:	a5 c0       	rjmp	.+330    	; 0x16c <__bad_interrupt>
      22:	00 00       	nop
      24:	a3 c0       	rjmp	.+326    	; 0x16c <__bad_interrupt>
      26:	00 00       	nop
      28:	a1 c0       	rjmp	.+322    	; 0x16c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	9f c0       	rjmp	.+318    	; 0x16c <__bad_interrupt>
      2e:	00 00       	nop
      30:	9d c0       	rjmp	.+314    	; 0x16c <__bad_interrupt>
      32:	00 00       	nop
      34:	9b c0       	rjmp	.+310    	; 0x16c <__bad_interrupt>
      36:	00 00       	nop
      38:	99 c0       	rjmp	.+306    	; 0x16c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	97 c0       	rjmp	.+302    	; 0x16c <__bad_interrupt>
      3e:	00 00       	nop
      40:	95 c0       	rjmp	.+298    	; 0x16c <__bad_interrupt>
      42:	00 00       	nop
      44:	93 c0       	rjmp	.+294    	; 0x16c <__bad_interrupt>
      46:	00 00       	nop
      48:	0c 94 30 08 	jmp	0x1060	; 0x1060 <__vector_18>
      4c:	8f c0       	rjmp	.+286    	; 0x16c <__bad_interrupt>
      4e:	00 00       	nop
      50:	c4 c7       	rjmp	.+3976   	; 0xfda <__vector_20>
      52:	00 00       	nop
      54:	8b c0       	rjmp	.+278    	; 0x16c <__bad_interrupt>
      56:	00 00       	nop
      58:	89 c0       	rjmp	.+274    	; 0x16c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	87 c0       	rjmp	.+270    	; 0x16c <__bad_interrupt>
      5e:	00 00       	nop
      60:	85 c0       	rjmp	.+266    	; 0x16c <__bad_interrupt>
      62:	00 00       	nop
      64:	83 c0       	rjmp	.+262    	; 0x16c <__bad_interrupt>
      66:	00 00       	nop
      68:	81 c0       	rjmp	.+258    	; 0x16c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	7f c0       	rjmp	.+254    	; 0x16c <__bad_interrupt>
      6e:	00 00       	nop
      70:	71 c7       	rjmp	.+3810   	; 0xf54 <__vector_28>
      72:	00 00       	nop
      74:	7b c0       	rjmp	.+246    	; 0x16c <__bad_interrupt>
      76:	00 00       	nop
      78:	79 c0       	rjmp	.+242    	; 0x16c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	77 c0       	rjmp	.+238    	; 0x16c <__bad_interrupt>
      7e:	00 00       	nop
      80:	75 c0       	rjmp	.+234    	; 0x16c <__bad_interrupt>
      82:	00 00       	nop
      84:	73 c0       	rjmp	.+230    	; 0x16c <__bad_interrupt>
      86:	00 00       	nop
      88:	71 c0       	rjmp	.+226    	; 0x16c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	27 0b       	sbc	r18, r23
      8e:	2d 0b       	sbc	r18, r29
      90:	33 0b       	sbc	r19, r19
      92:	39 0b       	sbc	r19, r25
      94:	3f 0b       	sbc	r19, r31
      96:	45 0b       	sbc	r20, r21
      98:	4b 0b       	sbc	r20, r27
      9a:	b1 1a       	sub	r11, r17
      9c:	b7 1a       	sub	r11, r23
      9e:	bd 1a       	sub	r11, r29
      a0:	16 1b       	sub	r17, r22
      a2:	16 1b       	sub	r17, r22
      a4:	16 1b       	sub	r17, r22
      a6:	16 1b       	sub	r17, r22
      a8:	16 1b       	sub	r17, r22
      aa:	16 1b       	sub	r17, r22
      ac:	16 1b       	sub	r17, r22
      ae:	16 1b       	sub	r17, r22
      b0:	16 1b       	sub	r17, r22
      b2:	c3 1a       	sub	r12, r19
      b4:	c9 1a       	sub	r12, r25
      b6:	cf 1a       	sub	r12, r31
      b8:	d5 1a       	sub	r13, r21
      ba:	16 1b       	sub	r17, r22
      bc:	16 1b       	sub	r17, r22
      be:	16 1b       	sub	r17, r22
      c0:	db 1a       	sub	r13, r27
      c2:	e1 1a       	sub	r14, r17
      c4:	e7 1a       	sub	r14, r23
      c6:	ed 1a       	sub	r14, r29
      c8:	f3 1a       	sub	r15, r19
      ca:	16 1b       	sub	r17, r22
      cc:	16 1b       	sub	r17, r22
      ce:	16 1b       	sub	r17, r22
      d0:	16 1b       	sub	r17, r22
      d2:	16 1b       	sub	r17, r22
      d4:	16 1b       	sub	r17, r22
      d6:	16 1b       	sub	r17, r22
      d8:	16 1b       	sub	r17, r22
      da:	16 1b       	sub	r17, r22
      dc:	16 1b       	sub	r17, r22
      de:	16 1b       	sub	r17, r22
      e0:	16 1b       	sub	r17, r22
      e2:	16 1b       	sub	r17, r22
      e4:	16 1b       	sub	r17, r22
      e6:	16 1b       	sub	r17, r22
      e8:	f9 1a       	sub	r15, r25
      ea:	ff 1a       	sub	r15, r31
      ec:	05 1b       	sub	r16, r21
      ee:	0b 1b       	sub	r16, r27
      f0:	11 1b       	sub	r17, r17
      f2:	1f 1b       	sub	r17, r31
      f4:	25 1b       	sub	r18, r21
      f6:	2b 1b       	sub	r18, r27
      f8:	31 1b       	sub	r19, r17
      fa:	48 1b       	sub	r20, r24
      fc:	48 1b       	sub	r20, r24
      fe:	48 1b       	sub	r20, r24
     100:	48 1b       	sub	r20, r24
     102:	48 1b       	sub	r20, r24
     104:	48 1b       	sub	r20, r24
     106:	48 1b       	sub	r20, r24
     108:	48 1b       	sub	r20, r24
     10a:	48 1b       	sub	r20, r24
     10c:	48 1b       	sub	r20, r24
     10e:	48 1b       	sub	r20, r24
     110:	48 1b       	sub	r20, r24
     112:	48 1b       	sub	r20, r24
     114:	48 1b       	sub	r20, r24
     116:	48 1b       	sub	r20, r24
     118:	48 1b       	sub	r20, r24
     11a:	48 1b       	sub	r20, r24
     11c:	48 1b       	sub	r20, r24
     11e:	48 1b       	sub	r20, r24
     120:	48 1b       	sub	r20, r24
     122:	48 1b       	sub	r20, r24
     124:	48 1b       	sub	r20, r24
     126:	48 1b       	sub	r20, r24
     128:	37 1b       	sub	r19, r23
     12a:	3d 1b       	sub	r19, r29
     12c:	43 1b       	sub	r20, r19

0000012e <__ctors_end>:
     12e:	11 24       	eor	r1, r1
     130:	1f be       	out	0x3f, r1	; 63
     132:	cf ef       	ldi	r28, 0xFF	; 255
     134:	d0 e4       	ldi	r29, 0x40	; 64
     136:	de bf       	out	0x3e, r29	; 62
     138:	cd bf       	out	0x3d, r28	; 61

0000013a <__do_copy_data>:
     13a:	18 e0       	ldi	r17, 0x08	; 8
     13c:	a0 e0       	ldi	r26, 0x00	; 0
     13e:	b1 e0       	ldi	r27, 0x01	; 1
     140:	ec ef       	ldi	r30, 0xFC	; 252
     142:	ff e3       	ldi	r31, 0x3F	; 63
     144:	00 e0       	ldi	r16, 0x00	; 0
     146:	0b bf       	out	0x3b, r16	; 59
     148:	02 c0       	rjmp	.+4      	; 0x14e <__do_copy_data+0x14>
     14a:	07 90       	elpm	r0, Z+
     14c:	0d 92       	st	X+, r0
     14e:	a4 3a       	cpi	r26, 0xA4	; 164
     150:	b1 07       	cpc	r27, r17
     152:	d9 f7       	brne	.-10     	; 0x14a <__do_copy_data+0x10>

00000154 <__do_clear_bss>:
     154:	2f e0       	ldi	r18, 0x0F	; 15
     156:	a4 ea       	ldi	r26, 0xA4	; 164
     158:	b8 e0       	ldi	r27, 0x08	; 8
     15a:	01 c0       	rjmp	.+2      	; 0x15e <.do_clear_bss_start>

0000015c <.do_clear_bss_loop>:
     15c:	1d 92       	st	X+, r1

0000015e <.do_clear_bss_start>:
     15e:	a0 3d       	cpi	r26, 0xD0	; 208
     160:	b2 07       	cpc	r27, r18
     162:	e1 f7       	brne	.-8      	; 0x15c <.do_clear_bss_loop>
     164:	0e 94 de 1d 	call	0x3bbc	; 0x3bbc <main>
     168:	0c 94 fc 1f 	jmp	0x3ff8	; 0x3ff8 <_exit>

0000016c <__bad_interrupt>:
     16c:	49 cf       	rjmp	.-366    	; 0x0 <__vectors>

0000016e <_Z13eepromSaveCfgPKci>:
				return 1;
			}
		}
	}
	return 0;
}
     16e:	0f 93       	push	r16
     170:	1f 93       	push	r17
     172:	cf 93       	push	r28
     174:	df 93       	push	r29
     176:	eb 01       	movw	r28, r22
     178:	fc 01       	movw	r30, r24
     17a:	60 81       	ld	r22, Z
     17c:	66 23       	and	r22, r22
     17e:	79 f0       	breq	.+30     	; 0x19e <_Z13eepromSaveCfgPKci+0x30>
     180:	8c 01       	movw	r16, r24
     182:	0f 5f       	subi	r16, 0xFF	; 255
     184:	1f 4f       	sbci	r17, 0xFF	; 255
     186:	f9 99       	sbic	0x1f, 1	; 31
     188:	fe cf       	rjmp	.-4      	; 0x186 <_Z13eepromSaveCfgPKci+0x18>
     18a:	21 96       	adiw	r28, 0x01	; 1
     18c:	ce 01       	movw	r24, r28
     18e:	01 97       	sbiw	r24, 0x01	; 1
     190:	0e 94 ee 1f 	call	0x3fdc	; 0x3fdc <eeprom_write_byte>
     194:	f8 01       	movw	r30, r16
     196:	61 91       	ld	r22, Z+
     198:	8f 01       	movw	r16, r30
     19a:	61 11       	cpse	r22, r1
     19c:	f4 cf       	rjmp	.-24     	; 0x186 <_Z13eepromSaveCfgPKci+0x18>
     19e:	ce 01       	movw	r24, r28
     1a0:	df 91       	pop	r29
     1a2:	cf 91       	pop	r28
     1a4:	1f 91       	pop	r17
     1a6:	0f 91       	pop	r16
     1a8:	08 95       	ret

000001aa <_Z11clearEEPROMii>:
     1aa:	ef 92       	push	r14
     1ac:	ff 92       	push	r15
     1ae:	0f 93       	push	r16
     1b0:	1f 93       	push	r17
     1b2:	cf 93       	push	r28
     1b4:	df 93       	push	r29
     1b6:	ec 01       	movw	r28, r24
     1b8:	7b 01       	movw	r14, r22
     1ba:	86 17       	cp	r24, r22
     1bc:	97 07       	cpc	r25, r23
     1be:	a4 f4       	brge	.+40     	; 0x1e8 <_Z11clearEEPROMii+0x3e>
     1c0:	f9 99       	sbic	0x1f, 1	; 31
     1c2:	fe cf       	rjmp	.-4      	; 0x1c0 <_Z11clearEEPROMii+0x16>
     1c4:	0c 2f       	mov	r16, r28
     1c6:	1d 2f       	mov	r17, r29
     1c8:	ce 01       	movw	r24, r28
     1ca:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <eeprom_read_byte>
     1ce:	8f 3f       	cpi	r24, 0xFF	; 255
     1d0:	59 f0       	breq	.+22     	; 0x1e8 <_Z11clearEEPROMii+0x3e>
     1d2:	f9 99       	sbic	0x1f, 1	; 31
     1d4:	fe cf       	rjmp	.-4      	; 0x1d2 <_Z11clearEEPROMii+0x28>
     1d6:	6f ef       	ldi	r22, 0xFF	; 255
     1d8:	80 2f       	mov	r24, r16
     1da:	91 2f       	mov	r25, r17
     1dc:	0e 94 ee 1f 	call	0x3fdc	; 0x3fdc <eeprom_write_byte>
     1e0:	21 96       	adiw	r28, 0x01	; 1
     1e2:	ce 15       	cp	r28, r14
     1e4:	df 05       	cpc	r29, r15
     1e6:	64 f3       	brlt	.-40     	; 0x1c0 <_Z11clearEEPROMii+0x16>
     1e8:	df 91       	pop	r29
     1ea:	cf 91       	pop	r28
     1ec:	1f 91       	pop	r17
     1ee:	0f 91       	pop	r16
     1f0:	ff 90       	pop	r15
     1f2:	ef 90       	pop	r14
     1f4:	08 95       	ret

000001f6 <_Z19eepromReadAttributePciS_i>:
     1f6:	2f 92       	push	r2
     1f8:	3f 92       	push	r3
     1fa:	4f 92       	push	r4
     1fc:	5f 92       	push	r5
     1fe:	6f 92       	push	r6
     200:	7f 92       	push	r7
     202:	8f 92       	push	r8
     204:	9f 92       	push	r9
     206:	af 92       	push	r10
     208:	bf 92       	push	r11
     20a:	cf 92       	push	r12
     20c:	df 92       	push	r13
     20e:	ef 92       	push	r14
     210:	ff 92       	push	r15
     212:	0f 93       	push	r16
     214:	1f 93       	push	r17
     216:	cf 93       	push	r28
     218:	df 93       	push	r29
     21a:	cd b7       	in	r28, 0x3d	; 61
     21c:	de b7       	in	r29, 0x3e	; 62
     21e:	c8 5f       	subi	r28, 0xF8	; 248
     220:	d1 40       	sbci	r29, 0x01	; 1
     222:	0f b6       	in	r0, 0x3f	; 63
     224:	f8 94       	cli
     226:	de bf       	out	0x3e, r29	; 62
     228:	0f be       	out	0x3f, r0	; 63
     22a:	cd bf       	out	0x3d, r28	; 61
     22c:	dc 01       	movw	r26, r24
     22e:	21 30       	cpi	r18, 0x01	; 1
     230:	31 05       	cpc	r19, r1
     232:	21 f4       	brne	.+8      	; 0x23c <_Z19eepromReadAttributePciS_i+0x46>
     234:	10 92 ad 0f 	sts	0x0FAD, r1	; 0x800fad <__system_var+0x33>
     238:	10 92 ac 0f 	sts	0x0FAC, r1	; 0x800fac <__system_var+0x32>
     23c:	9a 01       	movw	r18, r20
     23e:	2f 5f       	subi	r18, 0xFF	; 255
     240:	3f 4f       	sbci	r19, 0xFF	; 255
     242:	fa 01       	movw	r30, r20
     244:	80 81       	ld	r24, Z
     246:	88 23       	and	r24, r24
     248:	51 f0       	breq	.+20     	; 0x25e <_Z19eepromReadAttributePciS_i+0x68>
     24a:	f9 01       	movw	r30, r18
     24c:	81 2c       	mov	r8, r1
     24e:	91 2c       	mov	r9, r1
     250:	2f ef       	ldi	r18, 0xFF	; 255
     252:	82 1a       	sub	r8, r18
     254:	92 0a       	sbc	r9, r18
     256:	91 91       	ld	r25, Z+
     258:	91 11       	cpse	r25, r1
     25a:	fa cf       	rjmp	.-12     	; 0x250 <_Z19eepromReadAttributePciS_i+0x5a>
     25c:	02 c0       	rjmp	.+4      	; 0x262 <_Z19eepromReadAttributePciS_i+0x6c>
     25e:	81 2c       	mov	r8, r1
     260:	91 2c       	mov	r9, r1
     262:	e0 90 ac 0f 	lds	r14, 0x0FAC	; 0x800fac <__system_var+0x32>
     266:	f0 90 ad 0f 	lds	r15, 0x0FAD	; 0x800fad <__system_var+0x33>
     26a:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <EEPROM_SIZE>
     26e:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <EEPROM_SIZE+0x1>
     272:	e8 16       	cp	r14, r24
     274:	f9 06       	cpc	r15, r25
     276:	0c f0       	brlt	.+2      	; 0x27a <_Z19eepromReadAttributePciS_i+0x84>
     278:	92 c0       	rjmp	.+292    	; 0x39e <_Z19eepromReadAttributePciS_i+0x1a8>
     27a:	1a 01       	movw	r2, r20
     27c:	c9 50       	subi	r28, 0x09	; 9
     27e:	de 4f       	sbci	r29, 0xFE	; 254
     280:	79 83       	std	Y+1, r23	; 0x01
     282:	68 83       	st	Y, r22
     284:	c7 5f       	subi	r28, 0xF7	; 247
     286:	d1 40       	sbci	r29, 0x01	; 1
     288:	cb 50       	subi	r28, 0x0B	; 11
     28a:	de 4f       	sbci	r29, 0xFE	; 254
     28c:	b9 83       	std	Y+1, r27	; 0x01
     28e:	a8 83       	st	Y, r26
     290:	c5 5f       	subi	r28, 0xF5	; 245
     292:	d1 40       	sbci	r29, 0x01	; 1
     294:	a1 2c       	mov	r10, r1
     296:	b1 2c       	mov	r11, r1
     298:	00 e0       	ldi	r16, 0x00	; 0
     29a:	10 e0       	ldi	r17, 0x00	; 0
     29c:	ce 01       	movw	r24, r28
     29e:	01 96       	adiw	r24, 0x01	; 1
     2a0:	6c 01       	movw	r12, r24
     2a2:	0f 2e       	mov	r0, r31
     2a4:	f3 ef       	ldi	r31, 0xF3	; 243
     2a6:	4f 2e       	mov	r4, r31
     2a8:	55 24       	eor	r5, r5
     2aa:	53 94       	inc	r5
     2ac:	f0 2d       	mov	r31, r0
     2ae:	60 90 a1 01 	lds	r6, 0x01A1	; 0x8001a1 <EEPROM_SIZE>
     2b2:	70 90 a2 01 	lds	r7, 0x01A2	; 0x8001a2 <EEPROM_SIZE+0x1>
     2b6:	f9 99       	sbic	0x1f, 1	; 31
     2b8:	fe cf       	rjmp	.-4      	; 0x2b6 <_Z19eepromReadAttributePciS_i+0xc0>
     2ba:	c7 01       	movw	r24, r14
     2bc:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <eeprom_read_byte>
     2c0:	83 32       	cpi	r24, 0x23	; 35
     2c2:	31 f4       	brne	.+12     	; 0x2d0 <_Z19eepromReadAttributePciS_i+0xda>
     2c4:	91 e0       	ldi	r25, 0x01	; 1
     2c6:	ab 28       	or	r10, r11
     2c8:	09 f0       	breq	.+2      	; 0x2cc <_Z19eepromReadAttributePciS_i+0xd6>
     2ca:	90 e0       	ldi	r25, 0x00	; 0
     2cc:	a9 2e       	mov	r10, r25
     2ce:	b1 2c       	mov	r11, r1
     2d0:	91 e0       	ldi	r25, 0x01	; 1
     2d2:	a9 16       	cp	r10, r25
     2d4:	b1 04       	cpc	r11, r1
     2d6:	61 f4       	brne	.+24     	; 0x2f0 <_Z19eepromReadAttributePciS_i+0xfa>
     2d8:	03 3f       	cpi	r16, 0xF3	; 243
     2da:	e1 e0       	ldi	r30, 0x01	; 1
     2dc:	1e 07       	cpc	r17, r30
     2de:	09 f4       	brne	.+2      	; 0x2e2 <_Z19eepromReadAttributePciS_i+0xec>
     2e0:	60 c0       	rjmp	.+192    	; 0x3a2 <_Z19eepromReadAttributePciS_i+0x1ac>
     2e2:	f6 01       	movw	r30, r12
     2e4:	e0 0f       	add	r30, r16
     2e6:	f1 1f       	adc	r31, r17
     2e8:	80 83       	st	Z, r24
     2ea:	0f 5f       	subi	r16, 0xFF	; 255
     2ec:	1f 4f       	sbci	r17, 0xFF	; 255
     2ee:	4e c0       	rjmp	.+156    	; 0x38c <_Z19eepromReadAttributePciS_i+0x196>
     2f0:	10 16       	cp	r1, r16
     2f2:	11 06       	cpc	r1, r17
     2f4:	0c f0       	brlt	.+2      	; 0x2f8 <_Z19eepromReadAttributePciS_i+0x102>
     2f6:	4a c0       	rjmp	.+148    	; 0x38c <_Z19eepromReadAttributePciS_i+0x196>
     2f8:	f6 01       	movw	r30, r12
     2fa:	e0 0f       	add	r30, r16
     2fc:	f1 1f       	adc	r31, r17
     2fe:	10 82       	st	Z, r1
     300:	b1 01       	movw	r22, r2
     302:	c6 01       	movw	r24, r12
     304:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     308:	00 97       	sbiw	r24, 0x00	; 0
     30a:	c9 f1       	breq	.+114    	; 0x37e <_Z19eepromReadAttributePciS_i+0x188>
     30c:	ff ef       	ldi	r31, 0xFF	; 255
     30e:	8f 1a       	sub	r8, r31
     310:	9f 0a       	sbc	r9, r31
     312:	fc 01       	movw	r30, r24
     314:	e8 0d       	add	r30, r8
     316:	f9 1d       	adc	r31, r9
     318:	20 81       	ld	r18, Z
     31a:	22 23       	and	r18, r18
     31c:	e1 f0       	breq	.+56     	; 0x356 <_Z19eepromReadAttributePciS_i+0x160>
     31e:	c9 50       	subi	r28, 0x09	; 9
     320:	de 4f       	sbci	r29, 0xFE	; 254
     322:	48 81       	ld	r20, Y
     324:	59 81       	ldd	r21, Y+1	; 0x01
     326:	c7 5f       	subi	r28, 0xF7	; 247
     328:	d1 40       	sbci	r29, 0x01	; 1
     32a:	41 50       	subi	r20, 0x01	; 1
     32c:	51 09       	sbc	r21, r1
     32e:	d9 f1       	breq	.+118    	; 0x3a6 <_Z19eepromReadAttributePciS_i+0x1b0>
     330:	cb 50       	subi	r28, 0x0B	; 11
     332:	de 4f       	sbci	r29, 0xFE	; 254
     334:	a8 81       	ld	r26, Y
     336:	b9 81       	ldd	r27, Y+1	; 0x01
     338:	c5 5f       	subi	r28, 0xF5	; 245
     33a:	d1 40       	sbci	r29, 0x01	; 1
     33c:	31 96       	adiw	r30, 0x01	; 1
     33e:	80 e0       	ldi	r24, 0x00	; 0
     340:	90 e0       	ldi	r25, 0x00	; 0
     342:	03 c0       	rjmp	.+6      	; 0x34a <_Z19eepromReadAttributePciS_i+0x154>
     344:	84 17       	cp	r24, r20
     346:	95 07       	cpc	r25, r21
     348:	81 f1       	breq	.+96     	; 0x3aa <_Z19eepromReadAttributePciS_i+0x1b4>
     34a:	01 96       	adiw	r24, 0x01	; 1
     34c:	2d 93       	st	X+, r18
     34e:	21 91       	ld	r18, Z+
     350:	21 11       	cpse	r18, r1
     352:	f8 cf       	rjmp	.-16     	; 0x344 <_Z19eepromReadAttributePciS_i+0x14e>
     354:	02 c0       	rjmp	.+4      	; 0x35a <_Z19eepromReadAttributePciS_i+0x164>
     356:	80 e0       	ldi	r24, 0x00	; 0
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	cb 50       	subi	r28, 0x0B	; 11
     35c:	de 4f       	sbci	r29, 0xFE	; 254
     35e:	e8 81       	ld	r30, Y
     360:	f9 81       	ldd	r31, Y+1	; 0x01
     362:	c5 5f       	subi	r28, 0xF5	; 245
     364:	d1 40       	sbci	r29, 0x01	; 1
     366:	e8 0f       	add	r30, r24
     368:	f9 1f       	adc	r31, r25
     36a:	10 82       	st	Z, r1
     36c:	2f ef       	ldi	r18, 0xFF	; 255
     36e:	e2 1a       	sub	r14, r18
     370:	f2 0a       	sbc	r15, r18
     372:	f0 92 ad 0f 	sts	0x0FAD, r15	; 0x800fad <__system_var+0x33>
     376:	e0 92 ac 0f 	sts	0x0FAC, r14	; 0x800fac <__system_var+0x32>
     37a:	81 e0       	ldi	r24, 0x01	; 1
     37c:	17 c0       	rjmp	.+46     	; 0x3ac <_Z19eepromReadAttributePciS_i+0x1b6>
     37e:	f6 01       	movw	r30, r12
     380:	c2 01       	movw	r24, r4
     382:	11 92       	st	Z+, r1
     384:	01 97       	sbiw	r24, 0x01	; 1
     386:	e9 f7       	brne	.-6      	; 0x382 <_Z19eepromReadAttributePciS_i+0x18c>
     388:	00 e0       	ldi	r16, 0x00	; 0
     38a:	10 e0       	ldi	r17, 0x00	; 0
     38c:	9f ef       	ldi	r25, 0xFF	; 255
     38e:	e9 1a       	sub	r14, r25
     390:	f9 0a       	sbc	r15, r25
     392:	e6 14       	cp	r14, r6
     394:	f7 04       	cpc	r15, r7
     396:	0c f4       	brge	.+2      	; 0x39a <_Z19eepromReadAttributePciS_i+0x1a4>
     398:	8e cf       	rjmp	.-228    	; 0x2b6 <_Z19eepromReadAttributePciS_i+0xc0>
     39a:	80 e0       	ldi	r24, 0x00	; 0
     39c:	07 c0       	rjmp	.+14     	; 0x3ac <_Z19eepromReadAttributePciS_i+0x1b6>
     39e:	80 e0       	ldi	r24, 0x00	; 0
     3a0:	05 c0       	rjmp	.+10     	; 0x3ac <_Z19eepromReadAttributePciS_i+0x1b6>
     3a2:	80 e0       	ldi	r24, 0x00	; 0
     3a4:	03 c0       	rjmp	.+6      	; 0x3ac <_Z19eepromReadAttributePciS_i+0x1b6>
     3a6:	80 e0       	ldi	r24, 0x00	; 0
     3a8:	01 c0       	rjmp	.+2      	; 0x3ac <_Z19eepromReadAttributePciS_i+0x1b6>
     3aa:	80 e0       	ldi	r24, 0x00	; 0
     3ac:	c8 50       	subi	r28, 0x08	; 8
     3ae:	de 4f       	sbci	r29, 0xFE	; 254
     3b0:	0f b6       	in	r0, 0x3f	; 63
     3b2:	f8 94       	cli
     3b4:	de bf       	out	0x3e, r29	; 62
     3b6:	0f be       	out	0x3f, r0	; 63
     3b8:	cd bf       	out	0x3d, r28	; 61
     3ba:	df 91       	pop	r29
     3bc:	cf 91       	pop	r28
     3be:	1f 91       	pop	r17
     3c0:	0f 91       	pop	r16
     3c2:	ff 90       	pop	r15
     3c4:	ef 90       	pop	r14
     3c6:	df 90       	pop	r13
     3c8:	cf 90       	pop	r12
     3ca:	bf 90       	pop	r11
     3cc:	af 90       	pop	r10
     3ce:	9f 90       	pop	r9
     3d0:	8f 90       	pop	r8
     3d2:	7f 90       	pop	r7
     3d4:	6f 90       	pop	r6
     3d6:	5f 90       	pop	r5
     3d8:	4f 90       	pop	r4
     3da:	3f 90       	pop	r3
     3dc:	2f 90       	pop	r2
     3de:	08 95       	ret

000003e0 <_Z12getPrivilegePKc>:
     3e0:	0f 93       	push	r16
     3e2:	1f 93       	push	r17
     3e4:	cf 93       	push	r28
     3e6:	df 93       	push	r29
     3e8:	cd b7       	in	r28, 0x3d	; 61
     3ea:	de b7       	in	r29, 0x3e	; 62
     3ec:	c4 56       	subi	r28, 0x64	; 100
     3ee:	d1 09       	sbc	r29, r1
     3f0:	0f b6       	in	r0, 0x3f	; 63
     3f2:	f8 94       	cli
     3f4:	de bf       	out	0x3e, r29	; 62
     3f6:	0f be       	out	0x3f, r0	; 63
     3f8:	cd bf       	out	0x3d, r28	; 61
     3fa:	8c 01       	movw	r16, r24
     3fc:	10 92 ad 0f 	sts	0x0FAD, r1	; 0x800fad <__system_var+0x33>
     400:	10 92 ac 0f 	sts	0x0FAC, r1	; 0x800fac <__system_var+0x32>
     404:	17 c0       	rjmp	.+46     	; 0x434 <__FUSE_REGION_LENGTH__+0x34>
     406:	b8 01       	movw	r22, r16
     408:	ce 01       	movw	r24, r28
     40a:	01 96       	adiw	r24, 0x01	; 1
     40c:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     410:	89 2b       	or	r24, r25
     412:	81 f0       	breq	.+32     	; 0x434 <__FUSE_REGION_LENGTH__+0x34>
     414:	64 e2       	ldi	r22, 0x24	; 36
     416:	71 e0       	ldi	r23, 0x01	; 1
     418:	ce 01       	movw	r24, r28
     41a:	01 96       	adiw	r24, 0x01	; 1
     41c:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     420:	89 2b       	or	r24, r25
     422:	b1 f4       	brne	.+44     	; 0x450 <__FUSE_REGION_LENGTH__+0x50>
     424:	6a e2       	ldi	r22, 0x2A	; 42
     426:	71 e0       	ldi	r23, 0x01	; 1
     428:	ce 01       	movw	r24, r28
     42a:	01 96       	adiw	r24, 0x01	; 1
     42c:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     430:	89 2b       	or	r24, r25
     432:	89 f4       	brne	.+34     	; 0x456 <__FUSE_REGION_LENGTH__+0x56>
     434:	20 e0       	ldi	r18, 0x00	; 0
     436:	30 e0       	ldi	r19, 0x00	; 0
     438:	4f e2       	ldi	r20, 0x2F	; 47
     43a:	51 e0       	ldi	r21, 0x01	; 1
     43c:	64 e6       	ldi	r22, 0x64	; 100
     43e:	70 e0       	ldi	r23, 0x00	; 0
     440:	ce 01       	movw	r24, r28
     442:	01 96       	adiw	r24, 0x01	; 1
     444:	d8 de       	rcall	.-592    	; 0x1f6 <_Z19eepromReadAttributePciS_i>
     446:	81 11       	cpse	r24, r1
     448:	de cf       	rjmp	.-68     	; 0x406 <__FUSE_REGION_LENGTH__+0x6>
     44a:	80 e0       	ldi	r24, 0x00	; 0
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	05 c0       	rjmp	.+10     	; 0x45a <__FUSE_REGION_LENGTH__+0x5a>
     450:	81 e0       	ldi	r24, 0x01	; 1
     452:	90 e0       	ldi	r25, 0x00	; 0
     454:	02 c0       	rjmp	.+4      	; 0x45a <__FUSE_REGION_LENGTH__+0x5a>
     456:	82 e0       	ldi	r24, 0x02	; 2
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	cc 59       	subi	r28, 0x9C	; 156
     45c:	df 4f       	sbci	r29, 0xFF	; 255
     45e:	0f b6       	in	r0, 0x3f	; 63
     460:	f8 94       	cli
     462:	de bf       	out	0x3e, r29	; 62
     464:	0f be       	out	0x3f, r0	; 63
     466:	cd bf       	out	0x3d, r28	; 61
     468:	df 91       	pop	r29
     46a:	cf 91       	pop	r28
     46c:	1f 91       	pop	r17
     46e:	0f 91       	pop	r16
     470:	08 95       	ret

00000472 <_Z15getRelaySettingii>:
     472:	4f 92       	push	r4
     474:	5f 92       	push	r5
     476:	6f 92       	push	r6
     478:	7f 92       	push	r7
     47a:	8f 92       	push	r8
     47c:	9f 92       	push	r9
     47e:	af 92       	push	r10
     480:	bf 92       	push	r11
     482:	cf 92       	push	r12
     484:	df 92       	push	r13
     486:	ef 92       	push	r14
     488:	ff 92       	push	r15
     48a:	0f 93       	push	r16
     48c:	1f 93       	push	r17
     48e:	cf 93       	push	r28
     490:	df 93       	push	r29
     492:	cd b7       	in	r28, 0x3d	; 61
     494:	de b7       	in	r29, 0x3e	; 62
     496:	ce 5c       	subi	r28, 0xCE	; 206
     498:	d1 09       	sbc	r29, r1
     49a:	0f b6       	in	r0, 0x3f	; 63
     49c:	f8 94       	cli
     49e:	de bf       	out	0x3e, r29	; 62
     4a0:	0f be       	out	0x3f, r0	; 63
     4a2:	cd bf       	out	0x3d, r28	; 61
     4a4:	5c 01       	movw	r10, r24
     4a6:	4b 01       	movw	r8, r22
     4a8:	10 92 ad 0f 	sts	0x0FAD, r1	; 0x800fad <__system_var+0x33>
     4ac:	10 92 ac 0f 	sts	0x0FAC, r1	; 0x800fac <__system_var+0x32>
     4b0:	08 ea       	ldi	r16, 0xA8	; 168
     4b2:	19 e0       	ldi	r17, 0x09	; 9
     4b4:	0f 2e       	mov	r0, r31
     4b6:	f8 ec       	ldi	r31, 0xC8	; 200
     4b8:	6f 2e       	mov	r6, r31
     4ba:	71 2c       	mov	r7, r1
     4bc:	f0 2d       	mov	r31, r0
     4be:	0f 2e       	mov	r0, r31
     4c0:	f0 eb       	ldi	r31, 0xB0	; 176
     4c2:	4f 2e       	mov	r4, r31
     4c4:	f9 e0       	ldi	r31, 0x09	; 9
     4c6:	5f 2e       	mov	r5, r31
     4c8:	f0 2d       	mov	r31, r0
     4ca:	bf c0       	rjmp	.+382    	; 0x64a <_Z15getRelaySettingii+0x1d8>
     4cc:	ae 01       	movw	r20, r28
     4ce:	43 53       	subi	r20, 0x33	; 51
     4d0:	5f 4f       	sbci	r21, 0xFF	; 255
     4d2:	6a eb       	ldi	r22, 0xBA	; 186
     4d4:	73 e0       	ldi	r23, 0x03	; 3
     4d6:	ce 01       	movw	r24, r28
     4d8:	01 96       	adiw	r24, 0x01	; 1
     4da:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
     4de:	00 97       	sbiw	r24, 0x00	; 0
     4e0:	09 f4       	brne	.+2      	; 0x4e4 <_Z15getRelaySettingii+0x72>
     4e2:	a5 c0       	rjmp	.+330    	; 0x62e <_Z15getRelaySettingii+0x1bc>
     4e4:	ae 01       	movw	r20, r28
     4e6:	45 53       	subi	r20, 0x35	; 53
     4e8:	5f 4f       	sbci	r21, 0xFF	; 255
     4ea:	6c e8       	ldi	r22, 0x8C	; 140
     4ec:	76 e0       	ldi	r23, 0x06	; 6
     4ee:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
     4f2:	7c 01       	movw	r14, r24
     4f4:	69 e3       	ldi	r22, 0x39	; 57
     4f6:	71 e0       	ldi	r23, 0x01	; 1
     4f8:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     4fc:	89 2b       	or	r24, r25
     4fe:	79 f0       	breq	.+30     	; 0x51e <_Z15getRelaySettingii+0xac>
     500:	ae 01       	movw	r20, r28
     502:	45 53       	subi	r20, 0x35	; 53
     504:	5f 4f       	sbci	r21, 0xFF	; 255
     506:	6c e8       	ldi	r22, 0x8C	; 140
     508:	76 e0       	ldi	r23, 0x06	; 6
     50a:	80 e0       	ldi	r24, 0x00	; 0
     50c:	90 e0       	ldi	r25, 0x00	; 0
     50e:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
     512:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
     516:	f8 01       	movw	r30, r16
     518:	91 83       	std	Z+1, r25	; 0x01
     51a:	80 83       	st	Z, r24
     51c:	7c c0       	rjmp	.+248    	; 0x616 <_Z15getRelaySettingii+0x1a4>
     51e:	6c e3       	ldi	r22, 0x3C	; 60
     520:	71 e0       	ldi	r23, 0x01	; 1
     522:	c7 01       	movw	r24, r14
     524:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     528:	89 2b       	or	r24, r25
     52a:	79 f0       	breq	.+30     	; 0x54a <_Z15getRelaySettingii+0xd8>
     52c:	ae 01       	movw	r20, r28
     52e:	45 53       	subi	r20, 0x35	; 53
     530:	5f 4f       	sbci	r21, 0xFF	; 255
     532:	6c e8       	ldi	r22, 0x8C	; 140
     534:	76 e0       	ldi	r23, 0x06	; 6
     536:	80 e0       	ldi	r24, 0x00	; 0
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
     53e:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
     542:	f8 01       	movw	r30, r16
     544:	93 83       	std	Z+3, r25	; 0x03
     546:	82 83       	std	Z+2, r24	; 0x02
     548:	66 c0       	rjmp	.+204    	; 0x616 <_Z15getRelaySettingii+0x1a4>
     54a:	64 e4       	ldi	r22, 0x44	; 68
     54c:	70 e0       	ldi	r23, 0x00	; 0
     54e:	c7 01       	movw	r24, r14
     550:	0e 94 55 1f 	call	0x3eaa	; 0x3eaa <strchr>
     554:	89 2b       	or	r24, r25
     556:	79 f0       	breq	.+30     	; 0x576 <_Z15getRelaySettingii+0x104>
     558:	ae 01       	movw	r20, r28
     55a:	45 53       	subi	r20, 0x35	; 53
     55c:	5f 4f       	sbci	r21, 0xFF	; 255
     55e:	6c e8       	ldi	r22, 0x8C	; 140
     560:	76 e0       	ldi	r23, 0x06	; 6
     562:	80 e0       	ldi	r24, 0x00	; 0
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
     56a:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
     56e:	f8 01       	movw	r30, r16
     570:	95 83       	std	Z+5, r25	; 0x05
     572:	84 83       	std	Z+4, r24	; 0x04
     574:	50 c0       	rjmp	.+160    	; 0x616 <_Z15getRelaySettingii+0x1a4>
     576:	6f e3       	ldi	r22, 0x3F	; 63
     578:	71 e0       	ldi	r23, 0x01	; 1
     57a:	c7 01       	movw	r24, r14
     57c:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     580:	89 2b       	or	r24, r25
     582:	79 f0       	breq	.+30     	; 0x5a2 <_Z15getRelaySettingii+0x130>
     584:	ae 01       	movw	r20, r28
     586:	45 53       	subi	r20, 0x35	; 53
     588:	5f 4f       	sbci	r21, 0xFF	; 255
     58a:	6c e8       	ldi	r22, 0x8C	; 140
     58c:	76 e0       	ldi	r23, 0x06	; 6
     58e:	80 e0       	ldi	r24, 0x00	; 0
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
     596:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
     59a:	f8 01       	movw	r30, r16
     59c:	97 83       	std	Z+7, r25	; 0x07
     59e:	86 83       	std	Z+6, r24	; 0x06
     5a0:	3a c0       	rjmp	.+116    	; 0x616 <_Z15getRelaySettingii+0x1a4>
     5a2:	62 e4       	ldi	r22, 0x42	; 66
     5a4:	71 e0       	ldi	r23, 0x01	; 1
     5a6:	c7 01       	movw	r24, r14
     5a8:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     5ac:	89 2b       	or	r24, r25
     5ae:	99 f1       	breq	.+102    	; 0x616 <_Z15getRelaySettingii+0x1a4>
     5b0:	ae 01       	movw	r20, r28
     5b2:	45 53       	subi	r20, 0x35	; 53
     5b4:	5f 4f       	sbci	r21, 0xFF	; 255
     5b6:	6c e8       	ldi	r22, 0x8C	; 140
     5b8:	76 e0       	ldi	r23, 0x06	; 6
     5ba:	80 e0       	ldi	r24, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
     5c2:	ae 01       	movw	r20, r28
     5c4:	47 53       	subi	r20, 0x37	; 55
     5c6:	5f 4f       	sbci	r21, 0xFF	; 255
     5c8:	68 e0       	ldi	r22, 0x08	; 8
     5ca:	73 e0       	ldi	r23, 0x03	; 3
     5cc:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
     5d0:	00 97       	sbiw	r24, 0x00	; 0
     5d2:	c1 f0       	breq	.+48     	; 0x604 <_Z15getRelaySettingii+0x192>
     5d4:	62 01       	movw	r12, r4
     5d6:	e1 2c       	mov	r14, r1
     5d8:	f1 2c       	mov	r15, r1
     5da:	ff ef       	ldi	r31, 0xFF	; 255
     5dc:	ef 1a       	sub	r14, r31
     5de:	ff 0a       	sbc	r15, r31
     5e0:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
     5e4:	f6 01       	movw	r30, r12
     5e6:	81 93       	st	Z+, r24
     5e8:	91 93       	st	Z+, r25
     5ea:	6f 01       	movw	r12, r30
     5ec:	ae 01       	movw	r20, r28
     5ee:	47 53       	subi	r20, 0x37	; 55
     5f0:	5f 4f       	sbci	r21, 0xFF	; 255
     5f2:	68 e0       	ldi	r22, 0x08	; 8
     5f4:	73 e0       	ldi	r23, 0x03	; 3
     5f6:	80 e0       	ldi	r24, 0x00	; 0
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
     5fe:	00 97       	sbiw	r24, 0x00	; 0
     600:	61 f7       	brne	.-40     	; 0x5da <_Z15getRelaySettingii+0x168>
     602:	02 c0       	rjmp	.+4      	; 0x608 <_Z15getRelaySettingii+0x196>
     604:	e1 2c       	mov	r14, r1
     606:	f1 2c       	mov	r15, r1
     608:	f7 01       	movw	r30, r14
     60a:	ee 0f       	add	r30, r30
     60c:	ff 1f       	adc	r31, r31
     60e:	e0 55       	subi	r30, 0x50	; 80
     610:	f6 4f       	sbci	r31, 0xF6	; 246
     612:	71 82       	std	Z+1, r7	; 0x01
     614:	60 82       	st	Z, r6
     616:	ae 01       	movw	r20, r28
     618:	43 53       	subi	r20, 0x33	; 51
     61a:	5f 4f       	sbci	r21, 0xFF	; 255
     61c:	6a eb       	ldi	r22, 0xBA	; 186
     61e:	73 e0       	ldi	r23, 0x03	; 3
     620:	80 e0       	ldi	r24, 0x00	; 0
     622:	90 e0       	ldi	r25, 0x00	; 0
     624:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
     628:	00 97       	sbiw	r24, 0x00	; 0
     62a:	09 f0       	breq	.+2      	; 0x62e <_Z15getRelaySettingii+0x1bc>
     62c:	5b cf       	rjmp	.-330    	; 0x4e4 <_Z15getRelaySettingii+0x72>
     62e:	f8 01       	movw	r30, r16
     630:	80 81       	ld	r24, Z
     632:	91 81       	ldd	r25, Z+1	; 0x01
     634:	8a 15       	cp	r24, r10
     636:	9b 05       	cpc	r25, r11
     638:	41 f4       	brne	.+16     	; 0x64a <_Z15getRelaySettingii+0x1d8>
     63a:	82 81       	ldd	r24, Z+2	; 0x02
     63c:	93 81       	ldd	r25, Z+3	; 0x03
     63e:	88 15       	cp	r24, r8
     640:	99 05       	cpc	r25, r9
     642:	19 f4       	brne	.+6      	; 0x64a <_Z15getRelaySettingii+0x1d8>
     644:	81 e0       	ldi	r24, 0x01	; 1
     646:	90 e0       	ldi	r25, 0x00	; 0
     648:	0d c0       	rjmp	.+26     	; 0x664 <_Z15getRelaySettingii+0x1f2>
     64a:	20 e0       	ldi	r18, 0x00	; 0
     64c:	30 e0       	ldi	r19, 0x00	; 0
     64e:	45 e4       	ldi	r20, 0x45	; 69
     650:	51 e0       	ldi	r21, 0x01	; 1
     652:	67 ec       	ldi	r22, 0xC7	; 199
     654:	70 e0       	ldi	r23, 0x00	; 0
     656:	ce 01       	movw	r24, r28
     658:	01 96       	adiw	r24, 0x01	; 1
     65a:	cd dd       	rcall	.-1126   	; 0x1f6 <_Z19eepromReadAttributePciS_i>
     65c:	81 11       	cpse	r24, r1
     65e:	36 cf       	rjmp	.-404    	; 0x4cc <_Z15getRelaySettingii+0x5a>
     660:	80 e0       	ldi	r24, 0x00	; 0
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	c2 53       	subi	r28, 0x32	; 50
     666:	df 4f       	sbci	r29, 0xFF	; 255
     668:	0f b6       	in	r0, 0x3f	; 63
     66a:	f8 94       	cli
     66c:	de bf       	out	0x3e, r29	; 62
     66e:	0f be       	out	0x3f, r0	; 63
     670:	cd bf       	out	0x3d, r28	; 61
     672:	df 91       	pop	r29
     674:	cf 91       	pop	r28
     676:	1f 91       	pop	r17
     678:	0f 91       	pop	r16
     67a:	ff 90       	pop	r15
     67c:	ef 90       	pop	r14
     67e:	df 90       	pop	r13
     680:	cf 90       	pop	r12
     682:	bf 90       	pop	r11
     684:	af 90       	pop	r10
     686:	9f 90       	pop	r9
     688:	8f 90       	pop	r8
     68a:	7f 90       	pop	r7
     68c:	6f 90       	pop	r6
     68e:	5f 90       	pop	r5
     690:	4f 90       	pop	r4
     692:	08 95       	ret

00000694 <_Z24getPrimaryNetworkSettingPcS_>:

int getPrimaryNetworkSetting(char host[], char port[]){
     694:	af 92       	push	r10
     696:	bf 92       	push	r11
     698:	cf 92       	push	r12
     69a:	df 92       	push	r13
     69c:	ff 92       	push	r15
     69e:	0f 93       	push	r16
     6a0:	1f 93       	push	r17
     6a2:	cf 93       	push	r28
     6a4:	df 93       	push	r29
     6a6:	cd b7       	in	r28, 0x3d	; 61
     6a8:	de b7       	in	r29, 0x3e	; 62
     6aa:	c6 5f       	subi	r28, 0xF6	; 246
     6ac:	d1 40       	sbci	r29, 0x01	; 1
     6ae:	0f b6       	in	r0, 0x3f	; 63
     6b0:	f8 94       	cli
     6b2:	de bf       	out	0x3e, r29	; 62
     6b4:	0f be       	out	0x3f, r0	; 63
     6b6:	cd bf       	out	0x3d, r28	; 61
     6b8:	6c 01       	movw	r12, r24
     6ba:	5b 01       	movw	r10, r22
	char container[500], *p1, *save_ptr1, success = 0;
	__system_var.eeprom_position = 0;
     6bc:	10 92 ad 0f 	sts	0x0FAD, r1	; 0x800fad <__system_var+0x33>
     6c0:	10 92 ac 0f 	sts	0x0FAC, r1	; 0x800fac <__system_var+0x32>
	if (eepromReadAttribute(container,sizeof(container),"NS",0) == 0) return 0;
     6c4:	20 e0       	ldi	r18, 0x00	; 0
     6c6:	30 e0       	ldi	r19, 0x00	; 0
     6c8:	48 e4       	ldi	r20, 0x48	; 72
     6ca:	51 e0       	ldi	r21, 0x01	; 1
     6cc:	64 ef       	ldi	r22, 0xF4	; 244
     6ce:	71 e0       	ldi	r23, 0x01	; 1
     6d0:	ce 01       	movw	r24, r28
     6d2:	01 96       	adiw	r24, 0x01	; 1
     6d4:	90 dd       	rcall	.-1248   	; 0x1f6 <_Z19eepromReadAttributePciS_i>
     6d6:	88 23       	and	r24, r24
     6d8:	09 f4       	brne	.+2      	; 0x6dc <_Z24getPrimaryNetworkSettingPcS_+0x48>
     6da:	51 c0       	rjmp	.+162    	; 0x77e <_Z24getPrimaryNetworkSettingPcS_+0xea>

	p1 = strtok_r(container,";",&save_ptr1);
     6dc:	ae 01       	movw	r20, r28
     6de:	4b 50       	subi	r20, 0x0B	; 11
     6e0:	5e 4f       	sbci	r21, 0xFE	; 254
     6e2:	6a eb       	ldi	r22, 0xBA	; 186
     6e4:	73 e0       	ldi	r23, 0x03	; 3
     6e6:	ce 01       	movw	r24, r28
     6e8:	01 96       	adiw	r24, 0x01	; 1
     6ea:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
     6ee:	8c 01       	movw	r16, r24
	while (p1 != 0){
     6f0:	89 2b       	or	r24, r25
     6f2:	e9 f1       	breq	.+122    	; 0x76e <_Z24getPrimaryNetworkSettingPcS_+0xda>
     6f4:	f1 2c       	mov	r15, r1
		if (strstr(p1,"HOST1") != 0){
     6f6:	6b e4       	ldi	r22, 0x4B	; 75
     6f8:	71 e0       	ldi	r23, 0x01	; 1
     6fa:	c8 01       	movw	r24, r16
     6fc:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     700:	89 2b       	or	r24, r25
     702:	89 f0       	breq	.+34     	; 0x726 <_Z24getPrimaryNetworkSettingPcS_+0x92>
			char *p2;
			p2 = strtok(p1,":");
     704:	6c e8       	ldi	r22, 0x8C	; 140
     706:	76 e0       	ldi	r23, 0x06	; 6
     708:	c8 01       	movw	r24, r16
     70a:	0e 94 40 1f 	call	0x3e80	; 0x3e80 <strtok>
			p2 = strtok(0,":");
     70e:	6c e8       	ldi	r22, 0x8C	; 140
     710:	76 e0       	ldi	r23, 0x06	; 6
     712:	80 e0       	ldi	r24, 0x00	; 0
     714:	90 e0       	ldi	r25, 0x00	; 0
     716:	0e 94 40 1f 	call	0x3e80	; 0x3e80 <strtok>
     71a:	bc 01       	movw	r22, r24
			strcpy(host,p2);
     71c:	c6 01       	movw	r24, r12
     71e:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <strcpy>
			success += 1;
     722:	f3 94       	inc	r15
     724:	17 c0       	rjmp	.+46     	; 0x754 <_Z24getPrimaryNetworkSettingPcS_+0xc0>
		} else if (strstr(p1,"PORT1") != 0){
     726:	61 e5       	ldi	r22, 0x51	; 81
     728:	71 e0       	ldi	r23, 0x01	; 1
     72a:	c8 01       	movw	r24, r16
     72c:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     730:	89 2b       	or	r24, r25
     732:	81 f0       	breq	.+32     	; 0x754 <_Z24getPrimaryNetworkSettingPcS_+0xc0>
			char *p2;
			p2 = strtok(p1,":");
     734:	6c e8       	ldi	r22, 0x8C	; 140
     736:	76 e0       	ldi	r23, 0x06	; 6
     738:	c8 01       	movw	r24, r16
     73a:	0e 94 40 1f 	call	0x3e80	; 0x3e80 <strtok>
			p2 = strtok(0,":");
     73e:	6c e8       	ldi	r22, 0x8C	; 140
     740:	76 e0       	ldi	r23, 0x06	; 6
     742:	80 e0       	ldi	r24, 0x00	; 0
     744:	90 e0       	ldi	r25, 0x00	; 0
     746:	0e 94 40 1f 	call	0x3e80	; 0x3e80 <strtok>
			strcpy(port,p2);
     74a:	bc 01       	movw	r22, r24
     74c:	c5 01       	movw	r24, r10
     74e:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <strcpy>
			success += 1;
     752:	f3 94       	inc	r15
		}
		p1 = strtok_r(0,";",&save_ptr1);
     754:	ae 01       	movw	r20, r28
     756:	4b 50       	subi	r20, 0x0B	; 11
     758:	5e 4f       	sbci	r21, 0xFE	; 254
     75a:	6a eb       	ldi	r22, 0xBA	; 186
     75c:	73 e0       	ldi	r23, 0x03	; 3
     75e:	80 e0       	ldi	r24, 0x00	; 0
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
     766:	8c 01       	movw	r16, r24
	char container[500], *p1, *save_ptr1, success = 0;
	__system_var.eeprom_position = 0;
	if (eepromReadAttribute(container,sizeof(container),"NS",0) == 0) return 0;

	p1 = strtok_r(container,";",&save_ptr1);
	while (p1 != 0){
     768:	89 2b       	or	r24, r25
     76a:	29 f6       	brne	.-118    	; 0x6f6 <_Z24getPrimaryNetworkSettingPcS_+0x62>
     76c:	01 c0       	rjmp	.+2      	; 0x770 <_Z24getPrimaryNetworkSettingPcS_+0xdc>
	}
	return 0;
}

int getPrimaryNetworkSetting(char host[], char port[]){
	char container[500], *p1, *save_ptr1, success = 0;
     76e:	f1 2c       	mov	r15, r1
			strcpy(port,p2);
			success += 1;
		}
		p1 = strtok_r(0,";",&save_ptr1);
	}
	if (success == 2){
     770:	81 e0       	ldi	r24, 0x01	; 1
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	22 e0       	ldi	r18, 0x02	; 2
     776:	f2 16       	cp	r15, r18
     778:	21 f0       	breq	.+8      	; 0x782 <_Z24getPrimaryNetworkSettingPcS_+0xee>
     77a:	80 e0       	ldi	r24, 0x00	; 0
     77c:	02 c0       	rjmp	.+4      	; 0x782 <_Z24getPrimaryNetworkSettingPcS_+0xee>
}

int getPrimaryNetworkSetting(char host[], char port[]){
	char container[500], *p1, *save_ptr1, success = 0;
	__system_var.eeprom_position = 0;
	if (eepromReadAttribute(container,sizeof(container),"NS",0) == 0) return 0;
     77e:	80 e0       	ldi	r24, 0x00	; 0
     780:	90 e0       	ldi	r25, 0x00	; 0
	if (success == 2){
		return 1;
		} else {
		return 0;
	}
}
     782:	ca 50       	subi	r28, 0x0A	; 10
     784:	de 4f       	sbci	r29, 0xFE	; 254
     786:	0f b6       	in	r0, 0x3f	; 63
     788:	f8 94       	cli
     78a:	de bf       	out	0x3e, r29	; 62
     78c:	0f be       	out	0x3f, r0	; 63
     78e:	cd bf       	out	0x3d, r28	; 61
     790:	df 91       	pop	r29
     792:	cf 91       	pop	r28
     794:	1f 91       	pop	r17
     796:	0f 91       	pop	r16
     798:	ff 90       	pop	r15
     79a:	df 90       	pop	r13
     79c:	cf 90       	pop	r12
     79e:	bf 90       	pop	r11
     7a0:	af 90       	pop	r10
     7a2:	08 95       	ret

000007a4 <_Z26getSecondaryNetworkSettingPcS_>:

int getSecondaryNetworkSetting(char host[], char port[]){
     7a4:	af 92       	push	r10
     7a6:	bf 92       	push	r11
     7a8:	cf 92       	push	r12
     7aa:	df 92       	push	r13
     7ac:	ff 92       	push	r15
     7ae:	0f 93       	push	r16
     7b0:	1f 93       	push	r17
     7b2:	cf 93       	push	r28
     7b4:	df 93       	push	r29
     7b6:	cd b7       	in	r28, 0x3d	; 61
     7b8:	de b7       	in	r29, 0x3e	; 62
     7ba:	c6 5f       	subi	r28, 0xF6	; 246
     7bc:	d1 40       	sbci	r29, 0x01	; 1
     7be:	0f b6       	in	r0, 0x3f	; 63
     7c0:	f8 94       	cli
     7c2:	de bf       	out	0x3e, r29	; 62
     7c4:	0f be       	out	0x3f, r0	; 63
     7c6:	cd bf       	out	0x3d, r28	; 61
     7c8:	6c 01       	movw	r12, r24
     7ca:	5b 01       	movw	r10, r22
	char container[500], *p1, *save_ptr1, success = 0;
	__system_var.eeprom_position = 0;
     7cc:	10 92 ad 0f 	sts	0x0FAD, r1	; 0x800fad <__system_var+0x33>
     7d0:	10 92 ac 0f 	sts	0x0FAC, r1	; 0x800fac <__system_var+0x32>
	if (eepromReadAttribute(container,sizeof(container),"NS",0) == 0) return 0;
     7d4:	20 e0       	ldi	r18, 0x00	; 0
     7d6:	30 e0       	ldi	r19, 0x00	; 0
     7d8:	48 e4       	ldi	r20, 0x48	; 72
     7da:	51 e0       	ldi	r21, 0x01	; 1
     7dc:	64 ef       	ldi	r22, 0xF4	; 244
     7de:	71 e0       	ldi	r23, 0x01	; 1
     7e0:	ce 01       	movw	r24, r28
     7e2:	01 96       	adiw	r24, 0x01	; 1
     7e4:	08 dd       	rcall	.-1520   	; 0x1f6 <_Z19eepromReadAttributePciS_i>
     7e6:	88 23       	and	r24, r24
     7e8:	09 f4       	brne	.+2      	; 0x7ec <_Z26getSecondaryNetworkSettingPcS_+0x48>
     7ea:	51 c0       	rjmp	.+162    	; 0x88e <_Z26getSecondaryNetworkSettingPcS_+0xea>

	p1 = strtok_r(container,";",&save_ptr1);
     7ec:	ae 01       	movw	r20, r28
     7ee:	4b 50       	subi	r20, 0x0B	; 11
     7f0:	5e 4f       	sbci	r21, 0xFE	; 254
     7f2:	6a eb       	ldi	r22, 0xBA	; 186
     7f4:	73 e0       	ldi	r23, 0x03	; 3
     7f6:	ce 01       	movw	r24, r28
     7f8:	01 96       	adiw	r24, 0x01	; 1
     7fa:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
     7fe:	8c 01       	movw	r16, r24
	while (p1 != 0){
     800:	89 2b       	or	r24, r25
     802:	e9 f1       	breq	.+122    	; 0x87e <_Z26getSecondaryNetworkSettingPcS_+0xda>
     804:	f1 2c       	mov	r15, r1
		if (strstr(p1,"HOST2") != 0){
     806:	67 e5       	ldi	r22, 0x57	; 87
     808:	71 e0       	ldi	r23, 0x01	; 1
     80a:	c8 01       	movw	r24, r16
     80c:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     810:	89 2b       	or	r24, r25
     812:	89 f0       	breq	.+34     	; 0x836 <_Z26getSecondaryNetworkSettingPcS_+0x92>
			char *p2;
			p2 = strtok(p1,":");
     814:	6c e8       	ldi	r22, 0x8C	; 140
     816:	76 e0       	ldi	r23, 0x06	; 6
     818:	c8 01       	movw	r24, r16
     81a:	0e 94 40 1f 	call	0x3e80	; 0x3e80 <strtok>
			p2 = strtok(0,":");
     81e:	6c e8       	ldi	r22, 0x8C	; 140
     820:	76 e0       	ldi	r23, 0x06	; 6
     822:	80 e0       	ldi	r24, 0x00	; 0
     824:	90 e0       	ldi	r25, 0x00	; 0
     826:	0e 94 40 1f 	call	0x3e80	; 0x3e80 <strtok>
     82a:	bc 01       	movw	r22, r24
			strcpy(host,p2);
     82c:	c6 01       	movw	r24, r12
     82e:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <strcpy>
			success += 1;
     832:	f3 94       	inc	r15
     834:	17 c0       	rjmp	.+46     	; 0x864 <_Z26getSecondaryNetworkSettingPcS_+0xc0>
			} else if (strstr(p1,"PORT2") != 0){
     836:	6d e5       	ldi	r22, 0x5D	; 93
     838:	71 e0       	ldi	r23, 0x01	; 1
     83a:	c8 01       	movw	r24, r16
     83c:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     840:	89 2b       	or	r24, r25
     842:	81 f0       	breq	.+32     	; 0x864 <_Z26getSecondaryNetworkSettingPcS_+0xc0>
			char *p2;
			p2 = strtok(p1,":");
     844:	6c e8       	ldi	r22, 0x8C	; 140
     846:	76 e0       	ldi	r23, 0x06	; 6
     848:	c8 01       	movw	r24, r16
     84a:	0e 94 40 1f 	call	0x3e80	; 0x3e80 <strtok>
			p2 = strtok(0,":");
     84e:	6c e8       	ldi	r22, 0x8C	; 140
     850:	76 e0       	ldi	r23, 0x06	; 6
     852:	80 e0       	ldi	r24, 0x00	; 0
     854:	90 e0       	ldi	r25, 0x00	; 0
     856:	0e 94 40 1f 	call	0x3e80	; 0x3e80 <strtok>
			strcpy(port,p2);
     85a:	bc 01       	movw	r22, r24
     85c:	c5 01       	movw	r24, r10
     85e:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <strcpy>
			success += 1;
     862:	f3 94       	inc	r15
		}
		p1 = strtok_r(0,";",&save_ptr1);
     864:	ae 01       	movw	r20, r28
     866:	4b 50       	subi	r20, 0x0B	; 11
     868:	5e 4f       	sbci	r21, 0xFE	; 254
     86a:	6a eb       	ldi	r22, 0xBA	; 186
     86c:	73 e0       	ldi	r23, 0x03	; 3
     86e:	80 e0       	ldi	r24, 0x00	; 0
     870:	90 e0       	ldi	r25, 0x00	; 0
     872:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
     876:	8c 01       	movw	r16, r24
	char container[500], *p1, *save_ptr1, success = 0;
	__system_var.eeprom_position = 0;
	if (eepromReadAttribute(container,sizeof(container),"NS",0) == 0) return 0;

	p1 = strtok_r(container,";",&save_ptr1);
	while (p1 != 0){
     878:	89 2b       	or	r24, r25
     87a:	29 f6       	brne	.-118    	; 0x806 <_Z26getSecondaryNetworkSettingPcS_+0x62>
     87c:	01 c0       	rjmp	.+2      	; 0x880 <_Z26getSecondaryNetworkSettingPcS_+0xdc>
		return 0;
	}
}

int getSecondaryNetworkSetting(char host[], char port[]){
	char container[500], *p1, *save_ptr1, success = 0;
     87e:	f1 2c       	mov	r15, r1
			strcpy(port,p2);
			success += 1;
		}
		p1 = strtok_r(0,";",&save_ptr1);
	}
	if (success == 2){
     880:	81 e0       	ldi	r24, 0x01	; 1
     882:	90 e0       	ldi	r25, 0x00	; 0
     884:	22 e0       	ldi	r18, 0x02	; 2
     886:	f2 16       	cp	r15, r18
     888:	21 f0       	breq	.+8      	; 0x892 <_Z26getSecondaryNetworkSettingPcS_+0xee>
     88a:	80 e0       	ldi	r24, 0x00	; 0
     88c:	02 c0       	rjmp	.+4      	; 0x892 <_Z26getSecondaryNetworkSettingPcS_+0xee>
}

int getSecondaryNetworkSetting(char host[], char port[]){
	char container[500], *p1, *save_ptr1, success = 0;
	__system_var.eeprom_position = 0;
	if (eepromReadAttribute(container,sizeof(container),"NS",0) == 0) return 0;
     88e:	80 e0       	ldi	r24, 0x00	; 0
     890:	90 e0       	ldi	r25, 0x00	; 0
	if (success == 2){
		return 1;
		} else {
		return 0;
	}
}
     892:	ca 50       	subi	r28, 0x0A	; 10
     894:	de 4f       	sbci	r29, 0xFE	; 254
     896:	0f b6       	in	r0, 0x3f	; 63
     898:	f8 94       	cli
     89a:	de bf       	out	0x3e, r29	; 62
     89c:	0f be       	out	0x3f, r0	; 63
     89e:	cd bf       	out	0x3d, r28	; 61
     8a0:	df 91       	pop	r29
     8a2:	cf 91       	pop	r28
     8a4:	1f 91       	pop	r17
     8a6:	0f 91       	pop	r16
     8a8:	ff 90       	pop	r15
     8aa:	df 90       	pop	r13
     8ac:	cf 90       	pop	r12
     8ae:	bf 90       	pop	r11
     8b0:	af 90       	pop	r10
     8b2:	08 95       	ret

000008b4 <_Z24getDefaultNetworkSettingPcS_>:

int getDefaultNetworkSetting(char host[], char port[]){
     8b4:	cf 93       	push	r28
     8b6:	df 93       	push	r29
     8b8:	eb 01       	movw	r28, r22
	strcpy(host,NETWORK_HOST);
     8ba:	69 eb       	ldi	r22, 0xB9	; 185
     8bc:	71 e0       	ldi	r23, 0x01	; 1
     8be:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <strcpy>
	strcpy(port,NETWORK_PORT);
     8c2:	64 eb       	ldi	r22, 0xB4	; 180
     8c4:	71 e0       	ldi	r23, 0x01	; 1
     8c6:	ce 01       	movw	r24, r28
     8c8:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <strcpy>
	return 1;
}
     8cc:	81 e0       	ldi	r24, 0x01	; 1
     8ce:	90 e0       	ldi	r25, 0x00	; 0
     8d0:	df 91       	pop	r29
     8d2:	cf 91       	pop	r28
     8d4:	08 95       	ret

000008d6 <_Z21getAccessPointSettingv>:

void getAccessPointSetting(){
     8d6:	cf 93       	push	r28
     8d8:	df 93       	push	r29
     8da:	cd b7       	in	r28, 0x3d	; 61
     8dc:	de b7       	in	r29, 0x3e	; 62
     8de:	c4 56       	subi	r28, 0x64	; 100
     8e0:	d1 09       	sbc	r29, r1
     8e2:	0f b6       	in	r0, 0x3f	; 63
     8e4:	f8 94       	cli
     8e6:	de bf       	out	0x3e, r29	; 62
     8e8:	0f be       	out	0x3f, r0	; 63
     8ea:	cd bf       	out	0x3d, r28	; 61
	char container[100];
	__system_var.eeprom_position = 0;
     8ec:	10 92 ad 0f 	sts	0x0FAD, r1	; 0x800fad <__system_var+0x33>
     8f0:	10 92 ac 0f 	sts	0x0FAC, r1	; 0x800fac <__system_var+0x32>
	if (eepromReadAttribute(container,sizeof(container),"SSID",0) != 0){
     8f4:	20 e0       	ldi	r18, 0x00	; 0
     8f6:	30 e0       	ldi	r19, 0x00	; 0
     8f8:	43 e6       	ldi	r20, 0x63	; 99
     8fa:	51 e0       	ldi	r21, 0x01	; 1
     8fc:	64 e6       	ldi	r22, 0x64	; 100
     8fe:	70 e0       	ldi	r23, 0x00	; 0
     900:	ce 01       	movw	r24, r28
     902:	01 96       	adiw	r24, 0x01	; 1
     904:	78 dc       	rcall	.-1808   	; 0x1f6 <_Z19eepromReadAttributePciS_i>
     906:	88 23       	and	r24, r24
     908:	89 f0       	breq	.+34     	; 0x92c <_Z21getAccessPointSettingv+0x56>
		if (strlen(container) <= sizeof(__network_data.ssid)) strcpy(__network_data.ssid,container);
     90a:	de 01       	movw	r26, r28
     90c:	11 96       	adiw	r26, 0x01	; 1
     90e:	fd 01       	movw	r30, r26
     910:	01 90       	ld	r0, Z+
     912:	00 20       	and	r0, r0
     914:	e9 f7       	brne	.-6      	; 0x910 <_Z21getAccessPointSettingv+0x3a>
     916:	31 97       	sbiw	r30, 0x01	; 1
     918:	ea 1b       	sub	r30, r26
     91a:	fb 0b       	sbc	r31, r27
     91c:	7f 97       	sbiw	r30, 0x1f	; 31
     91e:	60 f4       	brcc	.+24     	; 0x938 <_Z21getAccessPointSettingv+0x62>
     920:	bd 01       	movw	r22, r26
     922:	89 e7       	ldi	r24, 0x79	; 121
     924:	9a e0       	ldi	r25, 0x0A	; 10
     926:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <strcpy>
     92a:	06 c0       	rjmp	.+12     	; 0x938 <_Z21getAccessPointSettingv+0x62>
	} else {
		strcpy(__network_data.ssid,NETWORK_SSID);
     92c:	6a ed       	ldi	r22, 0xDA	; 218
     92e:	71 e0       	ldi	r23, 0x01	; 1
     930:	89 e7       	ldi	r24, 0x79	; 121
     932:	9a e0       	ldi	r25, 0x0A	; 10
     934:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <strcpy>
	}
	__system_var.eeprom_position = 0;
     938:	10 92 ad 0f 	sts	0x0FAD, r1	; 0x800fad <__system_var+0x33>
     93c:	10 92 ac 0f 	sts	0x0FAC, r1	; 0x800fac <__system_var+0x32>
	if (eepromReadAttribute(container,sizeof(container),"PWD",0) != 0){
     940:	20 e0       	ldi	r18, 0x00	; 0
     942:	30 e0       	ldi	r19, 0x00	; 0
     944:	48 e6       	ldi	r20, 0x68	; 104
     946:	51 e0       	ldi	r21, 0x01	; 1
     948:	64 e6       	ldi	r22, 0x64	; 100
     94a:	70 e0       	ldi	r23, 0x00	; 0
     94c:	ce 01       	movw	r24, r28
     94e:	01 96       	adiw	r24, 0x01	; 1
     950:	52 dc       	rcall	.-1884   	; 0x1f6 <_Z19eepromReadAttributePciS_i>
     952:	88 23       	and	r24, r24
     954:	89 f0       	breq	.+34     	; 0x978 <_Z21getAccessPointSettingv+0xa2>
		if (strlen(container) <= sizeof(__network_data.password)) strcpy(__network_data.password,container);
     956:	de 01       	movw	r26, r28
     958:	11 96       	adiw	r26, 0x01	; 1
     95a:	fd 01       	movw	r30, r26
     95c:	01 90       	ld	r0, Z+
     95e:	00 20       	and	r0, r0
     960:	e9 f7       	brne	.-6      	; 0x95c <_Z21getAccessPointSettingv+0x86>
     962:	31 97       	sbiw	r30, 0x01	; 1
     964:	ea 1b       	sub	r30, r26
     966:	fb 0b       	sbc	r31, r27
     968:	7f 97       	sbiw	r30, 0x1f	; 31
     96a:	60 f4       	brcc	.+24     	; 0x984 <_Z21getAccessPointSettingv+0xae>
     96c:	bd 01       	movw	r22, r26
     96e:	87 e9       	ldi	r24, 0x97	; 151
     970:	9a e0       	ldi	r25, 0x0A	; 10
     972:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <strcpy>
     976:	06 c0       	rjmp	.+12     	; 0x984 <_Z21getAccessPointSettingv+0xae>
	} else {
		strcpy(__network_data.password,NETWORK_PASSW);
     978:	6f ec       	ldi	r22, 0xCF	; 207
     97a:	71 e0       	ldi	r23, 0x01	; 1
     97c:	87 e9       	ldi	r24, 0x97	; 151
     97e:	9a e0       	ldi	r25, 0x0A	; 10
     980:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <strcpy>
	}
	__system_var.eeprom_position = 0;
     984:	10 92 ad 0f 	sts	0x0FAD, r1	; 0x800fad <__system_var+0x33>
     988:	10 92 ac 0f 	sts	0x0FAC, r1	; 0x800fac <__system_var+0x32>
	if (eepromReadAttribute(container,sizeof(container),"APN",0) != 0){
     98c:	20 e0       	ldi	r18, 0x00	; 0
     98e:	30 e0       	ldi	r19, 0x00	; 0
     990:	4c e6       	ldi	r20, 0x6C	; 108
     992:	51 e0       	ldi	r21, 0x01	; 1
     994:	64 e6       	ldi	r22, 0x64	; 100
     996:	70 e0       	ldi	r23, 0x00	; 0
     998:	ce 01       	movw	r24, r28
     99a:	01 96       	adiw	r24, 0x01	; 1
     99c:	2c dc       	rcall	.-1960   	; 0x1f6 <_Z19eepromReadAttributePciS_i>
     99e:	88 23       	and	r24, r24
     9a0:	89 f0       	breq	.+34     	; 0x9c4 <_Z21getAccessPointSettingv+0xee>
		if (strlen(container) <= sizeof(__network_data.apn)) strcpy(__network_data.apn,container);
     9a2:	de 01       	movw	r26, r28
     9a4:	11 96       	adiw	r26, 0x01	; 1
     9a6:	fd 01       	movw	r30, r26
     9a8:	01 90       	ld	r0, Z+
     9aa:	00 20       	and	r0, r0
     9ac:	e9 f7       	brne	.-6      	; 0x9a8 <_Z21getAccessPointSettingv+0xd2>
     9ae:	31 97       	sbiw	r30, 0x01	; 1
     9b0:	ea 1b       	sub	r30, r26
     9b2:	fb 0b       	sbc	r31, r27
     9b4:	3b 97       	sbiw	r30, 0x0b	; 11
     9b6:	60 f4       	brcc	.+24     	; 0x9d0 <_Z21getAccessPointSettingv+0xfa>
     9b8:	bd 01       	movw	r22, r26
     9ba:	85 eb       	ldi	r24, 0xB5	; 181
     9bc:	9a e0       	ldi	r25, 0x0A	; 10
     9be:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <strcpy>
     9c2:	06 c0       	rjmp	.+12     	; 0x9d0 <_Z21getAccessPointSettingv+0xfa>
	} else {
		strcpy(__network_data.apn,NETWORK_APN);
     9c4:	6d ea       	ldi	r22, 0xAD	; 173
     9c6:	71 e0       	ldi	r23, 0x01	; 1
     9c8:	85 eb       	ldi	r24, 0xB5	; 181
     9ca:	9a e0       	ldi	r25, 0x0A	; 10
     9cc:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <strcpy>
	}

}
     9d0:	cc 59       	subi	r28, 0x9C	; 156
     9d2:	df 4f       	sbci	r29, 0xFF	; 255
     9d4:	0f b6       	in	r0, 0x3f	; 63
     9d6:	f8 94       	cli
     9d8:	de bf       	out	0x3e, r29	; 62
     9da:	0f be       	out	0x3f, r0	; 63
     9dc:	cd bf       	out	0x3d, r28	; 61
     9de:	df 91       	pop	r29
     9e0:	cf 91       	pop	r28
     9e2:	08 95       	ret

000009e4 <_Z25initializeTimerSettingIdsv>:

void initializeTimerSettingIds(){
     9e4:	5f 92       	push	r5
     9e6:	6f 92       	push	r6
     9e8:	7f 92       	push	r7
     9ea:	8f 92       	push	r8
     9ec:	9f 92       	push	r9
     9ee:	af 92       	push	r10
     9f0:	bf 92       	push	r11
     9f2:	cf 92       	push	r12
     9f4:	df 92       	push	r13
     9f6:	ef 92       	push	r14
     9f8:	ff 92       	push	r15
     9fa:	0f 93       	push	r16
     9fc:	1f 93       	push	r17
     9fe:	cf 93       	push	r28
     a00:	df 93       	push	r29
     a02:	cd b7       	in	r28, 0x3d	; 61
     a04:	de b7       	in	r29, 0x3e	; 62
     a06:	cc 5c       	subi	r28, 0xCC	; 204
     a08:	d1 09       	sbc	r29, r1
     a0a:	0f b6       	in	r0, 0x3f	; 63
     a0c:	f8 94       	cli
     a0e:	de bf       	out	0x3e, r29	; 62
     a10:	0f be       	out	0x3f, r0	; 63
     a12:	cd bf       	out	0x3d, r28	; 61
     a14:	40 e1       	ldi	r20, 0x10	; 16
     a16:	59 e0       	ldi	r21, 0x09	; 9
     a18:	60 e8       	ldi	r22, 0x80	; 128
     a1a:	79 e0       	ldi	r23, 0x09	; 9
	int index = 0;

	for (index=0;index<MAX_MODULE_COUNT;index++){
		int j;
		for (j=0;j<MAX_RELAY_COUNT;j++){
			__timer_records[index].relays[j] = 254;
     a1c:	2e ef       	ldi	r18, 0xFE	; 254
     a1e:	30 e0       	ldi	r19, 0x00	; 0
     a20:	0a c0       	rjmp	.+20     	; 0xa36 <_Z25initializeTimerSettingIdsv+0x52>
     a22:	21 93       	st	Z+, r18
     a24:	31 93       	st	Z+, r19
	int moduleId=0,relayId=0;
	int index = 0;

	for (index=0;index<MAX_MODULE_COUNT;index++){
		int j;
		for (j=0;j<MAX_RELAY_COUNT;j++){
     a26:	e8 17       	cp	r30, r24
     a28:	f9 07       	cpc	r31, r25
     a2a:	d9 f7       	brne	.-10     	; 0xa22 <_Z25initializeTimerSettingIdsv+0x3e>
     a2c:	44 5e       	subi	r20, 0xE4	; 228
     a2e:	5f 4f       	sbci	r21, 0xFF	; 255
void initializeTimerSettingIds(){
	char container[200];
	int moduleId=0,relayId=0;
	int index = 0;

	for (index=0;index<MAX_MODULE_COUNT;index++){
     a30:	46 17       	cp	r20, r22
     a32:	57 07       	cpc	r21, r23
     a34:	21 f0       	breq	.+8      	; 0xa3e <_Z25initializeTimerSettingIdsv+0x5a>
     a36:	ca 01       	movw	r24, r20
     a38:	4a 96       	adiw	r24, 0x1a	; 26
		strcpy(__network_data.apn,NETWORK_APN);
	}

}

void initializeTimerSettingIds(){
     a3a:	fa 01       	movw	r30, r20
     a3c:	f2 cf       	rjmp	.-28     	; 0xa22 <_Z25initializeTimerSettingIdsv+0x3e>
		for (j=0;j<MAX_RELAY_COUNT;j++){
			__timer_records[index].relays[j] = 254;
		}
	}

	__system_var.eeprom_position = 0;
     a3e:	10 92 ad 0f 	sts	0x0FAD, r1	; 0x800fad <__system_var+0x33>
     a42:	10 92 ac 0f 	sts	0x0FAC, r1	; 0x800fac <__system_var+0x32>
void initializeTimerSettingIds(){
	char container[200];
	int moduleId=0,relayId=0;
	int index = 0;

	for (index=0;index<MAX_MODULE_COUNT;index++){
     a46:	68 94       	set
     a48:	aa 24       	eor	r10, r10
     a4a:	a2 f8       	bld	r10, 2
     a4c:	b1 2c       	mov	r11, r1

}

void initializeTimerSettingIds(){
	char container[200];
	int moduleId=0,relayId=0;
     a4e:	81 2c       	mov	r8, r1
     a50:	91 2c       	mov	r9, r1
     a52:	c1 2c       	mov	r12, r1
     a54:	d1 2c       	mov	r13, r1
     a56:	0f 2e       	mov	r0, r31
     a58:	fc e1       	ldi	r31, 0x1C	; 28
     a5a:	6f 2e       	mov	r6, r31
     a5c:	f0 2d       	mov	r31, r0
				found += 1;
			}
			p1 = strtok_r(0,";",&save_ptr1);
		}

		if (found == 2){
     a5e:	55 24       	eor	r5, r5
     a60:	53 94       	inc	r5
			flag = 1;
			for (i=0;i<MAX_RELAY_COUNT;i++){
				if (__timer_records[moduleId].relays[i] == relayId){
					flag = 0;
     a62:	71 2c       	mov	r7, r1
			__timer_records[index].relays[j] = 254;
		}
	}

	__system_var.eeprom_position = 0;
	while (eepromReadAttribute(container,sizeof(container),"TS",0) != 0){
     a64:	78 c0       	rjmp	.+240    	; 0xb56 <_Z25initializeTimerSettingIdsv+0x172>
		char *save_ptr1,*p1,flag;
		int i,found = 0;

		p1 = strtok_r(container,";",&save_ptr1);
     a66:	ae 01       	movw	r20, r28
     a68:	45 53       	subi	r20, 0x35	; 53
     a6a:	5f 4f       	sbci	r21, 0xFF	; 255
     a6c:	6a eb       	ldi	r22, 0xBA	; 186
     a6e:	73 e0       	ldi	r23, 0x03	; 3
     a70:	ce 01       	movw	r24, r28
     a72:	01 96       	adiw	r24, 0x01	; 1
     a74:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
		while (p1!= 0){
     a78:	00 97       	sbiw	r24, 0x00	; 0
     a7a:	09 f4       	brne	.+2      	; 0xa7e <_Z25initializeTimerSettingIdsv+0x9a>
     a7c:	6c c0       	rjmp	.+216    	; 0xb56 <_Z25initializeTimerSettingIdsv+0x172>
     a7e:	e1 2c       	mov	r14, r1
     a80:	f1 2c       	mov	r15, r1
			char *p2,*save_ptr2;

			p2 = strtok_r(p1,":",&save_ptr2);
     a82:	ae 01       	movw	r20, r28
     a84:	47 53       	subi	r20, 0x37	; 55
     a86:	5f 4f       	sbci	r21, 0xFF	; 255
     a88:	6c e8       	ldi	r22, 0x8C	; 140
     a8a:	76 e0       	ldi	r23, 0x06	; 6
     a8c:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
     a90:	8c 01       	movw	r16, r24
			if (strstr(p2,"MI")){
     a92:	69 e3       	ldi	r22, 0x39	; 57
     a94:	71 e0       	ldi	r23, 0x01	; 1
     a96:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     a9a:	89 2b       	or	r24, r25
     a9c:	81 f0       	breq	.+32     	; 0xabe <_Z25initializeTimerSettingIdsv+0xda>
				p2 = strtok_r(0,":",&save_ptr2);
     a9e:	ae 01       	movw	r20, r28
     aa0:	47 53       	subi	r20, 0x37	; 55
     aa2:	5f 4f       	sbci	r21, 0xFF	; 255
     aa4:	6c e8       	ldi	r22, 0x8C	; 140
     aa6:	76 e0       	ldi	r23, 0x06	; 6
     aa8:	80 e0       	ldi	r24, 0x00	; 0
     aaa:	90 e0       	ldi	r25, 0x00	; 0
     aac:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
				moduleId = atoi(p2);
     ab0:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
     ab4:	6c 01       	movw	r12, r24
				found += 1;
     ab6:	2f ef       	ldi	r18, 0xFF	; 255
     ab8:	e2 1a       	sub	r14, r18
     aba:	f2 0a       	sbc	r15, r18
     abc:	17 c0       	rjmp	.+46     	; 0xaec <_Z25initializeTimerSettingIdsv+0x108>
				} else if (strstr(p2,"RI")){
     abe:	6c e3       	ldi	r22, 0x3C	; 60
     ac0:	71 e0       	ldi	r23, 0x01	; 1
     ac2:	c8 01       	movw	r24, r16
     ac4:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     ac8:	89 2b       	or	r24, r25
     aca:	81 f0       	breq	.+32     	; 0xaec <_Z25initializeTimerSettingIdsv+0x108>
				p2 = strtok_r(0,":",&save_ptr2);
     acc:	ae 01       	movw	r20, r28
     ace:	47 53       	subi	r20, 0x37	; 55
     ad0:	5f 4f       	sbci	r21, 0xFF	; 255
     ad2:	6c e8       	ldi	r22, 0x8C	; 140
     ad4:	76 e0       	ldi	r23, 0x06	; 6
     ad6:	80 e0       	ldi	r24, 0x00	; 0
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
				relayId = atoi(p2);
     ade:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
     ae2:	88 2e       	mov	r8, r24
     ae4:	99 2e       	mov	r9, r25
				found += 1;
     ae6:	8f ef       	ldi	r24, 0xFF	; 255
     ae8:	e8 1a       	sub	r14, r24
     aea:	f8 0a       	sbc	r15, r24
			}
			p1 = strtok_r(0,";",&save_ptr1);
     aec:	ae 01       	movw	r20, r28
     aee:	45 53       	subi	r20, 0x35	; 53
     af0:	5f 4f       	sbci	r21, 0xFF	; 255
     af2:	6a eb       	ldi	r22, 0xBA	; 186
     af4:	73 e0       	ldi	r23, 0x03	; 3
     af6:	80 e0       	ldi	r24, 0x00	; 0
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
	while (eepromReadAttribute(container,sizeof(container),"TS",0) != 0){
		char *save_ptr1,*p1,flag;
		int i,found = 0;

		p1 = strtok_r(container,";",&save_ptr1);
		while (p1!= 0){
     afe:	00 97       	sbiw	r24, 0x00	; 0
     b00:	09 f0       	breq	.+2      	; 0xb04 <_Z25initializeTimerSettingIdsv+0x120>
     b02:	bf cf       	rjmp	.-130    	; 0xa82 <_Z25initializeTimerSettingIdsv+0x9e>
     b04:	88 2d       	mov	r24, r8
     b06:	99 2d       	mov	r25, r9
     b08:	a6 01       	movw	r20, r12
				found += 1;
			}
			p1 = strtok_r(0,";",&save_ptr1);
		}

		if (found == 2){
     b0a:	22 e0       	ldi	r18, 0x02	; 2
     b0c:	e2 16       	cp	r14, r18
     b0e:	f1 04       	cpc	r15, r1
     b10:	11 f5       	brne	.+68     	; 0xb56 <_Z25initializeTimerSettingIdsv+0x172>
     b12:	2d c0       	rjmp	.+90     	; 0xb6e <_Z25initializeTimerSettingIdsv+0x18a>
			flag = 1;
			for (i=0;i<MAX_RELAY_COUNT;i++){
				if (__timer_records[moduleId].relays[i] == relayId){
     b14:	21 91       	ld	r18, Z+
     b16:	31 91       	ld	r19, Z+
     b18:	28 17       	cp	r18, r24
     b1a:	39 07       	cpc	r19, r25
     b1c:	09 f4       	brne	.+2      	; 0xb20 <_Z25initializeTimerSettingIdsv+0x13c>
					flag = 0;
     b1e:	a7 2d       	mov	r26, r7
			p1 = strtok_r(0,";",&save_ptr1);
		}

		if (found == 2){
			flag = 1;
			for (i=0;i<MAX_RELAY_COUNT;i++){
     b20:	e6 17       	cp	r30, r22
     b22:	f7 07       	cpc	r31, r23
     b24:	b9 f7       	brne	.-18     	; 0xb14 <_Z25initializeTimerSettingIdsv+0x130>
				if (__timer_records[moduleId].relays[i] == relayId){
					flag = 0;
				}
			}
			if (flag == 1){
     b26:	a1 30       	cpi	r26, 0x01	; 1
     b28:	b1 f4       	brne	.+44     	; 0xb56 <_Z25initializeTimerSettingIdsv+0x172>
				__timer_records[moduleId].relays[index++] = relayId;
     b2a:	44 0f       	add	r20, r20
     b2c:	55 1f       	adc	r21, r21
     b2e:	fa 01       	movw	r30, r20
     b30:	ee 0f       	add	r30, r30
     b32:	ff 1f       	adc	r31, r31
     b34:	ee 0f       	add	r30, r30
     b36:	ff 1f       	adc	r31, r31
     b38:	ee 0f       	add	r30, r30
     b3a:	ff 1f       	adc	r31, r31
     b3c:	e4 1b       	sub	r30, r20
     b3e:	f5 0b       	sbc	r31, r21
     b40:	ea 0d       	add	r30, r10
     b42:	fb 1d       	adc	r31, r11
     b44:	ee 0f       	add	r30, r30
     b46:	ff 1f       	adc	r31, r31
     b48:	e0 5f       	subi	r30, 0xF0	; 240
     b4a:	f6 4f       	sbci	r31, 0xF6	; 246
     b4c:	91 83       	std	Z+1, r25	; 0x01
     b4e:	80 83       	st	Z, r24
     b50:	c5 01       	movw	r24, r10
     b52:	01 96       	adiw	r24, 0x01	; 1
     b54:	5c 01       	movw	r10, r24
			__timer_records[index].relays[j] = 254;
		}
	}

	__system_var.eeprom_position = 0;
	while (eepromReadAttribute(container,sizeof(container),"TS",0) != 0){
     b56:	20 e0       	ldi	r18, 0x00	; 0
     b58:	30 e0       	ldi	r19, 0x00	; 0
     b5a:	40 e7       	ldi	r20, 0x70	; 112
     b5c:	51 e0       	ldi	r21, 0x01	; 1
     b5e:	68 ec       	ldi	r22, 0xC8	; 200
     b60:	70 e0       	ldi	r23, 0x00	; 0
     b62:	ce 01       	movw	r24, r28
     b64:	01 96       	adiw	r24, 0x01	; 1
     b66:	47 db       	rcall	.-2418   	; 0x1f6 <_Z19eepromReadAttributePciS_i>
     b68:	81 11       	cpse	r24, r1
     b6a:	7d cf       	rjmp	.-262    	; 0xa66 <_Z25initializeTimerSettingIdsv+0x82>
     b6c:	0c c0       	rjmp	.+24     	; 0xb86 <_Z25initializeTimerSettingIdsv+0x1a2>
     b6e:	6c 9c       	mul	r6, r12
     b70:	b0 01       	movw	r22, r0
     b72:	6d 9c       	mul	r6, r13
     b74:	70 0d       	add	r23, r0
     b76:	11 24       	eor	r1, r1
     b78:	fb 01       	movw	r30, r22
     b7a:	e0 5f       	subi	r30, 0xF0	; 240
     b7c:	f6 4f       	sbci	r31, 0xF6	; 246
     b7e:	66 5d       	subi	r22, 0xD6	; 214
     b80:	76 4f       	sbci	r23, 0xF6	; 246
				found += 1;
			}
			p1 = strtok_r(0,";",&save_ptr1);
		}

		if (found == 2){
     b82:	a5 2d       	mov	r26, r5
     b84:	c7 cf       	rjmp	.-114    	; 0xb14 <_Z25initializeTimerSettingIdsv+0x130>
			if (flag == 1){
				__timer_records[moduleId].relays[index++] = relayId;
			}
		}
	}
}
     b86:	c4 53       	subi	r28, 0x34	; 52
     b88:	df 4f       	sbci	r29, 0xFF	; 255
     b8a:	0f b6       	in	r0, 0x3f	; 63
     b8c:	f8 94       	cli
     b8e:	de bf       	out	0x3e, r29	; 62
     b90:	0f be       	out	0x3f, r0	; 63
     b92:	cd bf       	out	0x3d, r28	; 61
     b94:	df 91       	pop	r29
     b96:	cf 91       	pop	r28
     b98:	1f 91       	pop	r17
     b9a:	0f 91       	pop	r16
     b9c:	ff 90       	pop	r15
     b9e:	ef 90       	pop	r14
     ba0:	df 90       	pop	r13
     ba2:	cf 90       	pop	r12
     ba4:	bf 90       	pop	r11
     ba6:	af 90       	pop	r10
     ba8:	9f 90       	pop	r9
     baa:	8f 90       	pop	r8
     bac:	7f 90       	pop	r7
     bae:	6f 90       	pop	r6
     bb0:	5f 90       	pop	r5
     bb2:	08 95       	ret

00000bb4 <_Z15getTimerSettingii>:

int getTimerSetting(int moduleId, int relayId){
     bb4:	2f 92       	push	r2
     bb6:	3f 92       	push	r3
     bb8:	4f 92       	push	r4
     bba:	5f 92       	push	r5
     bbc:	6f 92       	push	r6
     bbe:	7f 92       	push	r7
     bc0:	8f 92       	push	r8
     bc2:	9f 92       	push	r9
     bc4:	af 92       	push	r10
     bc6:	bf 92       	push	r11
     bc8:	cf 92       	push	r12
     bca:	df 92       	push	r13
     bcc:	ef 92       	push	r14
     bce:	ff 92       	push	r15
     bd0:	0f 93       	push	r16
     bd2:	1f 93       	push	r17
     bd4:	cf 93       	push	r28
     bd6:	df 93       	push	r29
     bd8:	cd b7       	in	r28, 0x3d	; 61
     bda:	de b7       	in	r29, 0x3e	; 62
     bdc:	cc 56       	subi	r28, 0x6C	; 108
     bde:	d1 09       	sbc	r29, r1
     be0:	0f b6       	in	r0, 0x3f	; 63
     be2:	f8 94       	cli
     be4:	de bf       	out	0x3e, r29	; 62
     be6:	0f be       	out	0x3f, r0	; 63
     be8:	cd bf       	out	0x3d, r28	; 61
     bea:	5c 01       	movw	r10, r24
     bec:	4b 01       	movw	r8, r22
     bee:	0f 2e       	mov	r0, r31
     bf0:	f6 e8       	ldi	r31, 0x86	; 134
     bf2:	6f 2e       	mov	r6, r31
     bf4:	f9 e0       	ldi	r31, 0x09	; 9
     bf6:	7f 2e       	mov	r7, r31
     bf8:	f0 2d       	mov	r31, r0
		char *save_ptr1;
		unsigned int i;
		
		p1 = strtok_r(container,";",&save_ptr1);
		for (i=0;i<sizeof(__timer_setting.start_week);i++){
			__timer_setting.start_week[i] = 254;
     bfa:	0e ef       	ldi	r16, 0xFE	; 254
     bfc:	10 e0       	ldi	r17, 0x00	; 0
     bfe:	0f 2e       	mov	r0, r31
     c00:	f8 e9       	ldi	r31, 0x98	; 152
     c02:	4f 2e       	mov	r4, r31
     c04:	f9 e0       	ldi	r31, 0x09	; 9
     c06:	5f 2e       	mov	r5, r31
     c08:	f0 2d       	mov	r31, r0
				} else if (strstr(p2,"EW")){
				char *p3, *save_ptr3; int i=0;
				p2 = strtok_r(0,":",&save_ptr2);
				p3 = strtok_r(p2,",",&save_ptr3);

				while (p3 != 0){
     c0a:	ac 96       	adiw	r28, 0x2c	; 44
     c0c:	4f ae       	std	Y+63, r4	; 0x3f
     c0e:	ac 97       	sbiw	r28, 0x2c	; 44
     c10:	ad 96       	adiw	r28, 0x2d	; 45
     c12:	5f ae       	std	Y+63, r5	; 0x3f
     c14:	ad 97       	sbiw	r28, 0x2d	; 45

				} else if (strstr(p2,"SW")){
				char *p3, *save_ptr3; int i=0;
				p2 = strtok_r(0,":",&save_ptr2);
				p3 = strtok_r(p2,",",&save_ptr3);
				while (p3 != 0){
     c16:	36 2c       	mov	r3, r6
     c18:	27 2c       	mov	r2, r7
}

int getTimerSetting(int moduleId, int relayId){
	char container[100]; char *p1;

	while (eepromReadAttribute(container,sizeof(container),"TS",0) != 0){
     c1a:	12 c1       	rjmp	.+548    	; 0xe40 <_Z15getTimerSettingii+0x28c>

		char *save_ptr1;
		unsigned int i;
		
		p1 = strtok_r(container,";",&save_ptr1);
     c1c:	ae 01       	movw	r20, r28
     c1e:	47 59       	subi	r20, 0x97	; 151
     c20:	5f 4f       	sbci	r21, 0xFF	; 255
     c22:	6a eb       	ldi	r22, 0xBA	; 186
     c24:	73 e0       	ldi	r23, 0x03	; 3
     c26:	ce 01       	movw	r24, r28
     c28:	01 96       	adiw	r24, 0x01	; 1
     c2a:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
     c2e:	26 ea       	ldi	r18, 0xA6	; 166
     c30:	39 e0       	ldi	r19, 0x09	; 9
     c32:	f3 01       	movw	r30, r6
		for (i=0;i<sizeof(__timer_setting.start_week);i++){
			__timer_setting.start_week[i] = 254;
     c34:	01 93       	st	Z+, r16
     c36:	11 93       	st	Z+, r17

		char *save_ptr1;
		unsigned int i;
		
		p1 = strtok_r(container,";",&save_ptr1);
		for (i=0;i<sizeof(__timer_setting.start_week);i++){
     c38:	e2 17       	cp	r30, r18
     c3a:	f3 07       	cpc	r31, r19
     c3c:	d9 f7       	brne	.-10     	; 0xc34 <_Z15getTimerSettingii+0x80>
     c3e:	28 eb       	ldi	r18, 0xB8	; 184
     c40:	39 e0       	ldi	r19, 0x09	; 9
     c42:	f2 01       	movw	r30, r4
			__timer_setting.start_week[i] = 254;
		}
		for (i=0;i<sizeof(__timer_setting.end_week);i++){
			__timer_setting.end_week[i] = 254;
     c44:	01 93       	st	Z+, r16
     c46:	11 93       	st	Z+, r17
		
		p1 = strtok_r(container,";",&save_ptr1);
		for (i=0;i<sizeof(__timer_setting.start_week);i++){
			__timer_setting.start_week[i] = 254;
		}
		for (i=0;i<sizeof(__timer_setting.end_week);i++){
     c48:	e2 17       	cp	r30, r18
     c4a:	f3 07       	cpc	r31, r19
     c4c:	d9 f7       	brne	.-10     	; 0xc44 <_Z15getTimerSettingii+0x90>
			__timer_setting.end_week[i] = 254;
		}

		while (p1!= 0){
     c4e:	00 97       	sbiw	r24, 0x00	; 0
     c50:	09 f4       	brne	.+2      	; 0xc54 <_Z15getTimerSettingii+0xa0>
     c52:	e5 c0       	rjmp	.+458    	; 0xe1e <_Z15getTimerSettingii+0x26a>
			char *p2,*save_ptr2;

			p2 = strtok_r(p1,":",&save_ptr2);
			if (strstr(p2,"MI")){
				p2 = strtok_r(0,":",&save_ptr2);
				__timer_setting.module_id = atoi(p2);
     c54:	0f 2e       	mov	r0, r31
     c56:	fe e7       	ldi	r31, 0x7E	; 126
     c58:	cf 2e       	mov	r12, r31
     c5a:	f9 e0       	ldi	r31, 0x09	; 9
     c5c:	df 2e       	mov	r13, r31
     c5e:	f0 2d       	mov	r31, r0
		}

		while (p1!= 0){
			char *p2,*save_ptr2;

			p2 = strtok_r(p1,":",&save_ptr2);
     c60:	ae 01       	movw	r20, r28
     c62:	49 59       	subi	r20, 0x99	; 153
     c64:	5f 4f       	sbci	r21, 0xFF	; 255
     c66:	6c e8       	ldi	r22, 0x8C	; 140
     c68:	76 e0       	ldi	r23, 0x06	; 6
     c6a:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
     c6e:	7c 01       	movw	r14, r24
			if (strstr(p2,"MI")){
     c70:	69 e3       	ldi	r22, 0x39	; 57
     c72:	71 e0       	ldi	r23, 0x01	; 1
     c74:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     c78:	89 2b       	or	r24, r25
     c7a:	79 f0       	breq	.+30     	; 0xc9a <_Z15getTimerSettingii+0xe6>
				p2 = strtok_r(0,":",&save_ptr2);
     c7c:	ae 01       	movw	r20, r28
     c7e:	49 59       	subi	r20, 0x99	; 153
     c80:	5f 4f       	sbci	r21, 0xFF	; 255
     c82:	6c e8       	ldi	r22, 0x8C	; 140
     c84:	76 e0       	ldi	r23, 0x06	; 6
     c86:	80 e0       	ldi	r24, 0x00	; 0
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
				__timer_setting.module_id = atoi(p2);
     c8e:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
     c92:	f6 01       	movw	r30, r12
     c94:	91 83       	std	Z+1, r25	; 0x01
     c96:	80 83       	st	Z, r24
     c98:	b6 c0       	rjmp	.+364    	; 0xe06 <_Z15getTimerSettingii+0x252>

				} else if (strstr(p2,"RI")){
     c9a:	6c e3       	ldi	r22, 0x3C	; 60
     c9c:	71 e0       	ldi	r23, 0x01	; 1
     c9e:	c7 01       	movw	r24, r14
     ca0:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     ca4:	89 2b       	or	r24, r25
     ca6:	79 f0       	breq	.+30     	; 0xcc6 <_Z15getTimerSettingii+0x112>
				p2 = strtok_r(0,":",&save_ptr2);
     ca8:	ae 01       	movw	r20, r28
     caa:	49 59       	subi	r20, 0x99	; 153
     cac:	5f 4f       	sbci	r21, 0xFF	; 255
     cae:	6c e8       	ldi	r22, 0x8C	; 140
     cb0:	76 e0       	ldi	r23, 0x06	; 6
     cb2:	80 e0       	ldi	r24, 0x00	; 0
     cb4:	90 e0       	ldi	r25, 0x00	; 0
     cb6:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
				__timer_setting.relay_id = atoi(p2);
     cba:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
     cbe:	f6 01       	movw	r30, r12
     cc0:	93 83       	std	Z+3, r25	; 0x03
     cc2:	82 83       	std	Z+2, r24	; 0x02
     cc4:	a0 c0       	rjmp	.+320    	; 0xe06 <_Z15getTimerSettingii+0x252>

				} else if (strstr(p2,"TI")){
     cc6:	63 e7       	ldi	r22, 0x73	; 115
     cc8:	71 e0       	ldi	r23, 0x01	; 1
     cca:	c7 01       	movw	r24, r14
     ccc:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     cd0:	89 2b       	or	r24, r25
     cd2:	79 f0       	breq	.+30     	; 0xcf2 <_Z15getTimerSettingii+0x13e>
				p2 = strtok_r(0,":",&save_ptr2);
     cd4:	ae 01       	movw	r20, r28
     cd6:	49 59       	subi	r20, 0x99	; 153
     cd8:	5f 4f       	sbci	r21, 0xFF	; 255
     cda:	6c e8       	ldi	r22, 0x8C	; 140
     cdc:	76 e0       	ldi	r23, 0x06	; 6
     cde:	80 e0       	ldi	r24, 0x00	; 0
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
				__timer_setting.timer_id = atoi(p2);
     ce6:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
     cea:	f6 01       	movw	r30, r12
     cec:	95 83       	std	Z+5, r25	; 0x05
     cee:	84 83       	std	Z+4, r24	; 0x04
     cf0:	8a c0       	rjmp	.+276    	; 0xe06 <_Z15getTimerSettingii+0x252>

				} else if (strstr(p2,"ST")){
     cf2:	60 e3       	ldi	r22, 0x30	; 48
     cf4:	73 e0       	ldi	r23, 0x03	; 3
     cf6:	c7 01       	movw	r24, r14
     cf8:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     cfc:	89 2b       	or	r24, r25
     cfe:	79 f0       	breq	.+30     	; 0xd1e <_Z15getTimerSettingii+0x16a>
				p2 = strtok_r(0,":",&save_ptr2);
     d00:	ae 01       	movw	r20, r28
     d02:	49 59       	subi	r20, 0x99	; 153
     d04:	5f 4f       	sbci	r21, 0xFF	; 255
     d06:	6c e8       	ldi	r22, 0x8C	; 140
     d08:	76 e0       	ldi	r23, 0x06	; 6
     d0a:	80 e0       	ldi	r24, 0x00	; 0
     d0c:	90 e0       	ldi	r25, 0x00	; 0
     d0e:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
				__timer_setting.start_timer = atoi(p2);
     d12:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
     d16:	f6 01       	movw	r30, r12
     d18:	97 83       	std	Z+7, r25	; 0x07
     d1a:	86 83       	std	Z+6, r24	; 0x06
     d1c:	74 c0       	rjmp	.+232    	; 0xe06 <_Z15getTimerSettingii+0x252>

				} else if (strstr(p2,"SW")){
     d1e:	66 e7       	ldi	r22, 0x76	; 118
     d20:	71 e0       	ldi	r23, 0x01	; 1
     d22:	c7 01       	movw	r24, r14
     d24:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     d28:	89 2b       	or	r24, r25
     d2a:	39 f1       	breq	.+78     	; 0xd7a <_Z15getTimerSettingii+0x1c6>
				char *p3, *save_ptr3; int i=0;
				p2 = strtok_r(0,":",&save_ptr2);
     d2c:	ae 01       	movw	r20, r28
     d2e:	49 59       	subi	r20, 0x99	; 153
     d30:	5f 4f       	sbci	r21, 0xFF	; 255
     d32:	6c e8       	ldi	r22, 0x8C	; 140
     d34:	76 e0       	ldi	r23, 0x06	; 6
     d36:	80 e0       	ldi	r24, 0x00	; 0
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
				p3 = strtok_r(p2,",",&save_ptr3);
     d3e:	ae 01       	movw	r20, r28
     d40:	4b 59       	subi	r20, 0x9B	; 155
     d42:	5f 4f       	sbci	r21, 0xFF	; 255
     d44:	68 e0       	ldi	r22, 0x08	; 8
     d46:	73 e0       	ldi	r23, 0x03	; 3
     d48:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
				while (p3 != 0){
     d4c:	00 97       	sbiw	r24, 0x00	; 0
     d4e:	09 f4       	brne	.+2      	; 0xd52 <_Z15getTimerSettingii+0x19e>
     d50:	5a c0       	rjmp	.+180    	; 0xe06 <_Z15getTimerSettingii+0x252>
     d52:	e3 2c       	mov	r14, r3
     d54:	f2 2c       	mov	r15, r2
					__timer_setting.start_week[i++] = atoi(p3);
     d56:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
     d5a:	f7 01       	movw	r30, r14
     d5c:	81 93       	st	Z+, r24
     d5e:	91 93       	st	Z+, r25
     d60:	7f 01       	movw	r14, r30
					p3 = strtok_r(0,",",&save_ptr3);
     d62:	ae 01       	movw	r20, r28
     d64:	4b 59       	subi	r20, 0x9B	; 155
     d66:	5f 4f       	sbci	r21, 0xFF	; 255
     d68:	68 e0       	ldi	r22, 0x08	; 8
     d6a:	73 e0       	ldi	r23, 0x03	; 3
     d6c:	80 e0       	ldi	r24, 0x00	; 0
     d6e:	90 e0       	ldi	r25, 0x00	; 0
     d70:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>

				} else if (strstr(p2,"SW")){
				char *p3, *save_ptr3; int i=0;
				p2 = strtok_r(0,":",&save_ptr2);
				p3 = strtok_r(p2,",",&save_ptr3);
				while (p3 != 0){
     d74:	00 97       	sbiw	r24, 0x00	; 0
     d76:	79 f7       	brne	.-34     	; 0xd56 <_Z15getTimerSettingii+0x1a2>
     d78:	46 c0       	rjmp	.+140    	; 0xe06 <_Z15getTimerSettingii+0x252>
					__timer_setting.start_week[i++] = atoi(p3);
					p3 = strtok_r(0,",",&save_ptr3);
				}
				} else if (strstr(p2,"ET")){
     d7a:	69 e7       	ldi	r22, 0x79	; 121
     d7c:	71 e0       	ldi	r23, 0x01	; 1
     d7e:	c7 01       	movw	r24, r14
     d80:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     d84:	89 2b       	or	r24, r25
     d86:	79 f0       	breq	.+30     	; 0xda6 <_Z15getTimerSettingii+0x1f2>
				p2 = strtok_r(0,":",&save_ptr2);
     d88:	ae 01       	movw	r20, r28
     d8a:	49 59       	subi	r20, 0x99	; 153
     d8c:	5f 4f       	sbci	r21, 0xFF	; 255
     d8e:	6c e8       	ldi	r22, 0x8C	; 140
     d90:	76 e0       	ldi	r23, 0x06	; 6
     d92:	80 e0       	ldi	r24, 0x00	; 0
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
				__timer_setting.end_timer = atoi(p2);
     d9a:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
     d9e:	f6 01       	movw	r30, r12
     da0:	91 8f       	std	Z+25, r25	; 0x19
     da2:	80 8f       	std	Z+24, r24	; 0x18
     da4:	30 c0       	rjmp	.+96     	; 0xe06 <_Z15getTimerSettingii+0x252>

				} else if (strstr(p2,"EW")){
     da6:	6c e7       	ldi	r22, 0x7C	; 124
     da8:	71 e0       	ldi	r23, 0x01	; 1
     daa:	c7 01       	movw	r24, r14
     dac:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
     db0:	89 2b       	or	r24, r25
     db2:	49 f1       	breq	.+82     	; 0xe06 <_Z15getTimerSettingii+0x252>
				char *p3, *save_ptr3; int i=0;
				p2 = strtok_r(0,":",&save_ptr2);
     db4:	ae 01       	movw	r20, r28
     db6:	49 59       	subi	r20, 0x99	; 153
     db8:	5f 4f       	sbci	r21, 0xFF	; 255
     dba:	6c e8       	ldi	r22, 0x8C	; 140
     dbc:	76 e0       	ldi	r23, 0x06	; 6
     dbe:	80 e0       	ldi	r24, 0x00	; 0
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
				p3 = strtok_r(p2,",",&save_ptr3);
     dc6:	ae 01       	movw	r20, r28
     dc8:	4b 59       	subi	r20, 0x9B	; 155
     dca:	5f 4f       	sbci	r21, 0xFF	; 255
     dcc:	68 e0       	ldi	r22, 0x08	; 8
     dce:	73 e0       	ldi	r23, 0x03	; 3
     dd0:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>

				while (p3 != 0){
     dd4:	00 97       	sbiw	r24, 0x00	; 0
     dd6:	b9 f0       	breq	.+46     	; 0xe06 <_Z15getTimerSettingii+0x252>
     dd8:	ac 96       	adiw	r28, 0x2c	; 44
     dda:	ef ac       	ldd	r14, Y+63	; 0x3f
     ddc:	ac 97       	sbiw	r28, 0x2c	; 44
     dde:	ad 96       	adiw	r28, 0x2d	; 45
     de0:	ff ac       	ldd	r15, Y+63	; 0x3f
     de2:	ad 97       	sbiw	r28, 0x2d	; 45
					__timer_setting.end_week[i++] = atoi(p3);
     de4:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
     de8:	f7 01       	movw	r30, r14
     dea:	81 93       	st	Z+, r24
     dec:	91 93       	st	Z+, r25
     dee:	7f 01       	movw	r14, r30
					p3 = strtok_r(0,",",&save_ptr3);
     df0:	ae 01       	movw	r20, r28
     df2:	4b 59       	subi	r20, 0x9B	; 155
     df4:	5f 4f       	sbci	r21, 0xFF	; 255
     df6:	68 e0       	ldi	r22, 0x08	; 8
     df8:	73 e0       	ldi	r23, 0x03	; 3
     dfa:	80 e0       	ldi	r24, 0x00	; 0
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
				} else if (strstr(p2,"EW")){
				char *p3, *save_ptr3; int i=0;
				p2 = strtok_r(0,":",&save_ptr2);
				p3 = strtok_r(p2,",",&save_ptr3);

				while (p3 != 0){
     e02:	00 97       	sbiw	r24, 0x00	; 0
     e04:	79 f7       	brne	.-34     	; 0xde4 <_Z15getTimerSettingii+0x230>
					__timer_setting.end_week[i++] = atoi(p3);
					p3 = strtok_r(0,",",&save_ptr3);
				}
			}
			p1 = strtok_r(0,";",&save_ptr1);
     e06:	ae 01       	movw	r20, r28
     e08:	47 59       	subi	r20, 0x97	; 151
     e0a:	5f 4f       	sbci	r21, 0xFF	; 255
     e0c:	6a eb       	ldi	r22, 0xBA	; 186
     e0e:	73 e0       	ldi	r23, 0x03	; 3
     e10:	80 e0       	ldi	r24, 0x00	; 0
     e12:	90 e0       	ldi	r25, 0x00	; 0
     e14:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
		}
		for (i=0;i<sizeof(__timer_setting.end_week);i++){
			__timer_setting.end_week[i] = 254;
		}

		while (p1!= 0){
     e18:	00 97       	sbiw	r24, 0x00	; 0
     e1a:	09 f0       	breq	.+2      	; 0xe1e <_Z15getTimerSettingii+0x26a>
     e1c:	21 cf       	rjmp	.-446    	; 0xc60 <_Z15getTimerSettingii+0xac>
				}
			}
			p1 = strtok_r(0,";",&save_ptr1);
		}	

		if (__timer_setting.module_id == moduleId && __timer_setting.relay_id == relayId){
     e1e:	80 91 7e 09 	lds	r24, 0x097E	; 0x80097e <__timer_setting>
     e22:	90 91 7f 09 	lds	r25, 0x097F	; 0x80097f <__timer_setting+0x1>
     e26:	8a 15       	cp	r24, r10
     e28:	9b 05       	cpc	r25, r11
     e2a:	51 f4       	brne	.+20     	; 0xe40 <_Z15getTimerSettingii+0x28c>
     e2c:	80 91 80 09 	lds	r24, 0x0980	; 0x800980 <__timer_setting+0x2>
     e30:	90 91 81 09 	lds	r25, 0x0981	; 0x800981 <__timer_setting+0x3>
     e34:	88 15       	cp	r24, r8
     e36:	99 05       	cpc	r25, r9
     e38:	19 f4       	brne	.+6      	; 0xe40 <_Z15getTimerSettingii+0x28c>
			return 1;
     e3a:	81 e0       	ldi	r24, 0x01	; 1
     e3c:	90 e0       	ldi	r25, 0x00	; 0
     e3e:	0d c0       	rjmp	.+26     	; 0xe5a <_Z15getTimerSettingii+0x2a6>
}

int getTimerSetting(int moduleId, int relayId){
	char container[100]; char *p1;

	while (eepromReadAttribute(container,sizeof(container),"TS",0) != 0){
     e40:	20 e0       	ldi	r18, 0x00	; 0
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	40 e7       	ldi	r20, 0x70	; 112
     e46:	51 e0       	ldi	r21, 0x01	; 1
     e48:	64 e6       	ldi	r22, 0x64	; 100
     e4a:	70 e0       	ldi	r23, 0x00	; 0
     e4c:	ce 01       	movw	r24, r28
     e4e:	01 96       	adiw	r24, 0x01	; 1
     e50:	d2 d9       	rcall	.-3164   	; 0x1f6 <_Z19eepromReadAttributePciS_i>
     e52:	81 11       	cpse	r24, r1
     e54:	e3 ce       	rjmp	.-570    	; 0xc1c <_Z15getTimerSettingii+0x68>
		if (__timer_setting.module_id == moduleId && __timer_setting.relay_id == relayId){
			return 1;
		}
	}

	return 0;
     e56:	80 e0       	ldi	r24, 0x00	; 0
     e58:	90 e0       	ldi	r25, 0x00	; 0
}
     e5a:	c4 59       	subi	r28, 0x94	; 148
     e5c:	df 4f       	sbci	r29, 0xFF	; 255
     e5e:	0f b6       	in	r0, 0x3f	; 63
     e60:	f8 94       	cli
     e62:	de bf       	out	0x3e, r29	; 62
     e64:	0f be       	out	0x3f, r0	; 63
     e66:	cd bf       	out	0x3d, r28	; 61
     e68:	df 91       	pop	r29
     e6a:	cf 91       	pop	r28
     e6c:	1f 91       	pop	r17
     e6e:	0f 91       	pop	r16
     e70:	ff 90       	pop	r15
     e72:	ef 90       	pop	r14
     e74:	df 90       	pop	r13
     e76:	cf 90       	pop	r12
     e78:	bf 90       	pop	r11
     e7a:	af 90       	pop	r10
     e7c:	9f 90       	pop	r9
     e7e:	8f 90       	pop	r8
     e80:	7f 90       	pop	r7
     e82:	6f 90       	pop	r6
     e84:	5f 90       	pop	r5
     e86:	4f 90       	pop	r4
     e88:	3f 90       	pop	r3
     e8a:	2f 90       	pop	r2
     e8c:	08 95       	ret

00000e8e <_Z20isCurrentTimerActivev>:

int isCurrentTimerActive(){
     e8e:	ef 92       	push	r14
     e90:	ff 92       	push	r15
     e92:	0f 93       	push	r16
     e94:	1f 93       	push	r17
     e96:	cf 93       	push	r28
     e98:	df 93       	push	r29
	int currentMin = __system_time._hour * 60 + __system_time._min + (__system_time._day_of_week * 24 * 60);
     e9a:	ec ee       	ldi	r30, 0xEC	; 236
     e9c:	f9 e0       	ldi	r31, 0x09	; 9
     e9e:	80 85       	ldd	r24, Z+8	; 0x08
     ea0:	91 85       	ldd	r25, Z+9	; 0x09
     ea2:	2c e3       	ldi	r18, 0x3C	; 60
     ea4:	28 9f       	mul	r18, r24
     ea6:	b0 01       	movw	r22, r0
     ea8:	29 9f       	mul	r18, r25
     eaa:	70 0d       	add	r23, r0
     eac:	11 24       	eor	r1, r1
     eae:	82 85       	ldd	r24, Z+10	; 0x0a
     eb0:	93 85       	ldd	r25, Z+11	; 0x0b
     eb2:	68 0f       	add	r22, r24
     eb4:	79 1f       	adc	r23, r25
     eb6:	46 81       	ldd	r20, Z+6	; 0x06
     eb8:	57 81       	ldd	r21, Z+7	; 0x07
     eba:	20 ea       	ldi	r18, 0xA0	; 160
     ebc:	35 e0       	ldi	r19, 0x05	; 5
     ebe:	42 9f       	mul	r20, r18
     ec0:	c0 01       	movw	r24, r0
     ec2:	43 9f       	mul	r20, r19
     ec4:	90 0d       	add	r25, r0
     ec6:	52 9f       	mul	r21, r18
     ec8:	90 0d       	add	r25, r0
     eca:	11 24       	eor	r1, r1
     ecc:	68 0f       	add	r22, r24
     ece:	79 1f       	adc	r23, r25
	USART0_SendString("\n");
	USART0_SendString("\n");*/
	
	for (i=0;i<7;i++){
		if (__timer_setting.start_week[i] != 254 && __timer_setting.end_week[i] != 254){
			int startTimer = (__timer_setting.start_week[i] * 24 * 60) + __timer_setting.start_timer;
     ed0:	ee e7       	ldi	r30, 0x7E	; 126
     ed2:	f9 e0       	ldi	r31, 0x09	; 9
     ed4:	06 81       	ldd	r16, Z+6	; 0x06
     ed6:	17 81       	ldd	r17, Z+7	; 0x07
			int endTimer = (__timer_setting.end_week[i] * 24 * 60) + __timer_setting.end_timer;
     ed8:	e0 8c       	ldd	r14, Z+24	; 0x18
     eda:	f1 8c       	ldd	r15, Z+25	; 0x19
     edc:	e6 e8       	ldi	r30, 0x86	; 134
     ede:	f9 e0       	ldi	r31, 0x09	; 9
     ee0:	a4 e9       	ldi	r26, 0x94	; 148
     ee2:	b9 e0       	ldi	r27, 0x09	; 9
	USART0_SendString("\n");
	USART0_SendString("\n");*/
	
	for (i=0;i<7;i++){
		if (__timer_setting.start_week[i] != 254 && __timer_setting.end_week[i] != 254){
			int startTimer = (__timer_setting.start_week[i] * 24 * 60) + __timer_setting.start_timer;
     ee4:	c0 ea       	ldi	r28, 0xA0	; 160
     ee6:	d5 e0       	ldi	r29, 0x05	; 5
	USART0_SendString(conv);
	USART0_SendString("\n");
	USART0_SendString("\n");*/
	
	for (i=0;i<7;i++){
		if (__timer_setting.start_week[i] != 254 && __timer_setting.end_week[i] != 254){
     ee8:	81 91       	ld	r24, Z+
     eea:	91 91       	ld	r25, Z+
     eec:	8e 3f       	cpi	r24, 0xFE	; 254
     eee:	91 05       	cpc	r25, r1
     ef0:	19 f1       	breq	.+70     	; 0xf38 <_Z20isCurrentTimerActivev+0xaa>
     ef2:	40 89       	ldd	r20, Z+16	; 0x10
     ef4:	51 89       	ldd	r21, Z+17	; 0x11
     ef6:	4e 3f       	cpi	r20, 0xFE	; 254
     ef8:	51 05       	cpc	r21, r1
     efa:	f1 f0       	breq	.+60     	; 0xf38 <_Z20isCurrentTimerActivev+0xaa>
			int startTimer = (__timer_setting.start_week[i] * 24 * 60) + __timer_setting.start_timer;
     efc:	8c 9f       	mul	r24, r28
     efe:	90 01       	movw	r18, r0
     f00:	8d 9f       	mul	r24, r29
     f02:	30 0d       	add	r19, r0
     f04:	9c 9f       	mul	r25, r28
     f06:	30 0d       	add	r19, r0
     f08:	11 24       	eor	r1, r1
     f0a:	c9 01       	movw	r24, r18
     f0c:	80 0f       	add	r24, r16
     f0e:	91 1f       	adc	r25, r17
			int endTimer = (__timer_setting.end_week[i] * 24 * 60) + __timer_setting.end_timer;

			if (currentMin >= startTimer && currentMin < endTimer){
     f10:	68 17       	cp	r22, r24
     f12:	79 07       	cpc	r23, r25
     f14:	8c f0       	brlt	.+34     	; 0xf38 <_Z20isCurrentTimerActivev+0xaa>
	USART0_SendString("\n");*/
	
	for (i=0;i<7;i++){
		if (__timer_setting.start_week[i] != 254 && __timer_setting.end_week[i] != 254){
			int startTimer = (__timer_setting.start_week[i] * 24 * 60) + __timer_setting.start_timer;
			int endTimer = (__timer_setting.end_week[i] * 24 * 60) + __timer_setting.end_timer;
     f16:	4c 9f       	mul	r20, r28
     f18:	c0 01       	movw	r24, r0
     f1a:	4d 9f       	mul	r20, r29
     f1c:	90 0d       	add	r25, r0
     f1e:	5c 9f       	mul	r21, r28
     f20:	90 0d       	add	r25, r0
     f22:	11 24       	eor	r1, r1
     f24:	8e 0d       	add	r24, r14
     f26:	9f 1d       	adc	r25, r15

			if (currentMin >= startTimer && currentMin < endTimer){
     f28:	68 17       	cp	r22, r24
     f2a:	79 07       	cpc	r23, r25
     f2c:	2c f4       	brge	.+10     	; 0xf38 <_Z20isCurrentTimerActivev+0xaa>
				return TRUE;
     f2e:	80 91 ad 03 	lds	r24, 0x03AD	; 0x8003ad <TRUE>
     f32:	90 91 ae 03 	lds	r25, 0x03AE	; 0x8003ae <TRUE+0x1>
     f36:	07 c0       	rjmp	.+14     	; 0xf46 <_Z20isCurrentTimerActivev+0xb8>
	itoa(__timer_setting.end_timer,conv,10);
	USART0_SendString(conv);
	USART0_SendString("\n");
	USART0_SendString("\n");*/
	
	for (i=0;i<7;i++){
     f38:	ea 17       	cp	r30, r26
     f3a:	fb 07       	cpc	r31, r27
     f3c:	a9 f6       	brne	.-86     	; 0xee8 <_Z20isCurrentTimerActivev+0x5a>
			if (currentMin >= startTimer && currentMin < endTimer){
				return TRUE;
			}
		}
	}
	return FALSE;
     f3e:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <FALSE>
     f42:	90 91 ac 03 	lds	r25, 0x03AC	; 0x8003ac <FALSE+0x1>
}
     f46:	df 91       	pop	r29
     f48:	cf 91       	pop	r28
     f4a:	1f 91       	pop	r17
     f4c:	0f 91       	pop	r16
     f4e:	ff 90       	pop	r15
     f50:	ef 90       	pop	r14
     f52:	08 95       	ret

00000f54 <__vector_28>:
*/
#include <Network.h>
#include <HCM.h>


ISR(USART1_RX_vect){
     f54:	1f 92       	push	r1
     f56:	0f 92       	push	r0
     f58:	0f b6       	in	r0, 0x3f	; 63
     f5a:	0f 92       	push	r0
     f5c:	11 24       	eor	r1, r1
     f5e:	0b b6       	in	r0, 0x3b	; 59
     f60:	0f 92       	push	r0
     f62:	2f 93       	push	r18
     f64:	3f 93       	push	r19
     f66:	4f 93       	push	r20
     f68:	8f 93       	push	r24
     f6a:	9f 93       	push	r25
     f6c:	ef 93       	push	r30
     f6e:	ff 93       	push	r31
	char value = UDR1;             //read UART register into value
     f70:	40 91 ce 00 	lds	r20, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
	if (__network_data.index_sim >= sizeof(__network_data.sim_buffer)-3){
     f74:	80 91 78 0f 	lds	r24, 0x0F78	; 0x800f78 <__network_data+0x568>
     f78:	90 91 79 0f 	lds	r25, 0x0F79	; 0x800f79 <__network_data+0x569>
     f7c:	85 3c       	cpi	r24, 0xC5	; 197
     f7e:	91 05       	cpc	r25, r1
     f80:	20 f0       	brcs	.+8      	; 0xf8a <__vector_28+0x36>
		// To stop buffer from overfloating
		__network_data.index_sim = 0;
     f82:	10 92 79 0f 	sts	0x0F79, r1	; 0x800f79 <__network_data+0x569>
     f86:	10 92 78 0f 	sts	0x0F78, r1	; 0x800f78 <__network_data+0x568>
	}
	__network_data.sim_buffer[__network_data.index_sim++] = value;
     f8a:	e8 e7       	ldi	r30, 0x78	; 120
     f8c:	ff e0       	ldi	r31, 0x0F	; 15
     f8e:	80 81       	ld	r24, Z
     f90:	91 81       	ldd	r25, Z+1	; 0x01
     f92:	9c 01       	movw	r18, r24
     f94:	2f 5f       	subi	r18, 0xFF	; 255
     f96:	3f 4f       	sbci	r19, 0xFF	; 255
     f98:	31 83       	std	Z+1, r19	; 0x01
     f9a:	20 83       	st	Z, r18
     f9c:	fc 01       	movw	r30, r24
     f9e:	e4 55       	subi	r30, 0x54	; 84
     fa0:	f1 4f       	sbci	r31, 0xF1	; 241
     fa2:	40 83       	st	Z, r20
	if (value == '\r' || value == '\n' || value == '\0'){
     fa4:	4d 30       	cpi	r20, 0x0D	; 13
     fa6:	21 f0       	breq	.+8      	; 0xfb0 <__vector_28+0x5c>
     fa8:	4a 30       	cpi	r20, 0x0A	; 10
     faa:	11 f0       	breq	.+4      	; 0xfb0 <__vector_28+0x5c>
     fac:	41 11       	cpse	r20, r1
     fae:	07 c0       	rjmp	.+14     	; 0xfbe <__vector_28+0x6a>
		__network_data.is_sim_read_line = 1;
     fb0:	81 e0       	ldi	r24, 0x01	; 1
     fb2:	80 93 75 0f 	sts	0x0F75, r24	; 0x800f75 <__network_data+0x565>
		__network_data.sim_buffer[__network_data.index_sim] = '\0';
     fb6:	f9 01       	movw	r30, r18
     fb8:	e4 55       	subi	r30, 0x54	; 84
     fba:	f1 4f       	sbci	r31, 0xF1	; 241
     fbc:	10 82       	st	Z, r1
		
	}
}
     fbe:	ff 91       	pop	r31
     fc0:	ef 91       	pop	r30
     fc2:	9f 91       	pop	r25
     fc4:	8f 91       	pop	r24
     fc6:	4f 91       	pop	r20
     fc8:	3f 91       	pop	r19
     fca:	2f 91       	pop	r18
     fcc:	0f 90       	pop	r0
     fce:	0b be       	out	0x3b, r0	; 59
     fd0:	0f 90       	pop	r0
     fd2:	0f be       	out	0x3f, r0	; 63
     fd4:	0f 90       	pop	r0
     fd6:	1f 90       	pop	r1
     fd8:	18 95       	reti

00000fda <__vector_20>:
ISR(USART0_RX_vect){
     fda:	1f 92       	push	r1
     fdc:	0f 92       	push	r0
     fde:	0f b6       	in	r0, 0x3f	; 63
     fe0:	0f 92       	push	r0
     fe2:	11 24       	eor	r1, r1
     fe4:	0b b6       	in	r0, 0x3b	; 59
     fe6:	0f 92       	push	r0
     fe8:	2f 93       	push	r18
     fea:	3f 93       	push	r19
     fec:	4f 93       	push	r20
     fee:	8f 93       	push	r24
     ff0:	9f 93       	push	r25
     ff2:	ef 93       	push	r30
     ff4:	ff 93       	push	r31
	char value = UDR0;             //read UART register into value
     ff6:	40 91 c6 00 	lds	r20, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	if (__network_data.index_esp >= sizeof(__network_data.esp_buffer)-3){
     ffa:	80 91 76 0f 	lds	r24, 0x0F76	; 0x800f76 <__network_data+0x566>
     ffe:	90 91 77 0f 	lds	r25, 0x0F77	; 0x800f77 <__network_data+0x567>
    1002:	85 3e       	cpi	r24, 0xE5	; 229
    1004:	93 40       	sbci	r25, 0x03	; 3
    1006:	20 f0       	brcs	.+8      	; 0x1010 <__vector_20+0x36>
		// To stop buffer from overfloating
		__network_data.index_esp = 0;
    1008:	10 92 77 0f 	sts	0x0F77, r1	; 0x800f77 <__network_data+0x567>
    100c:	10 92 76 0f 	sts	0x0F76, r1	; 0x800f76 <__network_data+0x566>
	}
	__network_data.esp_buffer[__network_data.index_esp++] = value;
    1010:	e6 e7       	ldi	r30, 0x76	; 118
    1012:	ff e0       	ldi	r31, 0x0F	; 15
    1014:	80 81       	ld	r24, Z
    1016:	91 81       	ldd	r25, Z+1	; 0x01
    1018:	9c 01       	movw	r18, r24
    101a:	2f 5f       	subi	r18, 0xFF	; 255
    101c:	3f 4f       	sbci	r19, 0xFF	; 255
    101e:	31 83       	std	Z+1, r19	; 0x01
    1020:	20 83       	st	Z, r18
    1022:	fc 01       	movw	r30, r24
    1024:	ec 53       	subi	r30, 0x3C	; 60
    1026:	f5 4f       	sbci	r31, 0xF5	; 245
    1028:	40 83       	st	Z, r20
	if (value == '\r' || value == '\n' || value == '\0'){
    102a:	4d 30       	cpi	r20, 0x0D	; 13
    102c:	21 f0       	breq	.+8      	; 0x1036 <__vector_20+0x5c>
    102e:	4a 30       	cpi	r20, 0x0A	; 10
    1030:	11 f0       	breq	.+4      	; 0x1036 <__vector_20+0x5c>
    1032:	41 11       	cpse	r20, r1
    1034:	07 c0       	rjmp	.+14     	; 0x1044 <__vector_20+0x6a>
		__network_data.is_esp_read_line = 1;
    1036:	81 e0       	ldi	r24, 0x01	; 1
    1038:	80 93 74 0f 	sts	0x0F74, r24	; 0x800f74 <__network_data+0x564>
		__network_data.esp_buffer[__network_data.index_esp] = '\0';
    103c:	f9 01       	movw	r30, r18
    103e:	ec 53       	subi	r30, 0x3C	; 60
    1040:	f5 4f       	sbci	r31, 0xF5	; 245
    1042:	10 82       	st	Z, r1
		
	}
}
    1044:	ff 91       	pop	r31
    1046:	ef 91       	pop	r30
    1048:	9f 91       	pop	r25
    104a:	8f 91       	pop	r24
    104c:	4f 91       	pop	r20
    104e:	3f 91       	pop	r19
    1050:	2f 91       	pop	r18
    1052:	0f 90       	pop	r0
    1054:	0b be       	out	0x3b, r0	; 59
    1056:	0f 90       	pop	r0
    1058:	0f be       	out	0x3f, r0	; 63
    105a:	0f 90       	pop	r0
    105c:	1f 90       	pop	r1
    105e:	18 95       	reti

00001060 <__vector_18>:
ISR(TIMER0_OVF_vect)
{
    1060:	1f 92       	push	r1
    1062:	0f 92       	push	r0
    1064:	0f b6       	in	r0, 0x3f	; 63
    1066:	0f 92       	push	r0
    1068:	11 24       	eor	r1, r1
    106a:	0b b6       	in	r0, 0x3b	; 59
    106c:	0f 92       	push	r0
    106e:	2f 93       	push	r18
    1070:	3f 93       	push	r19
    1072:	4f 93       	push	r20
    1074:	5f 93       	push	r21
    1076:	8f 93       	push	r24
    1078:	9f 93       	push	r25
    107a:	af 93       	push	r26
    107c:	bf 93       	push	r27
    107e:	ef 93       	push	r30
    1080:	ff 93       	push	r31
	if (++__system_var.timer0_overflow == 39){
    1082:	80 91 aa 0f 	lds	r24, 0x0FAA	; 0x800faa <__system_var+0x30>
    1086:	90 91 ab 0f 	lds	r25, 0x0FAB	; 0x800fab <__system_var+0x31>
    108a:	01 96       	adiw	r24, 0x01	; 1
    108c:	87 32       	cpi	r24, 0x27	; 39
    108e:	91 05       	cpc	r25, r1
    1090:	29 f0       	breq	.+10     	; 0x109c <__vector_18+0x3c>
    1092:	90 93 ab 0f 	sts	0x0FAB, r25	; 0x800fab <__system_var+0x31>
    1096:	80 93 aa 0f 	sts	0x0FAA, r24	; 0x800faa <__system_var+0x30>
    109a:	b0 c0       	rjmp	.+352    	; 0x11fc <__vector_18+0x19c>
		__system_var.timer0_overflow = 0;
    109c:	10 92 ab 0f 	sts	0x0FAB, r1	; 0x800fab <__system_var+0x31>
    10a0:	10 92 aa 0f 	sts	0x0FAA, r1	; 0x800faa <__system_var+0x30>
		__system_time._mils++;
    10a4:	ec ee       	ldi	r30, 0xEC	; 236
    10a6:	f9 e0       	ldi	r31, 0x09	; 9
    10a8:	86 85       	ldd	r24, Z+14	; 0x0e
    10aa:	97 85       	ldd	r25, Z+15	; 0x0f
    10ac:	01 96       	adiw	r24, 0x01	; 1
    10ae:	97 87       	std	Z+15, r25	; 0x0f
    10b0:	86 87       	std	Z+14, r24	; 0x0e

		// Clock buffer for sensors

		if (__system_time._mils == 1000){
    10b2:	88 3e       	cpi	r24, 0xE8	; 232
    10b4:	93 40       	sbci	r25, 0x03	; 3
    10b6:	09 f0       	breq	.+2      	; 0x10ba <__vector_18+0x5a>
    10b8:	4b c0       	rjmp	.+150    	; 0x1150 <__vector_18+0xf0>
			__system_time._sec++;
    10ba:	84 85       	ldd	r24, Z+12	; 0x0c
    10bc:	95 85       	ldd	r25, Z+13	; 0x0d
    10be:	01 96       	adiw	r24, 0x01	; 1
    10c0:	95 87       	std	Z+13, r25	; 0x0d
    10c2:	84 87       	std	Z+12, r24	; 0x0c
			__system_time._mils = 0;
    10c4:	17 86       	std	Z+15, r1	; 0x0f
    10c6:	16 86       	std	Z+14, r1	; 0x0e
			if (__system_time.connection_timer_buffer <= __system_time.connection_timer){
    10c8:	82 89       	ldd	r24, Z+18	; 0x12
    10ca:	93 89       	ldd	r25, Z+19	; 0x13
    10cc:	20 89       	ldd	r18, Z+16	; 0x10
    10ce:	31 89       	ldd	r19, Z+17	; 0x11
    10d0:	28 17       	cp	r18, r24
    10d2:	39 07       	cpc	r19, r25
    10d4:	2c f0       	brlt	.+10     	; 0x10e0 <__vector_18+0x80>
				__system_time.connection_timer_buffer++;
    10d6:	01 96       	adiw	r24, 0x01	; 1
    10d8:	90 93 ff 09 	sts	0x09FF, r25	; 0x8009ff <__system_time+0x13>
    10dc:	80 93 fe 09 	sts	0x09FE, r24	; 0x8009fe <__system_time+0x12>
			}
			if (__system_time.check_timer_buffer <= __system_time.check_timer){
    10e0:	ec ee       	ldi	r30, 0xEC	; 236
    10e2:	f9 e0       	ldi	r31, 0x09	; 9
    10e4:	86 89       	ldd	r24, Z+22	; 0x16
    10e6:	97 89       	ldd	r25, Z+23	; 0x17
    10e8:	24 89       	ldd	r18, Z+20	; 0x14
    10ea:	35 89       	ldd	r19, Z+21	; 0x15
    10ec:	28 17       	cp	r18, r24
    10ee:	39 07       	cpc	r19, r25
    10f0:	2c f0       	brlt	.+10     	; 0x10fc <__vector_18+0x9c>
				__system_time.check_timer_buffer++;
    10f2:	01 96       	adiw	r24, 0x01	; 1
    10f4:	90 93 03 0a 	sts	0x0A03, r25	; 0x800a03 <__system_time+0x17>
    10f8:	80 93 02 0a 	sts	0x0A02, r24	; 0x800a02 <__system_time+0x16>
			}
			if (__system_time.relay_module_check_timer_buffer <= __system_time.relay_module_check_timer){
    10fc:	ec ee       	ldi	r30, 0xEC	; 236
    10fe:	f9 e0       	ldi	r31, 0x09	; 9
    1100:	82 8d       	ldd	r24, Z+26	; 0x1a
    1102:	93 8d       	ldd	r25, Z+27	; 0x1b
    1104:	20 8d       	ldd	r18, Z+24	; 0x18
    1106:	31 8d       	ldd	r19, Z+25	; 0x19
    1108:	28 17       	cp	r18, r24
    110a:	39 07       	cpc	r19, r25
    110c:	2c f0       	brlt	.+10     	; 0x1118 <__vector_18+0xb8>
				__system_time.relay_module_check_timer_buffer++;
    110e:	01 96       	adiw	r24, 0x01	; 1
    1110:	90 93 07 0a 	sts	0x0A07, r25	; 0x800a07 <__system_time+0x1b>
    1114:	80 93 06 0a 	sts	0x0A06, r24	; 0x800a06 <__system_time+0x1a>
			}
			if (__system_time.timer_check_timer_buffer <= __system_time.timer_check_timer){
    1118:	ec ee       	ldi	r30, 0xEC	; 236
    111a:	f9 e0       	ldi	r31, 0x09	; 9
    111c:	86 8d       	ldd	r24, Z+30	; 0x1e
    111e:	97 8d       	ldd	r25, Z+31	; 0x1f
    1120:	24 8d       	ldd	r18, Z+28	; 0x1c
    1122:	35 8d       	ldd	r19, Z+29	; 0x1d
    1124:	28 17       	cp	r18, r24
    1126:	39 07       	cpc	r19, r25
    1128:	2c f0       	brlt	.+10     	; 0x1134 <__vector_18+0xd4>
				__system_time.timer_check_timer_buffer++;
    112a:	01 96       	adiw	r24, 0x01	; 1
    112c:	90 93 0b 0a 	sts	0x0A0B, r25	; 0x800a0b <__system_time+0x1f>
    1130:	80 93 0a 0a 	sts	0x0A0A, r24	; 0x800a0a <__system_time+0x1e>
			}
			if (__system_time.gsm_network_timer_buffer <= __system_time.gsm_network_timer){
    1134:	ec ee       	ldi	r30, 0xEC	; 236
    1136:	f9 e0       	ldi	r31, 0x09	; 9
    1138:	82 a1       	ldd	r24, Z+34	; 0x22
    113a:	93 a1       	ldd	r25, Z+35	; 0x23
    113c:	20 a1       	ldd	r18, Z+32	; 0x20
    113e:	31 a1       	ldd	r19, Z+33	; 0x21
    1140:	28 17       	cp	r18, r24
    1142:	39 07       	cpc	r19, r25
    1144:	2c f0       	brlt	.+10     	; 0x1150 <__vector_18+0xf0>
				__system_time.gsm_network_timer_buffer++;
    1146:	01 96       	adiw	r24, 0x01	; 1
    1148:	90 93 0f 0a 	sts	0x0A0F, r25	; 0x800a0f <__system_time+0x23>
    114c:	80 93 0e 0a 	sts	0x0A0E, r24	; 0x800a0e <__system_time+0x22>
			}
		}
		if (__system_time._sec == 60){
    1150:	80 91 f8 09 	lds	r24, 0x09F8	; 0x8009f8 <__system_time+0xc>
    1154:	90 91 f9 09 	lds	r25, 0x09F9	; 0x8009f9 <__system_time+0xd>
    1158:	cc 97       	sbiw	r24, 0x3c	; 60
    115a:	49 f4       	brne	.+18     	; 0x116e <__vector_18+0x10e>
			__system_time._min++;
    115c:	ec ee       	ldi	r30, 0xEC	; 236
    115e:	f9 e0       	ldi	r31, 0x09	; 9
    1160:	82 85       	ldd	r24, Z+10	; 0x0a
    1162:	93 85       	ldd	r25, Z+11	; 0x0b
    1164:	01 96       	adiw	r24, 0x01	; 1
    1166:	93 87       	std	Z+11, r25	; 0x0b
    1168:	82 87       	std	Z+10, r24	; 0x0a
			__system_time._sec = 0;
    116a:	15 86       	std	Z+13, r1	; 0x0d
    116c:	14 86       	std	Z+12, r1	; 0x0c
		}
		if (__system_time._min == 60){
    116e:	80 91 f6 09 	lds	r24, 0x09F6	; 0x8009f6 <__system_time+0xa>
    1172:	90 91 f7 09 	lds	r25, 0x09F7	; 0x8009f7 <__system_time+0xb>
    1176:	cc 97       	sbiw	r24, 0x3c	; 60
    1178:	49 f4       	brne	.+18     	; 0x118c <__vector_18+0x12c>
			__system_time._hour++;
    117a:	ec ee       	ldi	r30, 0xEC	; 236
    117c:	f9 e0       	ldi	r31, 0x09	; 9
    117e:	80 85       	ldd	r24, Z+8	; 0x08
    1180:	91 85       	ldd	r25, Z+9	; 0x09
    1182:	01 96       	adiw	r24, 0x01	; 1
    1184:	91 87       	std	Z+9, r25	; 0x09
    1186:	80 87       	std	Z+8, r24	; 0x08
			__system_time._min = 0;
    1188:	13 86       	std	Z+11, r1	; 0x0b
    118a:	12 86       	std	Z+10, r1	; 0x0a
		}
		if (__system_time._hour == 24){
    118c:	80 91 f4 09 	lds	r24, 0x09F4	; 0x8009f4 <__system_time+0x8>
    1190:	90 91 f5 09 	lds	r25, 0x09F5	; 0x8009f5 <__system_time+0x9>
    1194:	48 97       	sbiw	r24, 0x18	; 24
    1196:	49 f4       	brne	.+18     	; 0x11aa <__vector_18+0x14a>
			__system_time._day++;
    1198:	ec ee       	ldi	r30, 0xEC	; 236
    119a:	f9 e0       	ldi	r31, 0x09	; 9
    119c:	84 81       	ldd	r24, Z+4	; 0x04
    119e:	95 81       	ldd	r25, Z+5	; 0x05
    11a0:	01 96       	adiw	r24, 0x01	; 1
    11a2:	95 83       	std	Z+5, r25	; 0x05
    11a4:	84 83       	std	Z+4, r24	; 0x04
			__system_time._hour = 0;
    11a6:	11 86       	std	Z+9, r1	; 0x09
    11a8:	10 86       	std	Z+8, r1	; 0x08
		}
		if (__system_time._day == DAYS_OF_MONTH[__system_time._month]){
    11aa:	ac ee       	ldi	r26, 0xEC	; 236
    11ac:	b9 e0       	ldi	r27, 0x09	; 9
    11ae:	12 96       	adiw	r26, 0x02	; 2
    11b0:	8d 91       	ld	r24, X+
    11b2:	9c 91       	ld	r25, X
    11b4:	13 97       	sbiw	r26, 0x03	; 3
    11b6:	fc 01       	movw	r30, r24
    11b8:	ee 0f       	add	r30, r30
    11ba:	ff 1f       	adc	r31, r31
    11bc:	ed 56       	subi	r30, 0x6D	; 109
    11be:	fc 4f       	sbci	r31, 0xFC	; 252
    11c0:	14 96       	adiw	r26, 0x04	; 4
    11c2:	4d 91       	ld	r20, X+
    11c4:	5c 91       	ld	r21, X
    11c6:	15 97       	sbiw	r26, 0x05	; 5
    11c8:	20 81       	ld	r18, Z
    11ca:	31 81       	ldd	r19, Z+1	; 0x01
    11cc:	42 17       	cp	r20, r18
    11ce:	53 07       	cpc	r21, r19
    11d0:	31 f4       	brne	.+12     	; 0x11de <__vector_18+0x17e>
			__system_time._month++;
    11d2:	fd 01       	movw	r30, r26
    11d4:	01 96       	adiw	r24, 0x01	; 1
    11d6:	93 83       	std	Z+3, r25	; 0x03
    11d8:	82 83       	std	Z+2, r24	; 0x02
			__system_time._day = 0;
    11da:	15 82       	std	Z+5, r1	; 0x05
    11dc:	14 82       	std	Z+4, r1	; 0x04
		}
		if (__system_time._month == 12){
    11de:	80 91 ee 09 	lds	r24, 0x09EE	; 0x8009ee <__system_time+0x2>
    11e2:	90 91 ef 09 	lds	r25, 0x09EF	; 0x8009ef <__system_time+0x3>
    11e6:	0c 97       	sbiw	r24, 0x0c	; 12
    11e8:	49 f4       	brne	.+18     	; 0x11fc <__vector_18+0x19c>
			__system_time._year++;
    11ea:	ec ee       	ldi	r30, 0xEC	; 236
    11ec:	f9 e0       	ldi	r31, 0x09	; 9
    11ee:	80 81       	ld	r24, Z
    11f0:	91 81       	ldd	r25, Z+1	; 0x01
    11f2:	01 96       	adiw	r24, 0x01	; 1
    11f4:	91 83       	std	Z+1, r25	; 0x01
    11f6:	80 83       	st	Z, r24
			__system_time._month = 0;
    11f8:	13 82       	std	Z+3, r1	; 0x03
    11fa:	12 82       	std	Z+2, r1	; 0x02
		}
	}
}
    11fc:	ff 91       	pop	r31
    11fe:	ef 91       	pop	r30
    1200:	bf 91       	pop	r27
    1202:	af 91       	pop	r26
    1204:	9f 91       	pop	r25
    1206:	8f 91       	pop	r24
    1208:	5f 91       	pop	r21
    120a:	4f 91       	pop	r20
    120c:	3f 91       	pop	r19
    120e:	2f 91       	pop	r18
    1210:	0f 90       	pop	r0
    1212:	0b be       	out	0x3b, r0	; 59
    1214:	0f 90       	pop	r0
    1216:	0f be       	out	0x3f, r0	; 63
    1218:	0f 90       	pop	r0
    121a:	1f 90       	pop	r1
    121c:	18 95       	reti

0000121e <_Z9readUntilPKci>:

int readUntil(const char *input, int timeout) {
    121e:	6f 92       	push	r6
    1220:	7f 92       	push	r7
    1222:	8f 92       	push	r8
    1224:	9f 92       	push	r9
    1226:	af 92       	push	r10
    1228:	bf 92       	push	r11
    122a:	cf 92       	push	r12
    122c:	df 92       	push	r13
    122e:	ef 92       	push	r14
    1230:	ff 92       	push	r15
    1232:	0f 93       	push	r16
    1234:	1f 93       	push	r17
    1236:	cf 93       	push	r28
    1238:	df 93       	push	r29
    123a:	4c 01       	movw	r8, r24
    123c:	eb 01       	movw	r28, r22

	int mils = 0;
	clearReadLine();
    123e:	0e 94 6f 1c 	call	0x38de	; 0x38de <_Z13clearReadLinev>

	while(mils <= (timeout*1000)){
    1242:	88 ee       	ldi	r24, 0xE8	; 232
    1244:	93 e0       	ldi	r25, 0x03	; 3
    1246:	c8 9f       	mul	r28, r24
    1248:	80 01       	movw	r16, r0
    124a:	c9 9f       	mul	r28, r25
    124c:	10 0d       	add	r17, r0
    124e:	d8 9f       	mul	r29, r24
    1250:	10 0d       	add	r17, r0
    1252:	11 24       	eor	r1, r1
    1254:	11 23       	and	r17, r17
    1256:	0c f4       	brge	.+2      	; 0x125a <_Z9readUntilPKci+0x3c>
    1258:	68 c0       	rjmp	.+208    	; 0x132a <_Z9readUntilPKci+0x10c>
    125a:	c0 e0       	ldi	r28, 0x00	; 0
    125c:	d0 e0       	ldi	r29, 0x00	; 0
		if(__system_var.interface_ == ESP){
    125e:	0f 2e       	mov	r0, r31
    1260:	fa e7       	ldi	r31, 0x7A	; 122
    1262:	cf 2e       	mov	r12, r31
    1264:	ff e0       	ldi	r31, 0x0F	; 15
    1266:	df 2e       	mov	r13, r31
    1268:	f0 2d       	mov	r31, r0
    126a:	e0 90 b1 03 	lds	r14, 0x03B1	; 0x8003b1 <ESP>
    126e:	f0 90 b2 03 	lds	r15, 0x03B2	; 0x8003b2 <ESP+0x1>
			}
			if (strstr(__network_data.esp_buffer, "ERROR") != 0 || strstr(__network_data.esp_buffer, "Fail") != 0 || strstr(__network_data.esp_buffer, "FAIL") != 0) {
				return 0;
			}
		}
		if(__system_var.interface_ == SIM){
    1272:	a0 90 af 03 	lds	r10, 0x03AF	; 0x8003af <SIM>
    1276:	b0 90 b0 03 	lds	r11, 0x03B0	; 0x8003b0 <SIM+0x1>

	int mils = 0;
	clearReadLine();

	while(mils <= (timeout*1000)){
		if(__system_var.interface_ == ESP){
    127a:	f6 01       	movw	r30, r12
    127c:	67 a4       	ldd	r6, Z+47	; 0x2f
    127e:	71 2c       	mov	r7, r1
    1280:	6e 14       	cp	r6, r14
    1282:	7f 04       	cpc	r7, r15
    1284:	11 f5       	brne	.+68     	; 0x12ca <_Z9readUntilPKci+0xac>
			if (strstr(__network_data.esp_buffer, input) != 0) {
    1286:	b4 01       	movw	r22, r8
    1288:	84 ec       	ldi	r24, 0xC4	; 196
    128a:	9a e0       	ldi	r25, 0x0A	; 10
    128c:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    1290:	89 2b       	or	r24, r25
    1292:	09 f0       	breq	.+2      	; 0x1296 <_Z9readUntilPKci+0x78>
    1294:	4d c0       	rjmp	.+154    	; 0x1330 <_Z9readUntilPKci+0x112>
				return 1;
			}
			if (strstr(__network_data.esp_buffer, "ERROR") != 0 || strstr(__network_data.esp_buffer, "Fail") != 0 || strstr(__network_data.esp_buffer, "FAIL") != 0) {
    1296:	60 ef       	ldi	r22, 0xF0	; 240
    1298:	71 e0       	ldi	r23, 0x01	; 1
    129a:	84 ec       	ldi	r24, 0xC4	; 196
    129c:	9a e0       	ldi	r25, 0x0A	; 10
    129e:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    12a2:	89 2b       	or	r24, r25
    12a4:	09 f0       	breq	.+2      	; 0x12a8 <_Z9readUntilPKci+0x8a>
    12a6:	47 c0       	rjmp	.+142    	; 0x1336 <_Z9readUntilPKci+0x118>
    12a8:	66 ef       	ldi	r22, 0xF6	; 246
    12aa:	71 e0       	ldi	r23, 0x01	; 1
    12ac:	84 ec       	ldi	r24, 0xC4	; 196
    12ae:	9a e0       	ldi	r25, 0x0A	; 10
    12b0:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    12b4:	89 2b       	or	r24, r25
    12b6:	09 f0       	breq	.+2      	; 0x12ba <_Z9readUntilPKci+0x9c>
    12b8:	41 c0       	rjmp	.+130    	; 0x133c <_Z9readUntilPKci+0x11e>
    12ba:	6b ef       	ldi	r22, 0xFB	; 251
    12bc:	71 e0       	ldi	r23, 0x01	; 1
    12be:	84 ec       	ldi	r24, 0xC4	; 196
    12c0:	9a e0       	ldi	r25, 0x0A	; 10
    12c2:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    12c6:	89 2b       	or	r24, r25
    12c8:	e1 f5       	brne	.+120    	; 0x1342 <_Z9readUntilPKci+0x124>
				return 0;
			}
		}
		if(__system_var.interface_ == SIM){
    12ca:	6a 14       	cp	r6, r10
    12cc:	7b 04       	cpc	r7, r11
    12ce:	f9 f4       	brne	.+62     	; 0x130e <_Z9readUntilPKci+0xf0>
			
			if (strstr(__network_data.sim_buffer, input) != 0) {
    12d0:	b4 01       	movw	r22, r8
    12d2:	8c ea       	ldi	r24, 0xAC	; 172
    12d4:	9e e0       	ldi	r25, 0x0E	; 14
    12d6:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    12da:	89 2b       	or	r24, r25
    12dc:	a9 f5       	brne	.+106    	; 0x1348 <_Z9readUntilPKci+0x12a>
				return 1;
			}
			if (strstr(__network_data.sim_buffer, "ERROR") != 0 || strstr(__network_data.sim_buffer, "Fail") != 0 || strstr(__network_data.sim_buffer, "FAIL") != 0) {
    12de:	60 ef       	ldi	r22, 0xF0	; 240
    12e0:	71 e0       	ldi	r23, 0x01	; 1
    12e2:	8c ea       	ldi	r24, 0xAC	; 172
    12e4:	9e e0       	ldi	r25, 0x0E	; 14
    12e6:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    12ea:	89 2b       	or	r24, r25
    12ec:	81 f5       	brne	.+96     	; 0x134e <_Z9readUntilPKci+0x130>
    12ee:	66 ef       	ldi	r22, 0xF6	; 246
    12f0:	71 e0       	ldi	r23, 0x01	; 1
    12f2:	8c ea       	ldi	r24, 0xAC	; 172
    12f4:	9e e0       	ldi	r25, 0x0E	; 14
    12f6:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    12fa:	89 2b       	or	r24, r25
    12fc:	59 f5       	brne	.+86     	; 0x1354 <_Z9readUntilPKci+0x136>
    12fe:	6b ef       	ldi	r22, 0xFB	; 251
    1300:	71 e0       	ldi	r23, 0x01	; 1
    1302:	8c ea       	ldi	r24, 0xAC	; 172
    1304:	9e e0       	ldi	r25, 0x0E	; 14
    1306:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    130a:	89 2b       	or	r24, r25
    130c:	31 f5       	brne	.+76     	; 0x135a <_Z9readUntilPKci+0x13c>
				return 0;
			}
		}
		mils++;
    130e:	21 96       	adiw	r28, 0x01	; 1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1310:	83 ec       	ldi	r24, 0xC3	; 195
    1312:	99 e0       	ldi	r25, 0x09	; 9
    1314:	01 97       	sbiw	r24, 0x01	; 1
    1316:	f1 f7       	brne	.-4      	; 0x1314 <_Z9readUntilPKci+0xf6>
    1318:	00 c0       	rjmp	.+0      	; 0x131a <_Z9readUntilPKci+0xfc>
    131a:	00 00       	nop
int readUntil(const char *input, int timeout) {

	int mils = 0;
	clearReadLine();

	while(mils <= (timeout*1000)){
    131c:	0c 17       	cp	r16, r28
    131e:	1d 07       	cpc	r17, r29
    1320:	0c f0       	brlt	.+2      	; 0x1324 <_Z9readUntilPKci+0x106>
    1322:	ab cf       	rjmp	.-170    	; 0x127a <_Z9readUntilPKci+0x5c>
		}
		mils++;
		_delay_ms(1);
	}

	return 0;
    1324:	80 e0       	ldi	r24, 0x00	; 0
    1326:	90 e0       	ldi	r25, 0x00	; 0
    1328:	1a c0       	rjmp	.+52     	; 0x135e <_Z9readUntilPKci+0x140>
    132a:	80 e0       	ldi	r24, 0x00	; 0
    132c:	90 e0       	ldi	r25, 0x00	; 0
    132e:	17 c0       	rjmp	.+46     	; 0x135e <_Z9readUntilPKci+0x140>
	clearReadLine();

	while(mils <= (timeout*1000)){
		if(__system_var.interface_ == ESP){
			if (strstr(__network_data.esp_buffer, input) != 0) {
				return 1;
    1330:	81 e0       	ldi	r24, 0x01	; 1
    1332:	90 e0       	ldi	r25, 0x00	; 0
    1334:	14 c0       	rjmp	.+40     	; 0x135e <_Z9readUntilPKci+0x140>
			}
			if (strstr(__network_data.esp_buffer, "ERROR") != 0 || strstr(__network_data.esp_buffer, "Fail") != 0 || strstr(__network_data.esp_buffer, "FAIL") != 0) {
				return 0;
    1336:	80 e0       	ldi	r24, 0x00	; 0
    1338:	90 e0       	ldi	r25, 0x00	; 0
    133a:	11 c0       	rjmp	.+34     	; 0x135e <_Z9readUntilPKci+0x140>
    133c:	80 e0       	ldi	r24, 0x00	; 0
    133e:	90 e0       	ldi	r25, 0x00	; 0
    1340:	0e c0       	rjmp	.+28     	; 0x135e <_Z9readUntilPKci+0x140>
    1342:	80 e0       	ldi	r24, 0x00	; 0
    1344:	90 e0       	ldi	r25, 0x00	; 0
    1346:	0b c0       	rjmp	.+22     	; 0x135e <_Z9readUntilPKci+0x140>
			}
		}
		if(__system_var.interface_ == SIM){
			
			if (strstr(__network_data.sim_buffer, input) != 0) {
				return 1;
    1348:	81 e0       	ldi	r24, 0x01	; 1
    134a:	90 e0       	ldi	r25, 0x00	; 0
    134c:	08 c0       	rjmp	.+16     	; 0x135e <_Z9readUntilPKci+0x140>
			}
			if (strstr(__network_data.sim_buffer, "ERROR") != 0 || strstr(__network_data.sim_buffer, "Fail") != 0 || strstr(__network_data.sim_buffer, "FAIL") != 0) {
				return 0;
    134e:	80 e0       	ldi	r24, 0x00	; 0
    1350:	90 e0       	ldi	r25, 0x00	; 0
    1352:	05 c0       	rjmp	.+10     	; 0x135e <_Z9readUntilPKci+0x140>
    1354:	80 e0       	ldi	r24, 0x00	; 0
    1356:	90 e0       	ldi	r25, 0x00	; 0
    1358:	02 c0       	rjmp	.+4      	; 0x135e <_Z9readUntilPKci+0x140>
    135a:	80 e0       	ldi	r24, 0x00	; 0
    135c:	90 e0       	ldi	r25, 0x00	; 0
		mils++;
		_delay_ms(1);
	}

	return 0;
}
    135e:	df 91       	pop	r29
    1360:	cf 91       	pop	r28
    1362:	1f 91       	pop	r17
    1364:	0f 91       	pop	r16
    1366:	ff 90       	pop	r15
    1368:	ef 90       	pop	r14
    136a:	df 90       	pop	r13
    136c:	cf 90       	pop	r12
    136e:	bf 90       	pop	r11
    1370:	af 90       	pop	r10
    1372:	9f 90       	pop	r9
    1374:	8f 90       	pop	r8
    1376:	7f 90       	pop	r7
    1378:	6f 90       	pop	r6
    137a:	08 95       	ret

0000137c <_Z7cipsendPcS_>:
void cipsend(char *p, char *connection) {
    137c:	cf 92       	push	r12
    137e:	df 92       	push	r13
    1380:	ef 92       	push	r14
    1382:	ff 92       	push	r15
    1384:	0f 93       	push	r16
    1386:	1f 93       	push	r17
    1388:	cf 93       	push	r28
    138a:	df 93       	push	r29
    138c:	00 d0       	rcall	.+0      	; 0x138e <_Z7cipsendPcS_+0x12>
    138e:	00 d0       	rcall	.+0      	; 0x1390 <_Z7cipsendPcS_+0x14>
    1390:	1f 92       	push	r1
    1392:	cd b7       	in	r28, 0x3d	; 61
    1394:	de b7       	in	r29, 0x3e	; 62
    1396:	7c 01       	movw	r14, r24
    1398:	6b 01       	movw	r12, r22
	char conv[5];

	if (__system_var.interface_ == ESP) {
    139a:	80 91 a9 0f 	lds	r24, 0x0FA9	; 0x800fa9 <__system_var+0x2f>
    139e:	90 e0       	ldi	r25, 0x00	; 0
    13a0:	20 91 b1 03 	lds	r18, 0x03B1	; 0x8003b1 <ESP>
    13a4:	30 91 b2 03 	lds	r19, 0x03B2	; 0x8003b2 <ESP+0x1>
    13a8:	82 17       	cp	r24, r18
    13aa:	93 07       	cpc	r25, r19
    13ac:	49 f5       	brne	.+82     	; 0x1400 <_Z7cipsendPcS_+0x84>
		int size = 0;
		char *b = p;
		for (; *b++ != '\0'; size++) ;
    13ae:	f7 01       	movw	r30, r14
    13b0:	31 96       	adiw	r30, 0x01	; 1
    13b2:	d7 01       	movw	r26, r14
    13b4:	8c 91       	ld	r24, X
    13b6:	88 23       	and	r24, r24
    13b8:	41 f0       	breq	.+16     	; 0x13ca <_Z7cipsendPcS_+0x4e>
    13ba:	00 e0       	ldi	r16, 0x00	; 0
    13bc:	10 e0       	ldi	r17, 0x00	; 0
    13be:	0f 5f       	subi	r16, 0xFF	; 255
    13c0:	1f 4f       	sbci	r17, 0xFF	; 255
    13c2:	81 91       	ld	r24, Z+
    13c4:	81 11       	cpse	r24, r1
    13c6:	fb cf       	rjmp	.-10     	; 0x13be <_Z7cipsendPcS_+0x42>
    13c8:	02 c0       	rjmp	.+4      	; 0x13ce <_Z7cipsendPcS_+0x52>
    13ca:	00 e0       	ldi	r16, 0x00	; 0
    13cc:	10 e0       	ldi	r17, 0x00	; 0

		WIFI_Write_String("AT+CIPSEND=");
    13ce:	80 e0       	ldi	r24, 0x00	; 0
    13d0:	92 e0       	ldi	r25, 0x02	; 2
    13d2:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
		WIFI_Write_String(connection);
    13d6:	c6 01       	movw	r24, r12
    13d8:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
		WIFI_Write_String(",");
    13dc:	88 e0       	ldi	r24, 0x08	; 8
    13de:	93 e0       	ldi	r25, 0x03	; 3
    13e0:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    13e4:	4a e0       	ldi	r20, 0x0A	; 10
    13e6:	be 01       	movw	r22, r28
    13e8:	6f 5f       	subi	r22, 0xFF	; 255
    13ea:	7f 4f       	sbci	r23, 0xFF	; 255
    13ec:	c8 01       	movw	r24, r16
    13ee:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <__itoa_ncheck>
		WIFI_Write_String(itoa(size, conv, 10));
    13f2:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
		WIFI_Write_String("\r\n");
    13f6:	8f e5       	ldi	r24, 0x5F	; 95
    13f8:	96 e0       	ldi	r25, 0x06	; 6
    13fa:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
    13fe:	04 c0       	rjmp	.+8      	; 0x1408 <_Z7cipsendPcS_+0x8c>
		
	} else {
		GSM_Write_String("AT+CIPSEND\r\n");
    1400:	8c e0       	ldi	r24, 0x0C	; 12
    1402:	92 e0       	ldi	r25, 0x02	; 2
    1404:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
	}
	
	if (readUntil(">", 3) == 0) {
    1408:	63 e0       	ldi	r22, 0x03	; 3
    140a:	70 e0       	ldi	r23, 0x00	; 0
    140c:	8b ea       	ldi	r24, 0xAB	; 171
    140e:	94 e0       	ldi	r25, 0x04	; 4
    1410:	06 df       	rcall	.-500    	; 0x121e <_Z9readUntilPKci>
    1412:	89 2b       	or	r24, r25
    1414:	41 f4       	brne	.+16     	; 0x1426 <_Z7cipsendPcS_+0xaa>
		__network_data.is_server_connected = FALSE;
    1416:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <FALSE>
    141a:	80 93 c3 0a 	sts	0x0AC3, r24	; 0x800ac3 <__network_data+0xb3>
		__network_data.is_esp_connected = FALSE;
    141e:	80 93 c1 0a 	sts	0x0AC1, r24	; 0x800ac1 <__network_data+0xb1>
		__network_data.is_sim_connected = FALSE;
    1422:	80 93 c2 0a 	sts	0x0AC2, r24	; 0x800ac2 <__network_data+0xb2>
	}

	if (__system_var.interface_ == ESP) {
    1426:	80 91 a9 0f 	lds	r24, 0x0FA9	; 0x800fa9 <__system_var+0x2f>
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	20 91 b1 03 	lds	r18, 0x03B1	; 0x8003b1 <ESP>
    1430:	30 91 b2 03 	lds	r19, 0x03B2	; 0x8003b2 <ESP+0x1>
    1434:	82 17       	cp	r24, r18
    1436:	93 07       	cpc	r25, r19
    1438:	21 f4       	brne	.+8      	; 0x1442 <_Z7cipsendPcS_+0xc6>
		WIFI_Write_String(p);
    143a:	c7 01       	movw	r24, r14
    143c:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
    1440:	09 c0       	rjmp	.+18     	; 0x1454 <_Z7cipsendPcS_+0xd8>
	} else {
		GSM_Write_String(p);
    1442:	c7 01       	movw	r24, r14
    1444:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
		GSM_Write_Byte(26);
    1448:	8a e1       	ldi	r24, 0x1A	; 26
    144a:	0e 94 8e 1a 	call	0x351c	; 0x351c <_Z14GSM_Write_Bytec>
		GSM_Write_Byte(0x0D);
    144e:	8d e0       	ldi	r24, 0x0D	; 13
    1450:	0e 94 8e 1a 	call	0x351c	; 0x351c <_Z14GSM_Write_Bytec>
	}
}
    1454:	0f 90       	pop	r0
    1456:	0f 90       	pop	r0
    1458:	0f 90       	pop	r0
    145a:	0f 90       	pop	r0
    145c:	0f 90       	pop	r0
    145e:	df 91       	pop	r29
    1460:	cf 91       	pop	r28
    1462:	1f 91       	pop	r17
    1464:	0f 91       	pop	r16
    1466:	ff 90       	pop	r15
    1468:	ef 90       	pop	r14
    146a:	df 90       	pop	r13
    146c:	cf 90       	pop	r12
    146e:	08 95       	ret

00001470 <_Z12sendToServerPci>:
void sendToServer(char *toSend, int connection){
    1470:	af 92       	push	r10
    1472:	bf 92       	push	r11
    1474:	cf 92       	push	r12
    1476:	df 92       	push	r13
    1478:	ef 92       	push	r14
    147a:	ff 92       	push	r15
    147c:	0f 93       	push	r16
    147e:	1f 93       	push	r17
    1480:	cf 93       	push	r28
    1482:	df 93       	push	r29
    1484:	00 d0       	rcall	.+0      	; 0x1486 <_Z12sendToServerPci+0x16>
    1486:	00 d0       	rcall	.+0      	; 0x1488 <_Z12sendToServerPci+0x18>
    1488:	1f 92       	push	r1
    148a:	cd b7       	in	r28, 0x3d	; 61
    148c:	de b7       	in	r29, 0x3e	; 62
    148e:	7c 01       	movw	r14, r24
	int i,j;
	char *p1,*p2, conv[5];
	
	if (!__network_data.is_server_connected) return;
    1490:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <__network_data+0xb3>
    1494:	99 23       	and	r25, r25
    1496:	09 f4       	brne	.+2      	; 0x149a <_Z12sendToServerPci+0x2a>
    1498:	42 c0       	rjmp	.+132    	; 0x151e <_Z12sendToServerPci+0xae>
    149a:	6b 01       	movw	r12, r22
	
	p1 = toSend;
	for(i=0;*p1++!='\0';i++);
    149c:	f7 01       	movw	r30, r14
    149e:	31 96       	adiw	r30, 0x01	; 1
    14a0:	d7 01       	movw	r26, r14
    14a2:	8c 91       	ld	r24, X
    14a4:	88 23       	and	r24, r24
    14a6:	71 f1       	breq	.+92     	; 0x1504 <_Z12sendToServerPci+0x94>
    14a8:	00 e0       	ldi	r16, 0x00	; 0
    14aa:	10 e0       	ldi	r17, 0x00	; 0
    14ac:	0f 5f       	subi	r16, 0xFF	; 255
    14ae:	1f 4f       	sbci	r17, 0xFF	; 255
    14b0:	81 91       	ld	r24, Z+
    14b2:	81 11       	cpse	r24, r1
    14b4:	fb cf       	rjmp	.-10     	; 0x14ac <_Z12sendToServerPci+0x3c>
	p1 = (char*)malloc((sizeof(char)*i)+1);
    14b6:	c8 01       	movw	r24, r16
    14b8:	01 96       	adiw	r24, 0x01	; 1
    14ba:	0e 94 ed 1d 	call	0x3bda	; 0x3bda <malloc>
    14be:	a8 2e       	mov	r10, r24
    14c0:	b9 2e       	mov	r11, r25
	p2 = p1;
	*p2 = '#';p2++;
    14c2:	e8 2f       	mov	r30, r24
    14c4:	f9 2f       	mov	r31, r25
    14c6:	83 e2       	ldi	r24, 0x23	; 35
    14c8:	81 93       	st	Z+, r24
	for(j=0;j<=i;j++)*p2++=*toSend++;
    14ca:	11 23       	and	r17, r17
    14cc:	54 f0       	brlt	.+20     	; 0x14e2 <_Z12sendToServerPci+0x72>
    14ce:	d7 01       	movw	r26, r14
	
	p1 = toSend;
	for(i=0;*p1++!='\0';i++);
	p1 = (char*)malloc((sizeof(char)*i)+1);
	p2 = p1;
	*p2 = '#';p2++;
    14d0:	20 e0       	ldi	r18, 0x00	; 0
    14d2:	30 e0       	ldi	r19, 0x00	; 0
	for(j=0;j<=i;j++)*p2++=*toSend++;
    14d4:	8d 91       	ld	r24, X+
    14d6:	81 93       	st	Z+, r24
    14d8:	2f 5f       	subi	r18, 0xFF	; 255
    14da:	3f 4f       	sbci	r19, 0xFF	; 255
    14dc:	02 17       	cp	r16, r18
    14de:	13 07       	cpc	r17, r19
    14e0:	cc f7       	brge	.-14     	; 0x14d4 <_Z12sendToServerPci+0x64>
    14e2:	4a e0       	ldi	r20, 0x0A	; 10
    14e4:	be 01       	movw	r22, r28
    14e6:	6f 5f       	subi	r22, 0xFF	; 255
    14e8:	7f 4f       	sbci	r23, 0xFF	; 255
    14ea:	c6 01       	movw	r24, r12
    14ec:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <__itoa_ncheck>
	p2 = toSend;
	
	cipsend(p1,itoa(connection,conv,10));	
    14f0:	bc 01       	movw	r22, r24
    14f2:	8a 2d       	mov	r24, r10
    14f4:	9b 2d       	mov	r25, r11
    14f6:	42 df       	rcall	.-380    	; 0x137c <_Z7cipsendPcS_>
	readUntil("OK",3);
    14f8:	63 e0       	ldi	r22, 0x03	; 3
    14fa:	70 e0       	ldi	r23, 0x00	; 0
    14fc:	89 e1       	ldi	r24, 0x19	; 25
    14fe:	92 e0       	ldi	r25, 0x02	; 2
    1500:	8e de       	rcall	.-740    	; 0x121e <_Z9readUntilPKci>
    1502:	0d c0       	rjmp	.+26     	; 0x151e <_Z12sendToServerPci+0xae>
	
	if (!__network_data.is_server_connected) return;
	
	p1 = toSend;
	for(i=0;*p1++!='\0';i++);
	p1 = (char*)malloc((sizeof(char)*i)+1);
    1504:	81 e0       	ldi	r24, 0x01	; 1
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	0e 94 ed 1d 	call	0x3bda	; 0x3bda <malloc>
    150c:	a8 2e       	mov	r10, r24
    150e:	b9 2e       	mov	r11, r25
	p2 = p1;
	*p2 = '#';p2++;
    1510:	e8 2f       	mov	r30, r24
    1512:	f9 2f       	mov	r31, r25
    1514:	83 e2       	ldi	r24, 0x23	; 35
    1516:	81 93       	st	Z+, r24
    1518:	00 e0       	ldi	r16, 0x00	; 0
    151a:	10 e0       	ldi	r17, 0x00	; 0
    151c:	d8 cf       	rjmp	.-80     	; 0x14ce <_Z12sendToServerPci+0x5e>
	for(j=0;j<=i;j++)*p2++=*toSend++;
	p2 = toSend;
	
	cipsend(p1,itoa(connection,conv,10));	
	readUntil("OK",3);
}
    151e:	0f 90       	pop	r0
    1520:	0f 90       	pop	r0
    1522:	0f 90       	pop	r0
    1524:	0f 90       	pop	r0
    1526:	0f 90       	pop	r0
    1528:	df 91       	pop	r29
    152a:	cf 91       	pop	r28
    152c:	1f 91       	pop	r17
    152e:	0f 91       	pop	r16
    1530:	ff 90       	pop	r15
    1532:	ef 90       	pop	r14
    1534:	df 90       	pop	r13
    1536:	cf 90       	pop	r12
    1538:	bf 90       	pop	r11
    153a:	af 90       	pop	r10
    153c:	08 95       	ret

0000153e <_Z8sendToAPPcS_>:
void sendToAP(char *toSend, char *connection){
    153e:	cf 92       	push	r12
    1540:	df 92       	push	r13
    1542:	ef 92       	push	r14
    1544:	ff 92       	push	r15
    1546:	0f 93       	push	r16
    1548:	1f 93       	push	r17
    154a:	cf 93       	push	r28
    154c:	df 93       	push	r29
    154e:	00 d0       	rcall	.+0      	; 0x1550 <_Z8sendToAPPcS_+0x12>
    1550:	00 d0       	rcall	.+0      	; 0x1552 <_Z8sendToAPPcS_+0x14>
    1552:	1f 92       	push	r1
    1554:	cd b7       	in	r28, 0x3d	; 61
    1556:	de b7       	in	r29, 0x3e	; 62
    1558:	7c 01       	movw	r14, r24
    155a:	6b 01       	movw	r12, r22
	char conv[5];

	int size = 0;
	char *b = toSend;
	for (; *b++ != '\0'; size++) ;
    155c:	fc 01       	movw	r30, r24
    155e:	31 96       	adiw	r30, 0x01	; 1
    1560:	dc 01       	movw	r26, r24
    1562:	8c 91       	ld	r24, X
    1564:	88 23       	and	r24, r24
    1566:	41 f0       	breq	.+16     	; 0x1578 <_Z8sendToAPPcS_+0x3a>
    1568:	00 e0       	ldi	r16, 0x00	; 0
    156a:	10 e0       	ldi	r17, 0x00	; 0
    156c:	0f 5f       	subi	r16, 0xFF	; 255
    156e:	1f 4f       	sbci	r17, 0xFF	; 255
    1570:	81 91       	ld	r24, Z+
    1572:	81 11       	cpse	r24, r1
    1574:	fb cf       	rjmp	.-10     	; 0x156c <_Z8sendToAPPcS_+0x2e>
    1576:	02 c0       	rjmp	.+4      	; 0x157c <_Z8sendToAPPcS_+0x3e>
	readUntil("OK",3);
}
void sendToAP(char *toSend, char *connection){
	char conv[5];

	int size = 0;
    1578:	00 e0       	ldi	r16, 0x00	; 0
    157a:	10 e0       	ldi	r17, 0x00	; 0
	char *b = toSend;
	for (; *b++ != '\0'; size++) ;

	WIFI_Write_String("AT+CIPSEND=");
    157c:	80 e0       	ldi	r24, 0x00	; 0
    157e:	92 e0       	ldi	r25, 0x02	; 2
    1580:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
	WIFI_Write_String(connection);
    1584:	c6 01       	movw	r24, r12
    1586:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
	WIFI_Write_String(",");
    158a:	88 e0       	ldi	r24, 0x08	; 8
    158c:	93 e0       	ldi	r25, 0x03	; 3
    158e:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
    1592:	4a e0       	ldi	r20, 0x0A	; 10
    1594:	be 01       	movw	r22, r28
    1596:	6f 5f       	subi	r22, 0xFF	; 255
    1598:	7f 4f       	sbci	r23, 0xFF	; 255
    159a:	c8 01       	movw	r24, r16
    159c:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <__itoa_ncheck>
	WIFI_Write_String(itoa(size, conv, 10));
    15a0:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
	WIFI_Write_String("\r\n");
    15a4:	8f e5       	ldi	r24, 0x5F	; 95
    15a6:	96 e0       	ldi	r25, 0x06	; 6
    15a8:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
	
	if (readUntil(">", 2) == 0) {
    15ac:	62 e0       	ldi	r22, 0x02	; 2
    15ae:	70 e0       	ldi	r23, 0x00	; 0
    15b0:	8b ea       	ldi	r24, 0xAB	; 171
    15b2:	94 e0       	ldi	r25, 0x04	; 4
    15b4:	34 de       	rcall	.-920    	; 0x121e <_Z9readUntilPKci>
    15b6:	89 2b       	or	r24, r25
    15b8:	41 f4       	brne	.+16     	; 0x15ca <_Z8sendToAPPcS_+0x8c>
		__network_data.is_server_connected = FALSE;
    15ba:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <FALSE>
    15be:	80 93 c3 0a 	sts	0x0AC3, r24	; 0x800ac3 <__network_data+0xb3>
		__network_data.is_esp_connected = FALSE;
    15c2:	80 93 c1 0a 	sts	0x0AC1, r24	; 0x800ac1 <__network_data+0xb1>
		__network_data.is_sim_connected = FALSE;
    15c6:	80 93 c2 0a 	sts	0x0AC2, r24	; 0x800ac2 <__network_data+0xb2>
	}

	delay(300);
    15ca:	8c e2       	ldi	r24, 0x2C	; 44
    15cc:	91 e0       	ldi	r25, 0x01	; 1
    15ce:	0e 94 9c 1a 	call	0x3538	; 0x3538 <_Z5delayi>
	WIFI_Write_String(toSend);
    15d2:	c7 01       	movw	r24, r14
    15d4:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
	readUntil("OK",3);
    15d8:	63 e0       	ldi	r22, 0x03	; 3
    15da:	70 e0       	ldi	r23, 0x00	; 0
    15dc:	89 e1       	ldi	r24, 0x19	; 25
    15de:	92 e0       	ldi	r25, 0x02	; 2
    15e0:	1e de       	rcall	.-964    	; 0x121e <_Z9readUntilPKci>
}
    15e2:	0f 90       	pop	r0
    15e4:	0f 90       	pop	r0
    15e6:	0f 90       	pop	r0
    15e8:	0f 90       	pop	r0
    15ea:	0f 90       	pop	r0
    15ec:	df 91       	pop	r29
    15ee:	cf 91       	pop	r28
    15f0:	1f 91       	pop	r17
    15f2:	0f 91       	pop	r16
    15f4:	ff 90       	pop	r15
    15f6:	ef 90       	pop	r14
    15f8:	df 90       	pop	r13
    15fa:	cf 90       	pop	r12
    15fc:	08 95       	ret

000015fe <_Z13getSystemTimev>:
char getSystemTime() {
    15fe:	ef 92       	push	r14
    1600:	ff 92       	push	r15
    1602:	0f 93       	push	r16
    1604:	1f 93       	push	r17
    1606:	cf 93       	push	r28
    1608:	df 93       	push	r29
	char *p1,*p2;
	char testout[40];
	char buffer[5];
	short i = 0;

	if (readUntil("TIME", 15) == 0) return 0;
    160a:	6f e0       	ldi	r22, 0x0F	; 15
    160c:	70 e0       	ldi	r23, 0x00	; 0
    160e:	8c e1       	ldi	r24, 0x1C	; 28
    1610:	92 e0       	ldi	r25, 0x02	; 2
    1612:	05 de       	rcall	.-1014   	; 0x121e <_Z9readUntilPKci>
    1614:	89 2b       	or	r24, r25
    1616:	09 f4       	brne	.+2      	; 0x161a <_Z13getSystemTimev+0x1c>
    1618:	63 c0       	rjmp	.+198    	; 0x16e0 <_Z13getSystemTimev+0xe2>
	delay(100);
    161a:	84 e6       	ldi	r24, 0x64	; 100
    161c:	90 e0       	ldi	r25, 0x00	; 0
    161e:	0e 94 9c 1a 	call	0x3538	; 0x3538 <_Z5delayi>

	//YY;MM;DD;HH;MM;SS;
	p1 = strstr(__network_data.esp_buffer,"TIME");
    1622:	6c e1       	ldi	r22, 0x1C	; 28
    1624:	72 e0       	ldi	r23, 0x02	; 2
    1626:	84 ec       	ldi	r24, 0xC4	; 196
    1628:	9a e0       	ldi	r25, 0x0A	; 10
    162a:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
	p2 = strtok(p1, ";");
    162e:	6a eb       	ldi	r22, 0xBA	; 186
    1630:	73 e0       	ldi	r23, 0x03	; 3
    1632:	0e 94 40 1f 	call	0x3e80	; 0x3e80 <strtok>
	while (p2 != 0) {
    1636:	89 2b       	or	r24, r25
    1638:	a1 f5       	brne	.+104    	; 0x16a2 <_Z13getSystemTimev+0xa4>
    163a:	47 c0       	rjmp	.+142    	; 0x16ca <_Z13getSystemTimev+0xcc>
		switch (i) {
    163c:	fe 01       	movw	r30, r28
    163e:	31 97       	sbiw	r30, 0x01	; 1
    1640:	e7 30       	cpi	r30, 0x07	; 7
    1642:	f1 05       	cpc	r31, r1
    1644:	b0 f5       	brcc	.+108    	; 0x16b2 <_Z13getSystemTimev+0xb4>
    1646:	ea 5b       	subi	r30, 0xBA	; 186
    1648:	ff 4f       	sbci	r31, 0xFF	; 255
    164a:	0c 94 e4 1d 	jmp	0x3bc8	; 0x3bc8 <__tablejump2__>
			case 1: __system_time._year = atoi(p2); break;
    164e:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
    1652:	f7 01       	movw	r30, r14
    1654:	91 83       	std	Z+1, r25	; 0x01
    1656:	80 83       	st	Z, r24
    1658:	2c c0       	rjmp	.+88     	; 0x16b2 <_Z13getSystemTimev+0xb4>
			case 2: __system_time._month = atoi(p2); break;
    165a:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
    165e:	f7 01       	movw	r30, r14
    1660:	93 83       	std	Z+3, r25	; 0x03
    1662:	82 83       	std	Z+2, r24	; 0x02
    1664:	26 c0       	rjmp	.+76     	; 0x16b2 <_Z13getSystemTimev+0xb4>
			case 3: __system_time._day = atoi(p2); break;
    1666:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
    166a:	f7 01       	movw	r30, r14
    166c:	95 83       	std	Z+5, r25	; 0x05
    166e:	84 83       	std	Z+4, r24	; 0x04
    1670:	20 c0       	rjmp	.+64     	; 0x16b2 <_Z13getSystemTimev+0xb4>
			case 4: __system_time._hour = atoi(p2); break;
    1672:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
    1676:	f7 01       	movw	r30, r14
    1678:	91 87       	std	Z+9, r25	; 0x09
    167a:	80 87       	std	Z+8, r24	; 0x08
    167c:	1a c0       	rjmp	.+52     	; 0x16b2 <_Z13getSystemTimev+0xb4>
			case 5: __system_time._min = atoi(p2);  break;
    167e:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
    1682:	f7 01       	movw	r30, r14
    1684:	93 87       	std	Z+11, r25	; 0x0b
    1686:	82 87       	std	Z+10, r24	; 0x0a
    1688:	14 c0       	rjmp	.+40     	; 0x16b2 <_Z13getSystemTimev+0xb4>
			case 6: __system_time._sec = atoi(p2); break;
    168a:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
    168e:	f7 01       	movw	r30, r14
    1690:	95 87       	std	Z+13, r25	; 0x0d
    1692:	84 87       	std	Z+12, r24	; 0x0c
    1694:	0e c0       	rjmp	.+28     	; 0x16b2 <_Z13getSystemTimev+0xb4>
			case 7: __system_time._day_of_week = atoi(p2); break;
    1696:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
    169a:	f7 01       	movw	r30, r14
    169c:	97 83       	std	Z+7, r25	; 0x07
    169e:	86 83       	std	Z+6, r24	; 0x06
    16a0:	08 c0       	rjmp	.+16     	; 0x16b2 <_Z13getSystemTimev+0xb4>
	delay(100);

	//YY;MM;DD;HH;MM;SS;
	p1 = strstr(__network_data.esp_buffer,"TIME");
	p2 = strtok(p1, ";");
	while (p2 != 0) {
    16a2:	00 e0       	ldi	r16, 0x00	; 0
    16a4:	10 e0       	ldi	r17, 0x00	; 0
			case 2: __system_time._month = atoi(p2); break;
			case 3: __system_time._day = atoi(p2); break;
			case 4: __system_time._hour = atoi(p2); break;
			case 5: __system_time._min = atoi(p2);  break;
			case 6: __system_time._sec = atoi(p2); break;
			case 7: __system_time._day_of_week = atoi(p2); break;
    16a6:	0f 2e       	mov	r0, r31
    16a8:	fc ee       	ldi	r31, 0xEC	; 236
    16aa:	ef 2e       	mov	r14, r31
    16ac:	f9 e0       	ldi	r31, 0x09	; 9
    16ae:	ff 2e       	mov	r15, r31
    16b0:	f0 2d       	mov	r31, r0
    16b2:	e8 01       	movw	r28, r16
    16b4:	21 96       	adiw	r28, 0x01	; 1
    16b6:	8e 01       	movw	r16, r28
			break;
		}
		i++;
		p2 = strtok(0, ";");
    16b8:	6a eb       	ldi	r22, 0xBA	; 186
    16ba:	73 e0       	ldi	r23, 0x03	; 3
    16bc:	80 e0       	ldi	r24, 0x00	; 0
    16be:	90 e0       	ldi	r25, 0x00	; 0
    16c0:	0e 94 40 1f 	call	0x3e80	; 0x3e80 <strtok>
	delay(100);

	//YY;MM;DD;HH;MM;SS;
	p1 = strstr(__network_data.esp_buffer,"TIME");
	p2 = strtok(p1, ";");
	while (p2 != 0) {
    16c4:	00 97       	sbiw	r24, 0x00	; 0
    16c6:	09 f0       	breq	.+2      	; 0x16ca <_Z13getSystemTimev+0xcc>
    16c8:	b9 cf       	rjmp	.-142    	; 0x163c <_Z13getSystemTimev+0x3e>
	
	//USART0_SendString(testout);
	//delay(500);
	

	sendToServer("TIME OK\n",CONNECTION);
    16ca:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    16ce:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    16d2:	81 e2       	ldi	r24, 0x21	; 33
    16d4:	92 e0       	ldi	r25, 0x02	; 2
    16d6:	cc de       	rcall	.-616    	; 0x1470 <_Z12sendToServerPci>
	//if (readUntil("OK", 2) == 0) return 0;
	
	clearReadLine();
    16d8:	0e 94 6f 1c 	call	0x38de	; 0x38de <_Z13clearReadLinev>
	return 1;
    16dc:	81 e0       	ldi	r24, 0x01	; 1
    16de:	01 c0       	rjmp	.+2      	; 0x16e2 <_Z13getSystemTimev+0xe4>
	char *p1,*p2;
	char testout[40];
	char buffer[5];
	short i = 0;

	if (readUntil("TIME", 15) == 0) return 0;
    16e0:	80 e0       	ldi	r24, 0x00	; 0
	sendToServer("TIME OK\n",CONNECTION);
	//if (readUntil("OK", 2) == 0) return 0;
	
	clearReadLine();
	return 1;
}
    16e2:	df 91       	pop	r29
    16e4:	cf 91       	pop	r28
    16e6:	1f 91       	pop	r17
    16e8:	0f 91       	pop	r16
    16ea:	ff 90       	pop	r15
    16ec:	ef 90       	pop	r14
    16ee:	08 95       	ret

000016f0 <_Z15setSerialNumberv>:
char setSerialNumber() {
    16f0:	0f 93       	push	r16
    16f2:	1f 93       	push	r17
    16f4:	cf 93       	push	r28
    16f6:	df 93       	push	r29
    16f8:	cd b7       	in	r28, 0x3d	; 61
    16fa:	de b7       	in	r29, 0x3e	; 62
    16fc:	e2 97       	sbiw	r28, 0x32	; 50
    16fe:	0f b6       	in	r0, 0x3f	; 63
    1700:	f8 94       	cli
    1702:	de bf       	out	0x3e, r29	; 62
    1704:	0f be       	out	0x3f, r0	; 63
    1706:	cd bf       	out	0x3d, r28	; 61
	
	if (strstr(__network_data.esp_buffer, "SERIAL_NUMBER") != 0) {
    1708:	6a e2       	ldi	r22, 0x2A	; 42
    170a:	72 e0       	ldi	r23, 0x02	; 2
    170c:	84 ec       	ldi	r24, 0xC4	; 196
    170e:	9a e0       	ldi	r25, 0x0A	; 10
    1710:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    1714:	89 2b       	or	r24, r25
    1716:	a9 f1       	breq	.+106    	; 0x1782 <_Z15setSerialNumberv+0x92>
		char *p;
		char toWrite[50];
		p = strtok(__network_data.esp_buffer, "#");
    1718:	68 e3       	ldi	r22, 0x38	; 56
    171a:	72 e0       	ldi	r23, 0x02	; 2
    171c:	84 ec       	ldi	r24, 0xC4	; 196
    171e:	9a e0       	ldi	r25, 0x0A	; 10
    1720:	0e 94 40 1f 	call	0x3e80	; 0x3e80 <strtok>
		p = strtok(0, "#");
    1724:	68 e3       	ldi	r22, 0x38	; 56
    1726:	72 e0       	ldi	r23, 0x02	; 2
    1728:	80 e0       	ldi	r24, 0x00	; 0
    172a:	90 e0       	ldi	r25, 0x00	; 0
    172c:	0e 94 40 1f 	call	0x3e80	; 0x3e80 <strtok>

		strcpy(__system_var.serial_number, p);
    1730:	bc 01       	movw	r22, r24
    1732:	8a e7       	ldi	r24, 0x7A	; 122
    1734:	9f e0       	ldi	r25, 0x0F	; 15
    1736:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <strcpy>
		strcpy(toWrite,"#SERIAL;");
    173a:	89 e0       	ldi	r24, 0x09	; 9
    173c:	ea e3       	ldi	r30, 0x3A	; 58
    173e:	f2 e0       	ldi	r31, 0x02	; 2
    1740:	8e 01       	movw	r16, r28
    1742:	0f 5f       	subi	r16, 0xFF	; 255
    1744:	1f 4f       	sbci	r17, 0xFF	; 255
    1746:	d8 01       	movw	r26, r16
    1748:	01 90       	ld	r0, Z+
    174a:	0d 92       	st	X+, r0
    174c:	8a 95       	dec	r24
    174e:	e1 f7       	brne	.-8      	; 0x1748 <_Z15setSerialNumberv+0x58>
		strcat(toWrite,__system_var.serial_number);
    1750:	6a e7       	ldi	r22, 0x7A	; 122
    1752:	7f e0       	ldi	r23, 0x0F	; 15
    1754:	c8 01       	movw	r24, r16
    1756:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
		strcat(toWrite,"#");
    175a:	f8 01       	movw	r30, r16
    175c:	01 90       	ld	r0, Z+
    175e:	00 20       	and	r0, r0
    1760:	e9 f7       	brne	.-6      	; 0x175c <_Z15setSerialNumberv+0x6c>
    1762:	31 97       	sbiw	r30, 0x01	; 1
    1764:	83 e2       	ldi	r24, 0x23	; 35
    1766:	90 e0       	ldi	r25, 0x00	; 0
    1768:	91 83       	std	Z+1, r25	; 0x01
    176a:	80 83       	st	Z, r24
		eepromSaveCfg(toWrite,EEPROM_SERIAL_START);
    176c:	60 91 9b 01 	lds	r22, 0x019B	; 0x80019b <EEPROM_SERIAL_START>
    1770:	70 91 9c 01 	lds	r23, 0x019C	; 0x80019c <EEPROM_SERIAL_START+0x1>
    1774:	c8 01       	movw	r24, r16
    1776:	0e 94 b7 00 	call	0x16e	; 0x16e <_Z13eepromSaveCfgPKci>
		p = 0;
		//sendToServer("OK\n",CONNECTION);
		//readUntil("OK",3);

		clearReadLine();
    177a:	0e 94 6f 1c 	call	0x38de	; 0x38de <_Z13clearReadLinev>
		return 1;
    177e:	81 e0       	ldi	r24, 0x01	; 1
    1780:	01 c0       	rjmp	.+2      	; 0x1784 <_Z15setSerialNumberv+0x94>
	}
	return 0;
    1782:	80 e0       	ldi	r24, 0x00	; 0
}
    1784:	e2 96       	adiw	r28, 0x32	; 50
    1786:	0f b6       	in	r0, 0x3f	; 63
    1788:	f8 94       	cli
    178a:	de bf       	out	0x3e, r29	; 62
    178c:	0f be       	out	0x3f, r0	; 63
    178e:	cd bf       	out	0x3d, r28	; 61
    1790:	df 91       	pop	r29
    1792:	cf 91       	pop	r28
    1794:	1f 91       	pop	r17
    1796:	0f 91       	pop	r16
    1798:	08 95       	ret

0000179a <_Z17checkSerialNumberv>:
char checkSerialNumber() {
    179a:	0f 93       	push	r16
    179c:	1f 93       	push	r17
    179e:	cf 93       	push	r28
    17a0:	df 93       	push	r29
    17a2:	cd b7       	in	r28, 0x3d	; 61
    17a4:	de b7       	in	r29, 0x3e	; 62
    17a6:	c4 56       	subi	r28, 0x64	; 100
    17a8:	d1 09       	sbc	r29, r1
    17aa:	0f b6       	in	r0, 0x3f	; 63
    17ac:	f8 94       	cli
    17ae:	de bf       	out	0x3e, r29	; 62
    17b0:	0f be       	out	0x3f, r0	; 63
    17b2:	cd bf       	out	0x3d, r28	; 61
	
	if (eepromReadAttribute(__system_var.serial_number,sizeof(__system_var.serial_number),"SERIAL",1) == 0) {
    17b4:	21 e0       	ldi	r18, 0x01	; 1
    17b6:	30 e0       	ldi	r19, 0x00	; 0
    17b8:	43 e4       	ldi	r20, 0x43	; 67
    17ba:	52 e0       	ldi	r21, 0x02	; 2
    17bc:	6f e0       	ldi	r22, 0x0F	; 15
    17be:	70 e0       	ldi	r23, 0x00	; 0
    17c0:	8a e7       	ldi	r24, 0x7A	; 122
    17c2:	9f e0       	ldi	r25, 0x0F	; 15
    17c4:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <_Z19eepromReadAttributePciS_i>
    17c8:	81 11       	cpse	r24, r1
    17ca:	32 c0       	rjmp	.+100    	; 0x1830 <_Z17checkSerialNumberv+0x96>
		char buffer[100];
		clearReadLine();
    17cc:	0e 94 6f 1c 	call	0x38de	; 0x38de <_Z13clearReadLinev>
		strcpy(buffer,"REQUEST_SERIAL_NUMBER;");
    17d0:	87 e1       	ldi	r24, 0x17	; 23
    17d2:	ea e4       	ldi	r30, 0x4A	; 74
    17d4:	f2 e0       	ldi	r31, 0x02	; 2
    17d6:	8e 01       	movw	r16, r28
    17d8:	0f 5f       	subi	r16, 0xFF	; 255
    17da:	1f 4f       	sbci	r17, 0xFF	; 255
    17dc:	d8 01       	movw	r26, r16
    17de:	01 90       	ld	r0, Z+
    17e0:	0d 92       	st	X+, r0
    17e2:	8a 95       	dec	r24
    17e4:	e1 f7       	brne	.-8      	; 0x17de <_Z17checkSerialNumberv+0x44>
		strcat(buffer,PRODUCT_NAME);
    17e6:	61 ee       	ldi	r22, 0xE1	; 225
    17e8:	71 e0       	ldi	r23, 0x01	; 1
    17ea:	c8 01       	movw	r24, r16
    17ec:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
		strcat(buffer,"\n");
    17f0:	f8 01       	movw	r30, r16
    17f2:	01 90       	ld	r0, Z+
    17f4:	00 20       	and	r0, r0
    17f6:	e9 f7       	brne	.-6      	; 0x17f2 <_Z17checkSerialNumberv+0x58>
    17f8:	31 97       	sbiw	r30, 0x01	; 1
    17fa:	8a e0       	ldi	r24, 0x0A	; 10
    17fc:	90 e0       	ldi	r25, 0x00	; 0
    17fe:	91 83       	std	Z+1, r25	; 0x01
    1800:	80 83       	st	Z, r24
		delay(1000);
    1802:	88 ee       	ldi	r24, 0xE8	; 232
    1804:	93 e0       	ldi	r25, 0x03	; 3
    1806:	0e 94 9c 1a 	call	0x3538	; 0x3538 <_Z5delayi>
		sendToServer(buffer,CONNECTION);
    180a:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    180e:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    1812:	c8 01       	movw	r24, r16
    1814:	2d de       	rcall	.-934    	; 0x1470 <_Z12sendToServerPci>
		if (readUntil("SERIAL_NUMBER", 15) == 0);
    1816:	6f e0       	ldi	r22, 0x0F	; 15
    1818:	70 e0       	ldi	r23, 0x00	; 0
    181a:	8a e2       	ldi	r24, 0x2A	; 42
    181c:	92 e0       	ldi	r25, 0x02	; 2
    181e:	ff dc       	rcall	.-1538   	; 0x121e <_Z9readUntilPKci>
		delay(100);
    1820:	84 e6       	ldi	r24, 0x64	; 100
    1822:	90 e0       	ldi	r25, 0x00	; 0
    1824:	0e 94 9c 1a 	call	0x3538	; 0x3538 <_Z5delayi>
		if (setSerialNumber() == 0) return 0;
    1828:	63 df       	rcall	.-314    	; 0x16f0 <_Z15setSerialNumberv>
    182a:	81 11       	cpse	r24, r1
    182c:	22 c0       	rjmp	.+68     	; 0x1872 <_Z17checkSerialNumberv+0xd8>
    182e:	26 c0       	rjmp	.+76     	; 0x187c <_Z17checkSerialNumberv+0xe2>
		
	} else { 
		char buffer[50];
		strcpy(buffer, "SERIAL_NUMBER;");
    1830:	8f e0       	ldi	r24, 0x0F	; 15
    1832:	e2 e5       	ldi	r30, 0x52	; 82
    1834:	f2 e0       	ldi	r31, 0x02	; 2
    1836:	8e 01       	movw	r16, r28
    1838:	0f 5f       	subi	r16, 0xFF	; 255
    183a:	1f 4f       	sbci	r17, 0xFF	; 255
    183c:	d8 01       	movw	r26, r16
    183e:	01 90       	ld	r0, Z+
    1840:	0d 92       	st	X+, r0
    1842:	8a 95       	dec	r24
    1844:	e1 f7       	brne	.-8      	; 0x183e <_Z17checkSerialNumberv+0xa4>
		strcat(buffer, __system_var.serial_number);
    1846:	6a e7       	ldi	r22, 0x7A	; 122
    1848:	7f e0       	ldi	r23, 0x0F	; 15
    184a:	c8 01       	movw	r24, r16
    184c:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
		strcat(buffer, ";\n");
    1850:	f8 01       	movw	r30, r16
    1852:	01 90       	ld	r0, Z+
    1854:	00 20       	and	r0, r0
    1856:	e9 f7       	brne	.-6      	; 0x1852 <_Z17checkSerialNumberv+0xb8>
    1858:	31 97       	sbiw	r30, 0x01	; 1
    185a:	8b e3       	ldi	r24, 0x3B	; 59
    185c:	9a e0       	ldi	r25, 0x0A	; 10
    185e:	a0 e0       	ldi	r26, 0x00	; 0
    1860:	80 83       	st	Z, r24
    1862:	91 83       	std	Z+1, r25	; 0x01
    1864:	a2 83       	std	Z+2, r26	; 0x02
		sendToServer(buffer,CONNECTION);
    1866:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    186a:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    186e:	c8 01       	movw	r24, r16
    1870:	ff dd       	rcall	.-1026   	; 0x1470 <_Z12sendToServerPci>
		//if (readUntil("OK", 2) == 0) return 0;
	}
	/*USART0_SendString("\nSERIALNUMBER=");
	USART0_SendString(__system_var.serial_number);
	USART0_SendString("\n");*/
	delay(100);
    1872:	84 e6       	ldi	r24, 0x64	; 100
    1874:	90 e0       	ldi	r25, 0x00	; 0
    1876:	0e 94 9c 1a 	call	0x3538	; 0x3538 <_Z5delayi>
	return 1;
    187a:	81 e0       	ldi	r24, 0x01	; 1
}
    187c:	cc 59       	subi	r28, 0x9C	; 156
    187e:	df 4f       	sbci	r29, 0xFF	; 255
    1880:	0f b6       	in	r0, 0x3f	; 63
    1882:	f8 94       	cli
    1884:	de bf       	out	0x3e, r29	; 62
    1886:	0f be       	out	0x3f, r0	; 63
    1888:	cd bf       	out	0x3d, r28	; 61
    188a:	df 91       	pop	r29
    188c:	cf 91       	pop	r28
    188e:	1f 91       	pop	r17
    1890:	0f 91       	pop	r16
    1892:	08 95       	ret

00001894 <_Z13connectToWifiPKcS0_>:
char connectToWifi(const char *ssid, const char *password) {
    1894:	0f 93       	push	r16
    1896:	1f 93       	push	r17
    1898:	cf 93       	push	r28
    189a:	df 93       	push	r29
    189c:	8c 01       	movw	r16, r24
    189e:	eb 01       	movw	r28, r22

	WIFI_Write_String("AT+CIPDOMAIN=\"jtech-iot.com\"\r\n");
    18a0:	81 e6       	ldi	r24, 0x61	; 97
    18a2:	92 e0       	ldi	r25, 0x02	; 2
    18a4:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
	readUntil("OK", 3);
    18a8:	63 e0       	ldi	r22, 0x03	; 3
    18aa:	70 e0       	ldi	r23, 0x00	; 0
    18ac:	89 e1       	ldi	r24, 0x19	; 25
    18ae:	92 e0       	ldi	r25, 0x02	; 2
    18b0:	b6 dc       	rcall	.-1684   	; 0x121e <_Z9readUntilPKci>
	WIFI_Write_String("AT+CIFSR\r\n");
    18b2:	80 e8       	ldi	r24, 0x80	; 128
    18b4:	92 e0       	ldi	r25, 0x02	; 2
    18b6:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
	readUntil("OK", 3);
    18ba:	63 e0       	ldi	r22, 0x03	; 3
    18bc:	70 e0       	ldi	r23, 0x00	; 0
    18be:	89 e1       	ldi	r24, 0x19	; 25
    18c0:	92 e0       	ldi	r25, 0x02	; 2
    18c2:	ad dc       	rcall	.-1702   	; 0x121e <_Z9readUntilPKci>
	WIFI_Write_String("AT+CWJAP=\"");
    18c4:	8b e8       	ldi	r24, 0x8B	; 139
    18c6:	92 e0       	ldi	r25, 0x02	; 2
    18c8:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
	WIFI_Write_String(ssid);
    18cc:	c8 01       	movw	r24, r16
    18ce:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
	WIFI_Write_String("\",\"");
    18d2:	83 e0       	ldi	r24, 0x03	; 3
    18d4:	93 e0       	ldi	r25, 0x03	; 3
    18d6:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
	WIFI_Write_String(password);
    18da:	ce 01       	movw	r24, r28
    18dc:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
	WIFI_Write_String("\"\r\n");
    18e0:	82 ee       	ldi	r24, 0xE2	; 226
    18e2:	92 e0       	ldi	r25, 0x02	; 2
    18e4:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
	if (readUntil("OK", 10)) {
    18e8:	6a e0       	ldi	r22, 0x0A	; 10
    18ea:	70 e0       	ldi	r23, 0x00	; 0
    18ec:	89 e1       	ldi	r24, 0x19	; 25
    18ee:	92 e0       	ldi	r25, 0x02	; 2
    18f0:	96 dc       	rcall	.-1748   	; 0x121e <_Z9readUntilPKci>
    18f2:	89 2b       	or	r24, r25
    18f4:	19 f0       	breq	.+6      	; 0x18fc <_Z13connectToWifiPKcS0_+0x68>
		return TRUE;
    18f6:	80 91 ad 03 	lds	r24, 0x03AD	; 0x8003ad <TRUE>
    18fa:	02 c0       	rjmp	.+4      	; 0x1900 <_Z13connectToWifiPKcS0_+0x6c>
		} else {
		return FALSE;
    18fc:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <FALSE>
	}
}
    1900:	df 91       	pop	r29
    1902:	cf 91       	pop	r28
    1904:	1f 91       	pop	r17
    1906:	0f 91       	pop	r16
    1908:	08 95       	ret

0000190a <_Z13connectToGprsPKc>:
char connectToGprs(const char *apn) {
    190a:	cf 93       	push	r28
    190c:	df 93       	push	r29
    190e:	ec 01       	movw	r28, r24
	
	char err = 0;

	GSM_Write_String("AT+CIPSHUT\r\n");
    1910:	86 e9       	ldi	r24, 0x96	; 150
    1912:	92 e0       	ldi	r25, 0x02	; 2
    1914:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
	readUntil("OK", 10);
    1918:	6a e0       	ldi	r22, 0x0A	; 10
    191a:	70 e0       	ldi	r23, 0x00	; 0
    191c:	89 e1       	ldi	r24, 0x19	; 25
    191e:	92 e0       	ldi	r25, 0x02	; 2
    1920:	7e dc       	rcall	.-1796   	; 0x121e <_Z9readUntilPKci>
	
	GSM_Write_String("AT+CIPMUX=0\r\n");
    1922:	83 ea       	ldi	r24, 0xA3	; 163
    1924:	92 e0       	ldi	r25, 0x02	; 2
    1926:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
	readUntil("OK", 10);
    192a:	6a e0       	ldi	r22, 0x0A	; 10
    192c:	70 e0       	ldi	r23, 0x00	; 0
    192e:	89 e1       	ldi	r24, 0x19	; 25
    1930:	92 e0       	ldi	r25, 0x02	; 2
    1932:	75 dc       	rcall	.-1814   	; 0x121e <_Z9readUntilPKci>

	GSM_Write_String("AT+CGATT=1\r\n");
    1934:	81 eb       	ldi	r24, 0xB1	; 177
    1936:	92 e0       	ldi	r25, 0x02	; 2
    1938:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
	readUntil("OK", 10);
    193c:	6a e0       	ldi	r22, 0x0A	; 10
    193e:	70 e0       	ldi	r23, 0x00	; 0
    1940:	89 e1       	ldi	r24, 0x19	; 25
    1942:	92 e0       	ldi	r25, 0x02	; 2
    1944:	6c dc       	rcall	.-1832   	; 0x121e <_Z9readUntilPKci>

	GSM_Write_String("AT+CGDCONT=1,\"IP\",\"");
    1946:	8e eb       	ldi	r24, 0xBE	; 190
    1948:	92 e0       	ldi	r25, 0x02	; 2
    194a:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
	GSM_Write_String(apn);
    194e:	ce 01       	movw	r24, r28
    1950:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
	GSM_Write_String("\"\r\n");
    1954:	82 ee       	ldi	r24, 0xE2	; 226
    1956:	92 e0       	ldi	r25, 0x02	; 2
    1958:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
	readUntil("OK", 10);
    195c:	6a e0       	ldi	r22, 0x0A	; 10
    195e:	70 e0       	ldi	r23, 0x00	; 0
    1960:	89 e1       	ldi	r24, 0x19	; 25
    1962:	92 e0       	ldi	r25, 0x02	; 2
    1964:	5c dc       	rcall	.-1864   	; 0x121e <_Z9readUntilPKci>

	GSM_Write_String("AT+CSTT=\"");
    1966:	82 ed       	ldi	r24, 0xD2	; 210
    1968:	92 e0       	ldi	r25, 0x02	; 2
    196a:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
	GSM_Write_String(apn);
    196e:	ce 01       	movw	r24, r28
    1970:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
	GSM_Write_String("\",\"\",\"\"\r\n");
    1974:	8c ed       	ldi	r24, 0xDC	; 220
    1976:	92 e0       	ldi	r25, 0x02	; 2
    1978:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
	readUntil("OK", 10);
    197c:	6a e0       	ldi	r22, 0x0A	; 10
    197e:	70 e0       	ldi	r23, 0x00	; 0
    1980:	89 e1       	ldi	r24, 0x19	; 25
    1982:	92 e0       	ldi	r25, 0x02	; 2
    1984:	4c dc       	rcall	.-1896   	; 0x121e <_Z9readUntilPKci>

	GSM_Write_String("AT+CIICR\r\n");
    1986:	86 ee       	ldi	r24, 0xE6	; 230
    1988:	92 e0       	ldi	r25, 0x02	; 2
    198a:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>

	if (readUntil("OK", 10)) {
    198e:	6a e0       	ldi	r22, 0x0A	; 10
    1990:	70 e0       	ldi	r23, 0x00	; 0
    1992:	89 e1       	ldi	r24, 0x19	; 25
    1994:	92 e0       	ldi	r25, 0x02	; 2
    1996:	43 dc       	rcall	.-1914   	; 0x121e <_Z9readUntilPKci>
    1998:	ec 01       	movw	r28, r24
		err = 1;
		} else {
		err = 0;
	}
	
	GSM_Write_String("AT+CIFSR\r\n");
    199a:	80 e8       	ldi	r24, 0x80	; 128
    199c:	92 e0       	ldi	r25, 0x02	; 2
    199e:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
	delay(500);
    19a2:	84 ef       	ldi	r24, 0xF4	; 244
    19a4:	91 e0       	ldi	r25, 0x01	; 1
    19a6:	0e 94 9c 1a 	call	0x3538	; 0x3538 <_Z5delayi>
	GSM_Write_String("\",\"\",\"\"\r\n");
	readUntil("OK", 10);

	GSM_Write_String("AT+CIICR\r\n");

	if (readUntil("OK", 10)) {
    19aa:	81 e0       	ldi	r24, 0x01	; 1
    19ac:	cd 2b       	or	r28, r29
    19ae:	09 f4       	brne	.+2      	; 0x19b2 <_Z13connectToGprsPKc+0xa8>
    19b0:	80 e0       	ldi	r24, 0x00	; 0
	
	GSM_Write_String("AT+CIFSR\r\n");
	delay(500);

	return err;
}
    19b2:	df 91       	pop	r29
    19b4:	cf 91       	pop	r28
    19b6:	08 95       	ret

000019b8 <_Z21exchangeMandatoryInfov>:




char exchangeMandatoryInfo(){
    19b8:	cf 93       	push	r28
	// Send HELLO to SERVER
	__network_data.is_server_connected = TRUE;
    19ba:	c0 91 ad 03 	lds	r28, 0x03AD	; 0x8003ad <TRUE>
    19be:	c0 93 c3 0a 	sts	0x0AC3, r28	; 0x800ac3 <__network_data+0xb3>
	if (getSystemTime() == 0){
    19c2:	1d de       	rcall	.-966    	; 0x15fe <_Z13getSystemTimev>
    19c4:	81 11       	cpse	r24, r1
    19c6:	05 c0       	rjmp	.+10     	; 0x19d2 <_Z21exchangeMandatoryInfov+0x1a>
		__network_data.is_server_connected = FALSE;
    19c8:	90 91 ab 03 	lds	r25, 0x03AB	; 0x8003ab <FALSE>
    19cc:	90 93 c3 0a 	sts	0x0AC3, r25	; 0x800ac3 <__network_data+0xb3>
		return 0;
    19d0:	0d c0       	rjmp	.+26     	; 0x19ec <_Z21exchangeMandatoryInfov+0x34>
	}
	if (checkSerialNumber() == 0){
    19d2:	e3 de       	rcall	.-570    	; 0x179a <_Z17checkSerialNumberv>
    19d4:	81 11       	cpse	r24, r1
    19d6:	05 c0       	rjmp	.+10     	; 0x19e2 <_Z21exchangeMandatoryInfov+0x2a>
		__network_data.is_server_connected = FALSE;	
    19d8:	90 91 ab 03 	lds	r25, 0x03AB	; 0x8003ab <FALSE>
    19dc:	90 93 c3 0a 	sts	0x0AC3, r25	; 0x800ac3 <__network_data+0xb3>
		return 0;
    19e0:	05 c0       	rjmp	.+10     	; 0x19ec <_Z21exchangeMandatoryInfov+0x34>
	}
	__network_data.is_server_connected = TRUE;
    19e2:	c0 93 c3 0a 	sts	0x0AC3, r28	; 0x800ac3 <__network_data+0xb3>
	clearReadLine();
    19e6:	0e 94 6f 1c 	call	0x38de	; 0x38de <_Z13clearReadLinev>
	return 1;
    19ea:	81 e0       	ldi	r24, 0x01	; 1
}
    19ec:	cf 91       	pop	r28
    19ee:	08 95       	ret

000019f0 <_Z15connectToServerPKcS0_>:

char connectToServer(const char *host, const char *port) {
    19f0:	0f 93       	push	r16
    19f2:	1f 93       	push	r17
    19f4:	cf 93       	push	r28
    19f6:	df 93       	push	r29
    19f8:	8c 01       	movw	r16, r24
    19fa:	eb 01       	movw	r28, r22
		//USART0_SendString("AT+CIPMUX=1\r\n");
		//if (readUntil("OK", 2) == 0) return 0;
	}

	// AT+CIPSTART    Connect to server , replace variables
	clearReadLine();
    19fc:	0e 94 6f 1c 	call	0x38de	; 0x38de <_Z13clearReadLinev>

	if (__system_var.interface_ == ESP) {
    1a00:	20 91 a9 0f 	lds	r18, 0x0FA9	; 0x800fa9 <__system_var+0x2f>
    1a04:	30 e0       	ldi	r19, 0x00	; 0
    1a06:	80 91 b1 03 	lds	r24, 0x03B1	; 0x8003b1 <ESP>
    1a0a:	90 91 b2 03 	lds	r25, 0x03B2	; 0x8003b2 <ESP+0x1>
    1a0e:	28 17       	cp	r18, r24
    1a10:	39 07       	cpc	r19, r25
    1a12:	91 f4       	brne	.+36     	; 0x1a38 <_Z15connectToServerPKcS0_+0x48>
		WIFI_Write_String("AT+CIPSTART=0,\"TCP\",\"");
    1a14:	81 ef       	ldi	r24, 0xF1	; 241
    1a16:	92 e0       	ldi	r25, 0x02	; 2
    1a18:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
		WIFI_Write_String(host);
    1a1c:	c8 01       	movw	r24, r16
    1a1e:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
		WIFI_Write_String("\",");
    1a22:	87 e0       	ldi	r24, 0x07	; 7
    1a24:	93 e0       	ldi	r25, 0x03	; 3
    1a26:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
		WIFI_Write_String(port);
    1a2a:	ce 01       	movw	r24, r28
    1a2c:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
		WIFI_Write_String("\r\n");
    1a30:	8f e5       	ldi	r24, 0x5F	; 95
    1a32:	96 e0       	ldi	r25, 0x06	; 6
    1a34:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
	}
	if (__system_var.interface_ == SIM) {
    1a38:	20 91 a9 0f 	lds	r18, 0x0FA9	; 0x800fa9 <__system_var+0x2f>
    1a3c:	30 e0       	ldi	r19, 0x00	; 0
    1a3e:	80 91 af 03 	lds	r24, 0x03AF	; 0x8003af <SIM>
    1a42:	90 91 b0 03 	lds	r25, 0x03B0	; 0x8003b0 <SIM+0x1>
    1a46:	28 17       	cp	r18, r24
    1a48:	39 07       	cpc	r19, r25
    1a4a:	d9 f4       	brne	.+54     	; 0x1a82 <_Z15connectToServerPKcS0_+0x92>
		GSM_Write_String("AT+CIPCLOSE=0\r\n");
    1a4c:	8a e0       	ldi	r24, 0x0A	; 10
    1a4e:	93 e0       	ldi	r25, 0x03	; 3
    1a50:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
		readUntil("OK", 10);
    1a54:	6a e0       	ldi	r22, 0x0A	; 10
    1a56:	70 e0       	ldi	r23, 0x00	; 0
    1a58:	89 e1       	ldi	r24, 0x19	; 25
    1a5a:	92 e0       	ldi	r25, 0x02	; 2
    1a5c:	e0 db       	rcall	.-2112   	; 0x121e <_Z9readUntilPKci>
		GSM_Write_String("AT+CIPSTART=\"TCP\",\"");
    1a5e:	8a e1       	ldi	r24, 0x1A	; 26
    1a60:	93 e0       	ldi	r25, 0x03	; 3
    1a62:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
		GSM_Write_String(host);
    1a66:	c8 01       	movw	r24, r16
    1a68:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
		GSM_Write_String("\",\"");
    1a6c:	83 e0       	ldi	r24, 0x03	; 3
    1a6e:	93 e0       	ldi	r25, 0x03	; 3
    1a70:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
		GSM_Write_String(port);
    1a74:	ce 01       	movw	r24, r28
    1a76:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
		GSM_Write_String("\"\r\n");
    1a7a:	82 ee       	ldi	r24, 0xE2	; 226
    1a7c:	92 e0       	ldi	r25, 0x02	; 2
    1a7e:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
	}
	
	if (readUntil("OK",10) == 1){
    1a82:	6a e0       	ldi	r22, 0x0A	; 10
    1a84:	70 e0       	ldi	r23, 0x00	; 0
    1a86:	89 e1       	ldi	r24, 0x19	; 25
    1a88:	92 e0       	ldi	r25, 0x02	; 2
    1a8a:	c9 db       	rcall	.-2158   	; 0x121e <_Z9readUntilPKci>
    1a8c:	21 e0       	ldi	r18, 0x01	; 1
    1a8e:	01 97       	sbiw	r24, 0x01	; 1
    1a90:	09 f0       	breq	.+2      	; 0x1a94 <_Z15connectToServerPKcS0_+0xa4>
    1a92:	20 e0       	ldi	r18, 0x00	; 0
		return 1;
	}
	return 0;

}
    1a94:	82 2f       	mov	r24, r18
    1a96:	df 91       	pop	r29
    1a98:	cf 91       	pop	r28
    1a9a:	1f 91       	pop	r17
    1a9c:	0f 91       	pop	r16
    1a9e:	08 95       	ret

00001aa0 <_Z31getDefaultDevicePoolInformationv>:

char getDefaultDevicePoolInformation(){
    1aa0:	af 92       	push	r10
    1aa2:	bf 92       	push	r11
    1aa4:	cf 92       	push	r12
    1aa6:	df 92       	push	r13
    1aa8:	ef 92       	push	r14
    1aaa:	ff 92       	push	r15
    1aac:	0f 93       	push	r16
    1aae:	1f 93       	push	r17
    1ab0:	cf 93       	push	r28
    1ab2:	df 93       	push	r29
    1ab4:	cd b7       	in	r28, 0x3d	; 61
    1ab6:	de b7       	in	r29, 0x3e	; 62
    1ab8:	68 97       	sbiw	r28, 0x18	; 24
    1aba:	0f b6       	in	r0, 0x3f	; 63
    1abc:	f8 94       	cli
    1abe:	de bf       	out	0x3e, r29	; 62
    1ac0:	0f be       	out	0x3f, r0	; 63
    1ac2:	cd bf       	out	0x3d, r28	; 61
	getDefaultNetworkSetting(__network_data.host, __network_data.port);
    1ac4:	64 e7       	ldi	r22, 0x74	; 116
    1ac6:	7a e0       	ldi	r23, 0x0A	; 10
    1ac8:	80 e1       	ldi	r24, 0x10	; 16
    1aca:	9a e0       	ldi	r25, 0x0A	; 10
    1acc:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <_Z24getDefaultNetworkSettingPcS_>
	if (connectToServer(__network_data.host, __network_data.port) == 1){
    1ad0:	64 e7       	ldi	r22, 0x74	; 116
    1ad2:	7a e0       	ldi	r23, 0x0A	; 10
    1ad4:	80 e1       	ldi	r24, 0x10	; 16
    1ad6:	9a e0       	ldi	r25, 0x0A	; 10
    1ad8:	8b df       	rcall	.-234    	; 0x19f0 <_Z15connectToServerPKcS0_>
    1ada:	18 2f       	mov	r17, r24
    1adc:	81 30       	cpi	r24, 0x01	; 1
    1ade:	09 f0       	breq	.+2      	; 0x1ae2 <_Z31getDefaultDevicePoolInformationv+0x42>
    1ae0:	bd c0       	rjmp	.+378    	; 0x1c5c <_Z31getDefaultDevicePoolInformationv+0x1bc>
		char productName[20];
		char success = 0;
		strcpy(productName,PRODUCT_NAME);
    1ae2:	61 ee       	ldi	r22, 0xE1	; 225
    1ae4:	71 e0       	ldi	r23, 0x01	; 1
    1ae6:	ce 01       	movw	r24, r28
    1ae8:	01 96       	adiw	r24, 0x01	; 1
    1aea:	7c 01       	movw	r14, r24
    1aec:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <strcpy>
		strcat(productName,"\n");
    1af0:	f7 01       	movw	r30, r14
    1af2:	01 90       	ld	r0, Z+
    1af4:	00 20       	and	r0, r0
    1af6:	e9 f7       	brne	.-6      	; 0x1af2 <_Z31getDefaultDevicePoolInformationv+0x52>
    1af8:	31 97       	sbiw	r30, 0x01	; 1
    1afa:	8a e0       	ldi	r24, 0x0A	; 10
    1afc:	90 e0       	ldi	r25, 0x00	; 0
    1afe:	91 83       	std	Z+1, r25	; 0x01
    1b00:	80 83       	st	Z, r24
		__network_data.is_server_connected = TRUE;
    1b02:	80 91 ad 03 	lds	r24, 0x03AD	; 0x8003ad <TRUE>
    1b06:	80 93 c3 0a 	sts	0x0AC3, r24	; 0x800ac3 <__network_data+0xb3>
		delay(500);
    1b0a:	84 ef       	ldi	r24, 0xF4	; 244
    1b0c:	91 e0       	ldi	r25, 0x01	; 1
    1b0e:	0e 94 9c 1a 	call	0x3538	; 0x3538 <_Z5delayi>
		sendToServer(productName,CONNECTION);
    1b12:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    1b16:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    1b1a:	c7 01       	movw	r24, r14
    1b1c:	a9 dc       	rcall	.-1710   	; 0x1470 <_Z12sendToServerPci>
		if (readUntil("HOST", 10) == 1) {
    1b1e:	6a e0       	ldi	r22, 0x0A	; 10
    1b20:	70 e0       	ldi	r23, 0x00	; 0
    1b22:	8e e2       	ldi	r24, 0x2E	; 46
    1b24:	93 e0       	ldi	r25, 0x03	; 3
    1b26:	7b db       	rcall	.-2314   	; 0x121e <_Z9readUntilPKci>
    1b28:	01 97       	sbiw	r24, 0x01	; 1
    1b2a:	09 f0       	breq	.+2      	; 0x1b2e <_Z31getDefaultDevicePoolInformationv+0x8e>
    1b2c:	95 c0       	rjmp	.+298    	; 0x1c58 <_Z31getDefaultDevicePoolInformationv+0x1b8>
			char *p1,*p2,*p3,*save_ptr1,*save_ptr2;
			delay(100);
    1b2e:	84 e6       	ldi	r24, 0x64	; 100
    1b30:	90 e0       	ldi	r25, 0x00	; 0
    1b32:	0e 94 9c 1a 	call	0x3538	; 0x3538 <_Z5delayi>
			
			if (__system_var.interface_ == ESP){
    1b36:	80 91 a9 0f 	lds	r24, 0x0FA9	; 0x800fa9 <__system_var+0x2f>
    1b3a:	90 e0       	ldi	r25, 0x00	; 0
    1b3c:	a0 90 b1 03 	lds	r10, 0x03B1	; 0x8003b1 <ESP>
    1b40:	b0 90 b2 03 	lds	r11, 0x03B2	; 0x8003b2 <ESP+0x1>
    1b44:	8a 15       	cp	r24, r10
    1b46:	9b 05       	cpc	r25, r11
    1b48:	41 f4       	brne	.+16     	; 0x1b5a <_Z31getDefaultDevicePoolInformationv+0xba>
				p3 = strstr(__network_data.esp_buffer,"HOST");
    1b4a:	6e e2       	ldi	r22, 0x2E	; 46
    1b4c:	73 e0       	ldi	r23, 0x03	; 3
    1b4e:	84 ec       	ldi	r24, 0xC4	; 196
    1b50:	9a e0       	ldi	r25, 0x0A	; 10
    1b52:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    1b56:	6c 01       	movw	r12, r24
    1b58:	0e c0       	rjmp	.+28     	; 0x1b76 <_Z31getDefaultDevicePoolInformationv+0xd6>
			} else if (__system_var.interface_ == SIM){
    1b5a:	20 91 af 03 	lds	r18, 0x03AF	; 0x8003af <SIM>
    1b5e:	30 91 b0 03 	lds	r19, 0x03B0	; 0x8003b0 <SIM+0x1>
    1b62:	82 17       	cp	r24, r18
    1b64:	93 07       	cpc	r25, r19
    1b66:	39 f4       	brne	.+14     	; 0x1b76 <_Z31getDefaultDevicePoolInformationv+0xd6>
				p3 = strstr(__network_data.sim_buffer,"HOST");
    1b68:	6e e2       	ldi	r22, 0x2E	; 46
    1b6a:	73 e0       	ldi	r23, 0x03	; 3
    1b6c:	8c ea       	ldi	r24, 0xAC	; 172
    1b6e:	9e e0       	ldi	r25, 0x0E	; 14
    1b70:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    1b74:	6c 01       	movw	r12, r24
			}
			
			p2 = strstr(p3,"HOST");
    1b76:	6e e2       	ldi	r22, 0x2E	; 46
    1b78:	73 e0       	ldi	r23, 0x03	; 3
    1b7a:	c6 01       	movw	r24, r12
    1b7c:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
			p1 = strtok_r(p2,";",&save_ptr1);
    1b80:	ae 01       	movw	r20, r28
    1b82:	49 5e       	subi	r20, 0xE9	; 233
    1b84:	5f 4f       	sbci	r21, 0xFF	; 255
    1b86:	6a eb       	ldi	r22, 0xBA	; 186
    1b88:	73 e0       	ldi	r23, 0x03	; 3
    1b8a:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
			while (p1 != 0){
    1b8e:	00 97       	sbiw	r24, 0x00	; 0
    1b90:	09 f4       	brne	.+2      	; 0x1b94 <_Z31getDefaultDevicePoolInformationv+0xf4>
    1b92:	62 c0       	rjmp	.+196    	; 0x1c58 <_Z31getDefaultDevicePoolInformationv+0x1b8>
    1b94:	00 e0       	ldi	r16, 0x00	; 0
				
				p2 = strtok_r(p1,"=",&save_ptr2);
    1b96:	ae 01       	movw	r20, r28
    1b98:	4b 5e       	subi	r20, 0xEB	; 235
    1b9a:	5f 4f       	sbci	r21, 0xFF	; 255
    1b9c:	6a e0       	ldi	r22, 0x0A	; 10
    1b9e:	72 e0       	ldi	r23, 0x02	; 2
    1ba0:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
    1ba4:	7c 01       	movw	r14, r24
				
				if (strstr(p2,"HOST") !=0 ){
    1ba6:	6e e2       	ldi	r22, 0x2E	; 46
    1ba8:	73 e0       	ldi	r23, 0x03	; 3
    1baa:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    1bae:	89 2b       	or	r24, r25
    1bb0:	81 f0       	breq	.+32     	; 0x1bd2 <_Z31getDefaultDevicePoolInformationv+0x132>
					p2 = strtok_r(0,"=",&save_ptr2);
    1bb2:	ae 01       	movw	r20, r28
    1bb4:	4b 5e       	subi	r20, 0xEB	; 235
    1bb6:	5f 4f       	sbci	r21, 0xFF	; 255
    1bb8:	6a e0       	ldi	r22, 0x0A	; 10
    1bba:	72 e0       	ldi	r23, 0x02	; 2
    1bbc:	80 e0       	ldi	r24, 0x00	; 0
    1bbe:	90 e0       	ldi	r25, 0x00	; 0
    1bc0:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
    1bc4:	7c 01       	movw	r14, r24
					strcpy(__network_data.host,p2);
    1bc6:	bc 01       	movw	r22, r24
    1bc8:	80 e1       	ldi	r24, 0x10	; 16
    1bca:	9a e0       	ldi	r25, 0x0A	; 10
    1bcc:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <strcpy>
					success++;
    1bd0:	0f 5f       	subi	r16, 0xFF	; 255
				}
				if (strstr(p2,"PORT") !=0 ){
    1bd2:	63 e3       	ldi	r22, 0x33	; 51
    1bd4:	73 e0       	ldi	r23, 0x03	; 3
    1bd6:	c7 01       	movw	r24, r14
    1bd8:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    1bdc:	89 2b       	or	r24, r25
    1bde:	79 f0       	breq	.+30     	; 0x1bfe <_Z31getDefaultDevicePoolInformationv+0x15e>
					p2 = strtok_r(0,"=",&save_ptr2);
    1be0:	ae 01       	movw	r20, r28
    1be2:	4b 5e       	subi	r20, 0xEB	; 235
    1be4:	5f 4f       	sbci	r21, 0xFF	; 255
    1be6:	6a e0       	ldi	r22, 0x0A	; 10
    1be8:	72 e0       	ldi	r23, 0x02	; 2
    1bea:	80 e0       	ldi	r24, 0x00	; 0
    1bec:	90 e0       	ldi	r25, 0x00	; 0
    1bee:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
					strcpy(__network_data.port,p2);
    1bf2:	bc 01       	movw	r22, r24
    1bf4:	84 e7       	ldi	r24, 0x74	; 116
    1bf6:	9a e0       	ldi	r25, 0x0A	; 10
    1bf8:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <strcpy>
					success++;
    1bfc:	0f 5f       	subi	r16, 0xFF	; 255
				}
				
				p1 = strtok_r(0,";",&save_ptr1);
    1bfe:	ae 01       	movw	r20, r28
    1c00:	49 5e       	subi	r20, 0xE9	; 233
    1c02:	5f 4f       	sbci	r21, 0xFF	; 255
    1c04:	6a eb       	ldi	r22, 0xBA	; 186
    1c06:	73 e0       	ldi	r23, 0x03	; 3
    1c08:	80 e0       	ldi	r24, 0x00	; 0
    1c0a:	90 e0       	ldi	r25, 0x00	; 0
    1c0c:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
				p3 = strstr(__network_data.sim_buffer,"HOST");
			}
			
			p2 = strstr(p3,"HOST");
			p1 = strtok_r(p2,";",&save_ptr1);
			while (p1 != 0){
    1c10:	00 97       	sbiw	r24, 0x00	; 0
    1c12:	09 f6       	brne	.-126    	; 0x1b96 <_Z31getDefaultDevicePoolInformationv+0xf6>
					success++;
				}
				
				p1 = strtok_r(0,";",&save_ptr1);
			}
			if (success == 2){
    1c14:	02 30       	cpi	r16, 0x02	; 2
    1c16:	01 f5       	brne	.+64     	; 0x1c58 <_Z31getDefaultDevicePoolInformationv+0x1b8>
				delay(300);
    1c18:	8c e2       	ldi	r24, 0x2C	; 44
    1c1a:	91 e0       	ldi	r25, 0x01	; 1
    1c1c:	0e 94 9c 1a 	call	0x3538	; 0x3538 <_Z5delayi>
				if (__system_var.interface_ == ESP){
    1c20:	80 91 a9 0f 	lds	r24, 0x0FA9	; 0x800fa9 <__system_var+0x2f>
    1c24:	90 e0       	ldi	r25, 0x00	; 0
    1c26:	a8 16       	cp	r10, r24
    1c28:	b9 06       	cpc	r11, r25
    1c2a:	29 f4       	brne	.+10     	; 0x1c36 <_Z31getDefaultDevicePoolInformationv+0x196>
					WIFI_Write_String("AT+CIPCLOSE=0\r\n");
    1c2c:	8a e0       	ldi	r24, 0x0A	; 10
    1c2e:	93 e0       	ldi	r25, 0x03	; 3
    1c30:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <_Z17WIFI_Write_StringPKc>
    1c34:	14 c0       	rjmp	.+40     	; 0x1c5e <_Z31getDefaultDevicePoolInformationv+0x1be>
				} else if (__system_var.interface_ == SIM){
    1c36:	20 91 af 03 	lds	r18, 0x03AF	; 0x8003af <SIM>
    1c3a:	30 91 b0 03 	lds	r19, 0x03B0	; 0x8003b0 <SIM+0x1>
    1c3e:	82 17       	cp	r24, r18
    1c40:	93 07       	cpc	r25, r19
    1c42:	69 f4       	brne	.+26     	; 0x1c5e <_Z31getDefaultDevicePoolInformationv+0x1be>
					GSM_Write_String("AT+CIPSHUT\r\n");
    1c44:	86 e9       	ldi	r24, 0x96	; 150
    1c46:	92 e0       	ldi	r25, 0x02	; 2
    1c48:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
					readUntil("OK", 10);
    1c4c:	6a e0       	ldi	r22, 0x0A	; 10
    1c4e:	70 e0       	ldi	r23, 0x00	; 0
    1c50:	89 e1       	ldi	r24, 0x19	; 25
    1c52:	92 e0       	ldi	r25, 0x02	; 2
    1c54:	e4 da       	rcall	.-2616   	; 0x121e <_Z9readUntilPKci>
    1c56:	03 c0       	rjmp	.+6      	; 0x1c5e <_Z31getDefaultDevicePoolInformationv+0x1be>
				return 1;
			}
			
		}
	}
	return 0;
    1c58:	10 e0       	ldi	r17, 0x00	; 0
    1c5a:	01 c0       	rjmp	.+2      	; 0x1c5e <_Z31getDefaultDevicePoolInformationv+0x1be>
    1c5c:	10 e0       	ldi	r17, 0x00	; 0
}
    1c5e:	81 2f       	mov	r24, r17
    1c60:	68 96       	adiw	r28, 0x18	; 24
    1c62:	0f b6       	in	r0, 0x3f	; 63
    1c64:	f8 94       	cli
    1c66:	de bf       	out	0x3e, r29	; 62
    1c68:	0f be       	out	0x3f, r0	; 63
    1c6a:	cd bf       	out	0x3d, r28	; 61
    1c6c:	df 91       	pop	r29
    1c6e:	cf 91       	pop	r28
    1c70:	1f 91       	pop	r17
    1c72:	0f 91       	pop	r16
    1c74:	ff 90       	pop	r15
    1c76:	ef 90       	pop	r14
    1c78:	df 90       	pop	r13
    1c7a:	cf 90       	pop	r12
    1c7c:	bf 90       	pop	r11
    1c7e:	af 90       	pop	r10
    1c80:	08 95       	ret

00001c82 <_Z10networkingv>:

void networking() {
    1c82:	1f 93       	push	r17
    1c84:	cf 93       	push	r28
    1c86:	df 93       	push	r29
	

	if (__system_time.connection_timer_buffer >= __system_time.connection_timer) {
    1c88:	ec ee       	ldi	r30, 0xEC	; 236
    1c8a:	f9 e0       	ldi	r31, 0x09	; 9
    1c8c:	22 89       	ldd	r18, Z+18	; 0x12
    1c8e:	33 89       	ldd	r19, Z+19	; 0x13
    1c90:	80 89       	ldd	r24, Z+16	; 0x10
    1c92:	91 89       	ldd	r25, Z+17	; 0x11
    1c94:	28 17       	cp	r18, r24
    1c96:	39 07       	cpc	r19, r25
    1c98:	0c f4       	brge	.+2      	; 0x1c9c <_Z10networkingv+0x1a>
    1c9a:	ae c0       	rjmp	.+348    	; 0x1df8 <_Z10networkingv+0x176>
		
		if ( __network_data.is_server_connected != TRUE ) {
    1c9c:	20 91 ad 03 	lds	r18, 0x03AD	; 0x8003ad <TRUE>
    1ca0:	30 91 ae 03 	lds	r19, 0x03AE	; 0x8003ae <TRUE+0x1>
    1ca4:	80 91 c3 0a 	lds	r24, 0x0AC3	; 0x800ac3 <__network_data+0xb3>
    1ca8:	90 e0       	ldi	r25, 0x00	; 0
    1caa:	82 17       	cp	r24, r18
    1cac:	93 07       	cpc	r25, r19
    1cae:	09 f4       	brne	.+2      	; 0x1cb2 <_Z10networkingv+0x30>
    1cb0:	9f c0       	rjmp	.+318    	; 0x1df0 <_Z10networkingv+0x16e>
			char connected = FALSE;
    1cb2:	c0 91 ab 03 	lds	r28, 0x03AB	; 0x8003ab <FALSE>
    1cb6:	d0 91 ac 03 	lds	r29, 0x03AC	; 0x8003ac <FALSE+0x1>
			
			if (HAS_WIFI == TRUE){
    1cba:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <HAS_WIFI>
    1cbe:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <HAS_WIFI+0x1>
    1cc2:	28 17       	cp	r18, r24
    1cc4:	39 07       	cpc	r19, r25
    1cc6:	69 f4       	brne	.+26     	; 0x1ce2 <_Z10networkingv+0x60>
				setSource(ESP);
    1cc8:	80 91 b1 03 	lds	r24, 0x03B1	; 0x8003b1 <ESP>
    1ccc:	90 91 b2 03 	lds	r25, 0x03B2	; 0x8003b2 <ESP+0x1>
    1cd0:	0e 94 86 1b 	call	0x370c	; 0x370c <_Z9setSourcei>
				__network_data.is_esp_connected = connectToWifi(__network_data.ssid, __network_data.password);
    1cd4:	67 e9       	ldi	r22, 0x97	; 151
    1cd6:	7a e0       	ldi	r23, 0x0A	; 10
    1cd8:	89 e7       	ldi	r24, 0x79	; 121
    1cda:	9a e0       	ldi	r25, 0x0A	; 10
    1cdc:	db dd       	rcall	.-1098   	; 0x1894 <_Z13connectToWifiPKcS0_>
    1cde:	80 93 c1 0a 	sts	0x0AC1, r24	; 0x800ac1 <__network_data+0xb1>
			}
			
			if (!__network_data.is_esp_connected) {
    1ce2:	80 91 c1 0a 	lds	r24, 0x0AC1	; 0x800ac1 <__network_data+0xb1>
    1ce6:	81 11       	cpse	r24, r1
    1ce8:	12 c0       	rjmp	.+36     	; 0x1d0e <_Z10networkingv+0x8c>
				setSource(SIM);
    1cea:	80 91 af 03 	lds	r24, 0x03AF	; 0x8003af <SIM>
    1cee:	90 91 b0 03 	lds	r25, 0x03B0	; 0x8003b0 <SIM+0x1>
    1cf2:	0e 94 86 1b 	call	0x370c	; 0x370c <_Z9setSourcei>
				__network_data.is_sim_connected = connectToGprs(__network_data.apn);
    1cf6:	85 eb       	ldi	r24, 0xB5	; 181
    1cf8:	9a e0       	ldi	r25, 0x0A	; 10
    1cfa:	07 de       	rcall	.-1010   	; 0x190a <_Z13connectToGprsPKc>
    1cfc:	80 93 c2 0a 	sts	0x0AC2, r24	; 0x800ac2 <__network_data+0xb2>
			}
			
			if (__network_data.is_esp_connected || __network_data.is_sim_connected){
    1d00:	90 91 c1 0a 	lds	r25, 0x0AC1	; 0x800ac1 <__network_data+0xb1>
    1d04:	91 11       	cpse	r25, r1
    1d06:	03 c0       	rjmp	.+6      	; 0x1d0e <_Z10networkingv+0x8c>
    1d08:	88 23       	and	r24, r24
    1d0a:	09 f4       	brne	.+2      	; 0x1d0e <_Z10networkingv+0x8c>
    1d0c:	5e c0       	rjmp	.+188    	; 0x1dca <_Z10networkingv+0x148>
	

	if (__system_time.connection_timer_buffer >= __system_time.connection_timer) {
		
		if ( __network_data.is_server_connected != TRUE ) {
			char connected = FALSE;
    1d0e:	1c 2f       	mov	r17, r28
				__network_data.is_sim_connected = connectToGprs(__network_data.apn);
			}
			
			if (__network_data.is_esp_connected || __network_data.is_sim_connected){
				
				if (getPrimaryNetworkSetting(__network_data.host, __network_data.port) != 0){
    1d10:	64 e7       	ldi	r22, 0x74	; 116
    1d12:	7a e0       	ldi	r23, 0x0A	; 10
    1d14:	80 e1       	ldi	r24, 0x10	; 16
    1d16:	9a e0       	ldi	r25, 0x0A	; 10
    1d18:	0e 94 4a 03 	call	0x694	; 0x694 <_Z24getPrimaryNetworkSettingPcS_>
    1d1c:	89 2b       	or	r24, r25
    1d1e:	89 f0       	breq	.+34     	; 0x1d42 <_Z10networkingv+0xc0>
					GSM_Write_String("getPrimaryNetworkSetting");
    1d20:	88 e3       	ldi	r24, 0x38	; 56
    1d22:	93 e0       	ldi	r25, 0x03	; 3
    1d24:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
					delay(500);
    1d28:	84 ef       	ldi	r24, 0xF4	; 244
    1d2a:	91 e0       	ldi	r25, 0x01	; 1
    1d2c:	0e 94 9c 1a 	call	0x3538	; 0x3538 <_Z5delayi>
					if (connectToServer(__network_data.host, __network_data.port) != 0){
    1d30:	64 e7       	ldi	r22, 0x74	; 116
    1d32:	7a e0       	ldi	r23, 0x0A	; 10
    1d34:	80 e1       	ldi	r24, 0x10	; 16
    1d36:	9a e0       	ldi	r25, 0x0A	; 10
    1d38:	5b de       	rcall	.-842    	; 0x19f0 <_Z15connectToServerPKcS0_>
    1d3a:	88 23       	and	r24, r24
    1d3c:	21 f0       	breq	.+8      	; 0x1d46 <_Z10networkingv+0xc4>
						connected = exchangeMandatoryInfo();
    1d3e:	3c de       	rcall	.-904    	; 0x19b8 <_Z21exchangeMandatoryInfov>
    1d40:	03 c0       	rjmp	.+6      	; 0x1d48 <_Z10networkingv+0xc6>
	

	if (__system_time.connection_timer_buffer >= __system_time.connection_timer) {
		
		if ( __network_data.is_server_connected != TRUE ) {
			char connected = FALSE;
    1d42:	8c 2f       	mov	r24, r28
    1d44:	01 c0       	rjmp	.+2      	; 0x1d48 <_Z10networkingv+0xc6>
					GSM_Write_String("getPrimaryNetworkSetting");
					delay(500);
					if (connectToServer(__network_data.host, __network_data.port) != 0){
						connected = exchangeMandatoryInfo();
					} else {
						connected = FALSE;
    1d46:	8c 2f       	mov	r24, r28
					}	
				}
				if (connected == FALSE && getSecondaryNetworkSetting(__network_data.host, __network_data.port) != 0){
    1d48:	28 2f       	mov	r18, r24
    1d4a:	30 e0       	ldi	r19, 0x00	; 0
    1d4c:	c2 17       	cp	r28, r18
    1d4e:	d3 07       	cpc	r29, r19
    1d50:	81 f5       	brne	.+96     	; 0x1db2 <_Z10networkingv+0x130>
    1d52:	64 e7       	ldi	r22, 0x74	; 116
    1d54:	7a e0       	ldi	r23, 0x0A	; 10
    1d56:	80 e1       	ldi	r24, 0x10	; 16
    1d58:	9a e0       	ldi	r25, 0x0A	; 10
    1d5a:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <_Z26getSecondaryNetworkSettingPcS_>
    1d5e:	89 2b       	or	r24, r25
    1d60:	b1 f0       	breq	.+44     	; 0x1d8e <_Z10networkingv+0x10c>
					GSM_Write_String("getSecondaryNetworkSetting");
    1d62:	81 e5       	ldi	r24, 0x51	; 81
    1d64:	93 e0       	ldi	r25, 0x03	; 3
    1d66:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
					delay(500);
    1d6a:	84 ef       	ldi	r24, 0xF4	; 244
    1d6c:	91 e0       	ldi	r25, 0x01	; 1
    1d6e:	0e 94 9c 1a 	call	0x3538	; 0x3538 <_Z5delayi>
					if (connectToServer(__network_data.host, __network_data.port) != 0){
    1d72:	64 e7       	ldi	r22, 0x74	; 116
    1d74:	7a e0       	ldi	r23, 0x0A	; 10
    1d76:	80 e1       	ldi	r24, 0x10	; 16
    1d78:	9a e0       	ldi	r25, 0x0A	; 10
    1d7a:	3a de       	rcall	.-908    	; 0x19f0 <_Z15connectToServerPKcS0_>
    1d7c:	88 23       	and	r24, r24
    1d7e:	11 f0       	breq	.+4      	; 0x1d84 <_Z10networkingv+0x102>
						connected = exchangeMandatoryInfo();
    1d80:	1b de       	rcall	.-970    	; 0x19b8 <_Z21exchangeMandatoryInfov>
    1d82:	18 2f       	mov	r17, r24
					} else {
						connected = FALSE;
					}
				}
				if (connected == FALSE && getDefaultDevicePoolInformation() != 0){
    1d84:	81 2f       	mov	r24, r17
    1d86:	90 e0       	ldi	r25, 0x00	; 0
    1d88:	c8 17       	cp	r28, r24
    1d8a:	d9 07       	cpc	r29, r25
    1d8c:	91 f4       	brne	.+36     	; 0x1db2 <_Z10networkingv+0x130>
    1d8e:	88 de       	rcall	.-752    	; 0x1aa0 <_Z31getDefaultDevicePoolInformationv>
    1d90:	88 23       	and	r24, r24
    1d92:	79 f0       	breq	.+30     	; 0x1db2 <_Z10networkingv+0x130>
					GSM_Write_String("getDefaultDevicePoolInformation");
    1d94:	8c e6       	ldi	r24, 0x6C	; 108
    1d96:	93 e0       	ldi	r25, 0x03	; 3
    1d98:	0e 94 80 1a 	call	0x3500	; 0x3500 <_Z16GSM_Write_StringPKc>
					delay(500);
    1d9c:	84 ef       	ldi	r24, 0xF4	; 244
    1d9e:	91 e0       	ldi	r25, 0x01	; 1
    1da0:	0e 94 9c 1a 	call	0x3538	; 0x3538 <_Z5delayi>
					if (connectToServer(__network_data.host, __network_data.port) != 0){
    1da4:	64 e7       	ldi	r22, 0x74	; 116
    1da6:	7a e0       	ldi	r23, 0x0A	; 10
    1da8:	80 e1       	ldi	r24, 0x10	; 16
    1daa:	9a e0       	ldi	r25, 0x0A	; 10
    1dac:	21 de       	rcall	.-958    	; 0x19f0 <_Z15connectToServerPKcS0_>
    1dae:	81 11       	cpse	r24, r1
						connected = exchangeMandatoryInfo();
    1db0:	03 de       	rcall	.-1018   	; 0x19b8 <_Z21exchangeMandatoryInfov>
						connected = FALSE;
					}
				}
			}

			if (!(__network_data.is_sim_connected || __network_data.is_esp_connected ) || !__network_data.is_server_connected) {
    1db2:	80 91 c2 0a 	lds	r24, 0x0AC2	; 0x800ac2 <__network_data+0xb2>
    1db6:	81 11       	cpse	r24, r1
    1db8:	04 c0       	rjmp	.+8      	; 0x1dc2 <_Z10networkingv+0x140>
    1dba:	80 91 c1 0a 	lds	r24, 0x0AC1	; 0x800ac1 <__network_data+0xb1>
    1dbe:	88 23       	and	r24, r24
    1dc0:	21 f0       	breq	.+8      	; 0x1dca <_Z10networkingv+0x148>
    1dc2:	80 91 c3 0a 	lds	r24, 0x0AC3	; 0x800ac3 <__network_data+0xb3>
    1dc6:	81 11       	cpse	r24, r1
    1dc8:	0d c0       	rjmp	.+26     	; 0x1de4 <_Z10networkingv+0x162>
				if (__system_time.connection_timer <= 600) __system_time.connection_timer += 20;
    1dca:	80 91 fc 09 	lds	r24, 0x09FC	; 0x8009fc <__system_time+0x10>
    1dce:	90 91 fd 09 	lds	r25, 0x09FD	; 0x8009fd <__system_time+0x11>
    1dd2:	89 35       	cpi	r24, 0x59	; 89
    1dd4:	22 e0       	ldi	r18, 0x02	; 2
    1dd6:	92 07       	cpc	r25, r18
    1dd8:	2c f4       	brge	.+10     	; 0x1de4 <_Z10networkingv+0x162>
    1dda:	44 96       	adiw	r24, 0x14	; 20
    1ddc:	90 93 fd 09 	sts	0x09FD, r25	; 0x8009fd <__system_time+0x11>
    1de0:	80 93 fc 09 	sts	0x09FC, r24	; 0x8009fc <__system_time+0x10>
			}
			__system_time.check_timer_buffer = 0;
    1de4:	ec ee       	ldi	r30, 0xEC	; 236
    1de6:	f9 e0       	ldi	r31, 0x09	; 9
    1de8:	17 8a       	std	Z+23, r1	; 0x17
    1dea:	16 8a       	std	Z+22, r1	; 0x16
			__system_time.relay_module_check_timer_buffer = 0;
    1dec:	13 8e       	std	Z+27, r1	; 0x1b
    1dee:	12 8e       	std	Z+26, r1	; 0x1a

		}
		__system_time.connection_timer_buffer = 0;
    1df0:	10 92 ff 09 	sts	0x09FF, r1	; 0x8009ff <__system_time+0x13>
    1df4:	10 92 fe 09 	sts	0x09FE, r1	; 0x8009fe <__system_time+0x12>
		
	}
}
    1df8:	df 91       	pop	r29
    1dfa:	cf 91       	pop	r28
    1dfc:	1f 91       	pop	r17
    1dfe:	08 95       	ret

00001e00 <_Z12saveUserDatav>:
*  Author: tjozsa
*/
#include <Processes.h>
#include <HCM.h>

void saveUserData(){
    1e00:	ef 92       	push	r14
    1e02:	ff 92       	push	r15
    1e04:	0f 93       	push	r16
    1e06:	1f 93       	push	r17
    1e08:	cf 93       	push	r28
    1e0a:	df 93       	push	r29
    1e0c:	cd b7       	in	r28, 0x3d	; 61
    1e0e:	de b7       	in	r29, 0x3e	; 62
    1e10:	c0 5a       	subi	r28, 0xA0	; 160
    1e12:	d1 09       	sbc	r29, r1
    1e14:	0f b6       	in	r0, 0x3f	; 63
    1e16:	f8 94       	cli
    1e18:	de bf       	out	0x3e, r29	; 62
    1e1a:	0f be       	out	0x3f, r0	; 63
    1e1c:	cd bf       	out	0x3d, r28	; 61
	char buffer[160];
	clearEEPROM(EEPROM_DATA_START,EEPROM_CFG_START);
    1e1e:	e0 90 9d 01 	lds	r14, 0x019D	; 0x80019d <EEPROM_DATA_START>
    1e22:	f0 90 9e 01 	lds	r15, 0x019E	; 0x80019e <EEPROM_DATA_START+0x1>
    1e26:	60 91 9f 01 	lds	r22, 0x019F	; 0x80019f <EEPROM_CFG_START>
    1e2a:	70 91 a0 01 	lds	r23, 0x01A0	; 0x8001a0 <EEPROM_CFG_START+0x1>
    1e2e:	c7 01       	movw	r24, r14
    1e30:	0e 94 d5 00 	call	0x1aa	; 0x1aa <_Z11clearEEPROMii>
	strcpy(buffer,"#SSID;");
    1e34:	87 e0       	ldi	r24, 0x07	; 7
    1e36:	e5 eb       	ldi	r30, 0xB5	; 181
    1e38:	f3 e0       	ldi	r31, 0x03	; 3
    1e3a:	8e 01       	movw	r16, r28
    1e3c:	0f 5f       	subi	r16, 0xFF	; 255
    1e3e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e40:	d8 01       	movw	r26, r16
    1e42:	01 90       	ld	r0, Z+
    1e44:	0d 92       	st	X+, r0
    1e46:	8a 95       	dec	r24
    1e48:	e1 f7       	brne	.-8      	; 0x1e42 <_Z12saveUserDatav+0x42>
	strcat(buffer,__network_data.ssid);
    1e4a:	69 e7       	ldi	r22, 0x79	; 121
    1e4c:	7a e0       	ldi	r23, 0x0A	; 10
    1e4e:	c8 01       	movw	r24, r16
    1e50:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
	strcat(buffer,"##PWD;");
    1e54:	d8 01       	movw	r26, r16
    1e56:	0d 90       	ld	r0, X+
    1e58:	00 20       	and	r0, r0
    1e5a:	e9 f7       	brne	.-6      	; 0x1e56 <_Z12saveUserDatav+0x56>
    1e5c:	11 97       	sbiw	r26, 0x01	; 1
    1e5e:	87 e0       	ldi	r24, 0x07	; 7
    1e60:	ec eb       	ldi	r30, 0xBC	; 188
    1e62:	f3 e0       	ldi	r31, 0x03	; 3
    1e64:	01 90       	ld	r0, Z+
    1e66:	0d 92       	st	X+, r0
    1e68:	8a 95       	dec	r24
    1e6a:	e1 f7       	brne	.-8      	; 0x1e64 <_Z12saveUserDatav+0x64>
	strcat(buffer,__network_data.password);
    1e6c:	67 e9       	ldi	r22, 0x97	; 151
    1e6e:	7a e0       	ldi	r23, 0x0A	; 10
    1e70:	c8 01       	movw	r24, r16
    1e72:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
	strcat(buffer,"##APN;");
    1e76:	d8 01       	movw	r26, r16
    1e78:	0d 90       	ld	r0, X+
    1e7a:	00 20       	and	r0, r0
    1e7c:	e9 f7       	brne	.-6      	; 0x1e78 <_Z12saveUserDatav+0x78>
    1e7e:	11 97       	sbiw	r26, 0x01	; 1
    1e80:	87 e0       	ldi	r24, 0x07	; 7
    1e82:	e3 ec       	ldi	r30, 0xC3	; 195
    1e84:	f3 e0       	ldi	r31, 0x03	; 3
    1e86:	01 90       	ld	r0, Z+
    1e88:	0d 92       	st	X+, r0
    1e8a:	8a 95       	dec	r24
    1e8c:	e1 f7       	brne	.-8      	; 0x1e86 <_Z12saveUserDatav+0x86>
	strcat(buffer,__network_data.apn);
    1e8e:	65 eb       	ldi	r22, 0xB5	; 181
    1e90:	7a e0       	ldi	r23, 0x0A	; 10
    1e92:	c8 01       	movw	r24, r16
    1e94:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
	strcat(buffer,"#");
    1e98:	f8 01       	movw	r30, r16
    1e9a:	01 90       	ld	r0, Z+
    1e9c:	00 20       	and	r0, r0
    1e9e:	e9 f7       	brne	.-6      	; 0x1e9a <_Z12saveUserDatav+0x9a>
    1ea0:	31 97       	sbiw	r30, 0x01	; 1
    1ea2:	83 e2       	ldi	r24, 0x23	; 35
    1ea4:	90 e0       	ldi	r25, 0x00	; 0
    1ea6:	91 83       	std	Z+1, r25	; 0x01
    1ea8:	80 83       	st	Z, r24
	//USART0_SendString(buffer);
	//delay(500);
	__system_var.eeprom_position = EEPROM_DATA_START;
    1eaa:	f0 92 ad 0f 	sts	0x0FAD, r15	; 0x800fad <__system_var+0x33>
    1eae:	e0 92 ac 0f 	sts	0x0FAC, r14	; 0x800fac <__system_var+0x32>
	eepromSaveCfg(buffer,__system_var.eeprom_position);
    1eb2:	b7 01       	movw	r22, r14
    1eb4:	c8 01       	movw	r24, r16
    1eb6:	0e 94 b7 00 	call	0x16e	; 0x16e <_Z13eepromSaveCfgPKci>
}
    1eba:	c0 56       	subi	r28, 0x60	; 96
    1ebc:	df 4f       	sbci	r29, 0xFF	; 255
    1ebe:	0f b6       	in	r0, 0x3f	; 63
    1ec0:	f8 94       	cli
    1ec2:	de bf       	out	0x3e, r29	; 62
    1ec4:	0f be       	out	0x3f, r0	; 63
    1ec6:	cd bf       	out	0x3d, r28	; 61
    1ec8:	df 91       	pop	r29
    1eca:	cf 91       	pop	r28
    1ecc:	1f 91       	pop	r17
    1ece:	0f 91       	pop	r16
    1ed0:	ff 90       	pop	r15
    1ed2:	ef 90       	pop	r14
    1ed4:	08 95       	ret

00001ed6 <_Z8postPagec>:


void postPage(char flag){
    1ed6:	ef 92       	push	r14
    1ed8:	ff 92       	push	r15
    1eda:	0f 93       	push	r16
    1edc:	1f 93       	push	r17
    1ede:	cf 93       	push	r28
    1ee0:	df 93       	push	r29
    1ee2:	cd b7       	in	r28, 0x3d	; 61
    1ee4:	de b7       	in	r29, 0x3e	; 62
    1ee6:	cf 53       	subi	r28, 0x3F	; 63
    1ee8:	d7 40       	sbci	r29, 0x07	; 7
    1eea:	0f b6       	in	r0, 0x3f	; 63
    1eec:	f8 94       	cli
    1eee:	de bf       	out	0x3e, r29	; 62
    1ef0:	0f be       	out	0x3f, r0	; 63
    1ef2:	cd bf       	out	0x3d, r28	; 61
    1ef4:	f8 2e       	mov	r15, r24
	char content[850];
	char page[1000];
	int contentLength;
	char converter[5];
	
	__network_data.ap_connection[0] = 9;
    1ef6:	89 e0       	ldi	r24, 0x09	; 9
    1ef8:	80 93 bf 0a 	sts	0x0ABF, r24	; 0x800abf <__network_data+0xaf>
	
	if (strstr(__network_data.esp_buffer,"IPD,") != 0){
    1efc:	6a ec       	ldi	r22, 0xCA	; 202
    1efe:	73 e0       	ldi	r23, 0x03	; 3
    1f00:	84 ec       	ldi	r24, 0xC4	; 196
    1f02:	9a e0       	ldi	r25, 0x0A	; 10
    1f04:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    1f08:	00 97       	sbiw	r24, 0x00	; 0
    1f0a:	31 f0       	breq	.+12     	; 0x1f18 <_Z8postPagec+0x42>
		char *p = strstr(__network_data.esp_buffer,"IPD,");
		__network_data.ap_connection[0] = *(p+4);
    1f0c:	fc 01       	movw	r30, r24
    1f0e:	84 81       	ldd	r24, Z+4	; 0x04
    1f10:	80 93 bf 0a 	sts	0x0ABF, r24	; 0x800abf <__network_data+0xaf>
		__network_data.ap_connection[1] = '\0';
    1f14:	10 92 c0 0a 	sts	0x0AC0, r1	; 0x800ac0 <__network_data+0xb0>
	}
	
	
	delay(500);
    1f18:	84 ef       	ldi	r24, 0xF4	; 244
    1f1a:	91 e0       	ldi	r25, 0x01	; 1
    1f1c:	0e 94 9c 1a 	call	0x3538	; 0x3538 <_Z5delayi>
	strcpy(content,"<html><head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0\"></head><body>");
    1f20:	8e 01       	movw	r16, r28
    1f22:	07 51       	subi	r16, 0x17	; 23
    1f24:	1c 4f       	sbci	r17, 0xFC	; 252
    1f26:	83 e7       	ldi	r24, 0x73	; 115
    1f28:	ef ec       	ldi	r30, 0xCF	; 207
    1f2a:	f3 e0       	ldi	r31, 0x03	; 3
    1f2c:	d8 01       	movw	r26, r16
    1f2e:	01 90       	ld	r0, Z+
    1f30:	0d 92       	st	X+, r0
    1f32:	8a 95       	dec	r24
    1f34:	e1 f7       	brne	.-8      	; 0x1f2e <_Z8postPagec+0x58>
	strcat(content,"<title>HCM Console</title>");
    1f36:	d8 01       	movw	r26, r16
    1f38:	0d 90       	ld	r0, X+
    1f3a:	00 20       	and	r0, r0
    1f3c:	e9 f7       	brne	.-6      	; 0x1f38 <_Z8postPagec+0x62>
    1f3e:	11 97       	sbiw	r26, 0x01	; 1
    1f40:	8b e1       	ldi	r24, 0x1B	; 27
    1f42:	e2 e4       	ldi	r30, 0x42	; 66
    1f44:	f4 e0       	ldi	r31, 0x04	; 4
    1f46:	01 90       	ld	r0, Z+
    1f48:	0d 92       	st	X+, r0
    1f4a:	8a 95       	dec	r24
    1f4c:	e1 f7       	brne	.-8      	; 0x1f46 <_Z8postPagec+0x70>
	strcat(content,"<div style=\"font-size: medium; text-align: center;\"><span>");
    1f4e:	d8 01       	movw	r26, r16
    1f50:	0d 90       	ld	r0, X+
    1f52:	00 20       	and	r0, r0
    1f54:	e9 f7       	brne	.-6      	; 0x1f50 <_Z8postPagec+0x7a>
    1f56:	11 97       	sbiw	r26, 0x01	; 1
    1f58:	8b e3       	ldi	r24, 0x3B	; 59
    1f5a:	ed e5       	ldi	r30, 0x5D	; 93
    1f5c:	f4 e0       	ldi	r31, 0x04	; 4
    1f5e:	01 90       	ld	r0, Z+
    1f60:	0d 92       	st	X+, r0
    1f62:	8a 95       	dec	r24
    1f64:	e1 f7       	brne	.-8      	; 0x1f5e <_Z8postPagec+0x88>
	strcat(content,"<form method=\"POST\">");
    1f66:	d8 01       	movw	r26, r16
    1f68:	0d 90       	ld	r0, X+
    1f6a:	00 20       	and	r0, r0
    1f6c:	e9 f7       	brne	.-6      	; 0x1f68 <_Z8postPagec+0x92>
    1f6e:	11 97       	sbiw	r26, 0x01	; 1
    1f70:	85 e1       	ldi	r24, 0x15	; 21
    1f72:	e8 e9       	ldi	r30, 0x98	; 152
    1f74:	f4 e0       	ldi	r31, 0x04	; 4
    1f76:	01 90       	ld	r0, Z+
    1f78:	0d 92       	st	X+, r0
    1f7a:	8a 95       	dec	r24
    1f7c:	e1 f7       	brne	.-8      	; 0x1f76 <_Z8postPagec+0xa0>
	strcat(content,"<p><strong>SERIAL: ");
    1f7e:	d8 01       	movw	r26, r16
    1f80:	0d 90       	ld	r0, X+
    1f82:	00 20       	and	r0, r0
    1f84:	e9 f7       	brne	.-6      	; 0x1f80 <_Z8postPagec+0xaa>
    1f86:	11 97       	sbiw	r26, 0x01	; 1
    1f88:	84 e1       	ldi	r24, 0x14	; 20
    1f8a:	ed ea       	ldi	r30, 0xAD	; 173
    1f8c:	f4 e0       	ldi	r31, 0x04	; 4
    1f8e:	01 90       	ld	r0, Z+
    1f90:	0d 92       	st	X+, r0
    1f92:	8a 95       	dec	r24
    1f94:	e1 f7       	brne	.-8      	; 0x1f8e <_Z8postPagec+0xb8>
	strcat(content,__system_var.serial_number);
    1f96:	6a e7       	ldi	r22, 0x7A	; 122
    1f98:	7f e0       	ldi	r23, 0x0F	; 15
    1f9a:	c8 01       	movw	r24, r16
    1f9c:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
	strcat(content,"</strong></p><p><strong>SSID</strong><br><input type=\"text\" name=\"ssid\" value=\"");
    1fa0:	d8 01       	movw	r26, r16
    1fa2:	0d 90       	ld	r0, X+
    1fa4:	00 20       	and	r0, r0
    1fa6:	e9 f7       	brne	.-6      	; 0x1fa2 <_Z8postPagec+0xcc>
    1fa8:	11 97       	sbiw	r26, 0x01	; 1
    1faa:	80 e5       	ldi	r24, 0x50	; 80
    1fac:	e1 ec       	ldi	r30, 0xC1	; 193
    1fae:	f4 e0       	ldi	r31, 0x04	; 4
    1fb0:	01 90       	ld	r0, Z+
    1fb2:	0d 92       	st	X+, r0
    1fb4:	8a 95       	dec	r24
    1fb6:	e1 f7       	brne	.-8      	; 0x1fb0 <_Z8postPagec+0xda>
	strcat(content,__network_data.ssid);
    1fb8:	69 e7       	ldi	r22, 0x79	; 121
    1fba:	7a e0       	ldi	r23, 0x0A	; 10
    1fbc:	c8 01       	movw	r24, r16
    1fbe:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
	strcat(content,"\"></p>");
    1fc2:	d8 01       	movw	r26, r16
    1fc4:	0d 90       	ld	r0, X+
    1fc6:	00 20       	and	r0, r0
    1fc8:	e9 f7       	brne	.-6      	; 0x1fc4 <_Z8postPagec+0xee>
    1fca:	11 97       	sbiw	r26, 0x01	; 1
    1fcc:	87 e0       	ldi	r24, 0x07	; 7
    1fce:	e1 e1       	ldi	r30, 0x11	; 17
    1fd0:	f5 e0       	ldi	r31, 0x05	; 5
    1fd2:	01 90       	ld	r0, Z+
    1fd4:	0d 92       	st	X+, r0
    1fd6:	8a 95       	dec	r24
    1fd8:	e1 f7       	brne	.-8      	; 0x1fd2 <_Z8postPagec+0xfc>
	strcat(content,"<p><strong>PASSWORD</strong><br><input type=\"text\" name=\"password\" value=\"");
    1fda:	d8 01       	movw	r26, r16
    1fdc:	0d 90       	ld	r0, X+
    1fde:	00 20       	and	r0, r0
    1fe0:	e9 f7       	brne	.-6      	; 0x1fdc <_Z8postPagec+0x106>
    1fe2:	11 97       	sbiw	r26, 0x01	; 1
    1fe4:	8b e4       	ldi	r24, 0x4B	; 75
    1fe6:	e8 e1       	ldi	r30, 0x18	; 24
    1fe8:	f5 e0       	ldi	r31, 0x05	; 5
    1fea:	01 90       	ld	r0, Z+
    1fec:	0d 92       	st	X+, r0
    1fee:	8a 95       	dec	r24
    1ff0:	e1 f7       	brne	.-8      	; 0x1fea <_Z8postPagec+0x114>
	strcat(content,__network_data.password);
    1ff2:	67 e9       	ldi	r22, 0x97	; 151
    1ff4:	7a e0       	ldi	r23, 0x0A	; 10
    1ff6:	c8 01       	movw	r24, r16
    1ff8:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
	strcat(content,"\"></p>");
    1ffc:	d8 01       	movw	r26, r16
    1ffe:	0d 90       	ld	r0, X+
    2000:	00 20       	and	r0, r0
    2002:	e9 f7       	brne	.-6      	; 0x1ffe <_Z8postPagec+0x128>
    2004:	11 97       	sbiw	r26, 0x01	; 1
    2006:	87 e0       	ldi	r24, 0x07	; 7
    2008:	e1 e1       	ldi	r30, 0x11	; 17
    200a:	f5 e0       	ldi	r31, 0x05	; 5
    200c:	01 90       	ld	r0, Z+
    200e:	0d 92       	st	X+, r0
    2010:	8a 95       	dec	r24
    2012:	e1 f7       	brne	.-8      	; 0x200c <_Z8postPagec+0x136>
	strcat(content,"<p><strong>APN</strong><br><input type=\"text\" name=\"apn\" value=\"");
    2014:	d8 01       	movw	r26, r16
    2016:	0d 90       	ld	r0, X+
    2018:	00 20       	and	r0, r0
    201a:	e9 f7       	brne	.-6      	; 0x2016 <_Z8postPagec+0x140>
    201c:	11 97       	sbiw	r26, 0x01	; 1
    201e:	81 e4       	ldi	r24, 0x41	; 65
    2020:	e3 e6       	ldi	r30, 0x63	; 99
    2022:	f5 e0       	ldi	r31, 0x05	; 5
    2024:	01 90       	ld	r0, Z+
    2026:	0d 92       	st	X+, r0
    2028:	8a 95       	dec	r24
    202a:	e1 f7       	brne	.-8      	; 0x2024 <_Z8postPagec+0x14e>
	strcat(content,__network_data.apn);
    202c:	65 eb       	ldi	r22, 0xB5	; 181
    202e:	7a e0       	ldi	r23, 0x0A	; 10
    2030:	c8 01       	movw	r24, r16
    2032:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
	strcat(content,"\"></p>");
    2036:	d8 01       	movw	r26, r16
    2038:	0d 90       	ld	r0, X+
    203a:	00 20       	and	r0, r0
    203c:	e9 f7       	brne	.-6      	; 0x2038 <_Z8postPagec+0x162>
    203e:	11 97       	sbiw	r26, 0x01	; 1
    2040:	87 e0       	ldi	r24, 0x07	; 7
    2042:	e1 e1       	ldi	r30, 0x11	; 17
    2044:	f5 e0       	ldi	r31, 0x05	; 5
    2046:	01 90       	ld	r0, Z+
    2048:	0d 92       	st	X+, r0
    204a:	8a 95       	dec	r24
    204c:	e1 f7       	brne	.-8      	; 0x2046 <_Z8postPagec+0x170>
	if (flag == 1){
    204e:	f1 e0       	ldi	r31, 0x01	; 1
    2050:	ff 12       	cpse	r15, r31
    2052:	0d c0       	rjmp	.+26     	; 0x206e <_Z8postPagec+0x198>
		strcat(content,"<br><p>SAVED</p>");
    2054:	d8 01       	movw	r26, r16
    2056:	0d 90       	ld	r0, X+
    2058:	00 20       	and	r0, r0
    205a:	e9 f7       	brne	.-6      	; 0x2056 <_Z8postPagec+0x180>
    205c:	11 97       	sbiw	r26, 0x01	; 1
    205e:	81 e1       	ldi	r24, 0x11	; 17
    2060:	e4 ea       	ldi	r30, 0xA4	; 164
    2062:	f5 e0       	ldi	r31, 0x05	; 5
    2064:	01 90       	ld	r0, Z+
    2066:	0d 92       	st	X+, r0
    2068:	8a 95       	dec	r24
    206a:	e1 f7       	brne	.-8      	; 0x2064 <_Z8postPagec+0x18e>
    206c:	0e c0       	rjmp	.+28     	; 0x208a <_Z8postPagec+0x1b4>
		} else {
		strcat(content,"<input type=\"submit\">");
    206e:	de 01       	movw	r26, r28
    2070:	a7 51       	subi	r26, 0x17	; 23
    2072:	bc 4f       	sbci	r27, 0xFC	; 252
    2074:	0d 90       	ld	r0, X+
    2076:	00 20       	and	r0, r0
    2078:	e9 f7       	brne	.-6      	; 0x2074 <_Z8postPagec+0x19e>
    207a:	11 97       	sbiw	r26, 0x01	; 1
    207c:	86 e1       	ldi	r24, 0x16	; 22
    207e:	e5 eb       	ldi	r30, 0xB5	; 181
    2080:	f5 e0       	ldi	r31, 0x05	; 5
    2082:	01 90       	ld	r0, Z+
    2084:	0d 92       	st	X+, r0
    2086:	8a 95       	dec	r24
    2088:	e1 f7       	brne	.-8      	; 0x2082 <_Z8postPagec+0x1ac>
	}
	strcat(content,"</form></span></div></body></html>");
    208a:	7e 01       	movw	r14, r28
    208c:	87 e1       	ldi	r24, 0x17	; 23
    208e:	e8 1a       	sub	r14, r24
    2090:	8c ef       	ldi	r24, 0xFC	; 252
    2092:	f8 0a       	sbc	r15, r24
    2094:	d7 01       	movw	r26, r14
    2096:	0d 90       	ld	r0, X+
    2098:	00 20       	and	r0, r0
    209a:	e9 f7       	brne	.-6      	; 0x2096 <_Z8postPagec+0x1c0>
    209c:	11 97       	sbiw	r26, 0x01	; 1
    209e:	83 e2       	ldi	r24, 0x23	; 35
    20a0:	eb ec       	ldi	r30, 0xCB	; 203
    20a2:	f5 e0       	ldi	r31, 0x05	; 5
    20a4:	01 90       	ld	r0, Z+
    20a6:	0d 92       	st	X+, r0
    20a8:	8a 95       	dec	r24
    20aa:	e1 f7       	brne	.-8      	; 0x20a4 <_Z8postPagec+0x1ce>

	contentLength = strlen(content);
    20ac:	f7 01       	movw	r30, r14
    20ae:	01 90       	ld	r0, Z+
    20b0:	00 20       	and	r0, r0
    20b2:	e9 f7       	brne	.-6      	; 0x20ae <_Z8postPagec+0x1d8>
    20b4:	cf 01       	movw	r24, r30
    20b6:	01 97       	sbiw	r24, 0x01	; 1

	strcpy(page,"HTTP/1.0 200 OK\r\nContent-Type: text/html; charset=UTF-8\r\nPragma: no-cache\r\nContent-Length: ");
    20b8:	2c e5       	ldi	r18, 0x5C	; 92
    20ba:	ee ee       	ldi	r30, 0xEE	; 238
    20bc:	f5 e0       	ldi	r31, 0x05	; 5
    20be:	8e 01       	movw	r16, r28
    20c0:	0f 5f       	subi	r16, 0xFF	; 255
    20c2:	1f 4f       	sbci	r17, 0xFF	; 255
    20c4:	d8 01       	movw	r26, r16
    20c6:	01 90       	ld	r0, Z+
    20c8:	0d 92       	st	X+, r0
    20ca:	2a 95       	dec	r18
    20cc:	e1 f7       	brne	.-8      	; 0x20c6 <_Z8postPagec+0x1f0>
    20ce:	4a e0       	ldi	r20, 0x0A	; 10
    20d0:	be 01       	movw	r22, r28
    20d2:	65 5c       	subi	r22, 0xC5	; 197
    20d4:	78 4f       	sbci	r23, 0xF8	; 248
    20d6:	8e 19       	sub	r24, r14
    20d8:	9f 09       	sbc	r25, r15
    20da:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <__itoa_ncheck>
	strcat(page,itoa(contentLength,converter,10));
    20de:	bc 01       	movw	r22, r24
    20e0:	c8 01       	movw	r24, r16
    20e2:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
	strcat(page,"\r\nConnection: close\r\n\r\n");
    20e6:	d8 01       	movw	r26, r16
    20e8:	0d 90       	ld	r0, X+
    20ea:	00 20       	and	r0, r0
    20ec:	e9 f7       	brne	.-6      	; 0x20e8 <_Z8postPagec+0x212>
    20ee:	11 97       	sbiw	r26, 0x01	; 1
    20f0:	88 e1       	ldi	r24, 0x18	; 24
    20f2:	ea e4       	ldi	r30, 0x4A	; 74
    20f4:	f6 e0       	ldi	r31, 0x06	; 6
    20f6:	01 90       	ld	r0, Z+
    20f8:	0d 92       	st	X+, r0
    20fa:	8a 95       	dec	r24
    20fc:	e1 f7       	brne	.-8      	; 0x20f6 <_Z8postPagec+0x220>
	strcat(page,content);
    20fe:	b7 01       	movw	r22, r14
    2100:	c8 01       	movw	r24, r16
    2102:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
	
	if (__network_data.ap_connection[0] != 9){
    2106:	80 91 bf 0a 	lds	r24, 0x0ABF	; 0x800abf <__network_data+0xaf>
    210a:	89 30       	cpi	r24, 0x09	; 9
    210c:	41 f0       	breq	.+16     	; 0x211e <_Z8postPagec+0x248>
		sendToAP(page, __network_data.ap_connection);
    210e:	6f eb       	ldi	r22, 0xBF	; 191
    2110:	7a e0       	ldi	r23, 0x0A	; 10
    2112:	c8 01       	movw	r24, r16
    2114:	14 da       	rcall	.-3032   	; 0x153e <_Z8sendToAPPcS_>
		//readUntil("OK",3);
		delay(1000);
    2116:	88 ee       	ldi	r24, 0xE8	; 232
    2118:	93 e0       	ldi	r25, 0x03	; 3
    211a:	0e 94 9c 1a 	call	0x3538	; 0x3538 <_Z5delayi>
	}
	
	clearReadLine();
    211e:	0e 94 6f 1c 	call	0x38de	; 0x38de <_Z13clearReadLinev>
	__system_time.connection_timer_buffer = 0;
    2122:	ec ee       	ldi	r30, 0xEC	; 236
    2124:	f9 e0       	ldi	r31, 0x09	; 9
    2126:	13 8a       	std	Z+19, r1	; 0x13
    2128:	12 8a       	std	Z+18, r1	; 0x12
	__system_time.connection_timer = 180;
    212a:	84 eb       	ldi	r24, 0xB4	; 180
    212c:	90 e0       	ldi	r25, 0x00	; 0
    212e:	91 8b       	std	Z+17, r25	; 0x11
    2130:	80 8b       	std	Z+16, r24	; 0x10
}
    2132:	c1 5c       	subi	r28, 0xC1	; 193
    2134:	d8 4f       	sbci	r29, 0xF8	; 248
    2136:	0f b6       	in	r0, 0x3f	; 63
    2138:	f8 94       	cli
    213a:	de bf       	out	0x3e, r29	; 62
    213c:	0f be       	out	0x3f, r0	; 63
    213e:	cd bf       	out	0x3d, r28	; 61
    2140:	df 91       	pop	r29
    2142:	cf 91       	pop	r28
    2144:	1f 91       	pop	r17
    2146:	0f 91       	pop	r16
    2148:	ff 90       	pop	r15
    214a:	ef 90       	pop	r14
    214c:	08 95       	ret

0000214e <_Z19ConfigurationThreadv>:

void ConfigurationThread(){
    214e:	8f 92       	push	r8
    2150:	9f 92       	push	r9
    2152:	af 92       	push	r10
    2154:	bf 92       	push	r11
    2156:	cf 92       	push	r12
    2158:	df 92       	push	r13
    215a:	ef 92       	push	r14
    215c:	ff 92       	push	r15
    215e:	0f 93       	push	r16
    2160:	1f 93       	push	r17
    2162:	cf 93       	push	r28
    2164:	df 93       	push	r29
    2166:	cd b7       	in	r28, 0x3d	; 61
    2168:	de b7       	in	r29, 0x3e	; 62
    216a:	ce 52       	subi	r28, 0x2E	; 46
    216c:	d1 40       	sbci	r29, 0x01	; 1
    216e:	0f b6       	in	r0, 0x3f	; 63
    2170:	f8 94       	cli
    2172:	de bf       	out	0x3e, r29	; 62
    2174:	0f be       	out	0x3f, r0	; 63
    2176:	cd bf       	out	0x3d, r28	; 61
	
	
	if (strstr(__network_data.esp_buffer,"UPDATE_CONFIG") != 0){
    2178:	62 e6       	ldi	r22, 0x62	; 98
    217a:	76 e0       	ldi	r23, 0x06	; 6
    217c:	84 ec       	ldi	r24, 0xC4	; 196
    217e:	9a e0       	ldi	r25, 0x0A	; 10
    2180:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    2184:	00 97       	sbiw	r24, 0x00	; 0
    2186:	09 f4       	brne	.+2      	; 0x218a <_Z19ConfigurationThreadv+0x3c>
    2188:	6b c0       	rjmp	.+214    	; 0x2260 <_Z19ConfigurationThreadv+0x112>
		char *p1,*p2,*svptr_1,*svptr_2;
		p1 = strstr(__network_data.esp_buffer,"UPDATE_CONFIG");

		p2 = strtok_r(p1,";",&svptr_1);
    218a:	ae 01       	movw	r20, r28
    218c:	43 5d       	subi	r20, 0xD3	; 211
    218e:	5e 4f       	sbci	r21, 0xFE	; 254
    2190:	6a eb       	ldi	r22, 0xBA	; 186
    2192:	73 e0       	ldi	r23, 0x03	; 3
    2194:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
		while (p2 != 0){
    2198:	00 97       	sbiw	r24, 0x00	; 0
    219a:	09 f4       	brne	.+2      	; 0x219e <_Z19ConfigurationThreadv+0x50>
    219c:	54 c0       	rjmp	.+168    	; 0x2246 <_Z19ConfigurationThreadv+0xf8>
			char *p3 = strtok_r(p2,":",&svptr_2);
    219e:	ae 01       	movw	r20, r28
    21a0:	4f 5f       	subi	r20, 0xFF	; 255
    21a2:	5f 4f       	sbci	r21, 0xFF	; 255
    21a4:	6c e8       	ldi	r22, 0x8C	; 140
    21a6:	76 e0       	ldi	r23, 0x06	; 6
    21a8:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
    21ac:	8c 01       	movw	r16, r24
			if (strstr(p3,"SSID") != 0){
    21ae:	63 e6       	ldi	r22, 0x63	; 99
    21b0:	71 e0       	ldi	r23, 0x01	; 1
    21b2:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    21b6:	89 2b       	or	r24, r25
    21b8:	79 f0       	breq	.+30     	; 0x21d8 <_Z19ConfigurationThreadv+0x8a>
				p3 = strtok_r(0,":",&svptr_2);
    21ba:	ae 01       	movw	r20, r28
    21bc:	4f 5f       	subi	r20, 0xFF	; 255
    21be:	5f 4f       	sbci	r21, 0xFF	; 255
    21c0:	6c e8       	ldi	r22, 0x8C	; 140
    21c2:	76 e0       	ldi	r23, 0x06	; 6
    21c4:	80 e0       	ldi	r24, 0x00	; 0
    21c6:	90 e0       	ldi	r25, 0x00	; 0
    21c8:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
				strcpy(__network_data.ssid,p3);
    21cc:	bc 01       	movw	r22, r24
    21ce:	89 e7       	ldi	r24, 0x79	; 121
    21d0:	9a e0       	ldi	r25, 0x0A	; 10
    21d2:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <strcpy>
    21d6:	2b c0       	rjmp	.+86     	; 0x222e <_Z19ConfigurationThreadv+0xe0>
				} else if (strstr(p3,"PASSWORD") != 0){
    21d8:	60 e7       	ldi	r22, 0x70	; 112
    21da:	76 e0       	ldi	r23, 0x06	; 6
    21dc:	c8 01       	movw	r24, r16
    21de:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    21e2:	89 2b       	or	r24, r25
    21e4:	79 f0       	breq	.+30     	; 0x2204 <_Z19ConfigurationThreadv+0xb6>
				p3 = strtok_r(0,":",&svptr_2);
    21e6:	ae 01       	movw	r20, r28
    21e8:	4f 5f       	subi	r20, 0xFF	; 255
    21ea:	5f 4f       	sbci	r21, 0xFF	; 255
    21ec:	6c e8       	ldi	r22, 0x8C	; 140
    21ee:	76 e0       	ldi	r23, 0x06	; 6
    21f0:	80 e0       	ldi	r24, 0x00	; 0
    21f2:	90 e0       	ldi	r25, 0x00	; 0
    21f4:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
				strcpy(__network_data.password,p3);
    21f8:	bc 01       	movw	r22, r24
    21fa:	87 e9       	ldi	r24, 0x97	; 151
    21fc:	9a e0       	ldi	r25, 0x0A	; 10
    21fe:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <strcpy>
    2202:	15 c0       	rjmp	.+42     	; 0x222e <_Z19ConfigurationThreadv+0xe0>
				} else if (strstr(p3,"APN") != 0){
    2204:	6c e6       	ldi	r22, 0x6C	; 108
    2206:	71 e0       	ldi	r23, 0x01	; 1
    2208:	c8 01       	movw	r24, r16
    220a:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    220e:	89 2b       	or	r24, r25
    2210:	71 f0       	breq	.+28     	; 0x222e <_Z19ConfigurationThreadv+0xe0>
				p3 = strtok_r(0,":",&svptr_2);
    2212:	ae 01       	movw	r20, r28
    2214:	4f 5f       	subi	r20, 0xFF	; 255
    2216:	5f 4f       	sbci	r21, 0xFF	; 255
    2218:	6c e8       	ldi	r22, 0x8C	; 140
    221a:	76 e0       	ldi	r23, 0x06	; 6
    221c:	80 e0       	ldi	r24, 0x00	; 0
    221e:	90 e0       	ldi	r25, 0x00	; 0
    2220:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
				strcpy(__network_data.apn,p3);
    2224:	bc 01       	movw	r22, r24
    2226:	85 eb       	ldi	r24, 0xB5	; 181
    2228:	9a e0       	ldi	r25, 0x0A	; 10
    222a:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <strcpy>
			}

			p2 = strtok_r(0,";",&svptr_1);
    222e:	ae 01       	movw	r20, r28
    2230:	43 5d       	subi	r20, 0xD3	; 211
    2232:	5e 4f       	sbci	r21, 0xFE	; 254
    2234:	6a eb       	ldi	r22, 0xBA	; 186
    2236:	73 e0       	ldi	r23, 0x03	; 3
    2238:	80 e0       	ldi	r24, 0x00	; 0
    223a:	90 e0       	ldi	r25, 0x00	; 0
    223c:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
	if (strstr(__network_data.esp_buffer,"UPDATE_CONFIG") != 0){
		char *p1,*p2,*svptr_1,*svptr_2;
		p1 = strstr(__network_data.esp_buffer,"UPDATE_CONFIG");

		p2 = strtok_r(p1,";",&svptr_1);
		while (p2 != 0){
    2240:	00 97       	sbiw	r24, 0x00	; 0
    2242:	09 f0       	breq	.+2      	; 0x2246 <_Z19ConfigurationThreadv+0xf8>
    2244:	ac cf       	rjmp	.-168    	; 0x219e <_Z19ConfigurationThreadv+0x50>
			}

			p2 = strtok_r(0,";",&svptr_1);

		}
		saveUserData();
    2246:	dc dd       	rcall	.-1096   	; 0x1e00 <_Z12saveUserDatav>
		__system_time.connection_timer_buffer = 0;
    2248:	ec ee       	ldi	r30, 0xEC	; 236
    224a:	f9 e0       	ldi	r31, 0x09	; 9
    224c:	13 8a       	std	Z+19, r1	; 0x13
    224e:	12 8a       	std	Z+18, r1	; 0x12
		__system_time.connection_timer = 0;
    2250:	11 8a       	std	Z+17, r1	; 0x11
    2252:	10 8a       	std	Z+16, r1	; 0x10
		__network_data.is_server_connected = false;
    2254:	10 92 c3 0a 	sts	0x0AC3, r1	; 0x800ac3 <__network_data+0xb3>
		__network_data.is_esp_connected = false;
    2258:	10 92 c1 0a 	sts	0x0AC1, r1	; 0x800ac1 <__network_data+0xb1>
		clearReadLine();
    225c:	0e 94 6f 1c 	call	0x38de	; 0x38de <_Z13clearReadLinev>
	}
	
	if (strstr(__network_data.esp_buffer, "REQUEST_CONFIG") != 0 ){
    2260:	69 e7       	ldi	r22, 0x79	; 121
    2262:	76 e0       	ldi	r23, 0x06	; 6
    2264:	84 ec       	ldi	r24, 0xC4	; 196
    2266:	9a e0       	ldi	r25, 0x0A	; 10
    2268:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    226c:	89 2b       	or	r24, r25
    226e:	09 f4       	brne	.+2      	; 0x2272 <_Z19ConfigurationThreadv+0x124>
    2270:	5b c0       	rjmp	.+182    	; 0x2328 <_Z19ConfigurationThreadv+0x1da>
		char configuration[300];
		__network_data.ap_connection[0] = 9;
    2272:	89 e0       	ldi	r24, 0x09	; 9
    2274:	80 93 bf 0a 	sts	0x0ABF, r24	; 0x800abf <__network_data+0xaf>
		
		if (strstr(__network_data.esp_buffer,"IPD,") != 0){
    2278:	6a ec       	ldi	r22, 0xCA	; 202
    227a:	73 e0       	ldi	r23, 0x03	; 3
    227c:	84 ec       	ldi	r24, 0xC4	; 196
    227e:	9a e0       	ldi	r25, 0x0A	; 10
    2280:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    2284:	00 97       	sbiw	r24, 0x00	; 0
    2286:	39 f0       	breq	.+14     	; 0x2296 <_Z19ConfigurationThreadv+0x148>
			char *p = strstr(__network_data.esp_buffer,"IPD,");
			__network_data.ap_connection[0] = *(p+4);
    2288:	dc 01       	movw	r26, r24
    228a:	14 96       	adiw	r26, 0x04	; 4
    228c:	8c 91       	ld	r24, X
    228e:	80 93 bf 0a 	sts	0x0ABF, r24	; 0x800abf <__network_data+0xaf>
			__network_data.ap_connection[1] = '\0';
    2292:	10 92 c0 0a 	sts	0x0AC0, r1	; 0x800ac0 <__network_data+0xb0>
		}
		strcpy(configuration,"SSID:");
    2296:	86 e0       	ldi	r24, 0x06	; 6
    2298:	e8 e8       	ldi	r30, 0x88	; 136
    229a:	f6 e0       	ldi	r31, 0x06	; 6
    229c:	8e 01       	movw	r16, r28
    229e:	0f 5f       	subi	r16, 0xFF	; 255
    22a0:	1f 4f       	sbci	r17, 0xFF	; 255
    22a2:	d8 01       	movw	r26, r16
    22a4:	01 90       	ld	r0, Z+
    22a6:	0d 92       	st	X+, r0
    22a8:	8a 95       	dec	r24
    22aa:	e1 f7       	brne	.-8      	; 0x22a4 <_Z19ConfigurationThreadv+0x156>
		strcat(configuration,__network_data.ssid);
    22ac:	69 e7       	ldi	r22, 0x79	; 121
    22ae:	7a e0       	ldi	r23, 0x0A	; 10
    22b0:	c8 01       	movw	r24, r16
    22b2:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
		strcat(configuration,";PASSWORD:");
    22b6:	d8 01       	movw	r26, r16
    22b8:	0d 90       	ld	r0, X+
    22ba:	00 20       	and	r0, r0
    22bc:	e9 f7       	brne	.-6      	; 0x22b8 <_Z19ConfigurationThreadv+0x16a>
    22be:	11 97       	sbiw	r26, 0x01	; 1
    22c0:	8b e0       	ldi	r24, 0x0B	; 11
    22c2:	ee e8       	ldi	r30, 0x8E	; 142
    22c4:	f6 e0       	ldi	r31, 0x06	; 6
    22c6:	01 90       	ld	r0, Z+
    22c8:	0d 92       	st	X+, r0
    22ca:	8a 95       	dec	r24
    22cc:	e1 f7       	brne	.-8      	; 0x22c6 <_Z19ConfigurationThreadv+0x178>
		strcat(configuration,__network_data.password);
    22ce:	67 e9       	ldi	r22, 0x97	; 151
    22d0:	7a e0       	ldi	r23, 0x0A	; 10
    22d2:	c8 01       	movw	r24, r16
    22d4:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
		strcat(configuration,";APN:");
    22d8:	d8 01       	movw	r26, r16
    22da:	0d 90       	ld	r0, X+
    22dc:	00 20       	and	r0, r0
    22de:	e9 f7       	brne	.-6      	; 0x22da <_Z19ConfigurationThreadv+0x18c>
    22e0:	11 97       	sbiw	r26, 0x01	; 1
    22e2:	86 e0       	ldi	r24, 0x06	; 6
    22e4:	e9 e9       	ldi	r30, 0x99	; 153
    22e6:	f6 e0       	ldi	r31, 0x06	; 6
    22e8:	01 90       	ld	r0, Z+
    22ea:	0d 92       	st	X+, r0
    22ec:	8a 95       	dec	r24
    22ee:	e1 f7       	brne	.-8      	; 0x22e8 <_Z19ConfigurationThreadv+0x19a>
		strcat(configuration,__network_data.apn);
    22f0:	65 eb       	ldi	r22, 0xB5	; 181
    22f2:	7a e0       	ldi	r23, 0x0A	; 10
    22f4:	c8 01       	movw	r24, r16
    22f6:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
		strcat(configuration,"\n\0");
    22fa:	f8 01       	movw	r30, r16
    22fc:	01 90       	ld	r0, Z+
    22fe:	00 20       	and	r0, r0
    2300:	e9 f7       	brne	.-6      	; 0x22fc <_Z19ConfigurationThreadv+0x1ae>
    2302:	31 97       	sbiw	r30, 0x01	; 1
    2304:	8a e0       	ldi	r24, 0x0A	; 10
    2306:	90 e0       	ldi	r25, 0x00	; 0
    2308:	91 83       	std	Z+1, r25	; 0x01
    230a:	80 83       	st	Z, r24
		
		delay(300);
    230c:	8c e2       	ldi	r24, 0x2C	; 44
    230e:	91 e0       	ldi	r25, 0x01	; 1
    2310:	0e 94 9c 1a 	call	0x3538	; 0x3538 <_Z5delayi>
		sendToAP(configuration, __network_data.ap_connection);
    2314:	6f eb       	ldi	r22, 0xBF	; 191
    2316:	7a e0       	ldi	r23, 0x0A	; 10
    2318:	c8 01       	movw	r24, r16
    231a:	11 d9       	rcall	.-3550   	; 0x153e <_Z8sendToAPPcS_>
		delay(300);
    231c:	8c e2       	ldi	r24, 0x2C	; 44
    231e:	91 e0       	ldi	r25, 0x01	; 1
    2320:	0e 94 9c 1a 	call	0x3538	; 0x3538 <_Z5delayi>
		
		
		clearReadLine();
    2324:	0e 94 6f 1c 	call	0x38de	; 0x38de <_Z13clearReadLinev>
	}

	if (strstr(__network_data.esp_buffer, "GET / HTTP/") != 0){
    2328:	6f e9       	ldi	r22, 0x9F	; 159
    232a:	76 e0       	ldi	r23, 0x06	; 6
    232c:	84 ec       	ldi	r24, 0xC4	; 196
    232e:	9a e0       	ldi	r25, 0x0A	; 10
    2330:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    2334:	89 2b       	or	r24, r25
    2336:	11 f0       	breq	.+4      	; 0x233c <_Z19ConfigurationThreadv+0x1ee>
		postPage(0);
    2338:	80 e0       	ldi	r24, 0x00	; 0
    233a:	cd dd       	rcall	.-1126   	; 0x1ed6 <_Z8postPagec>
	}
	
	if (strstr(__network_data.esp_buffer, "POST / HTTP/") != 0 ){
    233c:	6b ea       	ldi	r22, 0xAB	; 171
    233e:	76 e0       	ldi	r23, 0x06	; 6
    2340:	84 ec       	ldi	r24, 0xC4	; 196
    2342:	9a e0       	ldi	r25, 0x0A	; 10
    2344:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    2348:	89 2b       	or	r24, r25
    234a:	09 f4       	brne	.+2      	; 0x234e <_Z19ConfigurationThreadv+0x200>
    234c:	13 c1       	rjmp	.+550    	; 0x2574 <_Z19ConfigurationThreadv+0x426>
		int timeout=0;
		int flag = 0;
		
		__network_data.ap_connection[0] = 9;
    234e:	89 e0       	ldi	r24, 0x09	; 9
    2350:	80 93 bf 0a 	sts	0x0ABF, r24	; 0x800abf <__network_data+0xaf>
		
		if (strstr(__network_data.esp_buffer,"IPD,") != 0){
    2354:	6a ec       	ldi	r22, 0xCA	; 202
    2356:	73 e0       	ldi	r23, 0x03	; 3
    2358:	84 ec       	ldi	r24, 0xC4	; 196
    235a:	9a e0       	ldi	r25, 0x0A	; 10
    235c:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    2360:	00 97       	sbiw	r24, 0x00	; 0
    2362:	31 f0       	breq	.+12     	; 0x2370 <_Z19ConfigurationThreadv+0x222>
			char *p = strstr(__network_data.esp_buffer,"IPD,");
			__network_data.ap_connection[0] = *(p+4);
    2364:	fc 01       	movw	r30, r24
    2366:	84 81       	ldd	r24, Z+4	; 0x04
    2368:	80 93 bf 0a 	sts	0x0ABF, r24	; 0x800abf <__network_data+0xaf>
			__network_data.ap_connection[1] = '\0';
    236c:	10 92 c0 0a 	sts	0x0AC0, r1	; 0x800ac0 <__network_data+0xb0>
		}

		delay(500);
    2370:	84 ef       	ldi	r24, 0xF4	; 244
    2372:	91 e0       	ldi	r25, 0x01	; 1
    2374:	0e 94 9c 1a 	call	0x3538	; 0x3538 <_Z5delayi>
		if (strstr(__network_data.esp_buffer,"ssid") != 0){
    2378:	68 eb       	ldi	r22, 0xB8	; 184
    237a:	76 e0       	ldi	r23, 0x06	; 6
    237c:	84 ec       	ldi	r24, 0xC4	; 196
    237e:	9a e0       	ldi	r25, 0x0A	; 10
    2380:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    2384:	8c 01       	movw	r16, r24
    2386:	89 2b       	or	r24, r25
    2388:	89 f1       	breq	.+98     	; 0x23ec <_Z19ConfigurationThreadv+0x29e>
			int pos=0;
			char *p1 = strstr(__network_data.esp_buffer,"ssid");
			p1+=5;
			memset(__network_data.ssid,' ',sizeof(__network_data.ssid)-1);
    238a:	4d e1       	ldi	r20, 0x1D	; 29
    238c:	50 e0       	ldi	r21, 0x00	; 0
    238e:	60 e2       	ldi	r22, 0x20	; 32
    2390:	70 e0       	ldi	r23, 0x00	; 0
    2392:	89 e7       	ldi	r24, 0x79	; 121
    2394:	9a e0       	ldi	r25, 0x0A	; 10
    2396:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <memset>
			while (1){
				if (pos == sizeof(__network_data.ssid))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
    239a:	d8 01       	movw	r26, r16
    239c:	15 96       	adiw	r26, 0x05	; 5
    239e:	8c 91       	ld	r24, X
    23a0:	86 32       	cpi	r24, 0x26	; 38
    23a2:	a1 f0       	breq	.+40     	; 0x23cc <_Z19ConfigurationThreadv+0x27e>
    23a4:	8d 30       	cpi	r24, 0x0D	; 13
    23a6:	a9 f0       	breq	.+42     	; 0x23d2 <_Z19ConfigurationThreadv+0x284>
    23a8:	8a 30       	cpi	r24, 0x0A	; 10
    23aa:	09 f0       	breq	.+2      	; 0x23ae <_Z19ConfigurationThreadv+0x260>
    23ac:	da c0       	rjmp	.+436    	; 0x2562 <_Z19ConfigurationThreadv+0x414>
    23ae:	14 c0       	rjmp	.+40     	; 0x23d8 <_Z19ConfigurationThreadv+0x28a>
    23b0:	91 91       	ld	r25, Z+
    23b2:	96 32       	cpi	r25, 0x26	; 38
    23b4:	99 f0       	breq	.+38     	; 0x23dc <_Z19ConfigurationThreadv+0x28e>
    23b6:	9d 30       	cpi	r25, 0x0D	; 13
    23b8:	89 f0       	breq	.+34     	; 0x23dc <_Z19ConfigurationThreadv+0x28e>
    23ba:	9a 30       	cpi	r25, 0x0A	; 10
    23bc:	79 f0       	breq	.+30     	; 0x23dc <_Z19ConfigurationThreadv+0x28e>
				__network_data.ssid[pos++] = *p1++;
    23be:	2f 5f       	subi	r18, 0xFF	; 255
    23c0:	3f 4f       	sbci	r19, 0xFF	; 255
    23c2:	9d 93       	st	X+, r25
			int pos=0;
			char *p1 = strstr(__network_data.esp_buffer,"ssid");
			p1+=5;
			memset(__network_data.ssid,' ',sizeof(__network_data.ssid)-1);
			while (1){
				if (pos == sizeof(__network_data.ssid))break;
    23c4:	2e 31       	cpi	r18, 0x1E	; 30
    23c6:	31 05       	cpc	r19, r1
    23c8:	99 f7       	brne	.-26     	; 0x23b0 <_Z19ConfigurationThreadv+0x262>
    23ca:	08 c0       	rjmp	.+16     	; 0x23dc <_Z19ConfigurationThreadv+0x28e>
			__network_data.ap_connection[1] = '\0';
		}

		delay(500);
		if (strstr(__network_data.esp_buffer,"ssid") != 0){
			int pos=0;
    23cc:	20 e0       	ldi	r18, 0x00	; 0
    23ce:	30 e0       	ldi	r19, 0x00	; 0
    23d0:	05 c0       	rjmp	.+10     	; 0x23dc <_Z19ConfigurationThreadv+0x28e>
    23d2:	20 e0       	ldi	r18, 0x00	; 0
    23d4:	30 e0       	ldi	r19, 0x00	; 0
    23d6:	02 c0       	rjmp	.+4      	; 0x23dc <_Z19ConfigurationThreadv+0x28e>
    23d8:	20 e0       	ldi	r18, 0x00	; 0
    23da:	30 e0       	ldi	r19, 0x00	; 0
			while (1){
				if (pos == sizeof(__network_data.ssid))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
				__network_data.ssid[pos++] = *p1++;
			}
			__network_data.ssid[pos] = '\0';
    23dc:	f9 01       	movw	r30, r18
    23de:	e7 58       	subi	r30, 0x87	; 135
    23e0:	f5 4f       	sbci	r31, 0xF5	; 245
    23e2:	10 82       	st	Z, r1
			flag++;
    23e4:	ee 24       	eor	r14, r14
    23e6:	e3 94       	inc	r14
    23e8:	f1 2c       	mov	r15, r1
    23ea:	02 c0       	rjmp	.+4      	; 0x23f0 <_Z19ConfigurationThreadv+0x2a2>
		postPage(0);
	}
	
	if (strstr(__network_data.esp_buffer, "POST / HTTP/") != 0 ){
		int timeout=0;
		int flag = 0;
    23ec:	e1 2c       	mov	r14, r1
    23ee:	f1 2c       	mov	r15, r1
				__network_data.ssid[pos++] = *p1++;
			}
			__network_data.ssid[pos] = '\0';
			flag++;
		}
		if (strstr(__network_data.esp_buffer,"password") != 0){
    23f0:	6d eb       	ldi	r22, 0xBD	; 189
    23f2:	76 e0       	ldi	r23, 0x06	; 6
    23f4:	84 ec       	ldi	r24, 0xC4	; 196
    23f6:	9a e0       	ldi	r25, 0x0A	; 10
    23f8:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    23fc:	8c 01       	movw	r16, r24
    23fe:	89 2b       	or	r24, r25
    2400:	79 f1       	breq	.+94     	; 0x2460 <_Z19ConfigurationThreadv+0x312>
			int pos=0;
			char *p1 = strstr(__network_data.esp_buffer,"password");
			p1+=9;
			memset(__network_data.password,' ',sizeof(__network_data.password)-1);
    2402:	4d e1       	ldi	r20, 0x1D	; 29
    2404:	50 e0       	ldi	r21, 0x00	; 0
    2406:	60 e2       	ldi	r22, 0x20	; 32
    2408:	70 e0       	ldi	r23, 0x00	; 0
    240a:	87 e9       	ldi	r24, 0x97	; 151
    240c:	9a e0       	ldi	r25, 0x0A	; 10
    240e:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <memset>
			while (1){
				if (pos == sizeof(__network_data.password))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
    2412:	f8 01       	movw	r30, r16
    2414:	81 85       	ldd	r24, Z+9	; 0x09
    2416:	86 32       	cpi	r24, 0x26	; 38
    2418:	a1 f0       	breq	.+40     	; 0x2442 <_Z19ConfigurationThreadv+0x2f4>
    241a:	8d 30       	cpi	r24, 0x0D	; 13
    241c:	a9 f0       	breq	.+42     	; 0x2448 <_Z19ConfigurationThreadv+0x2fa>
    241e:	8a 30       	cpi	r24, 0x0A	; 10
    2420:	09 f0       	breq	.+2      	; 0x2424 <_Z19ConfigurationThreadv+0x2d6>
    2422:	96 c0       	rjmp	.+300    	; 0x2550 <_Z19ConfigurationThreadv+0x402>
    2424:	14 c0       	rjmp	.+40     	; 0x244e <_Z19ConfigurationThreadv+0x300>
    2426:	91 91       	ld	r25, Z+
    2428:	96 32       	cpi	r25, 0x26	; 38
    242a:	99 f0       	breq	.+38     	; 0x2452 <_Z19ConfigurationThreadv+0x304>
    242c:	9d 30       	cpi	r25, 0x0D	; 13
    242e:	89 f0       	breq	.+34     	; 0x2452 <_Z19ConfigurationThreadv+0x304>
    2430:	9a 30       	cpi	r25, 0x0A	; 10
    2432:	79 f0       	breq	.+30     	; 0x2452 <_Z19ConfigurationThreadv+0x304>
				__network_data.password[pos++] = *p1++;
    2434:	2f 5f       	subi	r18, 0xFF	; 255
    2436:	3f 4f       	sbci	r19, 0xFF	; 255
    2438:	9d 93       	st	X+, r25
			int pos=0;
			char *p1 = strstr(__network_data.esp_buffer,"password");
			p1+=9;
			memset(__network_data.password,' ',sizeof(__network_data.password)-1);
			while (1){
				if (pos == sizeof(__network_data.password))break;
    243a:	2e 31       	cpi	r18, 0x1E	; 30
    243c:	31 05       	cpc	r19, r1
    243e:	99 f7       	brne	.-26     	; 0x2426 <_Z19ConfigurationThreadv+0x2d8>
    2440:	08 c0       	rjmp	.+16     	; 0x2452 <_Z19ConfigurationThreadv+0x304>
			}
			__network_data.ssid[pos] = '\0';
			flag++;
		}
		if (strstr(__network_data.esp_buffer,"password") != 0){
			int pos=0;
    2442:	20 e0       	ldi	r18, 0x00	; 0
    2444:	30 e0       	ldi	r19, 0x00	; 0
    2446:	05 c0       	rjmp	.+10     	; 0x2452 <_Z19ConfigurationThreadv+0x304>
    2448:	20 e0       	ldi	r18, 0x00	; 0
    244a:	30 e0       	ldi	r19, 0x00	; 0
    244c:	02 c0       	rjmp	.+4      	; 0x2452 <_Z19ConfigurationThreadv+0x304>
    244e:	20 e0       	ldi	r18, 0x00	; 0
    2450:	30 e0       	ldi	r19, 0x00	; 0
			while (1){
				if (pos == sizeof(__network_data.password))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
				__network_data.password[pos++] = *p1++;
			}
			__network_data.password[pos] = '\0';
    2452:	f9 01       	movw	r30, r18
    2454:	e9 56       	subi	r30, 0x69	; 105
    2456:	f5 4f       	sbci	r31, 0xF5	; 245
    2458:	10 82       	st	Z, r1
			flag++;
    245a:	ff ef       	ldi	r31, 0xFF	; 255
    245c:	ef 1a       	sub	r14, r31
    245e:	ff 0a       	sbc	r15, r31
		}
		__network_data.apn[pos] = '\0';
		flag++;
		}*/
		
		if (strstr(__network_data.esp_buffer,"apn") != 0){
    2460:	66 ec       	ldi	r22, 0xC6	; 198
    2462:	76 e0       	ldi	r23, 0x06	; 6
    2464:	84 ec       	ldi	r24, 0xC4	; 196
    2466:	9a e0       	ldi	r25, 0x0A	; 10
    2468:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    246c:	00 97       	sbiw	r24, 0x00	; 0
    246e:	09 f4       	brne	.+2      	; 0x2472 <_Z19ConfigurationThreadv+0x324>
    2470:	47 c0       	rjmp	.+142    	; 0x2500 <_Z19ConfigurationThreadv+0x3b2>
			int pos=0;
			char *p1 = strstr(__network_data.esp_buffer,"apn");
			p1+=4;
			memset(__network_data.apn,0,sizeof(__network_data.apn)-1);
    2472:	29 e0       	ldi	r18, 0x09	; 9
    2474:	e5 eb       	ldi	r30, 0xB5	; 181
    2476:	fa e0       	ldi	r31, 0x0A	; 10
    2478:	df 01       	movw	r26, r30
    247a:	1d 92       	st	X+, r1
    247c:	2a 95       	dec	r18
    247e:	e9 f7       	brne	.-6      	; 0x247a <_Z19ConfigurationThreadv+0x32c>
			while (1){
				if (pos == sizeof(__network_data.apn))break;
				if (*p1 == '\r' || *p1 == '\n') break;
    2480:	fc 01       	movw	r30, r24
    2482:	14 81       	ldd	r17, Z+4	; 0x04
    2484:	1d 30       	cpi	r17, 0x0D	; 13
    2486:	81 f1       	breq	.+96     	; 0x24e8 <_Z19ConfigurationThreadv+0x39a>
    2488:	1a 30       	cpi	r17, 0x0A	; 10
    248a:	89 f1       	breq	.+98     	; 0x24ee <_Z19ConfigurationThreadv+0x3a0>
    248c:	5c 01       	movw	r10, r24
    248e:	f5 e0       	ldi	r31, 0x05	; 5
    2490:	af 0e       	add	r10, r31
    2492:	b1 1c       	adc	r11, r1
    2494:	0f 2e       	mov	r0, r31
    2496:	f5 eb       	ldi	r31, 0xB5	; 181
    2498:	8f 2e       	mov	r8, r31
    249a:	fa e0       	ldi	r31, 0x0A	; 10
    249c:	9f 2e       	mov	r9, r31
    249e:	f0 2d       	mov	r31, r0
    24a0:	c1 2c       	mov	r12, r1
    24a2:	d1 2c       	mov	r13, r1
    24a4:	07 c0       	rjmp	.+14     	; 0x24b4 <_Z19ConfigurationThreadv+0x366>
    24a6:	d5 01       	movw	r26, r10
    24a8:	1d 91       	ld	r17, X+
    24aa:	5d 01       	movw	r10, r26
    24ac:	1d 30       	cpi	r17, 0x0D	; 13
    24ae:	09 f1       	breq	.+66     	; 0x24f2 <_Z19ConfigurationThreadv+0x3a4>
    24b0:	1a 30       	cpi	r17, 0x0A	; 10
    24b2:	f9 f0       	breq	.+62     	; 0x24f2 <_Z19ConfigurationThreadv+0x3a4>
				if (!isalpha(*p1) && !isdigit(*p1) && *p1 != '.' && *p1 != '-') break;
    24b4:	81 2f       	mov	r24, r17
    24b6:	90 e0       	ldi	r25, 0x00	; 0
    24b8:	0e 94 39 1f 	call	0x3e72	; 0x3e72 <isalpha>
    24bc:	89 2b       	or	r24, r25
    24be:	49 f4       	brne	.+18     	; 0x24d2 <_Z19ConfigurationThreadv+0x384>
    24c0:	81 2f       	mov	r24, r17
    24c2:	90 e0       	ldi	r25, 0x00	; 0
    24c4:	c0 97       	sbiw	r24, 0x30	; 48
    24c6:	0a 97       	sbiw	r24, 0x0a	; 10
    24c8:	20 f0       	brcs	.+8      	; 0x24d2 <_Z19ConfigurationThreadv+0x384>
    24ca:	83 ed       	ldi	r24, 0xD3	; 211
    24cc:	81 0f       	add	r24, r17
    24ce:	82 30       	cpi	r24, 0x02	; 2
    24d0:	80 f4       	brcc	.+32     	; 0x24f2 <_Z19ConfigurationThreadv+0x3a4>
				__network_data.apn[pos++] = *p1++;
    24d2:	bf ef       	ldi	r27, 0xFF	; 255
    24d4:	cb 1a       	sub	r12, r27
    24d6:	db 0a       	sbc	r13, r27
    24d8:	f4 01       	movw	r30, r8
    24da:	11 93       	st	Z+, r17
    24dc:	4f 01       	movw	r8, r30
			int pos=0;
			char *p1 = strstr(__network_data.esp_buffer,"apn");
			p1+=4;
			memset(__network_data.apn,0,sizeof(__network_data.apn)-1);
			while (1){
				if (pos == sizeof(__network_data.apn))break;
    24de:	fa e0       	ldi	r31, 0x0A	; 10
    24e0:	cf 16       	cp	r12, r31
    24e2:	d1 04       	cpc	r13, r1
    24e4:	01 f7       	brne	.-64     	; 0x24a6 <_Z19ConfigurationThreadv+0x358>
    24e6:	05 c0       	rjmp	.+10     	; 0x24f2 <_Z19ConfigurationThreadv+0x3a4>
		__network_data.apn[pos] = '\0';
		flag++;
		}*/
		
		if (strstr(__network_data.esp_buffer,"apn") != 0){
			int pos=0;
    24e8:	c1 2c       	mov	r12, r1
    24ea:	d1 2c       	mov	r13, r1
    24ec:	02 c0       	rjmp	.+4      	; 0x24f2 <_Z19ConfigurationThreadv+0x3a4>
    24ee:	c1 2c       	mov	r12, r1
    24f0:	d1 2c       	mov	r13, r1
				if (pos == sizeof(__network_data.apn))break;
				if (*p1 == '\r' || *p1 == '\n') break;
				if (!isalpha(*p1) && !isdigit(*p1) && *p1 != '.' && *p1 != '-') break;
				__network_data.apn[pos++] = *p1++;
			}
			__network_data.apn[pos] = '\0';
    24f2:	f6 01       	movw	r30, r12
    24f4:	eb 54       	subi	r30, 0x4B	; 75
    24f6:	f5 4f       	sbci	r31, 0xF5	; 245
    24f8:	10 82       	st	Z, r1
			flag++;
    24fa:	2f ef       	ldi	r18, 0xFF	; 255
    24fc:	e2 1a       	sub	r14, r18
    24fe:	f2 0a       	sbc	r15, r18
		}
		__network_data.host[pos] = '\0';
		flag++;
		}*/
		
		if (flag == 3 && __network_data.ap_connection[0] != 9){
    2500:	83 e0       	ldi	r24, 0x03	; 3
    2502:	e8 16       	cp	r14, r24
    2504:	f1 04       	cpc	r15, r1
    2506:	f1 f4       	brne	.+60     	; 0x2544 <_Z19ConfigurationThreadv+0x3f6>
    2508:	80 91 bf 0a 	lds	r24, 0x0ABF	; 0x800abf <__network_data+0xaf>
    250c:	89 30       	cpi	r24, 0x09	; 9
    250e:	d1 f0       	breq	.+52     	; 0x2544 <_Z19ConfigurationThreadv+0x3f6>
			delay(500);
    2510:	84 ef       	ldi	r24, 0xF4	; 244
    2512:	91 e0       	ldi	r25, 0x01	; 1
    2514:	0e 94 9c 1a 	call	0x3538	; 0x3538 <_Z5delayi>
			postPage(1);
    2518:	81 e0       	ldi	r24, 0x01	; 1
    251a:	dd dc       	rcall	.-1606   	; 0x1ed6 <_Z8postPagec>
			saveUserData();
    251c:	71 dc       	rcall	.-1822   	; 0x1e00 <_Z12saveUserDatav>
			__system_time.connection_timer_buffer = 0;
    251e:	ec ee       	ldi	r30, 0xEC	; 236
    2520:	f9 e0       	ldi	r31, 0x09	; 9
    2522:	13 8a       	std	Z+19, r1	; 0x13
    2524:	12 8a       	std	Z+18, r1	; 0x12
			__system_time.connection_timer = 0;
    2526:	11 8a       	std	Z+17, r1	; 0x11
    2528:	10 8a       	std	Z+16, r1	; 0x10
			__network_data.is_server_connected = false;
    252a:	10 92 c3 0a 	sts	0x0AC3, r1	; 0x800ac3 <__network_data+0xb3>
			__network_data.is_esp_connected = false;
    252e:	10 92 c1 0a 	sts	0x0AC1, r1	; 0x800ac1 <__network_data+0xb1>
			USART0_SendString("AT+CIPCLOSE=5\r\n");
    2532:	8a ec       	ldi	r24, 0xCA	; 202
    2534:	96 e0       	ldi	r25, 0x06	; 6
    2536:	c8 d7       	rcall	.+3984   	; 0x34c8 <_Z17USART0_SendStringPKc>
			setSource(ESP);
    2538:	80 91 b1 03 	lds	r24, 0x03B1	; 0x8003b1 <ESP>
    253c:	90 91 b2 03 	lds	r25, 0x03B2	; 0x8003b2 <ESP+0x1>
    2540:	0e 94 86 1b 	call	0x370c	; 0x370c <_Z9setSourcei>
		}
		delay(1000);
    2544:	88 ee       	ldi	r24, 0xE8	; 232
    2546:	93 e0       	ldi	r25, 0x03	; 3
    2548:	f7 d7       	rcall	.+4078   	; 0x3538 <_Z5delayi>
		clearReadLine();
    254a:	0e 94 6f 1c 	call	0x38de	; 0x38de <_Z13clearReadLinev>
    254e:	12 c0       	rjmp	.+36     	; 0x2574 <_Z19ConfigurationThreadv+0x426>
			p1+=9;
			memset(__network_data.password,' ',sizeof(__network_data.password)-1);
			while (1){
				if (pos == sizeof(__network_data.password))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
				__network_data.password[pos++] = *p1++;
    2550:	80 93 97 0a 	sts	0x0A97, r24	; 0x800a97 <__network_data+0x87>
    2554:	f8 01       	movw	r30, r16
    2556:	3a 96       	adiw	r30, 0x0a	; 10
    2558:	a8 e9       	ldi	r26, 0x98	; 152
    255a:	ba e0       	ldi	r27, 0x0A	; 10
    255c:	21 e0       	ldi	r18, 0x01	; 1
    255e:	30 e0       	ldi	r19, 0x00	; 0
    2560:	62 cf       	rjmp	.-316    	; 0x2426 <_Z19ConfigurationThreadv+0x2d8>
			p1+=5;
			memset(__network_data.ssid,' ',sizeof(__network_data.ssid)-1);
			while (1){
				if (pos == sizeof(__network_data.ssid))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
				__network_data.ssid[pos++] = *p1++;
    2562:	80 93 79 0a 	sts	0x0A79, r24	; 0x800a79 <__network_data+0x69>
    2566:	f8 01       	movw	r30, r16
    2568:	36 96       	adiw	r30, 0x06	; 6
    256a:	aa e7       	ldi	r26, 0x7A	; 122
    256c:	ba e0       	ldi	r27, 0x0A	; 10
    256e:	21 e0       	ldi	r18, 0x01	; 1
    2570:	30 e0       	ldi	r19, 0x00	; 0
    2572:	1e cf       	rjmp	.-452    	; 0x23b0 <_Z19ConfigurationThreadv+0x262>
		}
		delay(1000);
		clearReadLine();
	}
	
}
    2574:	c2 5d       	subi	r28, 0xD2	; 210
    2576:	de 4f       	sbci	r29, 0xFE	; 254
    2578:	0f b6       	in	r0, 0x3f	; 63
    257a:	f8 94       	cli
    257c:	de bf       	out	0x3e, r29	; 62
    257e:	0f be       	out	0x3f, r0	; 63
    2580:	cd bf       	out	0x3d, r28	; 61
    2582:	df 91       	pop	r29
    2584:	cf 91       	pop	r28
    2586:	1f 91       	pop	r17
    2588:	0f 91       	pop	r16
    258a:	ff 90       	pop	r15
    258c:	ef 90       	pop	r14
    258e:	df 90       	pop	r13
    2590:	cf 90       	pop	r12
    2592:	bf 90       	pop	r11
    2594:	af 90       	pop	r10
    2596:	9f 90       	pop	r9
    2598:	8f 90       	pop	r8
    259a:	08 95       	ret

0000259c <_Z11switchRelaycccc>:

int switchRelay(char notificationFlag, char moduleId, char relayId, char state){
    259c:	2f 92       	push	r2
    259e:	3f 92       	push	r3
    25a0:	4f 92       	push	r4
    25a2:	5f 92       	push	r5
    25a4:	6f 92       	push	r6
    25a6:	7f 92       	push	r7
    25a8:	8f 92       	push	r8
    25aa:	9f 92       	push	r9
    25ac:	af 92       	push	r10
    25ae:	bf 92       	push	r11
    25b0:	cf 92       	push	r12
    25b2:	df 92       	push	r13
    25b4:	ef 92       	push	r14
    25b6:	ff 92       	push	r15
    25b8:	0f 93       	push	r16
    25ba:	1f 93       	push	r17
    25bc:	cf 93       	push	r28
    25be:	df 93       	push	r29
    25c0:	cd b7       	in	r28, 0x3d	; 61
    25c2:	de b7       	in	r29, 0x3e	; 62
    25c4:	ad 97       	sbiw	r28, 0x2d	; 45
    25c6:	0f b6       	in	r0, 0x3f	; 63
    25c8:	f8 94       	cli
    25ca:	de bf       	out	0x3e, r29	; 62
    25cc:	0f be       	out	0x3f, r0	; 63
    25ce:	cd bf       	out	0x3d, r28	; 61
    25d0:	48 2e       	mov	r4, r24
    25d2:	74 2e       	mov	r7, r20
    25d4:	52 2e       	mov	r5, r18
	
	char r1,r2;
	int i, impulse = 0, _delay = 0;
	char conv[5], success;
	
	if (getRelaySetting(moduleId,relayId) == 1){
    25d6:	a4 2e       	mov	r10, r20
    25d8:	b1 2c       	mov	r11, r1
    25da:	e6 2e       	mov	r14, r22
    25dc:	f1 2c       	mov	r15, r1
    25de:	b5 01       	movw	r22, r10
    25e0:	c7 01       	movw	r24, r14
    25e2:	0e 94 39 02 	call	0x472	; 0x472 <_Z15getRelaySettingii>
    25e6:	01 97       	sbiw	r24, 0x01	; 1
    25e8:	39 f4       	brne	.+14     	; 0x25f8 <_Z11switchRelaycccc+0x5c>
		impulse = __relay_setting.impulse;
    25ea:	e8 ea       	ldi	r30, 0xA8	; 168
    25ec:	f9 e0       	ldi	r31, 0x09	; 9
    25ee:	c6 80       	ldd	r12, Z+6	; 0x06
    25f0:	d7 80       	ldd	r13, Z+7	; 0x07
		_delay = __relay_setting._delay;
    25f2:	84 80       	ldd	r8, Z+4	; 0x04
    25f4:	95 80       	ldd	r9, Z+5	; 0x05
    25f6:	04 c0       	rjmp	.+8      	; 0x2600 <_Z11switchRelaycccc+0x64>
}

int switchRelay(char notificationFlag, char moduleId, char relayId, char state){
	
	char r1,r2;
	int i, impulse = 0, _delay = 0;
    25f8:	81 2c       	mov	r8, r1
    25fa:	91 2c       	mov	r9, r1
    25fc:	c1 2c       	mov	r12, r1
    25fe:	d1 2c       	mov	r13, r1
    2600:	0a e0       	ldi	r16, 0x0A	; 10
    2602:	10 e0       	ldi	r17, 0x00	; 0
		_delay = __relay_setting._delay;
	}

	for (i=0;i<10;i++){
		chipSelect(moduleId,0);
		SPI_WriteRead(SWITCH_RELAY);
    2604:	60 90 8c 03 	lds	r6, 0x038C	; 0x80038c <SWITCH_RELAY>
		impulse = __relay_setting.impulse;
		_delay = __relay_setting._delay;
	}

	for (i=0;i<10;i++){
		chipSelect(moduleId,0);
    2608:	60 e0       	ldi	r22, 0x00	; 0
    260a:	70 e0       	ldi	r23, 0x00	; 0
    260c:	c7 01       	movw	r24, r14
    260e:	ea d6       	rcall	.+3540   	; 0x33e4 <_Z10chipSelectii>
		SPI_WriteRead(SWITCH_RELAY);
    2610:	86 2d       	mov	r24, r6
    2612:	23 d7       	rcall	.+3654   	; 0x345a <_Z13SPI_WriteReadh>
		r1 = SPI_WriteRead(relayId);
    2614:	87 2d       	mov	r24, r7
    2616:	21 d7       	rcall	.+3650   	; 0x345a <_Z13SPI_WriteReadh>
    2618:	38 2e       	mov	r3, r24
		if (impulse == 1){
    261a:	21 e0       	ldi	r18, 0x01	; 1
    261c:	c2 16       	cp	r12, r18
    261e:	d1 04       	cpc	r13, r1
    2620:	21 f4       	brne	.+8      	; 0x262a <_Z11switchRelaycccc+0x8e>
			r2 = SPI_WriteRead(1);
    2622:	81 e0       	ldi	r24, 0x01	; 1
    2624:	1a d7       	rcall	.+3636   	; 0x345a <_Z13SPI_WriteReadh>
    2626:	28 2e       	mov	r2, r24
    2628:	03 c0       	rjmp	.+6      	; 0x2630 <_Z11switchRelaycccc+0x94>
			} else {
			r2 = SPI_WriteRead(state);
    262a:	85 2d       	mov	r24, r5
    262c:	16 d7       	rcall	.+3628   	; 0x345a <_Z13SPI_WriteReadh>
    262e:	28 2e       	mov	r2, r24
		}
		chipSelect(moduleId,1);
    2630:	61 e0       	ldi	r22, 0x01	; 1
    2632:	70 e0       	ldi	r23, 0x00	; 0
    2634:	c7 01       	movw	r24, r14
    2636:	d6 d6       	rcall	.+3500   	; 0x33e4 <_Z10chipSelectii>
		
		if (r1 + r2 == 14){
    2638:	62 2d       	mov	r22, r2
    263a:	70 e0       	ldi	r23, 0x00	; 0
    263c:	63 0d       	add	r22, r3
    263e:	71 1d       	adc	r23, r1
    2640:	6e 30       	cpi	r22, 0x0E	; 14
    2642:	71 05       	cpc	r23, r1
    2644:	31 f0       	breq	.+12     	; 0x2652 <_Z11switchRelaycccc+0xb6>
			success = 1;
			break;
			} else {
			delay(50);
    2646:	82 e3       	ldi	r24, 0x32	; 50
    2648:	90 e0       	ldi	r25, 0x00	; 0
    264a:	76 d7       	rcall	.+3820   	; 0x3538 <_Z5delayi>
    264c:	01 50       	subi	r16, 0x01	; 1
    264e:	11 09       	sbc	r17, r1
	if (getRelaySetting(moduleId,relayId) == 1){
		impulse = __relay_setting.impulse;
		_delay = __relay_setting._delay;
	}

	for (i=0;i<10;i++){
    2650:	d9 f6       	brne	.-74     	; 0x2608 <_Z11switchRelaycccc+0x6c>
			break;
			} else {
			delay(50);
		}
	}
	if (impulse == 1){
    2652:	ca 94       	dec	r12
    2654:	cd 28       	or	r12, r13
    2656:	61 f5       	brne	.+88     	; 0x26b0 <_Z11switchRelaycccc+0x114>
		delay(_delay*1000);
    2658:	88 ee       	ldi	r24, 0xE8	; 232
    265a:	93 e0       	ldi	r25, 0x03	; 3
    265c:	9c 01       	movw	r18, r24
    265e:	82 9e       	mul	r8, r18
    2660:	c0 01       	movw	r24, r0
    2662:	83 9e       	mul	r8, r19
    2664:	90 0d       	add	r25, r0
    2666:	92 9e       	mul	r9, r18
    2668:	90 0d       	add	r25, r0
    266a:	11 24       	eor	r1, r1
    266c:	65 d7       	rcall	.+3786   	; 0x3538 <_Z5delayi>
    266e:	0a e0       	ldi	r16, 0x0A	; 10
    2670:	10 e0       	ldi	r17, 0x00	; 0
		for (i=0;i<10;i++){
			chipSelect(moduleId,0);
			SPI_WriteRead(SWITCH_RELAY);
    2672:	90 90 8c 03 	lds	r9, 0x038C	; 0x80038c <SWITCH_RELAY>
		}
	}
	if (impulse == 1){
		delay(_delay*1000);
		for (i=0;i<10;i++){
			chipSelect(moduleId,0);
    2676:	60 e0       	ldi	r22, 0x00	; 0
    2678:	70 e0       	ldi	r23, 0x00	; 0
    267a:	c7 01       	movw	r24, r14
    267c:	b3 d6       	rcall	.+3430   	; 0x33e4 <_Z10chipSelectii>
			SPI_WriteRead(SWITCH_RELAY);
    267e:	89 2d       	mov	r24, r9
    2680:	ec d6       	rcall	.+3544   	; 0x345a <_Z13SPI_WriteReadh>
			r1 = SPI_WriteRead(relayId);
    2682:	87 2d       	mov	r24, r7
    2684:	ea d6       	rcall	.+3540   	; 0x345a <_Z13SPI_WriteReadh>
    2686:	c8 2e       	mov	r12, r24
			r2 = SPI_WriteRead(0);
    2688:	80 e0       	ldi	r24, 0x00	; 0
    268a:	e7 d6       	rcall	.+3534   	; 0x345a <_Z13SPI_WriteReadh>
    268c:	d8 2e       	mov	r13, r24
			chipSelect(moduleId,1);
    268e:	61 e0       	ldi	r22, 0x01	; 1
    2690:	70 e0       	ldi	r23, 0x00	; 0
    2692:	c7 01       	movw	r24, r14
    2694:	a7 d6       	rcall	.+3406   	; 0x33e4 <_Z10chipSelectii>
			
			if (r1 + r2 == 14){
    2696:	2d 2d       	mov	r18, r13
    2698:	30 e0       	ldi	r19, 0x00	; 0
    269a:	2c 0d       	add	r18, r12
    269c:	31 1d       	adc	r19, r1
    269e:	2e 30       	cpi	r18, 0x0E	; 14
    26a0:	31 05       	cpc	r19, r1
    26a2:	31 f0       	breq	.+12     	; 0x26b0 <_Z11switchRelaycccc+0x114>
				break;
				} else {
				delay(50);
    26a4:	82 e3       	ldi	r24, 0x32	; 50
    26a6:	90 e0       	ldi	r25, 0x00	; 0
    26a8:	47 d7       	rcall	.+3726   	; 0x3538 <_Z5delayi>
    26aa:	01 50       	subi	r16, 0x01	; 1
    26ac:	11 09       	sbc	r17, r1
			delay(50);
		}
	}
	if (impulse == 1){
		delay(_delay*1000);
		for (i=0;i<10;i++){
    26ae:	19 f7       	brne	.-58     	; 0x2676 <_Z11switchRelaycccc+0xda>
				delay(50);
			}
		}
	}
	
	if (success && notificationFlag == 1){
    26b0:	31 e0       	ldi	r19, 0x01	; 1
    26b2:	43 12       	cpse	r4, r19
    26b4:	52 c0       	rjmp	.+164    	; 0x275a <_Z11switchRelaycccc+0x1be>
		char response[40];
		strcpy(response,"NOTIFICATION;SWITCH;");
    26b6:	85 e1       	ldi	r24, 0x15	; 21
    26b8:	ea ed       	ldi	r30, 0xDA	; 218
    26ba:	f6 e0       	ldi	r31, 0x06	; 6
    26bc:	8e 01       	movw	r16, r28
    26be:	0f 5f       	subi	r16, 0xFF	; 255
    26c0:	1f 4f       	sbci	r17, 0xFF	; 255
    26c2:	d8 01       	movw	r26, r16
    26c4:	01 90       	ld	r0, Z+
    26c6:	0d 92       	st	X+, r0
    26c8:	8a 95       	dec	r24
    26ca:	e1 f7       	brne	.-8      	; 0x26c4 <_Z11switchRelaycccc+0x128>
    26cc:	4a e0       	ldi	r20, 0x0A	; 10
    26ce:	be 01       	movw	r22, r28
    26d0:	67 5d       	subi	r22, 0xD7	; 215
    26d2:	7f 4f       	sbci	r23, 0xFF	; 255
    26d4:	c7 01       	movw	r24, r14
    26d6:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <__itoa_ncheck>
		strcat(response,itoa(moduleId,conv,10));
    26da:	bc 01       	movw	r22, r24
    26dc:	c8 01       	movw	r24, r16
    26de:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
		strcat(response,";");
    26e2:	f8 01       	movw	r30, r16
    26e4:	01 90       	ld	r0, Z+
    26e6:	00 20       	and	r0, r0
    26e8:	e9 f7       	brne	.-6      	; 0x26e4 <_Z11switchRelaycccc+0x148>
    26ea:	31 97       	sbiw	r30, 0x01	; 1
    26ec:	0f 2e       	mov	r0, r31
    26ee:	fb e3       	ldi	r31, 0x3B	; 59
    26f0:	ef 2e       	mov	r14, r31
    26f2:	f1 2c       	mov	r15, r1
    26f4:	f0 2d       	mov	r31, r0
    26f6:	f1 82       	std	Z+1, r15	; 0x01
    26f8:	e0 82       	st	Z, r14
    26fa:	4a e0       	ldi	r20, 0x0A	; 10
    26fc:	be 01       	movw	r22, r28
    26fe:	67 5d       	subi	r22, 0xD7	; 215
    2700:	7f 4f       	sbci	r23, 0xFF	; 255
    2702:	c5 01       	movw	r24, r10
    2704:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <__itoa_ncheck>
		strcat(response,itoa(relayId,conv,10));
    2708:	bc 01       	movw	r22, r24
    270a:	c8 01       	movw	r24, r16
    270c:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
		strcat(response,";");
    2710:	f8 01       	movw	r30, r16
    2712:	01 90       	ld	r0, Z+
    2714:	00 20       	and	r0, r0
    2716:	e9 f7       	brne	.-6      	; 0x2712 <_Z11switchRelaycccc+0x176>
    2718:	31 97       	sbiw	r30, 0x01	; 1
    271a:	f1 82       	std	Z+1, r15	; 0x01
    271c:	e0 82       	st	Z, r14
    271e:	4a e0       	ldi	r20, 0x0A	; 10
    2720:	be 01       	movw	r22, r28
    2722:	67 5d       	subi	r22, 0xD7	; 215
    2724:	7f 4f       	sbci	r23, 0xFF	; 255
    2726:	85 2d       	mov	r24, r5
    2728:	90 e0       	ldi	r25, 0x00	; 0
    272a:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <__itoa_ncheck>
		strcat(response,itoa(state,conv,10));
    272e:	bc 01       	movw	r22, r24
    2730:	c8 01       	movw	r24, r16
    2732:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
		strcat(response,";\n");
    2736:	f8 01       	movw	r30, r16
    2738:	01 90       	ld	r0, Z+
    273a:	00 20       	and	r0, r0
    273c:	e9 f7       	brne	.-6      	; 0x2738 <_Z11switchRelaycccc+0x19c>
    273e:	31 97       	sbiw	r30, 0x01	; 1
    2740:	8b e3       	ldi	r24, 0x3B	; 59
    2742:	9a e0       	ldi	r25, 0x0A	; 10
    2744:	a0 e0       	ldi	r26, 0x00	; 0
    2746:	80 83       	st	Z, r24
    2748:	91 83       	std	Z+1, r25	; 0x01
    274a:	a2 83       	std	Z+2, r26	; 0x02

		sendToServer(response,CONNECTION);
    274c:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    2750:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    2754:	c8 01       	movw	r24, r16
    2756:	0e 94 38 0a 	call	0x1470	; 0x1470 <_Z12sendToServerPci>
	}
	
	return success;
	
}
    275a:	81 e0       	ldi	r24, 0x01	; 1
    275c:	90 e0       	ldi	r25, 0x00	; 0
    275e:	ad 96       	adiw	r28, 0x2d	; 45
    2760:	0f b6       	in	r0, 0x3f	; 63
    2762:	f8 94       	cli
    2764:	de bf       	out	0x3e, r29	; 62
    2766:	0f be       	out	0x3f, r0	; 63
    2768:	cd bf       	out	0x3d, r28	; 61
    276a:	df 91       	pop	r29
    276c:	cf 91       	pop	r28
    276e:	1f 91       	pop	r17
    2770:	0f 91       	pop	r16
    2772:	ff 90       	pop	r15
    2774:	ef 90       	pop	r14
    2776:	df 90       	pop	r13
    2778:	cf 90       	pop	r12
    277a:	bf 90       	pop	r11
    277c:	af 90       	pop	r10
    277e:	9f 90       	pop	r9
    2780:	8f 90       	pop	r8
    2782:	7f 90       	pop	r7
    2784:	6f 90       	pop	r6
    2786:	5f 90       	pop	r5
    2788:	4f 90       	pop	r4
    278a:	3f 90       	pop	r3
    278c:	2f 90       	pop	r2
    278e:	08 95       	ret

00002790 <_Z12RelayControlv>:

void RelayControl(){
    2790:	2f 92       	push	r2
    2792:	3f 92       	push	r3
    2794:	4f 92       	push	r4
    2796:	5f 92       	push	r5
    2798:	6f 92       	push	r6
    279a:	7f 92       	push	r7
    279c:	8f 92       	push	r8
    279e:	9f 92       	push	r9
    27a0:	af 92       	push	r10
    27a2:	bf 92       	push	r11
    27a4:	cf 92       	push	r12
    27a6:	df 92       	push	r13
    27a8:	ef 92       	push	r14
    27aa:	ff 92       	push	r15
    27ac:	0f 93       	push	r16
    27ae:	1f 93       	push	r17
    27b0:	cf 93       	push	r28
    27b2:	df 93       	push	r29
    27b4:	cd b7       	in	r28, 0x3d	; 61
    27b6:	de b7       	in	r29, 0x3e	; 62
    27b8:	c5 53       	subi	r28, 0x35	; 53
    27ba:	d1 40       	sbci	r29, 0x01	; 1
    27bc:	0f b6       	in	r0, 0x3f	; 63
    27be:	f8 94       	cli
    27c0:	de bf       	out	0x3e, r29	; 62
    27c2:	0f be       	out	0x3f, r0	; 63
    27c4:	cd bf       	out	0x3d, r28	; 61
	//&& __system_var.enabled_flag == 1
	char *received = 0;
	if (__system_var.interface_ == ESP){
    27c6:	80 91 a9 0f 	lds	r24, 0x0FA9	; 0x800fa9 <__system_var+0x2f>
    27ca:	90 e0       	ldi	r25, 0x00	; 0
    27cc:	a0 90 b1 03 	lds	r10, 0x03B1	; 0x8003b1 <ESP>
    27d0:	b0 90 b2 03 	lds	r11, 0x03B2	; 0x8003b2 <ESP+0x1>
    27d4:	8a 15       	cp	r24, r10
    27d6:	9b 05       	cpc	r25, r11
    27d8:	49 f4       	brne	.+18     	; 0x27ec <_Z12RelayControlv+0x5c>
		received = strstr(__network_data.esp_buffer, "SWITCHRELAY");
    27da:	6f ee       	ldi	r22, 0xEF	; 239
    27dc:	76 e0       	ldi	r23, 0x06	; 6
    27de:	84 ec       	ldi	r24, 0xC4	; 196
    27e0:	9a e0       	ldi	r25, 0x0A	; 10
    27e2:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
	} else if (__system_var.interface_ == SIM) {
		received = strstr(__network_data.sim_buffer, "SWITCHRELAY");
	}
	if (received != 0){
    27e6:	00 97       	sbiw	r24, 0x00	; 0
    27e8:	91 f4       	brne	.+36     	; 0x280e <_Z12RelayControlv+0x7e>
    27ea:	67 c0       	rjmp	.+206    	; 0x28ba <_Z12RelayControlv+0x12a>
void RelayControl(){
	//&& __system_var.enabled_flag == 1
	char *received = 0;
	if (__system_var.interface_ == ESP){
		received = strstr(__network_data.esp_buffer, "SWITCHRELAY");
	} else if (__system_var.interface_ == SIM) {
    27ec:	20 91 af 03 	lds	r18, 0x03AF	; 0x8003af <SIM>
    27f0:	30 91 b0 03 	lds	r19, 0x03B0	; 0x8003b0 <SIM+0x1>
    27f4:	82 17       	cp	r24, r18
    27f6:	93 07       	cpc	r25, r19
    27f8:	09 f0       	breq	.+2      	; 0x27fc <_Z12RelayControlv+0x6c>
    27fa:	70 c1       	rjmp	.+736    	; 0x2adc <_Z12RelayControlv+0x34c>
		received = strstr(__network_data.sim_buffer, "SWITCHRELAY");
    27fc:	6f ee       	ldi	r22, 0xEF	; 239
    27fe:	76 e0       	ldi	r23, 0x06	; 6
    2800:	8c ea       	ldi	r24, 0xAC	; 172
    2802:	9e e0       	ldi	r25, 0x0E	; 14
    2804:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
	}
	if (received != 0){
    2808:	00 97       	sbiw	r24, 0x00	; 0
    280a:	09 f4       	brne	.+2      	; 0x280e <_Z12RelayControlv+0x7e>
    280c:	67 c1       	rjmp	.+718    	; 0x2adc <_Z12RelayControlv+0x34c>
		if (__system_var.interface_ == ESP){
			p1 = strstr(__network_data.esp_buffer, "SWITCHRELAY");
		} else if (__system_var.interface_ == SIM) {
			p1 = strstr(__network_data.sim_buffer, "SWITCHRELAY");
		}
		strtok(p1,";");
    280e:	6a eb       	ldi	r22, 0xBA	; 186
    2810:	73 e0       	ldi	r23, 0x03	; 3
    2812:	0e 94 40 1f 	call	0x3e80	; 0x3e80 <strtok>
		moduleId = atoi(strtok(0,";"));
    2816:	6a eb       	ldi	r22, 0xBA	; 186
    2818:	73 e0       	ldi	r23, 0x03	; 3
    281a:	80 e0       	ldi	r24, 0x00	; 0
    281c:	90 e0       	ldi	r25, 0x00	; 0
    281e:	0e 94 40 1f 	call	0x3e80	; 0x3e80 <strtok>
    2822:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
    2826:	3c 01       	movw	r6, r24
		relayId = atoi(strtok(0,";"));
    2828:	6a eb       	ldi	r22, 0xBA	; 186
    282a:	73 e0       	ldi	r23, 0x03	; 3
    282c:	80 e0       	ldi	r24, 0x00	; 0
    282e:	90 e0       	ldi	r25, 0x00	; 0
    2830:	0e 94 40 1f 	call	0x3e80	; 0x3e80 <strtok>
    2834:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
    2838:	2c 01       	movw	r4, r24
		state = atoi(strtok(0,";"));
    283a:	6a eb       	ldi	r22, 0xBA	; 186
    283c:	73 e0       	ldi	r23, 0x03	; 3
    283e:	80 e0       	ldi	r24, 0x00	; 0
    2840:	90 e0       	ldi	r25, 0x00	; 0
    2842:	0e 94 40 1f 	call	0x3e80	; 0x3e80 <strtok>
    2846:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
    284a:	4c 01       	movw	r8, r24
		
		switchRelay(1, moduleId,relayId,state);
    284c:	28 2f       	mov	r18, r24
    284e:	44 2d       	mov	r20, r4
    2850:	66 2d       	mov	r22, r6
    2852:	81 e0       	ldi	r24, 0x01	; 1
    2854:	a3 de       	rcall	.-698    	; 0x259c <_Z11switchRelaycccc>
		
		if (moduleId < MAX_MODULE_COUNT && relayId < MAX_RELAY_COUNT){
    2856:	24 e0       	ldi	r18, 0x04	; 4
    2858:	62 16       	cp	r6, r18
    285a:	71 04       	cpc	r7, r1
    285c:	34 f5       	brge	.+76     	; 0x28aa <_Z12RelayControlv+0x11a>
    285e:	8d e0       	ldi	r24, 0x0D	; 13
    2860:	48 16       	cp	r4, r24
    2862:	51 04       	cpc	r5, r1
    2864:	14 f5       	brge	.+68     	; 0x28aa <_Z12RelayControlv+0x11a>
			char conv[5];
			if (state == 1){
    2866:	8a 94       	dec	r8
    2868:	89 28       	or	r8, r9
    286a:	89 f4       	brne	.+34     	; 0x288e <_Z12RelayControlv+0xfe>
				__relay_states[moduleId].states[relayId] = 1;
    286c:	8d e0       	ldi	r24, 0x0D	; 13
    286e:	86 9d       	mul	r24, r6
    2870:	f0 01       	movw	r30, r0
    2872:	87 9d       	mul	r24, r7
    2874:	f0 0d       	add	r31, r0
    2876:	11 24       	eor	r1, r1
    2878:	e4 0d       	add	r30, r4
    287a:	f5 1d       	adc	r31, r5
    287c:	ee 0f       	add	r30, r30
    287e:	ff 1f       	adc	r31, r31
    2880:	ea 55       	subi	r30, 0x5A	; 90
    2882:	f7 4f       	sbci	r31, 0xF7	; 247
    2884:	81 e0       	ldi	r24, 0x01	; 1
    2886:	90 e0       	ldi	r25, 0x00	; 0
    2888:	91 83       	std	Z+1, r25	; 0x01
    288a:	80 83       	st	Z, r24
    288c:	0e c0       	rjmp	.+28     	; 0x28aa <_Z12RelayControlv+0x11a>
				} else {
				__relay_states[moduleId].states[relayId] = 0;
    288e:	8d e0       	ldi	r24, 0x0D	; 13
    2890:	86 9d       	mul	r24, r6
    2892:	f0 01       	movw	r30, r0
    2894:	87 9d       	mul	r24, r7
    2896:	f0 0d       	add	r31, r0
    2898:	11 24       	eor	r1, r1
    289a:	e4 0d       	add	r30, r4
    289c:	f5 1d       	adc	r31, r5
    289e:	ee 0f       	add	r30, r30
    28a0:	ff 1f       	adc	r31, r31
    28a2:	ea 55       	subi	r30, 0x5A	; 90
    28a4:	f7 4f       	sbci	r31, 0xF7	; 247
    28a6:	11 82       	std	Z+1, r1	; 0x01
    28a8:	10 82       	st	Z, r1
			}
		}

		clearReadLine();
    28aa:	0e 94 6f 1c 	call	0x38de	; 0x38de <_Z13clearReadLinev>
	}
	received = 0;
	
	if (__system_var.interface_ == ESP){
    28ae:	80 91 a9 0f 	lds	r24, 0x0FA9	; 0x800fa9 <__system_var+0x2f>
    28b2:	90 e0       	ldi	r25, 0x00	; 0
    28b4:	a8 16       	cp	r10, r24
    28b6:	b9 06       	cpc	r11, r25
    28b8:	49 f4       	brne	.+18     	; 0x28cc <_Z12RelayControlv+0x13c>
		received = strstr(__network_data.esp_buffer, "MULTI-SWITCH");
    28ba:	6b ef       	ldi	r22, 0xFB	; 251
    28bc:	76 e0       	ldi	r23, 0x06	; 6
    28be:	84 ec       	ldi	r24, 0xC4	; 196
    28c0:	9a e0       	ldi	r25, 0x0A	; 10
    28c2:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
	} else if (__system_var.interface_ == SIM) {
		received = strstr(__network_data.sim_buffer, "MULTI-SWITCH");
	}

	//MULTI-SWITCH;1,3,1;1,1,1;
	if (received != 0){
    28c6:	00 97       	sbiw	r24, 0x00	; 0
    28c8:	91 f4       	brne	.+36     	; 0x28ee <_Z12RelayControlv+0x15e>
    28ca:	0c c1       	rjmp	.+536    	; 0x2ae4 <_Z12RelayControlv+0x354>
	}
	received = 0;
	
	if (__system_var.interface_ == ESP){
		received = strstr(__network_data.esp_buffer, "MULTI-SWITCH");
	} else if (__system_var.interface_ == SIM) {
    28cc:	20 91 af 03 	lds	r18, 0x03AF	; 0x8003af <SIM>
    28d0:	30 91 b0 03 	lds	r19, 0x03B0	; 0x8003b0 <SIM+0x1>
    28d4:	82 17       	cp	r24, r18
    28d6:	93 07       	cpc	r25, r19
    28d8:	09 f0       	breq	.+2      	; 0x28dc <_Z12RelayControlv+0x14c>
    28da:	04 c1       	rjmp	.+520    	; 0x2ae4 <_Z12RelayControlv+0x354>
		received = strstr(__network_data.sim_buffer, "MULTI-SWITCH");
    28dc:	6b ef       	ldi	r22, 0xFB	; 251
    28de:	76 e0       	ldi	r23, 0x06	; 6
    28e0:	8c ea       	ldi	r24, 0xAC	; 172
    28e2:	9e e0       	ldi	r25, 0x0E	; 14
    28e4:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
	}

	//MULTI-SWITCH;1,3,1;1,1,1;
	if (received != 0){
    28e8:	00 97       	sbiw	r24, 0x00	; 0
    28ea:	09 f4       	brne	.+2      	; 0x28ee <_Z12RelayControlv+0x15e>
    28ec:	fb c0       	rjmp	.+502    	; 0x2ae4 <_Z12RelayControlv+0x354>
		if (__system_var.interface_ == ESP){
			p1 = strstr(__network_data.esp_buffer, "MULTI-SWITCH");
		} else if (__system_var.interface_ == SIM) {
			p1 = strstr(__network_data.sim_buffer, "MULTI-SWITCH");
		}
		char *relays = strtok_r(p1,";",&save_ptr_1);
    28ee:	ae 01       	movw	r20, r28
    28f0:	4c 5c       	subi	r20, 0xCC	; 204
    28f2:	5e 4f       	sbci	r21, 0xFE	; 254
    28f4:	6a eb       	ldi	r22, 0xBA	; 186
    28f6:	73 e0       	ldi	r23, 0x03	; 3
    28f8:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>

		strcpy(response,"NOTIFICATION;MULTI-SWITCH;");
    28fc:	2b e1       	ldi	r18, 0x1B	; 27
    28fe:	e8 e0       	ldi	r30, 0x08	; 8
    2900:	f7 e0       	ldi	r31, 0x07	; 7
    2902:	de 01       	movw	r26, r28
    2904:	11 96       	adiw	r26, 0x01	; 1
    2906:	01 90       	ld	r0, Z+
    2908:	0d 92       	st	X+, r0
    290a:	2a 95       	dec	r18
    290c:	e1 f7       	brne	.-8      	; 0x2906 <_Z12RelayControlv+0x176>
		while (relays != 0){
    290e:	89 2b       	or	r24, r25
    2910:	09 f0       	breq	.+2      	; 0x2914 <_Z12RelayControlv+0x184>
    2912:	b4 c0       	rjmp	.+360    	; 0x2a7c <_Z12RelayControlv+0x2ec>
    2914:	d0 c0       	rjmp	.+416    	; 0x2ab6 <_Z12RelayControlv+0x326>
			if (i > 0){
    2916:	18 14       	cp	r1, r8
    2918:	19 04       	cpc	r1, r9
    291a:	0c f0       	brlt	.+2      	; 0x291e <_Z12RelayControlv+0x18e>
    291c:	bd c0       	rjmp	.+378    	; 0x2a98 <_Z12RelayControlv+0x308>
				int i=0, moduleId, relayId, state, success;
				char *args = strtok_r(relays,",",&save_ptr_2);
    291e:	ae 01       	movw	r20, r28
    2920:	4e 5c       	subi	r20, 0xCE	; 206
    2922:	5e 4f       	sbci	r21, 0xFE	; 254
    2924:	68 e0       	ldi	r22, 0x08	; 8
    2926:	73 e0       	ldi	r23, 0x03	; 3
    2928:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
				while (args != 0){
    292c:	00 97       	sbiw	r24, 0x00	; 0
    292e:	e1 f1       	breq	.+120    	; 0x29a8 <_Z12RelayControlv+0x218>
    2930:	a1 2c       	mov	r10, r1
    2932:	b1 2c       	mov	r11, r1
					switch (i){
    2934:	21 e0       	ldi	r18, 0x01	; 1
    2936:	a2 16       	cp	r10, r18
    2938:	b1 04       	cpc	r11, r1
    293a:	a9 f0       	breq	.+42     	; 0x2966 <_Z12RelayControlv+0x1d6>
    293c:	22 e0       	ldi	r18, 0x02	; 2
    293e:	a2 16       	cp	r10, r18
    2940:	b1 04       	cpc	r11, r1
    2942:	f9 f0       	breq	.+62     	; 0x2982 <_Z12RelayControlv+0x1f2>
    2944:	a1 14       	cp	r10, r1
    2946:	b1 04       	cpc	r11, r1
    2948:	09 f5       	brne	.+66     	; 0x298c <_Z12RelayControlv+0x1fc>
						case 0: moduleId = atoi(args); break;
    294a:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
    294e:	8c 01       	movw	r16, r24
						case 1: relayId = atoi(args); break;
						case 2: state = atoi(args); break;
					}
					i++;
					args = strtok_r(0,",",&save_ptr_2);
    2950:	ae 01       	movw	r20, r28
    2952:	4e 5c       	subi	r20, 0xCE	; 206
    2954:	5e 4f       	sbci	r21, 0xFE	; 254
    2956:	68 e0       	ldi	r22, 0x08	; 8
    2958:	73 e0       	ldi	r23, 0x03	; 3
    295a:	80 e0       	ldi	r24, 0x00	; 0
    295c:	90 e0       	ldi	r25, 0x00	; 0
    295e:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
		strcpy(response,"NOTIFICATION;MULTI-SWITCH;");
		while (relays != 0){
			if (i > 0){
				int i=0, moduleId, relayId, state, success;
				char *args = strtok_r(relays,",",&save_ptr_2);
				while (args != 0){
    2962:	00 97       	sbiw	r24, 0x00	; 0
    2964:	09 f1       	breq	.+66     	; 0x29a8 <_Z12RelayControlv+0x218>
					switch (i){
						case 0: moduleId = atoi(args); break;
						case 1: relayId = atoi(args); break;
    2966:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
    296a:	7c 01       	movw	r14, r24
						case 2: state = atoi(args); break;
					}
					i++;
					args = strtok_r(0,",",&save_ptr_2);
    296c:	ae 01       	movw	r20, r28
    296e:	4e 5c       	subi	r20, 0xCE	; 206
    2970:	5e 4f       	sbci	r21, 0xFE	; 254
    2972:	68 e0       	ldi	r22, 0x08	; 8
    2974:	73 e0       	ldi	r23, 0x03	; 3
    2976:	80 e0       	ldi	r24, 0x00	; 0
    2978:	90 e0       	ldi	r25, 0x00	; 0
    297a:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
		strcpy(response,"NOTIFICATION;MULTI-SWITCH;");
		while (relays != 0){
			if (i > 0){
				int i=0, moduleId, relayId, state, success;
				char *args = strtok_r(relays,",",&save_ptr_2);
				while (args != 0){
    297e:	00 97       	sbiw	r24, 0x00	; 0
    2980:	99 f0       	breq	.+38     	; 0x29a8 <_Z12RelayControlv+0x218>
					switch (i){
						case 0: moduleId = atoi(args); break;
						case 1: relayId = atoi(args); break;
						case 2: state = atoi(args); break;
    2982:	0e 94 1a 1f 	call	0x3e34	; 0x3e34 <atoi>
    2986:	6c 01       	movw	r12, r24
    2988:	a2 2c       	mov	r10, r2
    298a:	b3 2c       	mov	r11, r3
					}
					i++;
    298c:	8f ef       	ldi	r24, 0xFF	; 255
    298e:	a8 1a       	sub	r10, r24
    2990:	b8 0a       	sbc	r11, r24
					args = strtok_r(0,",",&save_ptr_2);
    2992:	ae 01       	movw	r20, r28
    2994:	4e 5c       	subi	r20, 0xCE	; 206
    2996:	5e 4f       	sbci	r21, 0xFE	; 254
    2998:	68 e0       	ldi	r22, 0x08	; 8
    299a:	73 e0       	ldi	r23, 0x03	; 3
    299c:	80 e0       	ldi	r24, 0x00	; 0
    299e:	90 e0       	ldi	r25, 0x00	; 0
    29a0:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
		strcpy(response,"NOTIFICATION;MULTI-SWITCH;");
		while (relays != 0){
			if (i > 0){
				int i=0, moduleId, relayId, state, success;
				char *args = strtok_r(relays,",",&save_ptr_2);
				while (args != 0){
    29a4:	00 97       	sbiw	r24, 0x00	; 0
    29a6:	31 f6       	brne	.-116    	; 0x2934 <_Z12RelayControlv+0x1a4>
					}
					i++;
					args = strtok_r(0,",",&save_ptr_2);
				}

				success = switchRelay(0,moduleId,relayId,state);
    29a8:	2c 2d       	mov	r18, r12
    29aa:	4e 2d       	mov	r20, r14
    29ac:	60 2f       	mov	r22, r16
    29ae:	80 e0       	ldi	r24, 0x00	; 0
    29b0:	f5 dd       	rcall	.-1046   	; 0x259c <_Z11switchRelaycccc>
				
				if (success){
    29b2:	89 2b       	or	r24, r25
    29b4:	c1 f1       	breq	.+112    	; 0x2a26 <_Z12RelayControlv+0x296>
    29b6:	4a e0       	ldi	r20, 0x0A	; 10
    29b8:	be 01       	movw	r22, r28
    29ba:	63 5d       	subi	r22, 0xD3	; 211
    29bc:	7e 4f       	sbci	r23, 0xFE	; 254
    29be:	c8 01       	movw	r24, r16
    29c0:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <__itoa_ncheck>
					strcat(response,itoa(moduleId,conv,10));
    29c4:	bc 01       	movw	r22, r24
    29c6:	c3 01       	movw	r24, r6
    29c8:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
					strcat(response,",");
    29cc:	f3 01       	movw	r30, r6
    29ce:	01 90       	ld	r0, Z+
    29d0:	00 20       	and	r0, r0
    29d2:	e9 f7       	brne	.-6      	; 0x29ce <_Z12RelayControlv+0x23e>
    29d4:	31 97       	sbiw	r30, 0x01	; 1
    29d6:	51 82       	std	Z+1, r5	; 0x01
    29d8:	40 82       	st	Z, r4
    29da:	4a e0       	ldi	r20, 0x0A	; 10
    29dc:	be 01       	movw	r22, r28
    29de:	63 5d       	subi	r22, 0xD3	; 211
    29e0:	7e 4f       	sbci	r23, 0xFE	; 254
    29e2:	c7 01       	movw	r24, r14
    29e4:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <__itoa_ncheck>
					strcat(response,itoa(relayId,conv,10));
    29e8:	bc 01       	movw	r22, r24
    29ea:	c3 01       	movw	r24, r6
    29ec:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
					strcat(response,",");
    29f0:	f3 01       	movw	r30, r6
    29f2:	01 90       	ld	r0, Z+
    29f4:	00 20       	and	r0, r0
    29f6:	e9 f7       	brne	.-6      	; 0x29f2 <_Z12RelayControlv+0x262>
    29f8:	31 97       	sbiw	r30, 0x01	; 1
    29fa:	51 82       	std	Z+1, r5	; 0x01
    29fc:	40 82       	st	Z, r4
    29fe:	4a e0       	ldi	r20, 0x0A	; 10
    2a00:	be 01       	movw	r22, r28
    2a02:	63 5d       	subi	r22, 0xD3	; 211
    2a04:	7e 4f       	sbci	r23, 0xFE	; 254
    2a06:	c6 01       	movw	r24, r12
    2a08:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <__itoa_ncheck>
					strcat(response,itoa(state,conv,10));
    2a0c:	bc 01       	movw	r22, r24
    2a0e:	c3 01       	movw	r24, r6
    2a10:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
					strcat(response,";");
    2a14:	f3 01       	movw	r30, r6
    2a16:	01 90       	ld	r0, Z+
    2a18:	00 20       	and	r0, r0
    2a1a:	e9 f7       	brne	.-6      	; 0x2a16 <_Z12RelayControlv+0x286>
    2a1c:	31 97       	sbiw	r30, 0x01	; 1
    2a1e:	8b e3       	ldi	r24, 0x3B	; 59
    2a20:	90 e0       	ldi	r25, 0x00	; 0
    2a22:	91 83       	std	Z+1, r25	; 0x01
    2a24:	80 83       	st	Z, r24
				}

				if (moduleId < MAX_MODULE_COUNT && relayId < MAX_RELAY_COUNT){
    2a26:	04 30       	cpi	r16, 0x04	; 4
    2a28:	11 05       	cpc	r17, r1
    2a2a:	b4 f5       	brge	.+108    	; 0x2a98 <_Z12RelayControlv+0x308>
    2a2c:	9d e0       	ldi	r25, 0x0D	; 13
    2a2e:	e9 16       	cp	r14, r25
    2a30:	f1 04       	cpc	r15, r1
    2a32:	94 f5       	brge	.+100    	; 0x2a98 <_Z12RelayControlv+0x308>
					char conv[5];
					if (state == 1){
    2a34:	21 e0       	ldi	r18, 0x01	; 1
    2a36:	c2 16       	cp	r12, r18
    2a38:	d1 04       	cpc	r13, r1
    2a3a:	89 f4       	brne	.+34     	; 0x2a5e <_Z12RelayControlv+0x2ce>
						__relay_states[moduleId].states[relayId] = 1;
    2a3c:	8d e0       	ldi	r24, 0x0D	; 13
    2a3e:	80 9f       	mul	r24, r16
    2a40:	f0 01       	movw	r30, r0
    2a42:	81 9f       	mul	r24, r17
    2a44:	f0 0d       	add	r31, r0
    2a46:	11 24       	eor	r1, r1
    2a48:	ee 0d       	add	r30, r14
    2a4a:	ff 1d       	adc	r31, r15
    2a4c:	ee 0f       	add	r30, r30
    2a4e:	ff 1f       	adc	r31, r31
    2a50:	ea 55       	subi	r30, 0x5A	; 90
    2a52:	f7 4f       	sbci	r31, 0xF7	; 247
    2a54:	81 e0       	ldi	r24, 0x01	; 1
    2a56:	90 e0       	ldi	r25, 0x00	; 0
    2a58:	91 83       	std	Z+1, r25	; 0x01
    2a5a:	80 83       	st	Z, r24
    2a5c:	1d c0       	rjmp	.+58     	; 0x2a98 <_Z12RelayControlv+0x308>
						} else {
						__relay_states[moduleId].states[relayId] = 0;
    2a5e:	9d e0       	ldi	r25, 0x0D	; 13
    2a60:	90 9f       	mul	r25, r16
    2a62:	f0 01       	movw	r30, r0
    2a64:	91 9f       	mul	r25, r17
    2a66:	f0 0d       	add	r31, r0
    2a68:	11 24       	eor	r1, r1
    2a6a:	ee 0d       	add	r30, r14
    2a6c:	ff 1d       	adc	r31, r15
    2a6e:	ee 0f       	add	r30, r30
    2a70:	ff 1f       	adc	r31, r31
    2a72:	ea 55       	subi	r30, 0x5A	; 90
    2a74:	f7 4f       	sbci	r31, 0xF7	; 247
    2a76:	11 82       	std	Z+1, r1	; 0x01
    2a78:	10 82       	st	Z, r1
    2a7a:	0e c0       	rjmp	.+28     	; 0x2a98 <_Z12RelayControlv+0x308>
			p1 = strstr(__network_data.sim_buffer, "MULTI-SWITCH");
		}
		char *relays = strtok_r(p1,";",&save_ptr_1);

		strcpy(response,"NOTIFICATION;MULTI-SWITCH;");
		while (relays != 0){
    2a7c:	81 2c       	mov	r8, r1
    2a7e:	91 2c       	mov	r9, r1
				}

				success = switchRelay(0,moduleId,relayId,state);
				
				if (success){
					strcat(response,itoa(moduleId,conv,10));
    2a80:	ce 01       	movw	r24, r28
    2a82:	01 96       	adiw	r24, 0x01	; 1
    2a84:	3c 01       	movw	r6, r24
					strcat(response,",");
    2a86:	0f 2e       	mov	r0, r31
    2a88:	fc e2       	ldi	r31, 0x2C	; 44
    2a8a:	4f 2e       	mov	r4, r31
    2a8c:	51 2c       	mov	r5, r1
    2a8e:	f0 2d       	mov	r31, r0
				char *args = strtok_r(relays,",",&save_ptr_2);
				while (args != 0){
					switch (i){
						case 0: moduleId = atoi(args); break;
						case 1: relayId = atoi(args); break;
						case 2: state = atoi(args); break;
    2a90:	68 94       	set
    2a92:	22 24       	eor	r2, r2
    2a94:	21 f8       	bld	r2, 1
    2a96:	31 2c       	mov	r3, r1
						__relay_states[moduleId].states[relayId] = 0;
					}
				}
			}

			i++;
    2a98:	9f ef       	ldi	r25, 0xFF	; 255
    2a9a:	89 1a       	sub	r8, r25
    2a9c:	99 0a       	sbc	r9, r25
			relays = strtok_r(0,";",&save_ptr_1);
    2a9e:	ae 01       	movw	r20, r28
    2aa0:	4c 5c       	subi	r20, 0xCC	; 204
    2aa2:	5e 4f       	sbci	r21, 0xFE	; 254
    2aa4:	6a eb       	ldi	r22, 0xBA	; 186
    2aa6:	73 e0       	ldi	r23, 0x03	; 3
    2aa8:	80 e0       	ldi	r24, 0x00	; 0
    2aaa:	90 e0       	ldi	r25, 0x00	; 0
    2aac:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <strtok_r>
			p1 = strstr(__network_data.sim_buffer, "MULTI-SWITCH");
		}
		char *relays = strtok_r(p1,";",&save_ptr_1);

		strcpy(response,"NOTIFICATION;MULTI-SWITCH;");
		while (relays != 0){
    2ab0:	00 97       	sbiw	r24, 0x00	; 0
    2ab2:	09 f0       	breq	.+2      	; 0x2ab6 <_Z12RelayControlv+0x326>
    2ab4:	30 cf       	rjmp	.-416    	; 0x2916 <_Z12RelayControlv+0x186>
			}

			i++;
			relays = strtok_r(0,";",&save_ptr_1);
		}
		strcat(response,"\n");
    2ab6:	ce 01       	movw	r24, r28
    2ab8:	01 96       	adiw	r24, 0x01	; 1
    2aba:	fc 01       	movw	r30, r24
    2abc:	01 90       	ld	r0, Z+
    2abe:	00 20       	and	r0, r0
    2ac0:	e9 f7       	brne	.-6      	; 0x2abc <_Z12RelayControlv+0x32c>
    2ac2:	31 97       	sbiw	r30, 0x01	; 1
    2ac4:	2a e0       	ldi	r18, 0x0A	; 10
    2ac6:	30 e0       	ldi	r19, 0x00	; 0
    2ac8:	31 83       	std	Z+1, r19	; 0x01
    2aca:	20 83       	st	Z, r18
		sendToServer(response,CONNECTION);
    2acc:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    2ad0:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    2ad4:	0e 94 38 0a 	call	0x1470	; 0x1470 <_Z12sendToServerPci>
		clearReadLine();
    2ad8:	02 d7       	rcall	.+3588   	; 0x38de <_Z13clearReadLinev>
    2ada:	04 c0       	rjmp	.+8      	; 0x2ae4 <_Z12RelayControlv+0x354>

		clearReadLine();
	}
	received = 0;
	
	if (__system_var.interface_ == ESP){
    2adc:	80 91 a9 0f 	lds	r24, 0x0FA9	; 0x800fa9 <__system_var+0x2f>
    2ae0:	90 e0       	ldi	r25, 0x00	; 0
    2ae2:	f4 ce       	rjmp	.-536    	; 0x28cc <_Z12RelayControlv+0x13c>
		}
		strcat(response,"\n");
		sendToServer(response,CONNECTION);
		clearReadLine();
	}
}
    2ae4:	cb 5c       	subi	r28, 0xCB	; 203
    2ae6:	de 4f       	sbci	r29, 0xFE	; 254
    2ae8:	0f b6       	in	r0, 0x3f	; 63
    2aea:	f8 94       	cli
    2aec:	de bf       	out	0x3e, r29	; 62
    2aee:	0f be       	out	0x3f, r0	; 63
    2af0:	cd bf       	out	0x3d, r28	; 61
    2af2:	df 91       	pop	r29
    2af4:	cf 91       	pop	r28
    2af6:	1f 91       	pop	r17
    2af8:	0f 91       	pop	r16
    2afa:	ff 90       	pop	r15
    2afc:	ef 90       	pop	r14
    2afe:	df 90       	pop	r13
    2b00:	cf 90       	pop	r12
    2b02:	bf 90       	pop	r11
    2b04:	af 90       	pop	r10
    2b06:	9f 90       	pop	r9
    2b08:	8f 90       	pop	r8
    2b0a:	7f 90       	pop	r7
    2b0c:	6f 90       	pop	r6
    2b0e:	5f 90       	pop	r5
    2b10:	4f 90       	pop	r4
    2b12:	3f 90       	pop	r3
    2b14:	2f 90       	pop	r2
    2b16:	08 95       	ret

00002b18 <_Z15ReceiveSettingsv>:

void ReceiveSettings(){
    2b18:	0f 93       	push	r16
    2b1a:	1f 93       	push	r17
    2b1c:	cf 93       	push	r28
    2b1e:	df 93       	push	r29
	
	char *received;
	
	if (__system_var.interface_ == ESP){
    2b20:	c0 91 a9 0f 	lds	r28, 0x0FA9	; 0x800fa9 <__system_var+0x2f>
    2b24:	d0 e0       	ldi	r29, 0x00	; 0
    2b26:	00 91 b1 03 	lds	r16, 0x03B1	; 0x8003b1 <ESP>
    2b2a:	10 91 b2 03 	lds	r17, 0x03B2	; 0x8003b2 <ESP+0x1>
    2b2e:	c0 17       	cp	r28, r16
    2b30:	d1 07       	cpc	r29, r17
    2b32:	51 f4       	brne	.+20     	; 0x2b48 <_Z15ReceiveSettingsv+0x30>
		received = strstr(__network_data.esp_buffer, "CFG");
    2b34:	63 e2       	ldi	r22, 0x23	; 35
    2b36:	77 e0       	ldi	r23, 0x07	; 7
    2b38:	84 ec       	ldi	r24, 0xC4	; 196
    2b3a:	9a e0       	ldi	r25, 0x0A	; 10
    2b3c:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
	} else if (__system_var.interface_ == SIM) {
		received = strstr(__network_data.sim_buffer, "CFG");
	}
	
	if (received != 0){
    2b40:	89 2b       	or	r24, r25
    2b42:	09 f0       	breq	.+2      	; 0x2b46 <_Z15ReceiveSettingsv+0x2e>
    2b44:	a6 c0       	rjmp	.+332    	; 0x2c92 <_Z15ReceiveSettingsv+0x17a>
    2b46:	85 c0       	rjmp	.+266    	; 0x2c52 <_Z15ReceiveSettingsv+0x13a>
	
	char *received;
	
	if (__system_var.interface_ == ESP){
		received = strstr(__network_data.esp_buffer, "CFG");
	} else if (__system_var.interface_ == SIM) {
    2b48:	20 91 af 03 	lds	r18, 0x03AF	; 0x8003af <SIM>
    2b4c:	30 91 b0 03 	lds	r19, 0x03B0	; 0x8003b0 <SIM+0x1>
    2b50:	c2 17       	cp	r28, r18
    2b52:	d3 07       	cpc	r29, r19
    2b54:	09 f0       	breq	.+2      	; 0x2b58 <_Z15ReceiveSettingsv+0x40>
    2b56:	b8 c0       	rjmp	.+368    	; 0x2cc8 <_Z15ReceiveSettingsv+0x1b0>
		received = strstr(__network_data.sim_buffer, "CFG");
    2b58:	63 e2       	ldi	r22, 0x23	; 35
    2b5a:	77 e0       	ldi	r23, 0x07	; 7
    2b5c:	8c ea       	ldi	r24, 0xAC	; 172
    2b5e:	9e e0       	ldi	r25, 0x0E	; 14
    2b60:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    2b64:	b1 c0       	rjmp	.+354    	; 0x2cc8 <_Z15ReceiveSettingsv+0x1b0>
		__system_time.check_timer_buffer = 0;
		
		if (__system_var.interface_ == ESP){
			received = strstr(__network_data.esp_buffer, "[CLEAR_EEPROM]");
		} else if (__system_var.interface_ == SIM) {
			received = strstr(__network_data.sim_buffer, "[CLEAR_EEPROM]");
    2b66:	67 e2       	ldi	r22, 0x27	; 39
    2b68:	77 e0       	ldi	r23, 0x07	; 7
    2b6a:	8c ea       	ldi	r24, 0xAC	; 172
    2b6c:	9e e0       	ldi	r25, 0x0E	; 14
    2b6e:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
		}
		
		if (received != 0){
    2b72:	89 2b       	or	r24, r25
    2b74:	21 f1       	breq	.+72     	; 0x2bbe <_Z15ReceiveSettingsv+0xa6>
			__system_var.enabled_flag = 0;
    2b76:	0a e7       	ldi	r16, 0x7A	; 122
    2b78:	1f e0       	ldi	r17, 0x0F	; 15
    2b7a:	f8 01       	movw	r30, r16
    2b7c:	16 aa       	std	Z+54, r1	; 0x36
			clearEEPROM(EEPROM_CFG_START,EEPROM_SIZE);
    2b7e:	c0 91 9f 01 	lds	r28, 0x019F	; 0x80019f <EEPROM_CFG_START>
    2b82:	d0 91 a0 01 	lds	r29, 0x01A0	; 0x8001a0 <EEPROM_CFG_START+0x1>
    2b86:	60 91 a1 01 	lds	r22, 0x01A1	; 0x8001a1 <EEPROM_SIZE>
    2b8a:	70 91 a2 01 	lds	r23, 0x01A2	; 0x8001a2 <EEPROM_SIZE+0x1>
    2b8e:	ce 01       	movw	r24, r28
    2b90:	0e 94 d5 00 	call	0x1aa	; 0x1aa <_Z11clearEEPROMii>
			__system_var.eeprom_position = EEPROM_CFG_START;
    2b94:	f8 01       	movw	r30, r16
    2b96:	d3 ab       	std	Z+51, r29	; 0x33
    2b98:	c2 ab       	std	Z+50, r28	; 0x32
			sendToServer("OK\n",CONNECTION);
    2b9a:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    2b9e:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    2ba2:	86 e2       	ldi	r24, 0x26	; 38
    2ba4:	92 e0       	ldi	r25, 0x02	; 2
    2ba6:	0e 94 38 0a 	call	0x1470	; 0x1470 <_Z12sendToServerPci>
			return;
    2baa:	9c c0       	rjmp	.+312    	; 0x2ce4 <_Z15ReceiveSettingsv+0x1cc>
		}
		
		if (__system_var.interface_ == ESP){
			received = strstr(__network_data.esp_buffer, "[END]");
    2bac:	66 e3       	ldi	r22, 0x36	; 54
    2bae:	77 e0       	ldi	r23, 0x07	; 7
    2bb0:	84 ec       	ldi	r24, 0xC4	; 196
    2bb2:	9a e0       	ldi	r25, 0x0A	; 10
    2bb4:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
		} else if (__system_var.interface_ == SIM) {
			received = strstr(__network_data.sim_buffer, "[END]");
		}
		
		if (received != 0){
    2bb8:	89 2b       	or	r24, r25
    2bba:	51 f4       	brne	.+20     	; 0x2bd0 <_Z15ReceiveSettingsv+0xb8>
    2bbc:	25 c0       	rjmp	.+74     	; 0x2c08 <_Z15ReceiveSettingsv+0xf0>
		}
		
		if (__system_var.interface_ == ESP){
			received = strstr(__network_data.esp_buffer, "[END]");
		} else if (__system_var.interface_ == SIM) {
			received = strstr(__network_data.sim_buffer, "[END]");
    2bbe:	66 e3       	ldi	r22, 0x36	; 54
    2bc0:	77 e0       	ldi	r23, 0x07	; 7
    2bc2:	8c ea       	ldi	r24, 0xAC	; 172
    2bc4:	9e e0       	ldi	r25, 0x0E	; 14
    2bc6:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
		}
		
		if (received != 0){
    2bca:	89 2b       	or	r24, r25
    2bcc:	09 f4       	brne	.+2      	; 0x2bd0 <_Z15ReceiveSettingsv+0xb8>
    2bce:	7f c0       	rjmp	.+254    	; 0x2cce <_Z15ReceiveSettingsv+0x1b6>
			__system_var.eeprom_position = EEPROM_CFG_START;
    2bd0:	ea e7       	ldi	r30, 0x7A	; 122
    2bd2:	ff e0       	ldi	r31, 0x0F	; 15
    2bd4:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <EEPROM_CFG_START>
    2bd8:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <EEPROM_CFG_START+0x1>
    2bdc:	93 ab       	std	Z+51, r25	; 0x33
    2bde:	82 ab       	std	Z+50, r24	; 0x32
			__system_var.enabled_flag = 1;
    2be0:	81 e0       	ldi	r24, 0x01	; 1
    2be2:	86 ab       	std	Z+54, r24	; 0x36
			sendToServer("OK\n",CONNECTION);
    2be4:	c0 91 ab 01 	lds	r28, 0x01AB	; 0x8001ab <CONNECTION>
    2be8:	d0 91 ac 01 	lds	r29, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    2bec:	be 01       	movw	r22, r28
    2bee:	86 e2       	ldi	r24, 0x26	; 38
    2bf0:	92 e0       	ldi	r25, 0x02	; 2
    2bf2:	0e 94 38 0a 	call	0x1470	; 0x1470 <_Z12sendToServerPci>
			delay(500);
    2bf6:	84 ef       	ldi	r24, 0xF4	; 244
    2bf8:	91 e0       	ldi	r25, 0x01	; 1
    2bfa:	9e d4       	rcall	.+2364   	; 0x3538 <_Z5delayi>
			sendToServer("NOTIFICATION;UPDATED;\n",CONNECTION);
    2bfc:	be 01       	movw	r22, r28
    2bfe:	8c e3       	ldi	r24, 0x3C	; 60
    2c00:	97 e0       	ldi	r25, 0x07	; 7
    2c02:	0e 94 38 0a 	call	0x1470	; 0x1470 <_Z12sendToServerPci>
			return;
    2c06:	6e c0       	rjmp	.+220    	; 0x2ce4 <_Z15ReceiveSettingsv+0x1cc>
		}
		char *p1;
		if (__system_var.interface_ == ESP){
			p1 = strtok(__network_data.esp_buffer,"$");
    2c08:	63 e5       	ldi	r22, 0x53	; 83
    2c0a:	77 e0       	ldi	r23, 0x07	; 7
    2c0c:	84 ec       	ldi	r24, 0xC4	; 196
    2c0e:	9a e0       	ldi	r25, 0x0A	; 10
    2c10:	0e 94 40 1f 	call	0x3e80	; 0x3e80 <strtok>
		} else if (__system_var.interface_ == SIM) {
			p1 = strtok(__network_data.sim_buffer,"$");
		}
		p1 = strtok(0,"$");
    2c14:	63 e5       	ldi	r22, 0x53	; 83
    2c16:	77 e0       	ldi	r23, 0x07	; 7
    2c18:	80 e0       	ldi	r24, 0x00	; 0
    2c1a:	90 e0       	ldi	r25, 0x00	; 0
    2c1c:	0e 94 40 1f 	call	0x3e80	; 0x3e80 <strtok>
		__system_var.eeprom_position = eepromSaveCfg(p1,__system_var.eeprom_position);
    2c20:	ca e7       	ldi	r28, 0x7A	; 122
    2c22:	df e0       	ldi	r29, 0x0F	; 15
    2c24:	6a a9       	ldd	r22, Y+50	; 0x32
    2c26:	7b a9       	ldd	r23, Y+51	; 0x33
    2c28:	0e 94 b7 00 	call	0x16e	; 0x16e <_Z13eepromSaveCfgPKci>
    2c2c:	9b ab       	std	Y+51, r25	; 0x33
    2c2e:	8a ab       	std	Y+50, r24	; 0x32
		delay(10);
    2c30:	8a e0       	ldi	r24, 0x0A	; 10
    2c32:	90 e0       	ldi	r25, 0x00	; 0
    2c34:	81 d4       	rcall	.+2306   	; 0x3538 <_Z5delayi>
		sendToServer("OK\n",CONNECTION);
    2c36:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    2c3a:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    2c3e:	86 e2       	ldi	r24, 0x26	; 38
    2c40:	92 e0       	ldi	r25, 0x02	; 2
    2c42:	0e 94 38 0a 	call	0x1470	; 0x1470 <_Z12sendToServerPci>
		clearReadLine();
    2c46:	4b d6       	rcall	.+3222   	; 0x38de <_Z13clearReadLinev>
	}
	
	if (__system_var.interface_ == ESP){
    2c48:	8f a5       	ldd	r24, Y+47	; 0x2f
    2c4a:	90 e0       	ldi	r25, 0x00	; 0
    2c4c:	08 17       	cp	r16, r24
    2c4e:	19 07       	cpc	r17, r25
    2c50:	39 f4       	brne	.+14     	; 0x2c60 <_Z15ReceiveSettingsv+0x148>
		received = strstr(__network_data.esp_buffer, "UPDATE");
    2c52:	65 e5       	ldi	r22, 0x55	; 85
    2c54:	77 e0       	ldi	r23, 0x07	; 7
    2c56:	84 ec       	ldi	r24, 0xC4	; 196
    2c58:	9a e0       	ldi	r25, 0x0A	; 10
    2c5a:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
    2c5e:	0d c0       	rjmp	.+26     	; 0x2c7a <_Z15ReceiveSettingsv+0x162>
	} else if (__system_var.interface_ == SIM) {
    2c60:	20 91 af 03 	lds	r18, 0x03AF	; 0x8003af <SIM>
    2c64:	30 91 b0 03 	lds	r19, 0x03B0	; 0x8003b0 <SIM+0x1>
    2c68:	82 17       	cp	r24, r18
    2c6a:	93 07       	cpc	r25, r19
    2c6c:	d9 f5       	brne	.+118    	; 0x2ce4 <_Z15ReceiveSettingsv+0x1cc>
		received = strstr(__network_data.sim_buffer, "UPDATE");
    2c6e:	65 e5       	ldi	r22, 0x55	; 85
    2c70:	77 e0       	ldi	r23, 0x07	; 7
    2c72:	8c ea       	ldi	r24, 0xAC	; 172
    2c74:	9e e0       	ldi	r25, 0x0E	; 14
    2c76:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
	}
	
	if (received != 0){
    2c7a:	89 2b       	or	r24, r25
    2c7c:	99 f1       	breq	.+102    	; 0x2ce4 <_Z15ReceiveSettingsv+0x1cc>
		sendToServer("REQUEST_UPDATE\n",CONNECTION);
    2c7e:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    2c82:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    2c86:	8c e5       	ldi	r24, 0x5C	; 92
    2c88:	97 e0       	ldi	r25, 0x07	; 7
    2c8a:	0e 94 38 0a 	call	0x1470	; 0x1470 <_Z12sendToServerPci>
		clearReadLine();
    2c8e:	27 d6       	rcall	.+3150   	; 0x38de <_Z13clearReadLinev>
    2c90:	29 c0       	rjmp	.+82     	; 0x2ce4 <_Z15ReceiveSettingsv+0x1cc>
	} else if (__system_var.interface_ == SIM) {
		received = strstr(__network_data.sim_buffer, "CFG");
	}
	
	if (received != 0){
		__system_time.check_timer_buffer = 0;
    2c92:	10 92 03 0a 	sts	0x0A03, r1	; 0x800a03 <__system_time+0x17>
    2c96:	10 92 02 0a 	sts	0x0A02, r1	; 0x800a02 <__system_time+0x16>
		
		if (__system_var.interface_ == ESP){
			received = strstr(__network_data.esp_buffer, "[CLEAR_EEPROM]");
    2c9a:	67 e2       	ldi	r22, 0x27	; 39
    2c9c:	77 e0       	ldi	r23, 0x07	; 7
    2c9e:	84 ec       	ldi	r24, 0xC4	; 196
    2ca0:	9a e0       	ldi	r25, 0x0A	; 10
    2ca2:	0e 94 67 1f 	call	0x3ece	; 0x3ece <strstr>
		} else if (__system_var.interface_ == SIM) {
			received = strstr(__network_data.sim_buffer, "[CLEAR_EEPROM]");
		}
		
		if (received != 0){
    2ca6:	89 2b       	or	r24, r25
    2ca8:	09 f4       	brne	.+2      	; 0x2cac <_Z15ReceiveSettingsv+0x194>
    2caa:	80 cf       	rjmp	.-256    	; 0x2bac <_Z15ReceiveSettingsv+0x94>
    2cac:	64 cf       	rjmp	.-312    	; 0x2b76 <_Z15ReceiveSettingsv+0x5e>
	} else if (__system_var.interface_ == SIM) {
		received = strstr(__network_data.sim_buffer, "CFG");
	}
	
	if (received != 0){
		__system_time.check_timer_buffer = 0;
    2cae:	10 92 03 0a 	sts	0x0A03, r1	; 0x800a03 <__system_time+0x17>
    2cb2:	10 92 02 0a 	sts	0x0A02, r1	; 0x800a02 <__system_time+0x16>
		
		if (__system_var.interface_ == ESP){
			received = strstr(__network_data.esp_buffer, "[CLEAR_EEPROM]");
		} else if (__system_var.interface_ == SIM) {
    2cb6:	80 91 af 03 	lds	r24, 0x03AF	; 0x8003af <SIM>
    2cba:	90 91 b0 03 	lds	r25, 0x03B0	; 0x8003b0 <SIM+0x1>
    2cbe:	c8 17       	cp	r28, r24
    2cc0:	d9 07       	cpc	r29, r25
    2cc2:	09 f0       	breq	.+2      	; 0x2cc6 <_Z15ReceiveSettingsv+0x1ae>
    2cc4:	58 cf       	rjmp	.-336    	; 0x2b76 <_Z15ReceiveSettingsv+0x5e>
    2cc6:	4f cf       	rjmp	.-354    	; 0x2b66 <_Z15ReceiveSettingsv+0x4e>
		received = strstr(__network_data.esp_buffer, "CFG");
	} else if (__system_var.interface_ == SIM) {
		received = strstr(__network_data.sim_buffer, "CFG");
	}
	
	if (received != 0){
    2cc8:	89 2b       	or	r24, r25
    2cca:	89 f7       	brne	.-30     	; 0x2cae <_Z15ReceiveSettingsv+0x196>
    2ccc:	07 c0       	rjmp	.+14     	; 0x2cdc <_Z15ReceiveSettingsv+0x1c4>
		}
		char *p1;
		if (__system_var.interface_ == ESP){
			p1 = strtok(__network_data.esp_buffer,"$");
		} else if (__system_var.interface_ == SIM) {
			p1 = strtok(__network_data.sim_buffer,"$");
    2cce:	63 e5       	ldi	r22, 0x53	; 83
    2cd0:	77 e0       	ldi	r23, 0x07	; 7
    2cd2:	8c ea       	ldi	r24, 0xAC	; 172
    2cd4:	9e e0       	ldi	r25, 0x0E	; 14
    2cd6:	0e 94 40 1f 	call	0x3e80	; 0x3e80 <strtok>
    2cda:	9c cf       	rjmp	.-200    	; 0x2c14 <_Z15ReceiveSettingsv+0xfc>
		delay(10);
		sendToServer("OK\n",CONNECTION);
		clearReadLine();
	}
	
	if (__system_var.interface_ == ESP){
    2cdc:	80 91 a9 0f 	lds	r24, 0x0FA9	; 0x800fa9 <__system_var+0x2f>
    2ce0:	90 e0       	ldi	r25, 0x00	; 0
    2ce2:	be cf       	rjmp	.-132    	; 0x2c60 <_Z15ReceiveSettingsv+0x148>
	
	if (received != 0){
		sendToServer("REQUEST_UPDATE\n",CONNECTION);
		clearReadLine();
	}
}
    2ce4:	df 91       	pop	r29
    2ce6:	cf 91       	pop	r28
    2ce8:	1f 91       	pop	r17
    2cea:	0f 91       	pop	r16
    2cec:	08 95       	ret

00002cee <_Z22CheckModuleConnectionsv>:

void CheckModuleConnections(){
    2cee:	2f 92       	push	r2
    2cf0:	3f 92       	push	r3
    2cf2:	4f 92       	push	r4
    2cf4:	5f 92       	push	r5
    2cf6:	6f 92       	push	r6
    2cf8:	7f 92       	push	r7
    2cfa:	8f 92       	push	r8
    2cfc:	9f 92       	push	r9
    2cfe:	af 92       	push	r10
    2d00:	bf 92       	push	r11
    2d02:	cf 92       	push	r12
    2d04:	df 92       	push	r13
    2d06:	ef 92       	push	r14
    2d08:	ff 92       	push	r15
    2d0a:	0f 93       	push	r16
    2d0c:	1f 93       	push	r17
    2d0e:	cf 93       	push	r28
    2d10:	df 93       	push	r29
    2d12:	cd b7       	in	r28, 0x3d	; 61
    2d14:	de b7       	in	r29, 0x3e	; 62
    2d16:	a3 97       	sbiw	r28, 0x23	; 35
    2d18:	0f b6       	in	r0, 0x3f	; 63
    2d1a:	f8 94       	cli
    2d1c:	de bf       	out	0x3e, r29	; 62
    2d1e:	0f be       	out	0x3f, r0	; 63
    2d20:	cd bf       	out	0x3d, r28	; 61
	
	if (__system_time.relay_module_check_timer_buffer >= __system_time.relay_module_check_timer){
    2d22:	ec ee       	ldi	r30, 0xEC	; 236
    2d24:	f9 e0       	ldi	r31, 0x09	; 9
    2d26:	22 8d       	ldd	r18, Z+26	; 0x1a
    2d28:	33 8d       	ldd	r19, Z+27	; 0x1b
    2d2a:	80 8d       	ldd	r24, Z+24	; 0x18
    2d2c:	91 8d       	ldd	r25, Z+25	; 0x19
    2d2e:	28 17       	cp	r18, r24
    2d30:	39 07       	cpc	r19, r25
    2d32:	0c f4       	brge	.+2      	; 0x2d36 <_Z22CheckModuleConnectionsv+0x48>
    2d34:	02 c1       	rjmp	.+516    	; 0x2f3a <_Z22CheckModuleConnectionsv+0x24c>
    2d36:	4a e0       	ldi	r20, 0x0A	; 10
    2d38:	be 01       	movw	r22, r28
    2d3a:	61 5e       	subi	r22, 0xE1	; 225
    2d3c:	7f 4f       	sbci	r23, 0xFF	; 255
    2d3e:	80 91 02 0a 	lds	r24, 0x0A02	; 0x800a02 <__system_time+0x16>
    2d42:	90 91 03 0a 	lds	r25, 0x0A03	; 0x800a03 <__system_time+0x17>
    2d46:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <__itoa_ncheck>
    2d4a:	0f 2e       	mov	r0, r31
    2d4c:	f9 e8       	ldi	r31, 0x89	; 137
    2d4e:	ef 2e       	mov	r14, r31
    2d50:	ff e0       	ldi	r31, 0x0F	; 15
    2d52:	ff 2e       	mov	r15, r31
    2d54:	f0 2d       	mov	r31, r0
		int i,j;

		itoa(__system_time.check_timer_buffer,conv,10);
		
		// CHECK RELAY MODULE CONNECTIONS
		for (i=0;i<4;i++){
    2d56:	00 e0       	ldi	r16, 0x00	; 0
    2d58:	10 e0       	ldi	r17, 0x00	; 0
			char conv[5];
			
			if (digitalRead(__system_var.detect_pins[i]) == 0 && __system_var.module_flags[i] == 0){
				delay(500);
				__system_var.module_connected[i] = 1;
    2d5a:	88 24       	eor	r8, r8
    2d5c:	83 94       	inc	r8
    2d5e:	91 2c       	mov	r9, r1
				__system_var.module_flags[i] = 1;
    2d60:	21 2c       	mov	r2, r1
				for (j=0;j<5;j++){
					chipSelect(i, 0);
					relay_count = SPI_WriteRead(REQUEST_RELAY_COUNT);
    2d62:	30 90 8e 03 	lds	r3, 0x038E	; 0x80038e <REQUEST_RELAY_COUNT>
					relay_count = SPI_WriteRead(RECIEVE);
    2d66:	40 90 8d 03 	lds	r4, 0x038D	; 0x80038d <RECIEVE>
				}
				if (relay_count == 0 || relay_count == 1 || relay_count == 255 || relay_count == 254){
					relay_count = 0;
				}
				__system_var.relay_modules[i] = relay_count;
				__system_var.update_flag = 1;
    2d6a:	0f 2e       	mov	r0, r31
    2d6c:	fa e7       	ldi	r31, 0x7A	; 122
    2d6e:	6f 2e       	mov	r6, r31
    2d70:	ff e0       	ldi	r31, 0x0F	; 15
    2d72:	7f 2e       	mov	r7, r31
    2d74:	f0 2d       	mov	r31, r0
    2d76:	57 01       	movw	r10, r14
		
		// CHECK RELAY MODULE CONNECTIONS
		for (i=0;i<4;i++){
			char conv[5];
			
			if (digitalRead(__system_var.detect_pins[i]) == 0 && __system_var.module_flags[i] == 0){
    2d78:	d7 01       	movw	r26, r14
    2d7a:	58 96       	adiw	r26, 0x18	; 24
    2d7c:	8d 91       	ld	r24, X+
    2d7e:	9c 91       	ld	r25, X
    2d80:	59 97       	sbiw	r26, 0x19	; 25
    2d82:	9f d4       	rcall	.+2366   	; 0x36c2 <_Z11digitalReadi>
    2d84:	81 11       	cpse	r24, r1
    2d86:	24 c0       	rjmp	.+72     	; 0x2dd0 <_Z22CheckModuleConnectionsv+0xe2>
    2d88:	f7 01       	movw	r30, r14
    2d8a:	80 89       	ldd	r24, Z+16	; 0x10
    2d8c:	91 89       	ldd	r25, Z+17	; 0x11
    2d8e:	89 2b       	or	r24, r25
    2d90:	09 f4       	brne	.+2      	; 0x2d94 <_Z22CheckModuleConnectionsv+0xa6>
    2d92:	b3 c0       	rjmp	.+358    	; 0x2efa <_Z22CheckModuleConnectionsv+0x20c>
    2d94:	1d c0       	rjmp	.+58     	; 0x2dd0 <_Z22CheckModuleConnectionsv+0xe2>
				delay(500);
				__system_var.module_connected[i] = 1;
				__system_var.module_flags[i] = 1;
				for (j=0;j<5;j++){
					chipSelect(i, 0);
    2d96:	60 e0       	ldi	r22, 0x00	; 0
    2d98:	70 e0       	ldi	r23, 0x00	; 0
    2d9a:	c8 01       	movw	r24, r16
    2d9c:	23 d3       	rcall	.+1606   	; 0x33e4 <_Z10chipSelectii>
					relay_count = SPI_WriteRead(REQUEST_RELAY_COUNT);
    2d9e:	83 2d       	mov	r24, r3
    2da0:	5c d3       	rcall	.+1720   	; 0x345a <_Z13SPI_WriteReadh>
					relay_count = SPI_WriteRead(RECIEVE);
    2da2:	84 2d       	mov	r24, r4
    2da4:	5a d3       	rcall	.+1716   	; 0x345a <_Z13SPI_WriteReadh>
    2da6:	58 2e       	mov	r5, r24
					chipSelect(i, 1);
    2da8:	b4 01       	movw	r22, r8
    2daa:	c8 01       	movw	r24, r16
    2dac:	1b d3       	rcall	.+1590   	; 0x33e4 <_Z10chipSelectii>
					if (!(relay_count == 0 || relay_count == 1 || relay_count == 255 || relay_count == 254)){
    2dae:	8e ef       	ldi	r24, 0xFE	; 254
    2db0:	85 0d       	add	r24, r5
    2db2:	8c 3f       	cpi	r24, 0xFC	; 252
    2db4:	28 f0       	brcs	.+10     	; 0x2dc0 <_Z22CheckModuleConnectionsv+0xd2>
    2db6:	f1 e0       	ldi	r31, 0x01	; 1
    2db8:	cf 1a       	sub	r12, r31
    2dba:	d1 08       	sbc	r13, r1
			
			if (digitalRead(__system_var.detect_pins[i]) == 0 && __system_var.module_flags[i] == 0){
				delay(500);
				__system_var.module_connected[i] = 1;
				__system_var.module_flags[i] = 1;
				for (j=0;j<5;j++){
    2dbc:	61 f7       	brne	.-40     	; 0x2d96 <_Z22CheckModuleConnectionsv+0xa8>
					if (!(relay_count == 0 || relay_count == 1 || relay_count == 255 || relay_count == 254)){
						break;
					}
				}
				if (relay_count == 0 || relay_count == 1 || relay_count == 255 || relay_count == 254){
					relay_count = 0;
    2dbe:	51 2c       	mov	r5, r1
				}
				__system_var.relay_modules[i] = relay_count;
    2dc0:	85 2d       	mov	r24, r5
    2dc2:	90 e0       	ldi	r25, 0x00	; 0
    2dc4:	d5 01       	movw	r26, r10
    2dc6:	8d 93       	st	X+, r24
    2dc8:	9c 93       	st	X, r25
				__system_var.update_flag = 1;
    2dca:	f3 01       	movw	r30, r6
    2dcc:	95 aa       	std	Z+53, r9	; 0x35
    2dce:	84 aa       	std	Z+52, r8	; 0x34
				
				//delay(500);
			}
			if (digitalRead(__system_var.detect_pins[i]) != 0 && __system_var.module_flags[i] == 1){
    2dd0:	d5 01       	movw	r26, r10
    2dd2:	58 96       	adiw	r26, 0x18	; 24
    2dd4:	8d 91       	ld	r24, X+
    2dd6:	9c 91       	ld	r25, X
    2dd8:	59 97       	sbiw	r26, 0x19	; 25
    2dda:	73 d4       	rcall	.+2278   	; 0x36c2 <_Z11digitalReadi>
    2ddc:	88 23       	and	r24, r24
    2dde:	31 f0       	breq	.+12     	; 0x2dec <_Z22CheckModuleConnectionsv+0xfe>
    2de0:	f5 01       	movw	r30, r10
    2de2:	80 89       	ldd	r24, Z+16	; 0x10
    2de4:	91 89       	ldd	r25, Z+17	; 0x11
    2de6:	01 97       	sbiw	r24, 0x01	; 1
    2de8:	09 f4       	brne	.+2      	; 0x2dec <_Z22CheckModuleConnectionsv+0xfe>
    2dea:	99 c0       	rjmp	.+306    	; 0x2f1e <_Z22CheckModuleConnectionsv+0x230>
		int i,j;

		itoa(__system_time.check_timer_buffer,conv,10);
		
		// CHECK RELAY MODULE CONNECTIONS
		for (i=0;i<4;i++){
    2dec:	0f 5f       	subi	r16, 0xFF	; 255
    2dee:	1f 4f       	sbci	r17, 0xFF	; 255
    2df0:	f2 e0       	ldi	r31, 0x02	; 2
    2df2:	ef 0e       	add	r14, r31
    2df4:	f1 1c       	adc	r15, r1
    2df6:	04 30       	cpi	r16, 0x04	; 4
    2df8:	11 05       	cpc	r17, r1
    2dfa:	09 f0       	breq	.+2      	; 0x2dfe <_Z22CheckModuleConnectionsv+0x110>
    2dfc:	bc cf       	rjmp	.-136    	; 0x2d76 <_Z22CheckModuleConnectionsv+0x88>
				__system_var.update_flag = 1;
				//delay(500);
			}
		}
		
		if (__system_var.update_flag == 1 && __network_data.is_server_connected){
    2dfe:	80 91 ae 0f 	lds	r24, 0x0FAE	; 0x800fae <__system_var+0x34>
    2e02:	90 91 af 0f 	lds	r25, 0x0FAF	; 0x800faf <__system_var+0x35>
    2e06:	01 97       	sbiw	r24, 0x01	; 1
    2e08:	09 f0       	breq	.+2      	; 0x2e0c <_Z22CheckModuleConnectionsv+0x11e>
    2e0a:	72 c0       	rjmp	.+228    	; 0x2ef0 <_Z22CheckModuleConnectionsv+0x202>
    2e0c:	80 91 c3 0a 	lds	r24, 0x0AC3	; 0x800ac3 <__network_data+0xb3>
    2e10:	88 23       	and	r24, r24
    2e12:	09 f4       	brne	.+2      	; 0x2e16 <_Z22CheckModuleConnectionsv+0x128>
    2e14:	6d c0       	rjmp	.+218    	; 0x2ef0 <_Z22CheckModuleConnectionsv+0x202>
			__system_var.update_flag = 0;
    2e16:	10 92 af 0f 	sts	0x0FAF, r1	; 0x800faf <__system_var+0x35>
    2e1a:	10 92 ae 0f 	sts	0x0FAE, r1	; 0x800fae <__system_var+0x34>
			char toSend[30] = "RELAYCONNECTIONS;";
    2e1e:	82 e1       	ldi	r24, 0x12	; 18
    2e20:	e6 e0       	ldi	r30, 0x06	; 6
    2e22:	f1 e0       	ldi	r31, 0x01	; 1
    2e24:	de 01       	movw	r26, r28
    2e26:	11 96       	adiw	r26, 0x01	; 1
    2e28:	01 90       	ld	r0, Z+
    2e2a:	0d 92       	st	X+, r0
    2e2c:	8a 95       	dec	r24
    2e2e:	e1 f7       	brne	.-8      	; 0x2e28 <_Z22CheckModuleConnectionsv+0x13a>
    2e30:	fe 01       	movw	r30, r28
    2e32:	73 96       	adiw	r30, 0x13	; 19
    2e34:	8c e0       	ldi	r24, 0x0C	; 12
    2e36:	df 01       	movw	r26, r30
    2e38:	1d 92       	st	X+, r1
    2e3a:	8a 95       	dec	r24
    2e3c:	e9 f7       	brne	.-6      	; 0x2e38 <_Z22CheckModuleConnectionsv+0x14a>
    2e3e:	0f 2e       	mov	r0, r31
    2e40:	fa e7       	ldi	r31, 0x7A	; 122
    2e42:	ef 2e       	mov	r14, r31
    2e44:	ff e0       	ldi	r31, 0x0F	; 15
    2e46:	ff 2e       	mov	r15, r31
    2e48:	f0 2d       	mov	r31, r0
			int i;
			for (i=0;i<4;i++){
    2e4a:	00 e0       	ldi	r16, 0x00	; 0
    2e4c:	10 e0       	ldi	r17, 0x00	; 0
				if (__system_var.module_connected[i] == 1) {
					strcat(toSend,itoa(i,conv,10));
    2e4e:	72 97       	sbiw	r30, 0x12	; 18
    2e50:	6f 01       	movw	r12, r30
					strcat(toSend,":");
    2e52:	0f 2e       	mov	r0, r31
    2e54:	fa e3       	ldi	r31, 0x3A	; 58
    2e56:	8f 2e       	mov	r8, r31
    2e58:	91 2c       	mov	r9, r1
    2e5a:	f0 2d       	mov	r31, r0
					strcat(toSend,itoa(__system_var.relay_modules[i],conv,10));
					strcat(toSend,";");
    2e5c:	0f 2e       	mov	r0, r31
    2e5e:	fb e3       	ldi	r31, 0x3B	; 59
    2e60:	af 2e       	mov	r10, r31
    2e62:	b1 2c       	mov	r11, r1
    2e64:	f0 2d       	mov	r31, r0
		if (__system_var.update_flag == 1 && __network_data.is_server_connected){
			__system_var.update_flag = 0;
			char toSend[30] = "RELAYCONNECTIONS;";
			int i;
			for (i=0;i<4;i++){
				if (__system_var.module_connected[i] == 1) {
    2e66:	d7 01       	movw	r26, r14
    2e68:	57 96       	adiw	r26, 0x17	; 23
    2e6a:	8d 91       	ld	r24, X+
    2e6c:	9c 91       	ld	r25, X
    2e6e:	58 97       	sbiw	r26, 0x18	; 24
    2e70:	01 97       	sbiw	r24, 0x01	; 1
    2e72:	29 f5       	brne	.+74     	; 0x2ebe <_Z22CheckModuleConnectionsv+0x1d0>
    2e74:	4a e0       	ldi	r20, 0x0A	; 10
    2e76:	be 01       	movw	r22, r28
    2e78:	61 5e       	subi	r22, 0xE1	; 225
    2e7a:	7f 4f       	sbci	r23, 0xFF	; 255
    2e7c:	c8 01       	movw	r24, r16
    2e7e:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <__itoa_ncheck>
					strcat(toSend,itoa(i,conv,10));
    2e82:	bc 01       	movw	r22, r24
    2e84:	c6 01       	movw	r24, r12
    2e86:	0e 94 4a 1f 	call	0x3e94	; 0x3e94 <strcat>
					strcat(toSend,":");
    2e8a:	f6 01       	movw	r30, r12
    2e8c:	01 90       	ld	r0, Z+
    2e8e:	00 20       	and	r0, r0
    2e90:	e9 f7       	brne	.-6      	; 0x2e8c <_Z22CheckModuleConnectionsv+0x19e>
    2e92:	31 97       	sbiw	r30, 0x01	; 1
    2e94:	91 82       	std	Z+1, r9	; 0x01
    2e96:	80 82       	st	Z, r8
    2e98:	4a e0       	ldi	r20, 0x0A	; 10
    2e9a:	be 01       	movw	r22, r28
    2e9c:	61 5e       	subi	r22, 0xE1	; 225
    2e9e:	7f 4f       	sbci	r23, 0xFF	; 255
    2ea0:	f7 01       	movw	r30, r14
    2ea2:	87 85       	ldd	r24, Z+15	; 0x0f
    2ea4:	90 89       	ldd	r25, Z+16	; 0x10
    2ea6:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <__itoa_ncheck>
					strcat(toSend,itoa(__system_var.relay_modules[i],conv,10));
    2eaa:	bc 01       	movw	r22, r24
    2eac:	c6 01       	movw	r24, r12
    2eae:	f2 d7       	rcall	.+4068   	; 0x3e94 <strcat>
					strcat(toSend,";");
    2eb0:	f6 01       	movw	r30, r12
    2eb2:	01 90       	ld	r0, Z+
    2eb4:	00 20       	and	r0, r0
    2eb6:	e9 f7       	brne	.-6      	; 0x2eb2 <_Z22CheckModuleConnectionsv+0x1c4>
    2eb8:	31 97       	sbiw	r30, 0x01	; 1
    2eba:	b1 82       	std	Z+1, r11	; 0x01
    2ebc:	a0 82       	st	Z, r10
		
		if (__system_var.update_flag == 1 && __network_data.is_server_connected){
			__system_var.update_flag = 0;
			char toSend[30] = "RELAYCONNECTIONS;";
			int i;
			for (i=0;i<4;i++){
    2ebe:	0f 5f       	subi	r16, 0xFF	; 255
    2ec0:	1f 4f       	sbci	r17, 0xFF	; 255
    2ec2:	f2 e0       	ldi	r31, 0x02	; 2
    2ec4:	ef 0e       	add	r14, r31
    2ec6:	f1 1c       	adc	r15, r1
    2ec8:	04 30       	cpi	r16, 0x04	; 4
    2eca:	11 05       	cpc	r17, r1
    2ecc:	61 f6       	brne	.-104    	; 0x2e66 <_Z22CheckModuleConnectionsv+0x178>
					strcat(toSend,":");
					strcat(toSend,itoa(__system_var.relay_modules[i],conv,10));
					strcat(toSend,";");
				}
			}
			strcat(toSend,"\n");
    2ece:	ce 01       	movw	r24, r28
    2ed0:	01 96       	adiw	r24, 0x01	; 1
    2ed2:	fc 01       	movw	r30, r24
    2ed4:	01 90       	ld	r0, Z+
    2ed6:	00 20       	and	r0, r0
    2ed8:	e9 f7       	brne	.-6      	; 0x2ed4 <_Z22CheckModuleConnectionsv+0x1e6>
    2eda:	31 97       	sbiw	r30, 0x01	; 1
    2edc:	2a e0       	ldi	r18, 0x0A	; 10
    2ede:	30 e0       	ldi	r19, 0x00	; 0
    2ee0:	31 83       	std	Z+1, r19	; 0x01
    2ee2:	20 83       	st	Z, r18
			sendToServer(toSend,CONNECTION);
    2ee4:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    2ee8:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    2eec:	0e 94 38 0a 	call	0x1470	; 0x1470 <_Z12sendToServerPci>
		}
		__system_time.relay_module_check_timer_buffer = 0;
    2ef0:	10 92 07 0a 	sts	0x0A07, r1	; 0x800a07 <__system_time+0x1b>
    2ef4:	10 92 06 0a 	sts	0x0A06, r1	; 0x800a06 <__system_time+0x1a>
    2ef8:	20 c0       	rjmp	.+64     	; 0x2f3a <_Z22CheckModuleConnectionsv+0x24c>
		// CHECK RELAY MODULE CONNECTIONS
		for (i=0;i<4;i++){
			char conv[5];
			
			if (digitalRead(__system_var.detect_pins[i]) == 0 && __system_var.module_flags[i] == 0){
				delay(500);
    2efa:	84 ef       	ldi	r24, 0xF4	; 244
    2efc:	91 e0       	ldi	r25, 0x01	; 1
    2efe:	1c d3       	rcall	.+1592   	; 0x3538 <_Z5delayi>
				__system_var.module_connected[i] = 1;
    2f00:	d7 01       	movw	r26, r14
    2f02:	19 96       	adiw	r26, 0x09	; 9
    2f04:	9c 92       	st	X, r9
    2f06:	8e 92       	st	-X, r8
    2f08:	18 97       	sbiw	r26, 0x08	; 8
				__system_var.module_flags[i] = 1;
    2f0a:	51 96       	adiw	r26, 0x11	; 17
    2f0c:	9c 92       	st	X, r9
    2f0e:	8e 92       	st	-X, r8
    2f10:	50 97       	sbiw	r26, 0x10	; 16
    2f12:	0f 2e       	mov	r0, r31
    2f14:	f5 e0       	ldi	r31, 0x05	; 5
    2f16:	cf 2e       	mov	r12, r31
    2f18:	f0 2d       	mov	r31, r0
    2f1a:	d2 2c       	mov	r13, r2
    2f1c:	3c cf       	rjmp	.-392    	; 0x2d96 <_Z22CheckModuleConnectionsv+0xa8>
				__system_var.update_flag = 1;
				
				//delay(500);
			}
			if (digitalRead(__system_var.detect_pins[i]) != 0 && __system_var.module_flags[i] == 1){
				delay(500);
    2f1e:	84 ef       	ldi	r24, 0xF4	; 244
    2f20:	91 e0       	ldi	r25, 0x01	; 1
    2f22:	0a d3       	rcall	.+1556   	; 0x3538 <_Z5delayi>
				__system_var.module_connected[i] = 0;
    2f24:	f5 01       	movw	r30, r10
    2f26:	11 86       	std	Z+9, r1	; 0x09
    2f28:	10 86       	std	Z+8, r1	; 0x08
				__system_var.module_flags[i] = 0;
    2f2a:	11 8a       	std	Z+17, r1	; 0x11
    2f2c:	10 8a       	std	Z+16, r1	; 0x10
				__system_var.update_flag = 1;
    2f2e:	d3 01       	movw	r26, r6
    2f30:	d5 96       	adiw	r26, 0x35	; 53
    2f32:	9c 92       	st	X, r9
    2f34:	8e 92       	st	-X, r8
    2f36:	d4 97       	sbiw	r26, 0x34	; 52
    2f38:	59 cf       	rjmp	.-334    	; 0x2dec <_Z22CheckModuleConnectionsv+0xfe>
			strcat(toSend,"\n");
			sendToServer(toSend,CONNECTION);
		}
		__system_time.relay_module_check_timer_buffer = 0;
	}
}
    2f3a:	a3 96       	adiw	r28, 0x23	; 35
    2f3c:	0f b6       	in	r0, 0x3f	; 63
    2f3e:	f8 94       	cli
    2f40:	de bf       	out	0x3e, r29	; 62
    2f42:	0f be       	out	0x3f, r0	; 63
    2f44:	cd bf       	out	0x3d, r28	; 61
    2f46:	df 91       	pop	r29
    2f48:	cf 91       	pop	r28
    2f4a:	1f 91       	pop	r17
    2f4c:	0f 91       	pop	r16
    2f4e:	ff 90       	pop	r15
    2f50:	ef 90       	pop	r14
    2f52:	df 90       	pop	r13
    2f54:	cf 90       	pop	r12
    2f56:	bf 90       	pop	r11
    2f58:	af 90       	pop	r10
    2f5a:	9f 90       	pop	r9
    2f5c:	8f 90       	pop	r8
    2f5e:	7f 90       	pop	r7
    2f60:	6f 90       	pop	r6
    2f62:	5f 90       	pop	r5
    2f64:	4f 90       	pop	r4
    2f66:	3f 90       	pop	r3
    2f68:	2f 90       	pop	r2
    2f6a:	08 95       	ret

00002f6c <_Z9HeartBeatv>:

void HeartBeat(){
	// CHECK SERVER CONNECTION
	if (__system_time.check_timer_buffer >= __system_time.check_timer){
    2f6c:	ec ee       	ldi	r30, 0xEC	; 236
    2f6e:	f9 e0       	ldi	r31, 0x09	; 9
    2f70:	26 89       	ldd	r18, Z+22	; 0x16
    2f72:	37 89       	ldd	r19, Z+23	; 0x17
    2f74:	84 89       	ldd	r24, Z+20	; 0x14
    2f76:	95 89       	ldd	r25, Z+21	; 0x15
    2f78:	28 17       	cp	r18, r24
    2f7a:	39 07       	cpc	r19, r25
    2f7c:	04 f1       	brlt	.+64     	; 0x2fbe <_Z9HeartBeatv+0x52>
		
		if (__network_data.is_server_connected ){
    2f7e:	80 91 c3 0a 	lds	r24, 0x0AC3	; 0x800ac3 <__network_data+0xb3>
    2f82:	88 23       	and	r24, r24
    2f84:	c1 f0       	breq	.+48     	; 0x2fb6 <_Z9HeartBeatv+0x4a>
			sendToServer("CHECK\n",CONNECTION);
    2f86:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    2f8a:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    2f8e:	8c e6       	ldi	r24, 0x6C	; 108
    2f90:	97 e0       	ldi	r25, 0x07	; 7
    2f92:	0e 94 38 0a 	call	0x1470	; 0x1470 <_Z12sendToServerPci>
			if (readUntil("LIVE",3) == 0){
    2f96:	63 e0       	ldi	r22, 0x03	; 3
    2f98:	70 e0       	ldi	r23, 0x00	; 0
    2f9a:	83 e7       	ldi	r24, 0x73	; 115
    2f9c:	97 e0       	ldi	r25, 0x07	; 7
    2f9e:	0e 94 0f 09 	call	0x121e	; 0x121e <_Z9readUntilPKci>
    2fa2:	89 2b       	or	r24, r25
    2fa4:	41 f4       	brne	.+16     	; 0x2fb6 <_Z9HeartBeatv+0x4a>
				__network_data.is_server_connected = FALSE;
    2fa6:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <FALSE>
    2faa:	80 93 c3 0a 	sts	0x0AC3, r24	; 0x800ac3 <__network_data+0xb3>
				__network_data.is_esp_connected = FALSE;
    2fae:	80 93 c1 0a 	sts	0x0AC1, r24	; 0x800ac1 <__network_data+0xb1>
				__network_data.is_sim_connected = FALSE;
    2fb2:	80 93 c2 0a 	sts	0x0AC2, r24	; 0x800ac2 <__network_data+0xb2>
			}
		}
		__system_time.check_timer_buffer = 0;
    2fb6:	10 92 03 0a 	sts	0x0A03, r1	; 0x800a03 <__system_time+0x17>
    2fba:	10 92 02 0a 	sts	0x0A02, r1	; 0x800a02 <__system_time+0x16>
    2fbe:	08 95       	ret

00002fc0 <_Z18ProcessRelayTimersv>:
	}
}

void ProcessRelayTimers(){
    2fc0:	2f 92       	push	r2
    2fc2:	3f 92       	push	r3
    2fc4:	4f 92       	push	r4
    2fc6:	5f 92       	push	r5
    2fc8:	6f 92       	push	r6
    2fca:	7f 92       	push	r7
    2fcc:	8f 92       	push	r8
    2fce:	9f 92       	push	r9
    2fd0:	af 92       	push	r10
    2fd2:	bf 92       	push	r11
    2fd4:	cf 92       	push	r12
    2fd6:	df 92       	push	r13
    2fd8:	ef 92       	push	r14
    2fda:	ff 92       	push	r15
    2fdc:	0f 93       	push	r16
    2fde:	1f 93       	push	r17
    2fe0:	cf 93       	push	r28
    2fe2:	df 93       	push	r29
    2fe4:	00 d0       	rcall	.+0      	; 0x2fe6 <_Z18ProcessRelayTimersv+0x26>
    2fe6:	00 d0       	rcall	.+0      	; 0x2fe8 <_Z18ProcessRelayTimersv+0x28>
    2fe8:	cd b7       	in	r28, 0x3d	; 61
    2fea:	de b7       	in	r29, 0x3e	; 62
	if ((__system_time.timer_check_timer_buffer >= __system_time.timer_check_timer) && __system_var.enabled_flag == 1){
    2fec:	ec ee       	ldi	r30, 0xEC	; 236
    2fee:	f9 e0       	ldi	r31, 0x09	; 9
    2ff0:	26 8d       	ldd	r18, Z+30	; 0x1e
    2ff2:	37 8d       	ldd	r19, Z+31	; 0x1f
    2ff4:	84 8d       	ldd	r24, Z+28	; 0x1c
    2ff6:	95 8d       	ldd	r25, Z+29	; 0x1d
    2ff8:	28 17       	cp	r18, r24
    2ffa:	39 07       	cpc	r19, r25
    2ffc:	0c f4       	brge	.+2      	; 0x3000 <_Z18ProcessRelayTimersv+0x40>
    2ffe:	c0 c0       	rjmp	.+384    	; 0x3180 <_Z18ProcessRelayTimersv+0x1c0>
    3000:	80 91 b0 0f 	lds	r24, 0x0FB0	; 0x800fb0 <__system_var+0x36>
    3004:	81 30       	cpi	r24, 0x01	; 1
    3006:	09 f0       	breq	.+2      	; 0x300a <_Z18ProcessRelayTimersv+0x4a>
    3008:	bb c0       	rjmp	.+374    	; 0x3180 <_Z18ProcessRelayTimersv+0x1c0>
		int module_index;
		char conv[5];
		// this should be initialized after receiving updates from server and after module startup
		initializeTimerSettingIds();
    300a:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <_Z25initializeTimerSettingIdsv>
    300e:	8e e0       	ldi	r24, 0x0E	; 14
    3010:	99 e0       	ldi	r25, 0x09	; 9
    3012:	9a 83       	std	Y+2, r25	; 0x02
    3014:	89 83       	std	Y+1, r24	; 0x01
		
		for (module_index=0;module_index<MAX_MODULE_COUNT;module_index++){
    3016:	00 e0       	ldi	r16, 0x00	; 0
    3018:	10 e0       	ldi	r17, 0x00	; 0
		}
		__system_time.check_timer_buffer = 0;
	}
}

void ProcessRelayTimers(){
    301a:	61 2c       	mov	r6, r1
			int relay_index;

			for (relay_index=0;relay_index<MAX_RELAY_COUNT;relay_index++){
				if (__timer_records[module_index].relays[relay_index] != 254){
					char isTimerActive = FALSE;
					__system_var.eeprom_position = EEPROM_CFG_START;
    301c:	0f 2e       	mov	r0, r31
    301e:	fa e7       	ldi	r31, 0x7A	; 122
    3020:	4f 2e       	mov	r4, r31
    3022:	ff e0       	ldi	r31, 0x0F	; 15
    3024:	5f 2e       	mov	r5, r31
    3026:	f0 2d       	mov	r31, r0
    3028:	20 90 9f 01 	lds	r2, 0x019F	; 0x80019f <EEPROM_CFG_START>
    302c:	30 90 a0 01 	lds	r3, 0x01A0	; 0x8001a0 <EEPROM_CFG_START+0x1>

					// Get all the timers associated with relays
					while (getTimerSetting(module_index,__timer_records[module_index].relays[relay_index]) != 0){
						if (isCurrentTimerActive() == TRUE){
    3030:	e0 90 ad 03 	lds	r14, 0x03AD	; 0x8003ad <TRUE>
    3034:	f0 90 ae 03 	lds	r15, 0x03AE	; 0x8003ae <TRUE+0x1>
    3038:	94 c0       	rjmp	.+296    	; 0x3162 <_Z18ProcessRelayTimersv+0x1a2>
    303a:	dc 82       	std	Y+4, r13	; 0x04
    303c:	cb 82       	std	Y+3, r12	; 0x03
		
		for (module_index=0;module_index<MAX_MODULE_COUNT;module_index++){
			int relay_index;

			for (relay_index=0;relay_index<MAX_RELAY_COUNT;relay_index++){
				if (__timer_records[module_index].relays[relay_index] != 254){
    303e:	d6 01       	movw	r26, r12
    3040:	12 96       	adiw	r26, 0x02	; 2
    3042:	8d 91       	ld	r24, X+
    3044:	9c 91       	ld	r25, X
    3046:	13 97       	sbiw	r26, 0x03	; 3
    3048:	8e 3f       	cpi	r24, 0xFE	; 254
    304a:	91 05       	cpc	r25, r1
    304c:	09 f4       	brne	.+2      	; 0x3050 <_Z18ProcessRelayTimersv+0x90>
    304e:	74 c0       	rjmp	.+232    	; 0x3138 <_Z18ProcessRelayTimersv+0x178>
					char isTimerActive = FALSE;
    3050:	eb ea       	ldi	r30, 0xAB	; 171
    3052:	f3 e0       	ldi	r31, 0x03	; 3
    3054:	70 80       	ld	r7, Z
					__system_var.eeprom_position = EEPROM_CFG_START;
    3056:	d2 01       	movw	r26, r4
    3058:	d3 96       	adiw	r26, 0x33	; 51
    305a:	3c 92       	st	X, r3
    305c:	2e 92       	st	-X, r2
    305e:	d2 97       	sbiw	r26, 0x32	; 50

					// Get all the timers associated with relays
					while (getTimerSetting(module_index,__timer_records[module_index].relays[relay_index]) != 0){
    3060:	06 c0       	rjmp	.+12     	; 0x306e <_Z18ProcessRelayTimersv+0xae>
						if (isCurrentTimerActive() == TRUE){
    3062:	0e 94 47 07 	call	0xe8e	; 0xe8e <_Z20isCurrentTimerActivev>
    3066:	8e 15       	cp	r24, r14
    3068:	9f 05       	cpc	r25, r15
    306a:	09 f4       	brne	.+2      	; 0x306e <_Z18ProcessRelayTimersv+0xae>
							isTimerActive = TRUE;
    306c:	78 2e       	mov	r7, r24
				if (__timer_records[module_index].relays[relay_index] != 254){
					char isTimerActive = FALSE;
					__system_var.eeprom_position = EEPROM_CFG_START;

					// Get all the timers associated with relays
					while (getTimerSetting(module_index,__timer_records[module_index].relays[relay_index]) != 0){
    306e:	eb 81       	ldd	r30, Y+3	; 0x03
    3070:	fc 81       	ldd	r31, Y+4	; 0x04
    3072:	62 81       	ldd	r22, Z+2	; 0x02
    3074:	73 81       	ldd	r23, Z+3	; 0x03
    3076:	c8 01       	movw	r24, r16
    3078:	0e 94 da 05 	call	0xbb4	; 0xbb4 <_Z15getTimerSettingii>
    307c:	89 2b       	or	r24, r25
    307e:	89 f7       	brne	.-30     	; 0x3062 <_Z18ProcessRelayTimersv+0xa2>
						if (isCurrentTimerActive() == TRUE){
							isTimerActive = TRUE;
						}
					}
					// check if module is connected as well
					if (isTimerActive){
    3080:	77 20       	and	r7, r7
    3082:	81 f1       	breq	.+96     	; 0x30e4 <_Z18ProcessRelayTimersv+0x124>
						char conv[5];
						
						if (module_index < MAX_MODULE_COUNT && relay_index < MAX_RELAY_COUNT){
    3084:	04 30       	cpi	r16, 0x04	; 4
    3086:	11 05       	cpc	r17, r1
    3088:	0c f0       	brlt	.+2      	; 0x308c <_Z18ProcessRelayTimersv+0xcc>
    308a:	56 c0       	rjmp	.+172    	; 0x3138 <_Z18ProcessRelayTimersv+0x178>
    308c:	fd e0       	ldi	r31, 0x0D	; 13
    308e:	af 16       	cp	r10, r31
    3090:	b1 04       	cpc	r11, r1
    3092:	0c f0       	brlt	.+2      	; 0x3096 <_Z18ProcessRelayTimersv+0xd6>
    3094:	51 c0       	rjmp	.+162    	; 0x3138 <_Z18ProcessRelayTimersv+0x178>
							if (__relay_states[module_index].states[__timer_records[module_index].relays[relay_index]] == 0){
    3096:	ab 81       	ldd	r26, Y+3	; 0x03
    3098:	bc 81       	ldd	r27, Y+4	; 0x04
    309a:	12 96       	adiw	r26, 0x02	; 2
    309c:	4d 91       	ld	r20, X+
    309e:	5c 91       	ld	r21, X
    30a0:	13 97       	sbiw	r26, 0x03	; 3
    30a2:	f4 01       	movw	r30, r8
    30a4:	e4 0f       	add	r30, r20
    30a6:	f5 1f       	adc	r31, r21
    30a8:	ee 0f       	add	r30, r30
    30aa:	ff 1f       	adc	r31, r31
    30ac:	ea 55       	subi	r30, 0x5A	; 90
    30ae:	f7 4f       	sbci	r31, 0xF7	; 247
    30b0:	80 81       	ld	r24, Z
    30b2:	91 81       	ldd	r25, Z+1	; 0x01
    30b4:	89 2b       	or	r24, r25
    30b6:	09 f0       	breq	.+2      	; 0x30ba <_Z18ProcessRelayTimersv+0xfa>
    30b8:	3f c0       	rjmp	.+126    	; 0x3138 <_Z18ProcessRelayTimersv+0x178>
								switchRelay(1, module_index,__timer_records[module_index].relays[relay_index],1);
    30ba:	21 e0       	ldi	r18, 0x01	; 1
    30bc:	60 2f       	mov	r22, r16
    30be:	81 e0       	ldi	r24, 0x01	; 1
    30c0:	6d da       	rcall	.-2854   	; 0x259c <_Z11switchRelaycccc>
								__relay_states[module_index].states[__timer_records[module_index].relays[relay_index]] = 1;
    30c2:	ab 81       	ldd	r26, Y+3	; 0x03
    30c4:	bc 81       	ldd	r27, Y+4	; 0x04
    30c6:	12 96       	adiw	r26, 0x02	; 2
    30c8:	ed 91       	ld	r30, X+
    30ca:	fc 91       	ld	r31, X
    30cc:	13 97       	sbiw	r26, 0x03	; 3
    30ce:	e8 0d       	add	r30, r8
    30d0:	f9 1d       	adc	r31, r9
    30d2:	ee 0f       	add	r30, r30
    30d4:	ff 1f       	adc	r31, r31
    30d6:	ea 55       	subi	r30, 0x5A	; 90
    30d8:	f7 4f       	sbci	r31, 0xF7	; 247
    30da:	81 e0       	ldi	r24, 0x01	; 1
    30dc:	90 e0       	ldi	r25, 0x00	; 0
    30de:	91 83       	std	Z+1, r25	; 0x01
    30e0:	80 83       	st	Z, r24
    30e2:	2a c0       	rjmp	.+84     	; 0x3138 <_Z18ProcessRelayTimersv+0x178>
						}
						
						} else {
						char conv[5];
						
						if (module_index < MAX_MODULE_COUNT && relay_index < MAX_RELAY_COUNT){
    30e4:	04 30       	cpi	r16, 0x04	; 4
    30e6:	11 05       	cpc	r17, r1
    30e8:	3c f5       	brge	.+78     	; 0x3138 <_Z18ProcessRelayTimersv+0x178>
    30ea:	9d e0       	ldi	r25, 0x0D	; 13
    30ec:	a9 16       	cp	r10, r25
    30ee:	b1 04       	cpc	r11, r1
    30f0:	1c f5       	brge	.+70     	; 0x3138 <_Z18ProcessRelayTimersv+0x178>
							if (__relay_states[module_index].states[__timer_records[module_index].relays[relay_index]] == 1){
    30f2:	ab 81       	ldd	r26, Y+3	; 0x03
    30f4:	bc 81       	ldd	r27, Y+4	; 0x04
    30f6:	12 96       	adiw	r26, 0x02	; 2
    30f8:	4d 91       	ld	r20, X+
    30fa:	5c 91       	ld	r21, X
    30fc:	13 97       	sbiw	r26, 0x03	; 3
    30fe:	f4 01       	movw	r30, r8
    3100:	e4 0f       	add	r30, r20
    3102:	f5 1f       	adc	r31, r21
    3104:	ee 0f       	add	r30, r30
    3106:	ff 1f       	adc	r31, r31
    3108:	ea 55       	subi	r30, 0x5A	; 90
    310a:	f7 4f       	sbci	r31, 0xF7	; 247
    310c:	80 81       	ld	r24, Z
    310e:	91 81       	ldd	r25, Z+1	; 0x01
    3110:	01 97       	sbiw	r24, 0x01	; 1
    3112:	91 f4       	brne	.+36     	; 0x3138 <_Z18ProcessRelayTimersv+0x178>
								switchRelay(1, module_index,__timer_records[module_index].relays[relay_index],0);
    3114:	20 e0       	ldi	r18, 0x00	; 0
    3116:	60 2f       	mov	r22, r16
    3118:	81 e0       	ldi	r24, 0x01	; 1
    311a:	40 da       	rcall	.-2944   	; 0x259c <_Z11switchRelaycccc>
								__relay_states[module_index].states[__timer_records[module_index].relays[relay_index]] = 0;
    311c:	ab 81       	ldd	r26, Y+3	; 0x03
    311e:	bc 81       	ldd	r27, Y+4	; 0x04
    3120:	12 96       	adiw	r26, 0x02	; 2
    3122:	ed 91       	ld	r30, X+
    3124:	fc 91       	ld	r31, X
    3126:	13 97       	sbiw	r26, 0x03	; 3
    3128:	e8 0d       	add	r30, r8
    312a:	f9 1d       	adc	r31, r9
    312c:	ee 0f       	add	r30, r30
    312e:	ff 1f       	adc	r31, r31
    3130:	ea 55       	subi	r30, 0x5A	; 90
    3132:	f7 4f       	sbci	r31, 0xF7	; 247
    3134:	11 82       	std	Z+1, r1	; 0x01
    3136:	10 82       	st	Z, r1
		initializeTimerSettingIds();
		
		for (module_index=0;module_index<MAX_MODULE_COUNT;module_index++){
			int relay_index;

			for (relay_index=0;relay_index<MAX_RELAY_COUNT;relay_index++){
    3138:	bf ef       	ldi	r27, 0xFF	; 255
    313a:	ab 1a       	sub	r10, r27
    313c:	bb 0a       	sbc	r11, r27
    313e:	e2 e0       	ldi	r30, 0x02	; 2
    3140:	ce 0e       	add	r12, r30
    3142:	d1 1c       	adc	r13, r1
    3144:	fd e0       	ldi	r31, 0x0D	; 13
    3146:	af 16       	cp	r10, r31
    3148:	b1 04       	cpc	r11, r1
    314a:	09 f0       	breq	.+2      	; 0x314e <_Z18ProcessRelayTimersv+0x18e>
    314c:	76 cf       	rjmp	.-276    	; 0x303a <_Z18ProcessRelayTimersv+0x7a>
		int module_index;
		char conv[5];
		// this should be initialized after receiving updates from server and after module startup
		initializeTimerSettingIds();
		
		for (module_index=0;module_index<MAX_MODULE_COUNT;module_index++){
    314e:	0f 5f       	subi	r16, 0xFF	; 255
    3150:	1f 4f       	sbci	r17, 0xFF	; 255
    3152:	89 81       	ldd	r24, Y+1	; 0x01
    3154:	9a 81       	ldd	r25, Y+2	; 0x02
    3156:	4c 96       	adiw	r24, 0x1c	; 28
    3158:	9a 83       	std	Y+2, r25	; 0x02
    315a:	89 83       	std	Y+1, r24	; 0x01
    315c:	04 30       	cpi	r16, 0x04	; 4
    315e:	11 05       	cpc	r17, r1
    3160:	59 f0       	breq	.+22     	; 0x3178 <_Z18ProcessRelayTimersv+0x1b8>
		}
		__system_time.check_timer_buffer = 0;
	}
}

void ProcessRelayTimers(){
    3162:	c9 80       	ldd	r12, Y+1	; 0x01
    3164:	da 80       	ldd	r13, Y+2	; 0x02
    3166:	a6 2c       	mov	r10, r6
    3168:	b1 2c       	mov	r11, r1
						
						} else {
						char conv[5];
						
						if (module_index < MAX_MODULE_COUNT && relay_index < MAX_RELAY_COUNT){
							if (__relay_states[module_index].states[__timer_records[module_index].relays[relay_index]] == 1){
    316a:	9d e0       	ldi	r25, 0x0D	; 13
    316c:	90 9f       	mul	r25, r16
    316e:	40 01       	movw	r8, r0
    3170:	91 9f       	mul	r25, r17
    3172:	90 0c       	add	r9, r0
    3174:	11 24       	eor	r1, r1
    3176:	61 cf       	rjmp	.-318    	; 0x303a <_Z18ProcessRelayTimersv+0x7a>
						}
					}
				}
			}
		}
		__system_time.timer_check_timer_buffer = 0;
    3178:	10 92 0b 0a 	sts	0x0A0B, r1	; 0x800a0b <__system_time+0x1f>
    317c:	10 92 0a 0a 	sts	0x0A0A, r1	; 0x800a0a <__system_time+0x1e>
	}
}
    3180:	0f 90       	pop	r0
    3182:	0f 90       	pop	r0
    3184:	0f 90       	pop	r0
    3186:	0f 90       	pop	r0
    3188:	df 91       	pop	r29
    318a:	cf 91       	pop	r28
    318c:	1f 91       	pop	r17
    318e:	0f 91       	pop	r16
    3190:	ff 90       	pop	r15
    3192:	ef 90       	pop	r14
    3194:	df 90       	pop	r13
    3196:	cf 90       	pop	r12
    3198:	bf 90       	pop	r11
    319a:	af 90       	pop	r10
    319c:	9f 90       	pop	r9
    319e:	8f 90       	pop	r8
    31a0:	7f 90       	pop	r7
    31a2:	6f 90       	pop	r6
    31a4:	5f 90       	pop	r5
    31a6:	4f 90       	pop	r4
    31a8:	3f 90       	pop	r3
    31aa:	2f 90       	pop	r2
    31ac:	08 95       	ret

000031ae <_Z15checkGsmNetworkv>:
/*
*	If GSM network disconnects or SIM900 randomly shuts down, this'll turn it back on.
*/
void checkGsmNetwork(){
	
	if (HAS_GSM){
    31ae:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <HAS_GSM>
    31b2:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <HAS_GSM+0x1>
    31b6:	89 2b       	or	r24, r25
    31b8:	09 f4       	brne	.+2      	; 0x31bc <_Z15checkGsmNetworkv+0xe>
    31ba:	37 c0       	rjmp	.+110    	; 0x322a <_Z15checkGsmNetworkv+0x7c>
		if (__system_time.gsm_network_timer_buffer >= __system_time.gsm_network_timer){
    31bc:	ec ee       	ldi	r30, 0xEC	; 236
    31be:	f9 e0       	ldi	r31, 0x09	; 9
    31c0:	22 a1       	ldd	r18, Z+34	; 0x22
    31c2:	33 a1       	ldd	r19, Z+35	; 0x23
    31c4:	80 a1       	ldd	r24, Z+32	; 0x20
    31c6:	91 a1       	ldd	r25, Z+33	; 0x21
    31c8:	28 17       	cp	r18, r24
    31ca:	39 07       	cpc	r19, r25
    31cc:	74 f1       	brlt	.+92     	; 0x322a <_Z15checkGsmNetworkv+0x7c>
			clearGSMBuffer();
    31ce:	b6 d3       	rcall	.+1900   	; 0x393c <_Z14clearGSMBufferv>
			GSM_Write_String("AT+CREG?\r\n");
    31d0:	88 e7       	ldi	r24, 0x78	; 120
    31d2:	97 e0       	ldi	r25, 0x07	; 7
    31d4:	95 d1       	rcall	.+810    	; 0x3500 <_Z16GSM_Write_StringPKc>
			delay(300);
    31d6:	8c e2       	ldi	r24, 0x2C	; 44
    31d8:	91 e0       	ldi	r25, 0x01	; 1
    31da:	ae d1       	rcall	.+860    	; 0x3538 <_Z5delayi>
			if (!(strstr(__network_data.sim_buffer,"+CREG: 0,1") != 0 || strstr(__network_data.sim_buffer,"+CREG: 0,5") != 0)){
    31dc:	63 e8       	ldi	r22, 0x83	; 131
    31de:	77 e0       	ldi	r23, 0x07	; 7
    31e0:	8c ea       	ldi	r24, 0xAC	; 172
    31e2:	9e e0       	ldi	r25, 0x0E	; 14
    31e4:	74 d6       	rcall	.+3304   	; 0x3ece <strstr>
    31e6:	89 2b       	or	r24, r25
    31e8:	e1 f4       	brne	.+56     	; 0x3222 <_Z15checkGsmNetworkv+0x74>
    31ea:	6e e8       	ldi	r22, 0x8E	; 142
    31ec:	77 e0       	ldi	r23, 0x07	; 7
    31ee:	8c ea       	ldi	r24, 0xAC	; 172
    31f0:	9e e0       	ldi	r25, 0x0E	; 14
    31f2:	6d d6       	rcall	.+3290   	; 0x3ece <strstr>
    31f4:	89 2b       	or	r24, r25
    31f6:	a9 f4       	brne	.+42     	; 0x3222 <_Z15checkGsmNetworkv+0x74>
				clearGSMBuffer();
    31f8:	a1 d3       	rcall	.+1858   	; 0x393c <_Z14clearGSMBufferv>
				GSM_Write_String("AT\r\n");
    31fa:	89 e9       	ldi	r24, 0x99	; 153
    31fc:	97 e0       	ldi	r25, 0x07	; 7
    31fe:	80 d1       	rcall	.+768    	; 0x3500 <_Z16GSM_Write_StringPKc>
				if (strstr(__network_data.sim_buffer,"OK") != 0){
    3200:	69 e1       	ldi	r22, 0x19	; 25
    3202:	72 e0       	ldi	r23, 0x02	; 2
    3204:	8c ea       	ldi	r24, 0xAC	; 172
    3206:	9e e0       	ldi	r25, 0x0E	; 14
    3208:	62 d6       	rcall	.+3268   	; 0x3ece <strstr>
    320a:	89 2b       	or	r24, r25
    320c:	09 f0       	breq	.+2      	; 0x3210 <_Z15checkGsmNetworkv+0x62>
					turnOnSim900();
    320e:	41 d2       	rcall	.+1154   	; 0x3692 <_Z12turnOnSim900v>
				}
				turnOnSim900();
    3210:	40 d2       	rcall	.+1152   	; 0x3692 <_Z12turnOnSim900v>
				__network_data.is_server_connected = FALSE;
    3212:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <FALSE>
    3216:	80 93 c3 0a 	sts	0x0AC3, r24	; 0x800ac3 <__network_data+0xb3>
				__network_data.is_esp_connected = FALSE;
    321a:	80 93 c1 0a 	sts	0x0AC1, r24	; 0x800ac1 <__network_data+0xb1>
				__network_data.is_sim_connected = FALSE;
    321e:	80 93 c2 0a 	sts	0x0AC2, r24	; 0x800ac2 <__network_data+0xb2>
			}		
			__system_time.gsm_network_timer_buffer = 0;
    3222:	10 92 0f 0a 	sts	0x0A0F, r1	; 0x800a0f <__system_time+0x23>
    3226:	10 92 0e 0a 	sts	0x0A0E, r1	; 0x800a0e <__system_time+0x22>
    322a:	08 95       	ret

0000322c <_Z7SendSmsPcS_>:




void SendSms(char *phonenumber, char *uzenet)
{
    322c:	0f 93       	push	r16
    322e:	1f 93       	push	r17
    3230:	cf 93       	push	r28
    3232:	df 93       	push	r29
    3234:	8c 01       	movw	r16, r24
    3236:	eb 01       	movw	r28, r22

	GSM_Write_String("AT\r\n");
    3238:	89 e9       	ldi	r24, 0x99	; 153
    323a:	97 e0       	ldi	r25, 0x07	; 7
    323c:	61 d1       	rcall	.+706    	; 0x3500 <_Z16GSM_Write_StringPKc>
	readUntil("OK",2);
    323e:	62 e0       	ldi	r22, 0x02	; 2
    3240:	70 e0       	ldi	r23, 0x00	; 0
    3242:	89 e1       	ldi	r24, 0x19	; 25
    3244:	92 e0       	ldi	r25, 0x02	; 2
    3246:	0e 94 0f 09 	call	0x121e	; 0x121e <_Z9readUntilPKci>
	GSM_Write_String("AT+CMGF=1\r\n");
    324a:	8e e9       	ldi	r24, 0x9E	; 158
    324c:	97 e0       	ldi	r25, 0x07	; 7
    324e:	58 d1       	rcall	.+688    	; 0x3500 <_Z16GSM_Write_StringPKc>
	readUntil("OK",2);
    3250:	62 e0       	ldi	r22, 0x02	; 2
    3252:	70 e0       	ldi	r23, 0x00	; 0
    3254:	89 e1       	ldi	r24, 0x19	; 25
    3256:	92 e0       	ldi	r25, 0x02	; 2
    3258:	0e 94 0f 09 	call	0x121e	; 0x121e <_Z9readUntilPKci>
	GSM_Write_String("AT+CMGS=\"");
    325c:	8a ea       	ldi	r24, 0xAA	; 170
    325e:	97 e0       	ldi	r25, 0x07	; 7
    3260:	4f d1       	rcall	.+670    	; 0x3500 <_Z16GSM_Write_StringPKc>
	GSM_Write_String(phonenumber);
    3262:	c8 01       	movw	r24, r16
    3264:	4d d1       	rcall	.+666    	; 0x3500 <_Z16GSM_Write_StringPKc>
	GSM_Write_Byte(0x22);
    3266:	82 e2       	ldi	r24, 0x22	; 34
    3268:	59 d1       	rcall	.+690    	; 0x351c <_Z14GSM_Write_Bytec>
	GSM_Write_Byte(0x0D);
    326a:	8d e0       	ldi	r24, 0x0D	; 13
    326c:	57 d1       	rcall	.+686    	; 0x351c <_Z14GSM_Write_Bytec>
	readUntil("OK",2);
    326e:	62 e0       	ldi	r22, 0x02	; 2
    3270:	70 e0       	ldi	r23, 0x00	; 0
    3272:	89 e1       	ldi	r24, 0x19	; 25
    3274:	92 e0       	ldi	r25, 0x02	; 2
    3276:	0e 94 0f 09 	call	0x121e	; 0x121e <_Z9readUntilPKci>
	GSM_Write_String(uzenet);
    327a:	ce 01       	movw	r24, r28
    327c:	41 d1       	rcall	.+642    	; 0x3500 <_Z16GSM_Write_StringPKc>
	GSM_Write_Byte(26);
    327e:	8a e1       	ldi	r24, 0x1A	; 26
    3280:	4d d1       	rcall	.+666    	; 0x351c <_Z14GSM_Write_Bytec>
	GSM_Write_Byte(0x0D);
    3282:	8d e0       	ldi	r24, 0x0D	; 13
    3284:	4b d1       	rcall	.+662    	; 0x351c <_Z14GSM_Write_Bytec>
	readUntil("OK",2);
    3286:	62 e0       	ldi	r22, 0x02	; 2
    3288:	70 e0       	ldi	r23, 0x00	; 0
    328a:	89 e1       	ldi	r24, 0x19	; 25
    328c:	92 e0       	ldi	r25, 0x02	; 2
    328e:	0e 94 0f 09 	call	0x121e	; 0x121e <_Z9readUntilPKci>
}
    3292:	df 91       	pop	r29
    3294:	cf 91       	pop	r28
    3296:	1f 91       	pop	r17
    3298:	0f 91       	pop	r16
    329a:	08 95       	ret

0000329c <_Z19IncomingCallHandlerv>:

void IncomingCallHandler(){
    329c:	08 95       	ret

0000329e <_Z13getSmsMessagev>:

char *getSmsMessage(){
	//+CMT \"+36309225427\",\"\",\"15/02/03,23:12:23+30\"\nTest sms lol
	char *p1,*p2;
	
	if (strstr(__network_data.sim_buffer,"UNREAD") == 0) return 0;
    329e:	64 eb       	ldi	r22, 0xB4	; 180
    32a0:	77 e0       	ldi	r23, 0x07	; 7
    32a2:	8c ea       	ldi	r24, 0xAC	; 172
    32a4:	9e e0       	ldi	r25, 0x0E	; 14
    32a6:	13 d6       	rcall	.+3110   	; 0x3ece <strstr>
    32a8:	00 97       	sbiw	r24, 0x00	; 0
    32aa:	91 f0       	breq	.+36     	; 0x32d0 <_Z13getSmsMessagev+0x32>

	p1 = strstr(__network_data.sim_buffer,"UNREAD");
	p1 += 6;
	//printf("%s\n",p1);
	p2 = strtok(p1,"\",\"");
    32ac:	63 e0       	ldi	r22, 0x03	; 3
    32ae:	73 e0       	ldi	r23, 0x03	; 3
    32b0:	06 96       	adiw	r24, 0x06	; 6
    32b2:	e6 d5       	rcall	.+3020   	; 0x3e80 <strtok>

	strcpy(__system_var.phone_buffer, p2);
    32b4:	bc 01       	movw	r22, r24
    32b6:	8f eb       	ldi	r24, 0xBF	; 191
    32b8:	9f e0       	ldi	r25, 0x0F	; 15
    32ba:	02 d6       	rcall	.+3076   	; 0x3ec0 <strcpy>

	p2 = strtok(0,"\n");
    32bc:	60 e6       	ldi	r22, 0x60	; 96
    32be:	76 e0       	ldi	r23, 0x06	; 6
    32c0:	80 e0       	ldi	r24, 0x00	; 0
    32c2:	90 e0       	ldi	r25, 0x00	; 0
    32c4:	dd d5       	rcall	.+3002   	; 0x3e80 <strtok>
	p2 = strtok(0,"\r");
    32c6:	6b eb       	ldi	r22, 0xBB	; 187
    32c8:	77 e0       	ldi	r23, 0x07	; 7
    32ca:	80 e0       	ldi	r24, 0x00	; 0
    32cc:	90 e0       	ldi	r25, 0x00	; 0
    32ce:	d8 c5       	rjmp	.+2992   	; 0x3e80 <strtok>

	return p2;
}
    32d0:	08 95       	ret

000032d2 <_Z18IncomingSMSHandlerv>:

void IncomingSMSHandler(){
    32d2:	0f 93       	push	r16
    32d4:	1f 93       	push	r17
    32d6:	cf 93       	push	r28
    32d8:	df 93       	push	r29
    32da:	cd b7       	in	r28, 0x3d	; 61
    32dc:	de b7       	in	r29, 0x3e	; 62
    32de:	c8 5c       	subi	r28, 0xC8	; 200
    32e0:	d1 09       	sbc	r29, r1
    32e2:	0f b6       	in	r0, 0x3f	; 63
    32e4:	f8 94       	cli
    32e6:	de bf       	out	0x3e, r29	; 62
    32e8:	0f be       	out	0x3f, r0	; 63
    32ea:	cd bf       	out	0x3d, r28	; 61
	
	if (strstr(__network_data.sim_buffer,"MTI:") != 0)
    32ec:	6d eb       	ldi	r22, 0xBD	; 189
    32ee:	77 e0       	ldi	r23, 0x07	; 7
    32f0:	8c ea       	ldi	r24, 0xAC	; 172
    32f2:	9e e0       	ldi	r25, 0x0E	; 14
    32f4:	ec d5       	rcall	.+3032   	; 0x3ece <strstr>
    32f6:	89 2b       	or	r24, r25
    32f8:	09 f4       	brne	.+2      	; 0x32fc <_Z18IncomingSMSHandlerv+0x2a>
    32fa:	56 c0       	rjmp	.+172    	; 0x33a8 <_Z18IncomingSMSHandlerv+0xd6>
	{
		char *message;
		char privilege;
		clearGSMBuffer();
    32fc:	1f d3       	rcall	.+1598   	; 0x393c <_Z14clearGSMBufferv>
		__system_var.sms_flag = 1;
    32fe:	81 e0       	ldi	r24, 0x01	; 1
    3300:	80 93 b1 0f 	sts	0x0FB1, r24	; 0x800fb1 <__system_var+0x37>
		GSM_Write_String("AT+CMGR=1\r\n");
    3304:	82 ec       	ldi	r24, 0xC2	; 194
    3306:	97 e0       	ldi	r25, 0x07	; 7
    3308:	fb d0       	rcall	.+502    	; 0x3500 <_Z16GSM_Write_StringPKc>
		//readUntil();
		delay(1000);
    330a:	88 ee       	ldi	r24, 0xE8	; 232
    330c:	93 e0       	ldi	r25, 0x03	; 3
    330e:	14 d1       	rcall	.+552    	; 0x3538 <_Z5delayi>
		message = getSmsMessage();
    3310:	c6 df       	rcall	.-116    	; 0x329e <_Z13getSmsMessagev>
    3312:	8c 01       	movw	r16, r24
		privilege = getPrivilege(__system_var.phone_buffer);
    3314:	8f eb       	ldi	r24, 0xBF	; 191
    3316:	9f e0       	ldi	r25, 0x0F	; 15
    3318:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <_Z12getPrivilegePKc>
		if (privilege != 0){
    331c:	88 23       	and	r24, r24
    331e:	09 f4       	brne	.+2      	; 0x3322 <_Z18IncomingSMSHandlerv+0x50>
    3320:	43 c0       	rjmp	.+134    	; 0x33a8 <_Z18IncomingSMSHandlerv+0xd6>
			
			if (strstr(message,"ADMIN") != 0 )
    3322:	64 e2       	ldi	r22, 0x24	; 36
    3324:	71 e0       	ldi	r23, 0x01	; 1
    3326:	c8 01       	movw	r24, r16
    3328:	d2 d5       	rcall	.+2980   	; 0x3ece <strstr>
    332a:	89 2b       	or	r24, r25
    332c:	59 f1       	breq	.+86     	; 0x3384 <_Z18IncomingSMSHandlerv+0xb2>
			{
				char msg[200];
				int relayIndex,moduleIndex;
				strcpy(msg,"New Admin:");
    332e:	8b e0       	ldi	r24, 0x0B	; 11
    3330:	ee ec       	ldi	r30, 0xCE	; 206
    3332:	f7 e0       	ldi	r31, 0x07	; 7
    3334:	de 01       	movw	r26, r28
    3336:	11 96       	adiw	r26, 0x01	; 1
    3338:	01 90       	ld	r0, Z+
    333a:	0d 92       	st	X+, r0
    333c:	8a 95       	dec	r24
    333e:	e1 f7       	brne	.-8      	; 0x3338 <_Z18IncomingSMSHandlerv+0x66>
				strcat(msg,__system_var.phone_buffer);
    3340:	6f eb       	ldi	r22, 0xBF	; 191
    3342:	7f e0       	ldi	r23, 0x0F	; 15
    3344:	ce 01       	movw	r24, r28
    3346:	01 96       	adiw	r24, 0x01	; 1
    3348:	a5 d5       	rcall	.+2890   	; 0x3e94 <strcat>
				SendSms(__system_var.admin,msg);
    334a:	be 01       	movw	r22, r28
    334c:	6f 5f       	subi	r22, 0xFF	; 255
    334e:	7f 4f       	sbci	r23, 0xFF	; 255
    3350:	82 eb       	ldi	r24, 0xB2	; 178
    3352:	9f e0       	ldi	r25, 0x0F	; 15
    3354:	6b df       	rcall	.-298    	; 0x322c <_Z7SendSmsPcS_>
				strcpy(msg,"Admin privilige granted. Old:");
    3356:	8e e1       	ldi	r24, 0x1E	; 30
    3358:	e9 ed       	ldi	r30, 0xD9	; 217
    335a:	f7 e0       	ldi	r31, 0x07	; 7
    335c:	de 01       	movw	r26, r28
    335e:	11 96       	adiw	r26, 0x01	; 1
    3360:	01 90       	ld	r0, Z+
    3362:	0d 92       	st	X+, r0
    3364:	8a 95       	dec	r24
    3366:	e1 f7       	brne	.-8      	; 0x3360 <_Z18IncomingSMSHandlerv+0x8e>
				strcat(msg,__system_var.admin);
    3368:	62 eb       	ldi	r22, 0xB2	; 178
    336a:	7f e0       	ldi	r23, 0x0F	; 15
    336c:	ce 01       	movw	r24, r28
    336e:	01 96       	adiw	r24, 0x01	; 1
    3370:	91 d5       	rcall	.+2850   	; 0x3e94 <strcat>
				SendSms(__system_var.phone_buffer,message);
    3372:	b8 01       	movw	r22, r16
    3374:	8f eb       	ldi	r24, 0xBF	; 191
    3376:	9f e0       	ldi	r25, 0x0F	; 15
    3378:	59 df       	rcall	.-334    	; 0x322c <_Z7SendSmsPcS_>
				strcpy(__system_var.admin,__system_var.phone_buffer);
    337a:	6f eb       	ldi	r22, 0xBF	; 191
    337c:	7f e0       	ldi	r23, 0x0F	; 15
    337e:	82 eb       	ldi	r24, 0xB2	; 178
    3380:	9f e0       	ldi	r25, 0x0F	; 15
    3382:	9e d5       	rcall	.+2876   	; 0x3ec0 <strcpy>
				
			}
			
			if (strstr(message,"INFO") != 0 )
    3384:	67 ef       	ldi	r22, 0xF7	; 247
    3386:	77 e0       	ldi	r23, 0x07	; 7
    3388:	c8 01       	movw	r24, r16
    338a:	a1 d5       	rcall	.+2882   	; 0x3ece <strstr>
    338c:	89 2b       	or	r24, r25
    338e:	61 f0       	breq	.+24     	; 0x33a8 <_Z18IncomingSMSHandlerv+0xd6>
			{
				char msg[200];
				int relayIndex,moduleIndex;
				strcpy(msg,"INFO:\n");
    3390:	87 e0       	ldi	r24, 0x07	; 7
    3392:	ec ef       	ldi	r30, 0xFC	; 252
    3394:	f7 e0       	ldi	r31, 0x07	; 7
    3396:	de 01       	movw	r26, r28
    3398:	11 96       	adiw	r26, 0x01	; 1
    339a:	01 90       	ld	r0, Z+
    339c:	0d 92       	st	X+, r0
    339e:	8a 95       	dec	r24
    33a0:	e1 f7       	brne	.-8      	; 0x339a <_Z18IncomingSMSHandlerv+0xc8>
				GSM_Write_String("INFO SMS");
    33a2:	83 e0       	ldi	r24, 0x03	; 3
    33a4:	98 e0       	ldi	r25, 0x08	; 8
    33a6:	ac d0       	rcall	.+344    	; 0x3500 <_Z16GSM_Write_StringPKc>
			}
			
		}
	}
	
	if (__system_var.sms_flag != 0 ){
    33a8:	80 91 b1 0f 	lds	r24, 0x0FB1	; 0x800fb1 <__system_var+0x37>
    33ac:	88 23       	and	r24, r24
    33ae:	71 f0       	breq	.+28     	; 0x33cc <_Z18IncomingSMSHandlerv+0xfa>
		GSM_Write_String("AT\r\n");
    33b0:	89 e9       	ldi	r24, 0x99	; 153
    33b2:	97 e0       	ldi	r25, 0x07	; 7
    33b4:	a5 d0       	rcall	.+330    	; 0x3500 <_Z16GSM_Write_StringPKc>
		delay(500);
    33b6:	84 ef       	ldi	r24, 0xF4	; 244
    33b8:	91 e0       	ldi	r25, 0x01	; 1
    33ba:	be d0       	rcall	.+380    	; 0x3538 <_Z5delayi>
		GSM_Write_String("AT+CMGDA=\"DEL ALL\"\r\n");
    33bc:	8c e0       	ldi	r24, 0x0C	; 12
    33be:	98 e0       	ldi	r25, 0x08	; 8
    33c0:	9f d0       	rcall	.+318    	; 0x3500 <_Z16GSM_Write_StringPKc>
		delay(500);
    33c2:	84 ef       	ldi	r24, 0xF4	; 244
    33c4:	91 e0       	ldi	r25, 0x01	; 1
    33c6:	b8 d0       	rcall	.+368    	; 0x3538 <_Z5delayi>
		__system_var.sms_flag = 0;
    33c8:	10 92 b1 0f 	sts	0x0FB1, r1	; 0x800fb1 <__system_var+0x37>
	}
	
	
}
    33cc:	c8 53       	subi	r28, 0x38	; 56
    33ce:	df 4f       	sbci	r29, 0xFF	; 255
    33d0:	0f b6       	in	r0, 0x3f	; 63
    33d2:	f8 94       	cli
    33d4:	de bf       	out	0x3e, r29	; 62
    33d6:	0f be       	out	0x3f, r0	; 63
    33d8:	cd bf       	out	0x3d, r28	; 61
    33da:	df 91       	pop	r29
    33dc:	cf 91       	pop	r28
    33de:	1f 91       	pop	r17
    33e0:	0f 91       	pop	r16
    33e2:	08 95       	ret

000033e4 <_Z10chipSelectii>:

	SPDR = toWrite;

	while(!(SPSR & (1<<SPIF)));

}
    33e4:	1f 93       	push	r17
    33e6:	cf 93       	push	r28
    33e8:	df 93       	push	r29
    33ea:	ec 01       	movw	r28, r24
    33ec:	16 2f       	mov	r17, r22
    33ee:	84 e6       	ldi	r24, 0x64	; 100
    33f0:	90 e0       	ldi	r25, 0x00	; 0
    33f2:	a2 d0       	rcall	.+324    	; 0x3538 <_Z5delayi>
    33f4:	c1 30       	cpi	r28, 0x01	; 1
    33f6:	d1 05       	cpc	r29, r1
    33f8:	89 f0       	breq	.+34     	; 0x341c <_Z10chipSelectii+0x38>
    33fa:	1c f4       	brge	.+6      	; 0x3402 <_Z10chipSelectii+0x1e>
    33fc:	cd 2b       	or	r28, r29
    33fe:	39 f0       	breq	.+14     	; 0x340e <_Z10chipSelectii+0x2a>
    3400:	21 c0       	rjmp	.+66     	; 0x3444 <_Z10chipSelectii+0x60>
    3402:	c2 30       	cpi	r28, 0x02	; 2
    3404:	d1 05       	cpc	r29, r1
    3406:	89 f0       	breq	.+34     	; 0x342a <_Z10chipSelectii+0x46>
    3408:	23 97       	sbiw	r28, 0x03	; 3
    340a:	b1 f0       	breq	.+44     	; 0x3438 <_Z10chipSelectii+0x54>
    340c:	1b c0       	rjmp	.+54     	; 0x3444 <_Z10chipSelectii+0x60>
    340e:	61 2f       	mov	r22, r17
    3410:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <CS_1>
    3414:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <CS_1+0x1>
    3418:	0a d1       	rcall	.+532    	; 0x362e <_Z12digitalWriteic>
    341a:	14 c0       	rjmp	.+40     	; 0x3444 <_Z10chipSelectii+0x60>
    341c:	61 2f       	mov	r22, r17
    341e:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <CS_2>
    3422:	90 91 94 01 	lds	r25, 0x0194	; 0x800194 <CS_2+0x1>
    3426:	03 d1       	rcall	.+518    	; 0x362e <_Z12digitalWriteic>
    3428:	0d c0       	rjmp	.+26     	; 0x3444 <_Z10chipSelectii+0x60>
    342a:	61 2f       	mov	r22, r17
    342c:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <CS_3>
    3430:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <CS_3+0x1>
    3434:	fc d0       	rcall	.+504    	; 0x362e <_Z12digitalWriteic>
    3436:	06 c0       	rjmp	.+12     	; 0x3444 <_Z10chipSelectii+0x60>
    3438:	61 2f       	mov	r22, r17
    343a:	80 91 8f 01 	lds	r24, 0x018F	; 0x80018f <CS_4>
    343e:	90 91 90 01 	lds	r25, 0x0190	; 0x800190 <CS_4+0x1>
    3442:	f5 d0       	rcall	.+490    	; 0x362e <_Z12digitalWriteic>
    3444:	84 e6       	ldi	r24, 0x64	; 100
    3446:	90 e0       	ldi	r25, 0x00	; 0
    3448:	77 d0       	rcall	.+238    	; 0x3538 <_Z5delayi>
    344a:	df 91       	pop	r29
    344c:	cf 91       	pop	r28
    344e:	1f 91       	pop	r17
    3450:	08 95       	ret

00003452 <_Z15SPI_init_masterv>:
    3452:	81 e5       	ldi	r24, 0x51	; 81
    3454:	8c bd       	out	0x2c, r24	; 44
    3456:	1e bc       	out	0x2e, r1	; 46
    3458:	08 95       	ret

0000345a <_Z13SPI_WriteReadh>:

unsigned char SPI_WriteRead(unsigned char toWrite)
{
	unsigned char data;
												
	SPDR = toWrite;								
    345a:	8e bd       	out	0x2e, r24	; 46
	
	while(!(SPSR & (1<<SPIF)));
    345c:	0d b4       	in	r0, 0x2d	; 45
    345e:	07 fe       	sbrs	r0, 7
    3460:	fd cf       	rjmp	.-6      	; 0x345c <_Z13SPI_WriteReadh+0x2>
	
	data = SPDR;
    3462:	8e b5       	in	r24, 0x2e	; 46
	
	return data;
}
    3464:	08 95       	ret

00003466 <_Z10USART_Initv>:
	}
}
void clearWIFIBuffer(){
	memset(__network_data.esp_buffer, ' ', sizeof(__network_data.esp_buffer) - 1);
	__network_data.is_esp_read_line = 0;
	__network_data.index_esp = 0;
    3466:	20 91 b3 03 	lds	r18, 0x03B3	; 0x8003b3 <BAUD_PRESCALE>
    346a:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    346e:	90 91 b4 03 	lds	r25, 0x03B4	; 0x8003b4 <BAUD_PRESCALE+0x1>
    3472:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    3476:	88 e9       	ldi	r24, 0x98	; 152
    3478:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    347c:	20 93 cc 00 	sts	0x00CC, r18	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
    3480:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
    3484:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7e00c9>
    3488:	78 94       	sei
    348a:	08 95       	ret

0000348c <_Z15USART1_SendBytec>:
    348c:	e8 ec       	ldi	r30, 0xC8	; 200
    348e:	f0 e0       	ldi	r31, 0x00	; 0
    3490:	90 81       	ld	r25, Z
    3492:	95 ff       	sbrs	r25, 5
    3494:	fd cf       	rjmp	.-6      	; 0x3490 <_Z15USART1_SendBytec+0x4>
    3496:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
    349a:	08 95       	ret

0000349c <_Z17USART1_SendStringPKc>:
    349c:	cf 93       	push	r28
    349e:	df 93       	push	r29
    34a0:	ec 01       	movw	r28, r24
    34a2:	88 81       	ld	r24, Y
    34a4:	88 23       	and	r24, r24
    34a6:	29 f0       	breq	.+10     	; 0x34b2 <_Z17USART1_SendStringPKc+0x16>
    34a8:	21 96       	adiw	r28, 0x01	; 1
    34aa:	f0 df       	rcall	.-32     	; 0x348c <_Z15USART1_SendBytec>
    34ac:	89 91       	ld	r24, Y+
    34ae:	81 11       	cpse	r24, r1
    34b0:	fc cf       	rjmp	.-8      	; 0x34aa <_Z17USART1_SendStringPKc+0xe>
    34b2:	df 91       	pop	r29
    34b4:	cf 91       	pop	r28
    34b6:	08 95       	ret

000034b8 <_Z15USART0_SendBytec>:
    34b8:	e0 ec       	ldi	r30, 0xC0	; 192
    34ba:	f0 e0       	ldi	r31, 0x00	; 0
    34bc:	90 81       	ld	r25, Z
    34be:	95 ff       	sbrs	r25, 5
    34c0:	fd cf       	rjmp	.-6      	; 0x34bc <_Z15USART0_SendBytec+0x4>
    34c2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    34c6:	08 95       	ret

000034c8 <_Z17USART0_SendStringPKc>:
    34c8:	cf 93       	push	r28
    34ca:	df 93       	push	r29
    34cc:	ec 01       	movw	r28, r24
    34ce:	88 81       	ld	r24, Y
    34d0:	88 23       	and	r24, r24
    34d2:	29 f0       	breq	.+10     	; 0x34de <_Z17USART0_SendStringPKc+0x16>
    34d4:	21 96       	adiw	r28, 0x01	; 1
    34d6:	f0 df       	rcall	.-32     	; 0x34b8 <_Z15USART0_SendBytec>
    34d8:	89 91       	ld	r24, Y+
    34da:	81 11       	cpse	r24, r1
    34dc:	fc cf       	rjmp	.-8      	; 0x34d6 <_Z17USART0_SendStringPKc+0xe>
    34de:	df 91       	pop	r29
    34e0:	cf 91       	pop	r28
    34e2:	08 95       	ret

000034e4 <_Z17WIFI_Write_StringPKc>:
    34e4:	20 91 a5 01 	lds	r18, 0x01A5	; 0x8001a5 <WIFI_DIRECTION>
    34e8:	30 91 a6 01 	lds	r19, 0x01A6	; 0x8001a6 <WIFI_DIRECTION+0x1>
    34ec:	21 15       	cp	r18, r1
    34ee:	31 05       	cpc	r19, r1
    34f0:	11 f4       	brne	.+4      	; 0x34f6 <_Z17WIFI_Write_StringPKc+0x12>
    34f2:	ea cf       	rjmp	.-44     	; 0x34c8 <_Z17USART0_SendStringPKc>
    34f4:	08 95       	ret
    34f6:	21 30       	cpi	r18, 0x01	; 1
    34f8:	31 05       	cpc	r19, r1
    34fa:	09 f4       	brne	.+2      	; 0x34fe <_Z17WIFI_Write_StringPKc+0x1a>
    34fc:	cf cf       	rjmp	.-98     	; 0x349c <_Z17USART1_SendStringPKc>
    34fe:	08 95       	ret

00003500 <_Z16GSM_Write_StringPKc>:
    3500:	20 91 a3 01 	lds	r18, 0x01A3	; 0x8001a3 <GSM_DIRECTION>
    3504:	30 91 a4 01 	lds	r19, 0x01A4	; 0x8001a4 <GSM_DIRECTION+0x1>
    3508:	21 15       	cp	r18, r1
    350a:	31 05       	cpc	r19, r1
    350c:	11 f4       	brne	.+4      	; 0x3512 <_Z16GSM_Write_StringPKc+0x12>
    350e:	dc cf       	rjmp	.-72     	; 0x34c8 <_Z17USART0_SendStringPKc>
    3510:	08 95       	ret
    3512:	21 30       	cpi	r18, 0x01	; 1
    3514:	31 05       	cpc	r19, r1
    3516:	09 f4       	brne	.+2      	; 0x351a <_Z16GSM_Write_StringPKc+0x1a>
    3518:	c1 cf       	rjmp	.-126    	; 0x349c <_Z17USART1_SendStringPKc>
    351a:	08 95       	ret

0000351c <_Z14GSM_Write_Bytec>:
    351c:	20 91 a3 01 	lds	r18, 0x01A3	; 0x8001a3 <GSM_DIRECTION>
    3520:	30 91 a4 01 	lds	r19, 0x01A4	; 0x8001a4 <GSM_DIRECTION+0x1>
    3524:	21 15       	cp	r18, r1
    3526:	31 05       	cpc	r19, r1
    3528:	11 f4       	brne	.+4      	; 0x352e <_Z14GSM_Write_Bytec+0x12>
    352a:	c6 cf       	rjmp	.-116    	; 0x34b8 <_Z15USART0_SendBytec>
    352c:	08 95       	ret
    352e:	21 30       	cpi	r18, 0x01	; 1
    3530:	31 05       	cpc	r19, r1
    3532:	09 f4       	brne	.+2      	; 0x3536 <_Z14GSM_Write_Bytec+0x1a>
    3534:	ab cf       	rjmp	.-170    	; 0x348c <_Z15USART1_SendBytec>
    3536:	08 95       	ret

00003538 <_Z5delayi>:
    3538:	18 16       	cp	r1, r24
    353a:	19 06       	cpc	r1, r25
    353c:	44 f4       	brge	.+16     	; 0x354e <_Z5delayi+0x16>
    353e:	e3 ec       	ldi	r30, 0xC3	; 195
    3540:	f9 e0       	ldi	r31, 0x09	; 9
    3542:	31 97       	sbiw	r30, 0x01	; 1
    3544:	f1 f7       	brne	.-4      	; 0x3542 <_Z5delayi+0xa>
    3546:	00 c0       	rjmp	.+0      	; 0x3548 <_Z5delayi+0x10>
    3548:	00 00       	nop
    354a:	01 97       	sbiw	r24, 0x01	; 1
    354c:	c1 f7       	brne	.-16     	; 0x353e <_Z5delayi+0x6>
    354e:	08 95       	ret

00003550 <_Z7pinModeic>:
    3550:	01 97       	sbiw	r24, 0x01	; 1
    3552:	8c 32       	cpi	r24, 0x2C	; 44
    3554:	91 05       	cpc	r25, r1
    3556:	08 f0       	brcs	.+2      	; 0x355a <_Z7pinModeic+0xa>
    3558:	69 c0       	rjmp	.+210    	; 0x362c <_Z7pinModeic+0xdc>
    355a:	83 5b       	subi	r24, 0xB3	; 179
    355c:	9f 4f       	sbci	r25, 0xFF	; 255
    355e:	fc 01       	movw	r30, r24
    3560:	33 c3       	rjmp	.+1638   	; 0x3bc8 <__tablejump2__>
    3562:	61 30       	cpi	r22, 0x01	; 1
    3564:	11 f4       	brne	.+4      	; 0x356a <_Z7pinModeic+0x1a>
    3566:	25 9a       	sbi	0x04, 5	; 4
    3568:	08 95       	ret
    356a:	25 98       	cbi	0x04, 5	; 4
    356c:	08 95       	ret
    356e:	61 30       	cpi	r22, 0x01	; 1
    3570:	11 f4       	brne	.+4      	; 0x3576 <_Z7pinModeic+0x26>
    3572:	26 9a       	sbi	0x04, 6	; 4
    3574:	08 95       	ret
    3576:	26 98       	cbi	0x04, 6	; 4
    3578:	08 95       	ret
    357a:	61 30       	cpi	r22, 0x01	; 1
    357c:	11 f4       	brne	.+4      	; 0x3582 <_Z7pinModeic+0x32>
    357e:	27 9a       	sbi	0x04, 7	; 4
    3580:	08 95       	ret
    3582:	27 98       	cbi	0x04, 7	; 4
    3584:	08 95       	ret
    3586:	61 30       	cpi	r22, 0x01	; 1
    3588:	11 f4       	brne	.+4      	; 0x358e <_Z7pinModeic+0x3e>
    358a:	54 9a       	sbi	0x0a, 4	; 10
    358c:	08 95       	ret
    358e:	54 98       	cbi	0x0a, 4	; 10
    3590:	08 95       	ret
    3592:	61 30       	cpi	r22, 0x01	; 1
    3594:	11 f4       	brne	.+4      	; 0x359a <_Z7pinModeic+0x4a>
    3596:	55 9a       	sbi	0x0a, 5	; 10
    3598:	08 95       	ret
    359a:	55 98       	cbi	0x0a, 5	; 10
    359c:	08 95       	ret
    359e:	61 30       	cpi	r22, 0x01	; 1
    35a0:	11 f4       	brne	.+4      	; 0x35a6 <_Z7pinModeic+0x56>
    35a2:	56 9a       	sbi	0x0a, 6	; 10
    35a4:	08 95       	ret
    35a6:	56 98       	cbi	0x0a, 6	; 10
    35a8:	08 95       	ret
    35aa:	61 30       	cpi	r22, 0x01	; 1
    35ac:	11 f4       	brne	.+4      	; 0x35b2 <_Z7pinModeic+0x62>
    35ae:	57 9a       	sbi	0x0a, 7	; 10
    35b0:	08 95       	ret
    35b2:	57 98       	cbi	0x0a, 7	; 10
    35b4:	08 95       	ret
    35b6:	61 30       	cpi	r22, 0x01	; 1
    35b8:	11 f4       	brne	.+4      	; 0x35be <_Z7pinModeic+0x6e>
    35ba:	39 9a       	sbi	0x07, 1	; 7
    35bc:	08 95       	ret
    35be:	39 98       	cbi	0x07, 1	; 7
    35c0:	08 95       	ret
    35c2:	61 30       	cpi	r22, 0x01	; 1
    35c4:	11 f4       	brne	.+4      	; 0x35ca <_Z7pinModeic+0x7a>
    35c6:	3a 9a       	sbi	0x07, 2	; 7
    35c8:	08 95       	ret
    35ca:	3a 98       	cbi	0x07, 2	; 7
    35cc:	08 95       	ret
    35ce:	61 30       	cpi	r22, 0x01	; 1
    35d0:	11 f4       	brne	.+4      	; 0x35d6 <_Z7pinModeic+0x86>
    35d2:	3b 9a       	sbi	0x07, 3	; 7
    35d4:	08 95       	ret
    35d6:	3b 98       	cbi	0x07, 3	; 7
    35d8:	08 95       	ret
    35da:	61 30       	cpi	r22, 0x01	; 1
    35dc:	11 f4       	brne	.+4      	; 0x35e2 <_Z7pinModeic+0x92>
    35de:	3c 9a       	sbi	0x07, 4	; 7
    35e0:	08 95       	ret
    35e2:	3c 98       	cbi	0x07, 4	; 7
    35e4:	08 95       	ret
    35e6:	61 30       	cpi	r22, 0x01	; 1
    35e8:	11 f4       	brne	.+4      	; 0x35ee <_Z7pinModeic+0x9e>
    35ea:	3d 9a       	sbi	0x07, 5	; 7
    35ec:	08 95       	ret
    35ee:	3d 98       	cbi	0x07, 5	; 7
    35f0:	08 95       	ret
    35f2:	61 30       	cpi	r22, 0x01	; 1
    35f4:	11 f4       	brne	.+4      	; 0x35fa <_Z7pinModeic+0xaa>
    35f6:	20 9a       	sbi	0x04, 0	; 4
    35f8:	08 95       	ret
    35fa:	20 98       	cbi	0x04, 0	; 4
    35fc:	08 95       	ret
    35fe:	61 30       	cpi	r22, 0x01	; 1
    3600:	11 f4       	brne	.+4      	; 0x3606 <_Z7pinModeic+0xb6>
    3602:	21 9a       	sbi	0x04, 1	; 4
    3604:	08 95       	ret
    3606:	21 98       	cbi	0x04, 1	; 4
    3608:	08 95       	ret
    360a:	61 30       	cpi	r22, 0x01	; 1
    360c:	11 f4       	brne	.+4      	; 0x3612 <_Z7pinModeic+0xc2>
    360e:	22 9a       	sbi	0x04, 2	; 4
    3610:	08 95       	ret
    3612:	22 98       	cbi	0x04, 2	; 4
    3614:	08 95       	ret
    3616:	61 30       	cpi	r22, 0x01	; 1
    3618:	11 f4       	brne	.+4      	; 0x361e <_Z7pinModeic+0xce>
    361a:	23 9a       	sbi	0x04, 3	; 4
    361c:	08 95       	ret
    361e:	23 98       	cbi	0x04, 3	; 4
    3620:	08 95       	ret
    3622:	61 30       	cpi	r22, 0x01	; 1
    3624:	11 f4       	brne	.+4      	; 0x362a <_Z7pinModeic+0xda>
    3626:	24 9a       	sbi	0x04, 4	; 4
    3628:	08 95       	ret
    362a:	24 98       	cbi	0x04, 4	; 4
    362c:	08 95       	ret

0000362e <_Z12digitalWriteic>:
    362e:	0d 97       	sbiw	r24, 0x0d	; 13
    3630:	8e 31       	cpi	r24, 0x1E	; 30
    3632:	91 05       	cpc	r25, r1
    3634:	68 f5       	brcc	.+90     	; 0x3690 <_Z12digitalWriteic+0x62>
    3636:	87 58       	subi	r24, 0x87	; 135
    3638:	9f 4f       	sbci	r25, 0xFF	; 255
    363a:	fc 01       	movw	r30, r24
    363c:	c5 c2       	rjmp	.+1418   	; 0x3bc8 <__tablejump2__>
    363e:	61 30       	cpi	r22, 0x01	; 1
    3640:	11 f4       	brne	.+4      	; 0x3646 <_Z12digitalWriteic+0x18>
    3642:	5c 9a       	sbi	0x0b, 4	; 11
    3644:	08 95       	ret
    3646:	5c 98       	cbi	0x0b, 4	; 11
    3648:	08 95       	ret
    364a:	61 30       	cpi	r22, 0x01	; 1
    364c:	11 f4       	brne	.+4      	; 0x3652 <_Z12digitalWriteic+0x24>
    364e:	5d 9a       	sbi	0x0b, 5	; 11
    3650:	08 95       	ret
    3652:	5d 98       	cbi	0x0b, 5	; 11
    3654:	08 95       	ret
    3656:	61 30       	cpi	r22, 0x01	; 1
    3658:	11 f4       	brne	.+4      	; 0x365e <_Z12digitalWriteic+0x30>
    365a:	5e 9a       	sbi	0x0b, 6	; 11
    365c:	08 95       	ret
    365e:	5e 98       	cbi	0x0b, 6	; 11
    3660:	08 95       	ret
    3662:	61 30       	cpi	r22, 0x01	; 1
    3664:	11 f4       	brne	.+4      	; 0x366a <_Z12digitalWriteic+0x3c>
    3666:	5f 9a       	sbi	0x0b, 7	; 11
    3668:	08 95       	ret
    366a:	5f 98       	cbi	0x0b, 7	; 11
    366c:	08 95       	ret
    366e:	61 30       	cpi	r22, 0x01	; 1
    3670:	11 f4       	brne	.+4      	; 0x3676 <_Z12digitalWriteic+0x48>
    3672:	28 9a       	sbi	0x05, 0	; 5
    3674:	08 95       	ret
    3676:	28 98       	cbi	0x05, 0	; 5
    3678:	08 95       	ret
    367a:	61 30       	cpi	r22, 0x01	; 1
    367c:	11 f4       	brne	.+4      	; 0x3682 <_Z12digitalWriteic+0x54>
    367e:	29 9a       	sbi	0x05, 1	; 5
    3680:	08 95       	ret
    3682:	29 98       	cbi	0x05, 1	; 5
    3684:	08 95       	ret
    3686:	61 30       	cpi	r22, 0x01	; 1
    3688:	11 f4       	brne	.+4      	; 0x368e <_Z12digitalWriteic+0x60>
    368a:	2a 9a       	sbi	0x05, 2	; 5
    368c:	08 95       	ret
    368e:	2a 98       	cbi	0x05, 2	; 5
    3690:	08 95       	ret

00003692 <_Z12turnOnSim900v>:
    3692:	cf 93       	push	r28
    3694:	df 93       	push	r29
    3696:	c0 91 99 01 	lds	r28, 0x0199	; 0x800199 <SIM_PWR>
    369a:	d0 91 9a 01 	lds	r29, 0x019A	; 0x80019a <SIM_PWR+0x1>
    369e:	61 e0       	ldi	r22, 0x01	; 1
    36a0:	ce 01       	movw	r24, r28
    36a2:	c5 df       	rcall	.-118    	; 0x362e <_Z12digitalWriteic>
    36a4:	2f e7       	ldi	r18, 0x7F	; 127
    36a6:	84 e8       	ldi	r24, 0x84	; 132
    36a8:	9e e1       	ldi	r25, 0x1E	; 30
    36aa:	21 50       	subi	r18, 0x01	; 1
    36ac:	80 40       	sbci	r24, 0x00	; 0
    36ae:	90 40       	sbci	r25, 0x00	; 0
    36b0:	e1 f7       	brne	.-8      	; 0x36aa <_Z12turnOnSim900v+0x18>
    36b2:	00 c0       	rjmp	.+0      	; 0x36b4 <_Z12turnOnSim900v+0x22>
    36b4:	00 00       	nop
    36b6:	60 e0       	ldi	r22, 0x00	; 0
    36b8:	ce 01       	movw	r24, r28
    36ba:	b9 df       	rcall	.-142    	; 0x362e <_Z12digitalWriteic>
    36bc:	df 91       	pop	r29
    36be:	cf 91       	pop	r28
    36c0:	08 95       	ret

000036c2 <_Z11digitalReadi>:
    36c2:	86 31       	cpi	r24, 0x16	; 22
    36c4:	91 05       	cpc	r25, r1
    36c6:	a1 f0       	breq	.+40     	; 0x36f0 <_Z11digitalReadi+0x2e>
    36c8:	34 f4       	brge	.+12     	; 0x36d6 <_Z11digitalReadi+0x14>
    36ca:	84 31       	cpi	r24, 0x14	; 20
    36cc:	91 05       	cpc	r25, r1
    36ce:	51 f0       	breq	.+20     	; 0x36e4 <_Z11digitalReadi+0x22>
    36d0:	45 97       	sbiw	r24, 0x15	; 21
    36d2:	59 f0       	breq	.+22     	; 0x36ea <_Z11digitalReadi+0x28>
    36d4:	19 c0       	rjmp	.+50     	; 0x3708 <_Z11digitalReadi+0x46>
    36d6:	88 31       	cpi	r24, 0x18	; 24
    36d8:	91 05       	cpc	r25, r1
    36da:	81 f0       	breq	.+32     	; 0x36fc <_Z11digitalReadi+0x3a>
    36dc:	64 f0       	brlt	.+24     	; 0x36f6 <_Z11digitalReadi+0x34>
    36de:	8b 97       	sbiw	r24, 0x2b	; 43
    36e0:	81 f0       	breq	.+32     	; 0x3702 <_Z11digitalReadi+0x40>
    36e2:	12 c0       	rjmp	.+36     	; 0x3708 <_Z11digitalReadi+0x46>
    36e4:	86 b1       	in	r24, 0x06	; 6
    36e6:	82 70       	andi	r24, 0x02	; 2
    36e8:	08 95       	ret
    36ea:	86 b1       	in	r24, 0x06	; 6
    36ec:	84 70       	andi	r24, 0x04	; 4
    36ee:	08 95       	ret
    36f0:	86 b1       	in	r24, 0x06	; 6
    36f2:	88 70       	andi	r24, 0x08	; 8
    36f4:	08 95       	ret
    36f6:	86 b1       	in	r24, 0x06	; 6
    36f8:	80 71       	andi	r24, 0x10	; 16
    36fa:	08 95       	ret
    36fc:	86 b1       	in	r24, 0x06	; 6
    36fe:	80 72       	andi	r24, 0x20	; 32
    3700:	08 95       	ret
    3702:	83 b1       	in	r24, 0x03	; 3
    3704:	88 70       	andi	r24, 0x08	; 8
    3706:	08 95       	ret
    3708:	80 e0       	ldi	r24, 0x00	; 0
    370a:	08 95       	ret

0000370c <_Z9setSourcei>:
    370c:	20 91 a9 01 	lds	r18, 0x01A9	; 0x8001a9 <HAS_WIFI>
    3710:	30 91 aa 01 	lds	r19, 0x01AA	; 0x8001aa <HAS_WIFI+0x1>
    3714:	23 2b       	or	r18, r19
    3716:	51 f0       	breq	.+20     	; 0x372c <_Z9setSourcei+0x20>
    3718:	20 91 b1 03 	lds	r18, 0x03B1	; 0x8003b1 <ESP>
    371c:	30 91 b2 03 	lds	r19, 0x03B2	; 0x8003b2 <ESP+0x1>
    3720:	82 17       	cp	r24, r18
    3722:	93 07       	cpc	r25, r19
    3724:	19 f4       	brne	.+6      	; 0x372c <_Z9setSourcei+0x20>
    3726:	80 93 a9 0f 	sts	0x0FA9, r24	; 0x800fa9 <__system_var+0x2f>
    372a:	08 95       	ret
    372c:	20 91 a7 01 	lds	r18, 0x01A7	; 0x8001a7 <HAS_GSM>
    3730:	30 91 a8 01 	lds	r19, 0x01A8	; 0x8001a8 <HAS_GSM+0x1>
    3734:	23 2b       	or	r18, r19
    3736:	51 f0       	breq	.+20     	; 0x374c <_Z9setSourcei+0x40>
    3738:	20 91 af 03 	lds	r18, 0x03AF	; 0x8003af <SIM>
    373c:	30 91 b0 03 	lds	r19, 0x03B0	; 0x8003b0 <SIM+0x1>
    3740:	82 17       	cp	r24, r18
    3742:	93 07       	cpc	r25, r19
    3744:	19 f4       	brne	.+6      	; 0x374c <_Z9setSourcei+0x40>
    3746:	80 93 a9 0f 	sts	0x0FA9, r24	; 0x800fa9 <__system_var+0x2f>
    374a:	08 95       	ret
    374c:	8f ef       	ldi	r24, 0xFF	; 255
    374e:	80 93 a9 0f 	sts	0x0FA9, r24	; 0x800fa9 <__system_var+0x2f>
    3752:	08 95       	ret

00003754 <_Z15defaultSettingsv>:
    3754:	ec ee       	ldi	r30, 0xEC	; 236
    3756:	f9 e0       	ldi	r31, 0x09	; 9
    3758:	11 82       	std	Z+1, r1	; 0x01
    375a:	10 82       	st	Z, r1
    375c:	13 82       	std	Z+3, r1	; 0x03
    375e:	12 82       	std	Z+2, r1	; 0x02
    3760:	15 82       	std	Z+5, r1	; 0x05
    3762:	14 82       	std	Z+4, r1	; 0x04
    3764:	11 86       	std	Z+9, r1	; 0x09
    3766:	10 86       	std	Z+8, r1	; 0x08
    3768:	13 86       	std	Z+11, r1	; 0x0b
    376a:	12 86       	std	Z+10, r1	; 0x0a
    376c:	15 86       	std	Z+13, r1	; 0x0d
    376e:	14 86       	std	Z+12, r1	; 0x0c
    3770:	17 86       	std	Z+15, r1	; 0x0f
    3772:	16 86       	std	Z+14, r1	; 0x0e
    3774:	e9 e8       	ldi	r30, 0x89	; 137
    3776:	ff e0       	ldi	r31, 0x0F	; 15
    3778:	81 e9       	ldi	r24, 0x91	; 145
    377a:	9f e0       	ldi	r25, 0x0F	; 15
    377c:	11 92       	st	Z+, r1
    377e:	11 92       	st	Z+, r1
    3780:	17 82       	std	Z+7, r1	; 0x07
    3782:	16 82       	std	Z+6, r1	; 0x06
    3784:	17 86       	std	Z+15, r1	; 0x0f
    3786:	16 86       	std	Z+14, r1	; 0x0e
    3788:	e8 17       	cp	r30, r24
    378a:	f9 07       	cpc	r31, r25
    378c:	b9 f7       	brne	.-18     	; 0x377c <_Z15defaultSettingsv+0x28>
    378e:	e6 ea       	ldi	r30, 0xA6	; 166
    3790:	f8 e0       	ldi	r31, 0x08	; 8
    3792:	2e e0       	ldi	r18, 0x0E	; 14
    3794:	39 e0       	ldi	r19, 0x09	; 9
    3796:	09 c0       	rjmp	.+18     	; 0x37aa <_Z15defaultSettingsv+0x56>
    3798:	11 92       	st	Z+, r1
    379a:	11 92       	st	Z+, r1
    379c:	e8 17       	cp	r30, r24
    379e:	f9 07       	cpc	r31, r25
    37a0:	d9 f7       	brne	.-10     	; 0x3798 <_Z15defaultSettingsv+0x44>
    37a2:	fc 01       	movw	r30, r24
    37a4:	28 17       	cp	r18, r24
    37a6:	39 07       	cpc	r19, r25
    37a8:	19 f0       	breq	.+6      	; 0x37b0 <_Z15defaultSettingsv+0x5c>
    37aa:	cf 01       	movw	r24, r30
    37ac:	4a 96       	adiw	r24, 0x1a	; 26
    37ae:	f4 cf       	rjmp	.-24     	; 0x3798 <_Z15defaultSettingsv+0x44>
    37b0:	ea e7       	ldi	r30, 0x7A	; 122
    37b2:	ff e0       	ldi	r31, 0x0F	; 15
    37b4:	15 aa       	std	Z+53, r1	; 0x35
    37b6:	14 aa       	std	Z+52, r1	; 0x34
    37b8:	80 91 8d 01 	lds	r24, 0x018D	; 0x80018d <DETECT_0>
    37bc:	90 91 8e 01 	lds	r25, 0x018E	; 0x80018e <DETECT_0+0x1>
    37c0:	90 a7       	std	Z+40, r25	; 0x28
    37c2:	87 a3       	std	Z+39, r24	; 0x27
    37c4:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <DETECT_1>
    37c8:	90 91 8c 01 	lds	r25, 0x018C	; 0x80018c <DETECT_1+0x1>
    37cc:	92 a7       	std	Z+42, r25	; 0x2a
    37ce:	81 a7       	std	Z+41, r24	; 0x29
    37d0:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <DETECT_2>
    37d4:	90 91 8a 01 	lds	r25, 0x018A	; 0x80018a <DETECT_2+0x1>
    37d8:	94 a7       	std	Z+44, r25	; 0x2c
    37da:	83 a7       	std	Z+43, r24	; 0x2b
    37dc:	80 91 87 01 	lds	r24, 0x0187	; 0x800187 <DETECT_3>
    37e0:	90 91 88 01 	lds	r25, 0x0188	; 0x800188 <DETECT_3+0x1>
    37e4:	96 a7       	std	Z+46, r25	; 0x2e
    37e6:	85 a7       	std	Z+45, r24	; 0x2d
    37e8:	11 aa       	std	Z+49, r1	; 0x31
    37ea:	10 aa       	std	Z+48, r1	; 0x30
    37ec:	13 aa       	std	Z+51, r1	; 0x33
    37ee:	12 aa       	std	Z+50, r1	; 0x32
    37f0:	81 e0       	ldi	r24, 0x01	; 1
    37f2:	86 ab       	std	Z+54, r24	; 0x36
    37f4:	69 eb       	ldi	r22, 0xB9	; 185
    37f6:	71 e0       	ldi	r23, 0x01	; 1
    37f8:	80 e1       	ldi	r24, 0x10	; 16
    37fa:	9a e0       	ldi	r25, 0x0A	; 10
    37fc:	61 d3       	rcall	.+1730   	; 0x3ec0 <strcpy>
    37fe:	64 eb       	ldi	r22, 0xB4	; 180
    3800:	71 e0       	ldi	r23, 0x01	; 1
    3802:	84 e7       	ldi	r24, 0x74	; 116
    3804:	9a e0       	ldi	r25, 0x0A	; 10
    3806:	5c d3       	rcall	.+1720   	; 0x3ec0 <strcpy>
    3808:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <FALSE>
    380c:	80 93 c1 0a 	sts	0x0AC1, r24	; 0x800ac1 <__network_data+0xb1>
    3810:	80 93 c2 0a 	sts	0x0AC2, r24	; 0x800ac2 <__network_data+0xb2>
    3814:	80 93 c3 0a 	sts	0x0AC3, r24	; 0x800ac3 <__network_data+0xb3>
    3818:	28 ee       	ldi	r18, 0xE8	; 232
    381a:	33 e0       	ldi	r19, 0x03	; 3
    381c:	e4 ec       	ldi	r30, 0xC4	; 196
    381e:	fa e0       	ldi	r31, 0x0A	; 10
    3820:	df 01       	movw	r26, r30
    3822:	a9 01       	movw	r20, r18
    3824:	1d 92       	st	X+, r1
    3826:	41 50       	subi	r20, 0x01	; 1
    3828:	50 40       	sbci	r21, 0x00	; 0
    382a:	e1 f7       	brne	.-8      	; 0x3824 <_Z15defaultSettingsv+0xd0>
    382c:	98 ec       	ldi	r25, 0xC8	; 200
    382e:	ec ea       	ldi	r30, 0xAC	; 172
    3830:	fe e0       	ldi	r31, 0x0E	; 14
    3832:	df 01       	movw	r26, r30
    3834:	1d 92       	st	X+, r1
    3836:	9a 95       	dec	r25
    3838:	e9 f7       	brne	.-6      	; 0x3834 <_Z15defaultSettingsv+0xe0>
    383a:	80 93 74 0f 	sts	0x0F74, r24	; 0x800f74 <__network_data+0x564>
    383e:	80 93 75 0f 	sts	0x0F75, r24	; 0x800f75 <__network_data+0x565>
    3842:	10 92 77 0f 	sts	0x0F77, r1	; 0x800f77 <__network_data+0x567>
    3846:	10 92 76 0f 	sts	0x0F76, r1	; 0x800f76 <__network_data+0x566>
    384a:	10 92 79 0f 	sts	0x0F79, r1	; 0x800f79 <__network_data+0x569>
    384e:	10 92 78 0f 	sts	0x0F78, r1	; 0x800f78 <__network_data+0x568>
    3852:	ec ee       	ldi	r30, 0xEC	; 236
    3854:	f9 e0       	ldi	r31, 0x09	; 9
    3856:	13 8a       	std	Z+19, r1	; 0x13
    3858:	12 8a       	std	Z+18, r1	; 0x12
    385a:	8a e0       	ldi	r24, 0x0A	; 10
    385c:	90 e0       	ldi	r25, 0x00	; 0
    385e:	91 8b       	std	Z+17, r25	; 0x11
    3860:	80 8b       	std	Z+16, r24	; 0x10
    3862:	17 8a       	std	Z+23, r1	; 0x17
    3864:	16 8a       	std	Z+22, r1	; 0x16
    3866:	8e e1       	ldi	r24, 0x1E	; 30
    3868:	90 e0       	ldi	r25, 0x00	; 0
    386a:	95 8b       	std	Z+21, r25	; 0x15
    386c:	84 8b       	std	Z+20, r24	; 0x14
    386e:	13 8e       	std	Z+27, r1	; 0x1b
    3870:	12 8e       	std	Z+26, r1	; 0x1a
    3872:	25 e0       	ldi	r18, 0x05	; 5
    3874:	30 e0       	ldi	r19, 0x00	; 0
    3876:	31 8f       	std	Z+25, r19	; 0x19
    3878:	20 8f       	std	Z+24, r18	; 0x18
    387a:	17 8e       	std	Z+31, r1	; 0x1f
    387c:	16 8e       	std	Z+30, r1	; 0x1e
    387e:	95 8f       	std	Z+29, r25	; 0x1d
    3880:	84 8f       	std	Z+28, r24	; 0x1c
    3882:	13 a2       	std	Z+35, r1	; 0x23
    3884:	12 a2       	std	Z+34, r1	; 0x22
    3886:	84 eb       	ldi	r24, 0xB4	; 180
    3888:	90 e0       	ldi	r25, 0x00	; 0
    388a:	91 a3       	std	Z+33, r25	; 0x21
    388c:	80 a3       	std	Z+32, r24	; 0x20
    388e:	85 e0       	ldi	r24, 0x05	; 5
    3890:	e1 e2       	ldi	r30, 0x21	; 33
    3892:	f8 e0       	ldi	r31, 0x08	; 8
    3894:	aa e7       	ldi	r26, 0x7A	; 122
    3896:	bf e0       	ldi	r27, 0x0F	; 15
    3898:	01 90       	ld	r0, Z+
    389a:	0d 92       	st	X+, r0
    389c:	8a 95       	dec	r24
    389e:	e1 f7       	brne	.-8      	; 0x3898 <_Z15defaultSettingsv+0x144>
    38a0:	8d e0       	ldi	r24, 0x0D	; 13
    38a2:	e2 eb       	ldi	r30, 0xB2	; 178
    38a4:	ff e0       	ldi	r31, 0x0F	; 15
    38a6:	df 01       	movw	r26, r30
    38a8:	1d 92       	st	X+, r1
    38aa:	8a 95       	dec	r24
    38ac:	e9 f7       	brne	.-6      	; 0x38a8 <_Z15defaultSettingsv+0x154>
    38ae:	21 e0       	ldi	r18, 0x01	; 1
    38b0:	30 e0       	ldi	r19, 0x00	; 0
    38b2:	43 e4       	ldi	r20, 0x43	; 67
    38b4:	52 e0       	ldi	r21, 0x02	; 2
    38b6:	6f e0       	ldi	r22, 0x0F	; 15
    38b8:	70 e0       	ldi	r23, 0x00	; 0
    38ba:	8a e7       	ldi	r24, 0x7A	; 122
    38bc:	9f e0       	ldi	r25, 0x0F	; 15
    38be:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <_Z19eepromReadAttributePciS_i>
    38c2:	81 11       	cpse	r24, r1
    38c4:	09 c0       	rjmp	.+18     	; 0x38d8 <_Z15defaultSettingsv+0x184>
    38c6:	85 e0       	ldi	r24, 0x05	; 5
    38c8:	e1 e2       	ldi	r30, 0x21	; 33
    38ca:	f8 e0       	ldi	r31, 0x08	; 8
    38cc:	aa e7       	ldi	r26, 0x7A	; 122
    38ce:	bf e0       	ldi	r27, 0x0F	; 15
    38d0:	01 90       	ld	r0, Z+
    38d2:	0d 92       	st	X+, r0
    38d4:	8a 95       	dec	r24
    38d6:	e1 f7       	brne	.-8      	; 0x38d0 <_Z15defaultSettingsv+0x17c>
    38d8:	0c 94 6b 04 	jmp	0x8d6	; 0x8d6 <_Z21getAccessPointSettingv>
    38dc:	08 95       	ret

000038de <_Z13clearReadLinev>:
    38de:	80 91 a9 0f 	lds	r24, 0x0FA9	; 0x800fa9 <__system_var+0x2f>
    38e2:	90 e0       	ldi	r25, 0x00	; 0
    38e4:	20 91 b1 03 	lds	r18, 0x03B1	; 0x8003b1 <ESP>
    38e8:	30 91 b2 03 	lds	r19, 0x03B2	; 0x8003b2 <ESP+0x1>
    38ec:	82 17       	cp	r24, r18
    38ee:	93 07       	cpc	r25, r19
    38f0:	81 f4       	brne	.+32     	; 0x3912 <_Z13clearReadLinev+0x34>
    38f2:	27 ee       	ldi	r18, 0xE7	; 231
    38f4:	33 e0       	ldi	r19, 0x03	; 3
    38f6:	e4 ec       	ldi	r30, 0xC4	; 196
    38f8:	fa e0       	ldi	r31, 0x0A	; 10
    38fa:	df 01       	movw	r26, r30
    38fc:	a9 01       	movw	r20, r18
    38fe:	1d 92       	st	X+, r1
    3900:	41 50       	subi	r20, 0x01	; 1
    3902:	50 40       	sbci	r21, 0x00	; 0
    3904:	e1 f7       	brne	.-8      	; 0x38fe <_Z13clearReadLinev+0x20>
    3906:	10 92 74 0f 	sts	0x0F74, r1	; 0x800f74 <__network_data+0x564>
    390a:	10 92 77 0f 	sts	0x0F77, r1	; 0x800f77 <__network_data+0x567>
    390e:	10 92 76 0f 	sts	0x0F76, r1	; 0x800f76 <__network_data+0x566>
    3912:	20 91 af 03 	lds	r18, 0x03AF	; 0x8003af <SIM>
    3916:	30 91 b0 03 	lds	r19, 0x03B0	; 0x8003b0 <SIM+0x1>
    391a:	82 17       	cp	r24, r18
    391c:	93 07       	cpc	r25, r19
    391e:	69 f4       	brne	.+26     	; 0x393a <_Z13clearReadLinev+0x5c>
    3920:	87 ec       	ldi	r24, 0xC7	; 199
    3922:	ec ea       	ldi	r30, 0xAC	; 172
    3924:	fe e0       	ldi	r31, 0x0E	; 14
    3926:	df 01       	movw	r26, r30
    3928:	1d 92       	st	X+, r1
    392a:	8a 95       	dec	r24
    392c:	e9 f7       	brne	.-6      	; 0x3928 <_Z13clearReadLinev+0x4a>
    392e:	10 92 75 0f 	sts	0x0F75, r1	; 0x800f75 <__network_data+0x565>
    3932:	10 92 79 0f 	sts	0x0F79, r1	; 0x800f79 <__network_data+0x569>
    3936:	10 92 78 0f 	sts	0x0F78, r1	; 0x800f78 <__network_data+0x568>
    393a:	08 95       	ret

0000393c <_Z14clearGSMBufferv>:
}
void clearGSMBuffer(){
	memset(__network_data.sim_buffer, ' ', sizeof(__network_data.sim_buffer) - 1);
    393c:	47 ec       	ldi	r20, 0xC7	; 199
    393e:	50 e0       	ldi	r21, 0x00	; 0
    3940:	60 e2       	ldi	r22, 0x20	; 32
    3942:	70 e0       	ldi	r23, 0x00	; 0
    3944:	8c ea       	ldi	r24, 0xAC	; 172
    3946:	9e e0       	ldi	r25, 0x0E	; 14
    3948:	9e d2       	rcall	.+1340   	; 0x3e86 <memset>
	__network_data.is_sim_read_line = 0;
    394a:	10 92 75 0f 	sts	0x0F75, r1	; 0x800f75 <__network_data+0x565>
	__network_data.index_sim = 0;
    394e:	10 92 79 0f 	sts	0x0F79, r1	; 0x800f79 <__network_data+0x569>
    3952:	10 92 78 0f 	sts	0x0F78, r1	; 0x800f78 <__network_data+0x568>
    3956:	08 95       	ret

00003958 <_Z9initTimerv>:
}

void initTimer(){
	// Setting no prescaler
	TCCR0B |= (1 << CS00);
    3958:	85 b5       	in	r24, 0x25	; 37
    395a:	81 60       	ori	r24, 0x01	; 1
    395c:	85 bd       	out	0x25, r24	; 37
	// Initialize Timer0
	TCNT0 = 0;
    395e:	16 bc       	out	0x26, r1	; 38
	// Initialize the overflow interrupt for TIMER0
	TIMSK0 |= (1 << TOIE0);
    3960:	ee e6       	ldi	r30, 0x6E	; 110
    3962:	f0 e0       	ldi	r31, 0x00	; 0
    3964:	80 81       	ld	r24, Z
    3966:	81 60       	ori	r24, 0x01	; 1
    3968:	80 83       	st	Z, r24
    396a:	08 95       	ret

0000396c <_Z14powerUpModulesv>:
}
void powerUpModules(){
    396c:	cf 93       	push	r28
    396e:	df 93       	push	r29
	

	if (HAS_GSM){
    3970:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <HAS_GSM>
    3974:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <HAS_GSM+0x1>
    3978:	89 2b       	or	r24, r25
    397a:	41 f1       	breq	.+80     	; 0x39cc <_Z14powerUpModulesv+0x60>
		setSource(SIM);
    397c:	80 91 af 03 	lds	r24, 0x03AF	; 0x8003af <SIM>
    3980:	90 91 b0 03 	lds	r25, 0x03B0	; 0x8003b0 <SIM+0x1>
    3984:	c3 de       	rcall	.-634    	; 0x370c <_Z9setSourcei>
		GSM_Write_String("AT\r\n");
    3986:	89 e9       	ldi	r24, 0x99	; 153
    3988:	97 e0       	ldi	r25, 0x07	; 7
    398a:	ba dd       	rcall	.-1164   	; 0x3500 <_Z16GSM_Write_StringPKc>
		delay(500);
    398c:	84 ef       	ldi	r24, 0xF4	; 244
    398e:	91 e0       	ldi	r25, 0x01	; 1
    3990:	d3 dd       	rcall	.-1114   	; 0x3538 <_Z5delayi>
		if (strstr(__network_data.sim_buffer,"OK") == 0){
    3992:	69 e1       	ldi	r22, 0x19	; 25
    3994:	72 e0       	ldi	r23, 0x02	; 2
    3996:	8c ea       	ldi	r24, 0xAC	; 172
    3998:	9e e0       	ldi	r25, 0x0E	; 14
    399a:	99 d2       	rcall	.+1330   	; 0x3ece <strstr>
    399c:	89 2b       	or	r24, r25
    399e:	21 f4       	brne	.+8      	; 0x39a8 <_Z14powerUpModulesv+0x3c>
			turnOnSim900();
    39a0:	78 de       	rcall	.-784    	; 0x3692 <_Z12turnOnSim900v>
			delay(10000);
    39a2:	80 e1       	ldi	r24, 0x10	; 16
    39a4:	97 e2       	ldi	r25, 0x27	; 39
    39a6:	c8 dd       	rcall	.-1136   	; 0x3538 <_Z5delayi>
		}
		GSM_Write_String("AT+CMGF=1\r\n");
    39a8:	8e e9       	ldi	r24, 0x9E	; 158
    39aa:	97 e0       	ldi	r25, 0x07	; 7
    39ac:	a9 dd       	rcall	.-1198   	; 0x3500 <_Z16GSM_Write_StringPKc>
		delay(500);
    39ae:	84 ef       	ldi	r24, 0xF4	; 244
    39b0:	91 e0       	ldi	r25, 0x01	; 1
    39b2:	c2 dd       	rcall	.-1148   	; 0x3538 <_Z5delayi>
		GSM_Write_String("AT+CLTS=1\r\n");
    39b4:	86 e2       	ldi	r24, 0x26	; 38
    39b6:	98 e0       	ldi	r25, 0x08	; 8
    39b8:	a3 dd       	rcall	.-1210   	; 0x3500 <_Z16GSM_Write_StringPKc>
		delay(500);
    39ba:	84 ef       	ldi	r24, 0xF4	; 244
    39bc:	91 e0       	ldi	r25, 0x01	; 1
    39be:	bc dd       	rcall	.-1160   	; 0x3538 <_Z5delayi>
		GSM_Write_String("AT+CLIP=1\r\n");
    39c0:	82 e3       	ldi	r24, 0x32	; 50
    39c2:	98 e0       	ldi	r25, 0x08	; 8
    39c4:	9d dd       	rcall	.-1222   	; 0x3500 <_Z16GSM_Write_StringPKc>
		delay(500);
    39c6:	84 ef       	ldi	r24, 0xF4	; 244
    39c8:	91 e0       	ldi	r25, 0x01	; 1
    39ca:	b6 dd       	rcall	.-1172   	; 0x3538 <_Z5delayi>
	}
	
	if (HAS_WIFI){
    39cc:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <HAS_WIFI>
    39d0:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <HAS_WIFI+0x1>
    39d4:	89 2b       	or	r24, r25
    39d6:	09 f4       	brne	.+2      	; 0x39da <_Z14powerUpModulesv+0x6e>
    39d8:	43 c0       	rjmp	.+134    	; 0x3a60 <_Z14powerUpModulesv+0xf4>
	_delay_ms(1000);
	digitalWrite(SIM_PWR,0);

}
void espPower(const char pin, const char status){
	digitalWrite(pin,status);
    39da:	c0 91 97 01 	lds	r28, 0x0197	; 0x800197 <ESP_PWR>
    39de:	d0 91 98 01 	lds	r29, 0x0198	; 0x800198 <ESP_PWR+0x1>
    39e2:	dd 27       	eor	r29, r29
    39e4:	61 e0       	ldi	r22, 0x01	; 1
    39e6:	ce 01       	movw	r24, r28
    39e8:	22 de       	rcall	.-956    	; 0x362e <_Z12digitalWriteic>
		delay(500);
	}
	
	if (HAS_WIFI){
		espPower(ESP_PWR,1);
		delay(500);
    39ea:	84 ef       	ldi	r24, 0xF4	; 244
    39ec:	91 e0       	ldi	r25, 0x01	; 1
    39ee:	a4 dd       	rcall	.-1208   	; 0x3538 <_Z5delayi>
	_delay_ms(1000);
	digitalWrite(SIM_PWR,0);

}
void espPower(const char pin, const char status){
	digitalWrite(pin,status);
    39f0:	60 e0       	ldi	r22, 0x00	; 0
    39f2:	ce 01       	movw	r24, r28
    39f4:	1c de       	rcall	.-968    	; 0x362e <_Z12digitalWriteic>
	
	if (HAS_WIFI){
		espPower(ESP_PWR,1);
		delay(500);
		espPower(ESP_PWR,0);
		delay(1000);
    39f6:	88 ee       	ldi	r24, 0xE8	; 232
    39f8:	93 e0       	ldi	r25, 0x03	; 3
    39fa:	9e dd       	rcall	.-1220   	; 0x3538 <_Z5delayi>
		setSource(ESP);
    39fc:	80 91 b1 03 	lds	r24, 0x03B1	; 0x8003b1 <ESP>
    3a00:	90 91 b2 03 	lds	r25, 0x03B2	; 0x8003b2 <ESP+0x1>
    3a04:	83 de       	rcall	.-762    	; 0x370c <_Z9setSourcei>
		
		WIFI_Write_String("AT+SLEEP=2\r\n");
    3a06:	8e e3       	ldi	r24, 0x3E	; 62
    3a08:	98 e0       	ldi	r25, 0x08	; 8
    3a0a:	6c dd       	rcall	.-1320   	; 0x34e4 <_Z17WIFI_Write_StringPKc>
		readUntil("OK", 3);
    3a0c:	63 e0       	ldi	r22, 0x03	; 3
    3a0e:	70 e0       	ldi	r23, 0x00	; 0
    3a10:	89 e1       	ldi	r24, 0x19	; 25
    3a12:	92 e0       	ldi	r25, 0x02	; 2
    3a14:	0e 94 0f 09 	call	0x121e	; 0x121e <_Z9readUntilPKci>
		WIFI_Write_String("AT+CIPMUX=1\r\n");
    3a18:	8b e4       	ldi	r24, 0x4B	; 75
    3a1a:	98 e0       	ldi	r25, 0x08	; 8
    3a1c:	63 dd       	rcall	.-1338   	; 0x34e4 <_Z17WIFI_Write_StringPKc>
		readUntil("OK", 3);
    3a1e:	63 e0       	ldi	r22, 0x03	; 3
    3a20:	70 e0       	ldi	r23, 0x00	; 0
    3a22:	89 e1       	ldi	r24, 0x19	; 25
    3a24:	92 e0       	ldi	r25, 0x02	; 2
    3a26:	0e 94 0f 09 	call	0x121e	; 0x121e <_Z9readUntilPKci>
		WIFI_Write_String("AT+CWMODE=3\r\n");
    3a2a:	89 e5       	ldi	r24, 0x59	; 89
    3a2c:	98 e0       	ldi	r25, 0x08	; 8
    3a2e:	5a dd       	rcall	.-1356   	; 0x34e4 <_Z17WIFI_Write_StringPKc>
		readUntil("OK", 3);
    3a30:	63 e0       	ldi	r22, 0x03	; 3
    3a32:	70 e0       	ldi	r23, 0x00	; 0
    3a34:	89 e1       	ldi	r24, 0x19	; 25
    3a36:	92 e0       	ldi	r25, 0x02	; 2
    3a38:	0e 94 0f 09 	call	0x121e	; 0x121e <_Z9readUntilPKci>
		WIFI_Write_String("AT+CWSAP=\"HCM-NETWORK\",\"admin1234\",5,3\r\n");
    3a3c:	87 e6       	ldi	r24, 0x67	; 103
    3a3e:	98 e0       	ldi	r25, 0x08	; 8
    3a40:	51 dd       	rcall	.-1374   	; 0x34e4 <_Z17WIFI_Write_StringPKc>
		readUntil("OK", 3);
    3a42:	63 e0       	ldi	r22, 0x03	; 3
    3a44:	70 e0       	ldi	r23, 0x00	; 0
    3a46:	89 e1       	ldi	r24, 0x19	; 25
    3a48:	92 e0       	ldi	r25, 0x02	; 2
    3a4a:	0e 94 0f 09 	call	0x121e	; 0x121e <_Z9readUntilPKci>
		WIFI_Write_String("AT+CIPSERVER=1,80\r\n");
    3a4e:	80 e9       	ldi	r24, 0x90	; 144
    3a50:	98 e0       	ldi	r25, 0x08	; 8
    3a52:	48 dd       	rcall	.-1392   	; 0x34e4 <_Z17WIFI_Write_StringPKc>
		readUntil("OK", 3);
    3a54:	63 e0       	ldi	r22, 0x03	; 3
    3a56:	70 e0       	ldi	r23, 0x00	; 0
    3a58:	89 e1       	ldi	r24, 0x19	; 25
    3a5a:	92 e0       	ldi	r25, 0x02	; 2
    3a5c:	0e 94 0f 09 	call	0x121e	; 0x121e <_Z9readUntilPKci>
	}
	
}
    3a60:	df 91       	pop	r29
    3a62:	cf 91       	pop	r28
    3a64:	08 95       	ret

00003a66 <_Z11atmegaSetupv>:
void atmegaSetup(){
    3a66:	cf 93       	push	r28
    3a68:	df 93       	push	r29
	if (HAS_WIFI){
    3a6a:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <HAS_WIFI>
    3a6e:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <HAS_WIFI+0x1>
    3a72:	89 2b       	or	r24, r25
    3a74:	39 f0       	breq	.+14     	; 0x3a84 <_Z11atmegaSetupv+0x1e>
		pinMode(ESP_PWR,OUTPUT);
    3a76:	60 91 8f 03 	lds	r22, 0x038F	; 0x80038f <OUTPUT>
    3a7a:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <ESP_PWR>
    3a7e:	90 91 98 01 	lds	r25, 0x0198	; 0x800198 <ESP_PWR+0x1>
    3a82:	66 dd       	rcall	.-1332   	; 0x3550 <_Z7pinModeic>
	}
	if (HAS_GSM){
    3a84:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <HAS_GSM>
    3a88:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <HAS_GSM+0x1>
    3a8c:	89 2b       	or	r24, r25
    3a8e:	39 f0       	breq	.+14     	; 0x3a9e <_Z11atmegaSetupv+0x38>
		pinMode(SIM_PWR,OUTPUT);
    3a90:	60 91 8f 03 	lds	r22, 0x038F	; 0x80038f <OUTPUT>
    3a94:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <SIM_PWR>
    3a98:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <SIM_PWR+0x1>
    3a9c:	59 dd       	rcall	.-1358   	; 0x3550 <_Z7pinModeic>
	}
		
	pinMode(CS_1,OUTPUT);
    3a9e:	c0 91 8f 03 	lds	r28, 0x038F	; 0x80038f <OUTPUT>
    3aa2:	6c 2f       	mov	r22, r28
    3aa4:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <CS_1>
    3aa8:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <CS_1+0x1>
    3aac:	51 dd       	rcall	.-1374   	; 0x3550 <_Z7pinModeic>
	pinMode(CS_2,OUTPUT);
    3aae:	6c 2f       	mov	r22, r28
    3ab0:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <CS_2>
    3ab4:	90 91 94 01 	lds	r25, 0x0194	; 0x800194 <CS_2+0x1>
    3ab8:	4b dd       	rcall	.-1386   	; 0x3550 <_Z7pinModeic>
	pinMode(CS_3,OUTPUT);
    3aba:	6c 2f       	mov	r22, r28
    3abc:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <CS_3>
    3ac0:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <CS_3+0x1>
    3ac4:	45 dd       	rcall	.-1398   	; 0x3550 <_Z7pinModeic>
	pinMode(CS_4,OUTPUT);
    3ac6:	6c 2f       	mov	r22, r28
    3ac8:	80 91 8f 01 	lds	r24, 0x018F	; 0x80018f <CS_4>
    3acc:	90 91 90 01 	lds	r25, 0x0190	; 0x800190 <CS_4+0x1>
    3ad0:	3f dd       	rcall	.-1410   	; 0x3550 <_Z7pinModeic>
	pinMode(DETECT_0,INPUT);
    3ad2:	d0 91 91 03 	lds	r29, 0x0391	; 0x800391 <INPUT>
    3ad6:	6d 2f       	mov	r22, r29
    3ad8:	80 91 8d 01 	lds	r24, 0x018D	; 0x80018d <DETECT_0>
    3adc:	90 91 8e 01 	lds	r25, 0x018E	; 0x80018e <DETECT_0+0x1>
    3ae0:	37 dd       	rcall	.-1426   	; 0x3550 <_Z7pinModeic>
	pinMode(DETECT_1,INPUT);
    3ae2:	6d 2f       	mov	r22, r29
    3ae4:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <DETECT_1>
    3ae8:	90 91 8c 01 	lds	r25, 0x018C	; 0x80018c <DETECT_1+0x1>
    3aec:	31 dd       	rcall	.-1438   	; 0x3550 <_Z7pinModeic>
	pinMode(DETECT_2,INPUT);
    3aee:	6d 2f       	mov	r22, r29
    3af0:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <DETECT_2>
    3af4:	90 91 8a 01 	lds	r25, 0x018A	; 0x80018a <DETECT_2+0x1>
    3af8:	2b dd       	rcall	.-1450   	; 0x3550 <_Z7pinModeic>
	pinMode(DETECT_3,INPUT);
    3afa:	6d 2f       	mov	r22, r29
    3afc:	80 91 87 01 	lds	r24, 0x0187	; 0x800187 <DETECT_3>
    3b00:	90 91 88 01 	lds	r25, 0x0188	; 0x800188 <DETECT_3+0x1>
    3b04:	25 dd       	rcall	.-1462   	; 0x3550 <_Z7pinModeic>
	pinMode(SCK,OUTPUT);
    3b06:	6c 2f       	mov	r22, r28
    3b08:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <SCK>
    3b0c:	90 91 86 01 	lds	r25, 0x0186	; 0x800186 <SCK+0x1>
    3b10:	1f dd       	rcall	.-1474   	; 0x3550 <_Z7pinModeic>
	pinMode(MOSI,OUTPUT);
    3b12:	6c 2f       	mov	r22, r28
    3b14:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <MOSI>
    3b18:	90 91 84 01 	lds	r25, 0x0184	; 0x800184 <MOSI+0x1>
    3b1c:	19 dd       	rcall	.-1486   	; 0x3550 <_Z7pinModeic>
	pinMode(MISO,INPUT);
    3b1e:	6d 2f       	mov	r22, r29
    3b20:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <MISO>
    3b24:	90 91 82 01 	lds	r25, 0x0182	; 0x800182 <MISO+0x1>
    3b28:	13 dd       	rcall	.-1498   	; 0x3550 <_Z7pinModeic>
	pinMode(SS,OUTPUT);
    3b2a:	6c 2f       	mov	r22, r28
    3b2c:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <SS>
    3b30:	90 91 80 01 	lds	r25, 0x0180	; 0x800180 <SS+0x1>
    3b34:	0d dd       	rcall	.-1510   	; 0x3550 <_Z7pinModeic>

	
	USART_Init();
    3b36:	97 dc       	rcall	.-1746   	; 0x3466 <_Z10USART_Initv>
	delay(100);	
    3b38:	84 e6       	ldi	r24, 0x64	; 100
    3b3a:	90 e0       	ldi	r25, 0x00	; 0
    3b3c:	fd dc       	rcall	.-1542   	; 0x3538 <_Z5delayi>
	
	SPI_init_master();
    3b3e:	89 dc       	rcall	.-1774   	; 0x3452 <_Z15SPI_init_masterv>
}
    3b40:	df 91       	pop	r29
    3b42:	cf 91       	pop	r28
    3b44:	08 95       	ret

00003b46 <_Z5setupv>:

void setup(){
	
	atmegaSetup();
    3b46:	8f df       	rcall	.-226    	; 0x3a66 <_Z11atmegaSetupv>

	defaultSettings();
    3b48:	05 de       	rcall	.-1014   	; 0x3754 <_Z15defaultSettingsv>

	initTimer();
    3b4a:	06 df       	rcall	.-500    	; 0x3958 <_Z9initTimerv>
	
	powerUpModules();
    3b4c:	0f cf       	rjmp	.-482    	; 0x396c <_Z14powerUpModulesv>
    3b4e:	08 95       	ret

00003b50 <_Z9processIOv>:
	}
	if (interface_ == SIM){

	}
}
void processIO(){
    3b50:	1f 93       	push	r17
    3b52:	cf 93       	push	r28
    3b54:	df 93       	push	r29
	
	// Processes wifi responses
	if (__network_data.is_esp_read_line == 1){
    3b56:	80 91 74 0f 	lds	r24, 0x0F74	; 0x800f74 <__network_data+0x564>
    3b5a:	81 30       	cpi	r24, 0x01	; 1
    3b5c:	81 f4       	brne	.+32     	; 0x3b7e <_Z9processIOv+0x2e>
		char previousSource = __system_var.interface_;
    3b5e:	ca e7       	ldi	r28, 0x7A	; 122
    3b60:	df e0       	ldi	r29, 0x0F	; 15
    3b62:	1f a5       	ldd	r17, Y+47	; 0x2f
		delay(100);
    3b64:	84 e6       	ldi	r24, 0x64	; 100
    3b66:	90 e0       	ldi	r25, 0x00	; 0
    3b68:	e7 dc       	rcall	.-1586   	; 0x3538 <_Z5delayi>

		ConfigurationThread();
    3b6a:	0e 94 a7 10 	call	0x214e	; 0x214e <_Z19ConfigurationThreadv>
		
		RelayControl();
    3b6e:	0e 94 c8 13 	call	0x2790	; 0x2790 <_Z12RelayControlv>
		
		ReceiveSettings();			
    3b72:	0e 94 8c 15 	call	0x2b18	; 0x2b18 <_Z15ReceiveSettingsv>
		
		clearReadLine();
    3b76:	b3 de       	rcall	.-666    	; 0x38de <_Z13clearReadLinev>
		
		__system_var.interface_ = previousSource;
    3b78:	1f a7       	std	Y+47, r17	; 0x2f
		__network_data.is_esp_read_line = 0;	
    3b7a:	10 92 74 0f 	sts	0x0F74, r1	; 0x800f74 <__network_data+0x564>
	}
	
	// Processes gsm responses
	if (__network_data.is_sim_read_line == 1){
    3b7e:	80 91 75 0f 	lds	r24, 0x0F75	; 0x800f75 <__network_data+0x565>
    3b82:	81 30       	cpi	r24, 0x01	; 1
    3b84:	91 f4       	brne	.+36     	; 0x3baa <_Z9processIOv+0x5a>
		char previousSource = __system_var.interface_;
    3b86:	ca e7       	ldi	r28, 0x7A	; 122
    3b88:	df e0       	ldi	r29, 0x0F	; 15
    3b8a:	1f a5       	ldd	r17, Y+47	; 0x2f
		setSource(SIM);
    3b8c:	80 91 af 03 	lds	r24, 0x03AF	; 0x8003af <SIM>
    3b90:	90 91 b0 03 	lds	r25, 0x03B0	; 0x8003b0 <SIM+0x1>
    3b94:	bb dd       	rcall	.-1162   	; 0x370c <_Z9setSourcei>
		
		RelayControl();
    3b96:	0e 94 c8 13 	call	0x2790	; 0x2790 <_Z12RelayControlv>
		
		ReceiveSettings();
    3b9a:	0e 94 8c 15 	call	0x2b18	; 0x2b18 <_Z15ReceiveSettingsv>
		
		IncomingCallHandler();
    3b9e:	7e db       	rcall	.-2308   	; 0x329c <_Z19IncomingCallHandlerv>
		
		IncomingSMSHandler();
    3ba0:	98 db       	rcall	.-2256   	; 0x32d2 <_Z18IncomingSMSHandlerv>
		
		clearGSMBuffer();
    3ba2:	cc de       	rcall	.-616    	; 0x393c <_Z14clearGSMBufferv>
		__network_data.is_sim_read_line = 0;
    3ba4:	10 92 75 0f 	sts	0x0F75, r1	; 0x800f75 <__network_data+0x565>
		__system_var.interface_ = previousSource;
    3ba8:	1f a7       	std	Y+47, r17	; 0x2f
	}
	
}
    3baa:	df 91       	pop	r29
    3bac:	cf 91       	pop	r28
    3bae:	1f 91       	pop	r17
    3bb0:	08 95       	ret

00003bb2 <_Z15systemProcessesv>:
void systemProcesses(){
	
	// Detects when a module is connected or disconnected, notifies server of this event
	CheckModuleConnections();
    3bb2:	9d d8       	rcall	.-3782   	; 0x2cee <_Z22CheckModuleConnectionsv>
	// Regularly sends heartbeats to the server to keep the connection alive
	HeartBeat(); 
    3bb4:	db d9       	rcall	.-3146   	; 0x2f6c <_Z9HeartBeatv>
	// Process Timers
	ProcessRelayTimers();
    3bb6:	04 da       	rcall	.-3064   	; 0x2fc0 <_Z18ProcessRelayTimersv>
	
	checkGsmNetwork();
    3bb8:	fa ca       	rjmp	.-2572   	; 0x31ae <_Z15checkGsmNetworkv>
    3bba:	08 95       	ret

00003bbc <main>:
 

int main (void)
{
	int i=0;
	setup();
    3bbc:	c4 df       	rcall	.-120    	; 0x3b46 <_Z5setupv>
	 //209000782
	
	while(1)
	{
		
		networking();
    3bbe:	0e 94 41 0e 	call	0x1c82	; 0x1c82 <_Z10networkingv>
		
		processIO();
    3bc2:	c6 df       	rcall	.-116    	; 0x3b50 <_Z9processIOv>
		
		systemProcesses();	
    3bc4:	f6 df       	rcall	.-20     	; 0x3bb2 <_Z15systemProcessesv>
		
	}
    3bc6:	fb cf       	rjmp	.-10     	; 0x3bbe <main+0x2>

00003bc8 <__tablejump2__>:
    3bc8:	ee 0f       	add	r30, r30
    3bca:	ff 1f       	adc	r31, r31
    3bcc:	00 24       	eor	r0, r0
    3bce:	00 1c       	adc	r0, r0
    3bd0:	0b be       	out	0x3b, r0	; 59
    3bd2:	07 90       	elpm	r0, Z+
    3bd4:	f6 91       	elpm	r31, Z
    3bd6:	e0 2d       	mov	r30, r0
    3bd8:	09 94       	ijmp

00003bda <malloc>:
    3bda:	cf 93       	push	r28
    3bdc:	df 93       	push	r29
    3bde:	82 30       	cpi	r24, 0x02	; 2
    3be0:	91 05       	cpc	r25, r1
    3be2:	10 f4       	brcc	.+4      	; 0x3be8 <malloc+0xe>
    3be4:	82 e0       	ldi	r24, 0x02	; 2
    3be6:	90 e0       	ldi	r25, 0x00	; 0
    3be8:	e0 91 ce 0f 	lds	r30, 0x0FCE	; 0x800fce <__flp>
    3bec:	f0 91 cf 0f 	lds	r31, 0x0FCF	; 0x800fcf <__flp+0x1>
    3bf0:	20 e0       	ldi	r18, 0x00	; 0
    3bf2:	30 e0       	ldi	r19, 0x00	; 0
    3bf4:	c0 e0       	ldi	r28, 0x00	; 0
    3bf6:	d0 e0       	ldi	r29, 0x00	; 0
    3bf8:	30 97       	sbiw	r30, 0x00	; 0
    3bfa:	11 f1       	breq	.+68     	; 0x3c40 <malloc+0x66>
    3bfc:	40 81       	ld	r20, Z
    3bfe:	51 81       	ldd	r21, Z+1	; 0x01
    3c00:	48 17       	cp	r20, r24
    3c02:	59 07       	cpc	r21, r25
    3c04:	c0 f0       	brcs	.+48     	; 0x3c36 <malloc+0x5c>
    3c06:	48 17       	cp	r20, r24
    3c08:	59 07       	cpc	r21, r25
    3c0a:	61 f4       	brne	.+24     	; 0x3c24 <malloc+0x4a>
    3c0c:	82 81       	ldd	r24, Z+2	; 0x02
    3c0e:	93 81       	ldd	r25, Z+3	; 0x03
    3c10:	20 97       	sbiw	r28, 0x00	; 0
    3c12:	19 f0       	breq	.+6      	; 0x3c1a <malloc+0x40>
    3c14:	9b 83       	std	Y+3, r25	; 0x03
    3c16:	8a 83       	std	Y+2, r24	; 0x02
    3c18:	2b c0       	rjmp	.+86     	; 0x3c70 <malloc+0x96>
    3c1a:	90 93 cf 0f 	sts	0x0FCF, r25	; 0x800fcf <__flp+0x1>
    3c1e:	80 93 ce 0f 	sts	0x0FCE, r24	; 0x800fce <__flp>
    3c22:	26 c0       	rjmp	.+76     	; 0x3c70 <malloc+0x96>
    3c24:	21 15       	cp	r18, r1
    3c26:	31 05       	cpc	r19, r1
    3c28:	19 f0       	breq	.+6      	; 0x3c30 <malloc+0x56>
    3c2a:	42 17       	cp	r20, r18
    3c2c:	53 07       	cpc	r21, r19
    3c2e:	18 f4       	brcc	.+6      	; 0x3c36 <malloc+0x5c>
    3c30:	9a 01       	movw	r18, r20
    3c32:	be 01       	movw	r22, r28
    3c34:	df 01       	movw	r26, r30
    3c36:	ef 01       	movw	r28, r30
    3c38:	02 80       	ldd	r0, Z+2	; 0x02
    3c3a:	f3 81       	ldd	r31, Z+3	; 0x03
    3c3c:	e0 2d       	mov	r30, r0
    3c3e:	dc cf       	rjmp	.-72     	; 0x3bf8 <malloc+0x1e>
    3c40:	21 15       	cp	r18, r1
    3c42:	31 05       	cpc	r19, r1
    3c44:	09 f1       	breq	.+66     	; 0x3c88 <malloc+0xae>
    3c46:	28 1b       	sub	r18, r24
    3c48:	39 0b       	sbc	r19, r25
    3c4a:	24 30       	cpi	r18, 0x04	; 4
    3c4c:	31 05       	cpc	r19, r1
    3c4e:	90 f4       	brcc	.+36     	; 0x3c74 <malloc+0x9a>
    3c50:	12 96       	adiw	r26, 0x02	; 2
    3c52:	8d 91       	ld	r24, X+
    3c54:	9c 91       	ld	r25, X
    3c56:	13 97       	sbiw	r26, 0x03	; 3
    3c58:	61 15       	cp	r22, r1
    3c5a:	71 05       	cpc	r23, r1
    3c5c:	21 f0       	breq	.+8      	; 0x3c66 <malloc+0x8c>
    3c5e:	fb 01       	movw	r30, r22
    3c60:	93 83       	std	Z+3, r25	; 0x03
    3c62:	82 83       	std	Z+2, r24	; 0x02
    3c64:	04 c0       	rjmp	.+8      	; 0x3c6e <malloc+0x94>
    3c66:	90 93 cf 0f 	sts	0x0FCF, r25	; 0x800fcf <__flp+0x1>
    3c6a:	80 93 ce 0f 	sts	0x0FCE, r24	; 0x800fce <__flp>
    3c6e:	fd 01       	movw	r30, r26
    3c70:	32 96       	adiw	r30, 0x02	; 2
    3c72:	44 c0       	rjmp	.+136    	; 0x3cfc <malloc+0x122>
    3c74:	fd 01       	movw	r30, r26
    3c76:	e2 0f       	add	r30, r18
    3c78:	f3 1f       	adc	r31, r19
    3c7a:	81 93       	st	Z+, r24
    3c7c:	91 93       	st	Z+, r25
    3c7e:	22 50       	subi	r18, 0x02	; 2
    3c80:	31 09       	sbc	r19, r1
    3c82:	2d 93       	st	X+, r18
    3c84:	3c 93       	st	X, r19
    3c86:	3a c0       	rjmp	.+116    	; 0x3cfc <malloc+0x122>
    3c88:	20 91 cc 0f 	lds	r18, 0x0FCC	; 0x800fcc <__brkval>
    3c8c:	30 91 cd 0f 	lds	r19, 0x0FCD	; 0x800fcd <__brkval+0x1>
    3c90:	23 2b       	or	r18, r19
    3c92:	41 f4       	brne	.+16     	; 0x3ca4 <malloc+0xca>
    3c94:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    3c98:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    3c9c:	30 93 cd 0f 	sts	0x0FCD, r19	; 0x800fcd <__brkval+0x1>
    3ca0:	20 93 cc 0f 	sts	0x0FCC, r18	; 0x800fcc <__brkval>
    3ca4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    3ca8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    3cac:	21 15       	cp	r18, r1
    3cae:	31 05       	cpc	r19, r1
    3cb0:	41 f4       	brne	.+16     	; 0x3cc2 <malloc+0xe8>
    3cb2:	2d b7       	in	r18, 0x3d	; 61
    3cb4:	3e b7       	in	r19, 0x3e	; 62
    3cb6:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    3cba:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    3cbe:	24 1b       	sub	r18, r20
    3cc0:	35 0b       	sbc	r19, r21
    3cc2:	e0 91 cc 0f 	lds	r30, 0x0FCC	; 0x800fcc <__brkval>
    3cc6:	f0 91 cd 0f 	lds	r31, 0x0FCD	; 0x800fcd <__brkval+0x1>
    3cca:	e2 17       	cp	r30, r18
    3ccc:	f3 07       	cpc	r31, r19
    3cce:	a0 f4       	brcc	.+40     	; 0x3cf8 <malloc+0x11e>
    3cd0:	2e 1b       	sub	r18, r30
    3cd2:	3f 0b       	sbc	r19, r31
    3cd4:	28 17       	cp	r18, r24
    3cd6:	39 07       	cpc	r19, r25
    3cd8:	78 f0       	brcs	.+30     	; 0x3cf8 <malloc+0x11e>
    3cda:	ac 01       	movw	r20, r24
    3cdc:	4e 5f       	subi	r20, 0xFE	; 254
    3cde:	5f 4f       	sbci	r21, 0xFF	; 255
    3ce0:	24 17       	cp	r18, r20
    3ce2:	35 07       	cpc	r19, r21
    3ce4:	48 f0       	brcs	.+18     	; 0x3cf8 <malloc+0x11e>
    3ce6:	4e 0f       	add	r20, r30
    3ce8:	5f 1f       	adc	r21, r31
    3cea:	50 93 cd 0f 	sts	0x0FCD, r21	; 0x800fcd <__brkval+0x1>
    3cee:	40 93 cc 0f 	sts	0x0FCC, r20	; 0x800fcc <__brkval>
    3cf2:	81 93       	st	Z+, r24
    3cf4:	91 93       	st	Z+, r25
    3cf6:	02 c0       	rjmp	.+4      	; 0x3cfc <malloc+0x122>
    3cf8:	e0 e0       	ldi	r30, 0x00	; 0
    3cfa:	f0 e0       	ldi	r31, 0x00	; 0
    3cfc:	cf 01       	movw	r24, r30
    3cfe:	df 91       	pop	r29
    3d00:	cf 91       	pop	r28
    3d02:	08 95       	ret

00003d04 <free>:
    3d04:	0f 93       	push	r16
    3d06:	1f 93       	push	r17
    3d08:	cf 93       	push	r28
    3d0a:	df 93       	push	r29
    3d0c:	00 97       	sbiw	r24, 0x00	; 0
    3d0e:	09 f4       	brne	.+2      	; 0x3d12 <free+0xe>
    3d10:	8c c0       	rjmp	.+280    	; 0x3e2a <free+0x126>
    3d12:	fc 01       	movw	r30, r24
    3d14:	32 97       	sbiw	r30, 0x02	; 2
    3d16:	13 82       	std	Z+3, r1	; 0x03
    3d18:	12 82       	std	Z+2, r1	; 0x02
    3d1a:	00 91 ce 0f 	lds	r16, 0x0FCE	; 0x800fce <__flp>
    3d1e:	10 91 cf 0f 	lds	r17, 0x0FCF	; 0x800fcf <__flp+0x1>
    3d22:	01 15       	cp	r16, r1
    3d24:	11 05       	cpc	r17, r1
    3d26:	81 f4       	brne	.+32     	; 0x3d48 <free+0x44>
    3d28:	20 81       	ld	r18, Z
    3d2a:	31 81       	ldd	r19, Z+1	; 0x01
    3d2c:	82 0f       	add	r24, r18
    3d2e:	93 1f       	adc	r25, r19
    3d30:	20 91 cc 0f 	lds	r18, 0x0FCC	; 0x800fcc <__brkval>
    3d34:	30 91 cd 0f 	lds	r19, 0x0FCD	; 0x800fcd <__brkval+0x1>
    3d38:	28 17       	cp	r18, r24
    3d3a:	39 07       	cpc	r19, r25
    3d3c:	79 f5       	brne	.+94     	; 0x3d9c <free+0x98>
    3d3e:	f0 93 cd 0f 	sts	0x0FCD, r31	; 0x800fcd <__brkval+0x1>
    3d42:	e0 93 cc 0f 	sts	0x0FCC, r30	; 0x800fcc <__brkval>
    3d46:	71 c0       	rjmp	.+226    	; 0x3e2a <free+0x126>
    3d48:	d8 01       	movw	r26, r16
    3d4a:	40 e0       	ldi	r20, 0x00	; 0
    3d4c:	50 e0       	ldi	r21, 0x00	; 0
    3d4e:	ae 17       	cp	r26, r30
    3d50:	bf 07       	cpc	r27, r31
    3d52:	50 f4       	brcc	.+20     	; 0x3d68 <free+0x64>
    3d54:	12 96       	adiw	r26, 0x02	; 2
    3d56:	2d 91       	ld	r18, X+
    3d58:	3c 91       	ld	r19, X
    3d5a:	13 97       	sbiw	r26, 0x03	; 3
    3d5c:	ad 01       	movw	r20, r26
    3d5e:	21 15       	cp	r18, r1
    3d60:	31 05       	cpc	r19, r1
    3d62:	09 f1       	breq	.+66     	; 0x3da6 <free+0xa2>
    3d64:	d9 01       	movw	r26, r18
    3d66:	f3 cf       	rjmp	.-26     	; 0x3d4e <free+0x4a>
    3d68:	9d 01       	movw	r18, r26
    3d6a:	da 01       	movw	r26, r20
    3d6c:	33 83       	std	Z+3, r19	; 0x03
    3d6e:	22 83       	std	Z+2, r18	; 0x02
    3d70:	60 81       	ld	r22, Z
    3d72:	71 81       	ldd	r23, Z+1	; 0x01
    3d74:	86 0f       	add	r24, r22
    3d76:	97 1f       	adc	r25, r23
    3d78:	82 17       	cp	r24, r18
    3d7a:	93 07       	cpc	r25, r19
    3d7c:	69 f4       	brne	.+26     	; 0x3d98 <free+0x94>
    3d7e:	ec 01       	movw	r28, r24
    3d80:	28 81       	ld	r18, Y
    3d82:	39 81       	ldd	r19, Y+1	; 0x01
    3d84:	26 0f       	add	r18, r22
    3d86:	37 1f       	adc	r19, r23
    3d88:	2e 5f       	subi	r18, 0xFE	; 254
    3d8a:	3f 4f       	sbci	r19, 0xFF	; 255
    3d8c:	31 83       	std	Z+1, r19	; 0x01
    3d8e:	20 83       	st	Z, r18
    3d90:	8a 81       	ldd	r24, Y+2	; 0x02
    3d92:	9b 81       	ldd	r25, Y+3	; 0x03
    3d94:	93 83       	std	Z+3, r25	; 0x03
    3d96:	82 83       	std	Z+2, r24	; 0x02
    3d98:	45 2b       	or	r20, r21
    3d9a:	29 f4       	brne	.+10     	; 0x3da6 <free+0xa2>
    3d9c:	f0 93 cf 0f 	sts	0x0FCF, r31	; 0x800fcf <__flp+0x1>
    3da0:	e0 93 ce 0f 	sts	0x0FCE, r30	; 0x800fce <__flp>
    3da4:	42 c0       	rjmp	.+132    	; 0x3e2a <free+0x126>
    3da6:	13 96       	adiw	r26, 0x03	; 3
    3da8:	fc 93       	st	X, r31
    3daa:	ee 93       	st	-X, r30
    3dac:	12 97       	sbiw	r26, 0x02	; 2
    3dae:	ed 01       	movw	r28, r26
    3db0:	49 91       	ld	r20, Y+
    3db2:	59 91       	ld	r21, Y+
    3db4:	9e 01       	movw	r18, r28
    3db6:	24 0f       	add	r18, r20
    3db8:	35 1f       	adc	r19, r21
    3dba:	e2 17       	cp	r30, r18
    3dbc:	f3 07       	cpc	r31, r19
    3dbe:	71 f4       	brne	.+28     	; 0x3ddc <free+0xd8>
    3dc0:	80 81       	ld	r24, Z
    3dc2:	91 81       	ldd	r25, Z+1	; 0x01
    3dc4:	84 0f       	add	r24, r20
    3dc6:	95 1f       	adc	r25, r21
    3dc8:	02 96       	adiw	r24, 0x02	; 2
    3dca:	11 96       	adiw	r26, 0x01	; 1
    3dcc:	9c 93       	st	X, r25
    3dce:	8e 93       	st	-X, r24
    3dd0:	82 81       	ldd	r24, Z+2	; 0x02
    3dd2:	93 81       	ldd	r25, Z+3	; 0x03
    3dd4:	13 96       	adiw	r26, 0x03	; 3
    3dd6:	9c 93       	st	X, r25
    3dd8:	8e 93       	st	-X, r24
    3dda:	12 97       	sbiw	r26, 0x02	; 2
    3ddc:	e0 e0       	ldi	r30, 0x00	; 0
    3dde:	f0 e0       	ldi	r31, 0x00	; 0
    3de0:	d8 01       	movw	r26, r16
    3de2:	12 96       	adiw	r26, 0x02	; 2
    3de4:	8d 91       	ld	r24, X+
    3de6:	9c 91       	ld	r25, X
    3de8:	13 97       	sbiw	r26, 0x03	; 3
    3dea:	00 97       	sbiw	r24, 0x00	; 0
    3dec:	19 f0       	breq	.+6      	; 0x3df4 <free+0xf0>
    3dee:	f8 01       	movw	r30, r16
    3df0:	8c 01       	movw	r16, r24
    3df2:	f6 cf       	rjmp	.-20     	; 0x3de0 <free+0xdc>
    3df4:	8d 91       	ld	r24, X+
    3df6:	9c 91       	ld	r25, X
    3df8:	98 01       	movw	r18, r16
    3dfa:	2e 5f       	subi	r18, 0xFE	; 254
    3dfc:	3f 4f       	sbci	r19, 0xFF	; 255
    3dfe:	82 0f       	add	r24, r18
    3e00:	93 1f       	adc	r25, r19
    3e02:	20 91 cc 0f 	lds	r18, 0x0FCC	; 0x800fcc <__brkval>
    3e06:	30 91 cd 0f 	lds	r19, 0x0FCD	; 0x800fcd <__brkval+0x1>
    3e0a:	28 17       	cp	r18, r24
    3e0c:	39 07       	cpc	r19, r25
    3e0e:	69 f4       	brne	.+26     	; 0x3e2a <free+0x126>
    3e10:	30 97       	sbiw	r30, 0x00	; 0
    3e12:	29 f4       	brne	.+10     	; 0x3e1e <free+0x11a>
    3e14:	10 92 cf 0f 	sts	0x0FCF, r1	; 0x800fcf <__flp+0x1>
    3e18:	10 92 ce 0f 	sts	0x0FCE, r1	; 0x800fce <__flp>
    3e1c:	02 c0       	rjmp	.+4      	; 0x3e22 <free+0x11e>
    3e1e:	13 82       	std	Z+3, r1	; 0x03
    3e20:	12 82       	std	Z+2, r1	; 0x02
    3e22:	10 93 cd 0f 	sts	0x0FCD, r17	; 0x800fcd <__brkval+0x1>
    3e26:	00 93 cc 0f 	sts	0x0FCC, r16	; 0x800fcc <__brkval>
    3e2a:	df 91       	pop	r29
    3e2c:	cf 91       	pop	r28
    3e2e:	1f 91       	pop	r17
    3e30:	0f 91       	pop	r16
    3e32:	08 95       	ret

00003e34 <atoi>:
    3e34:	fc 01       	movw	r30, r24
    3e36:	88 27       	eor	r24, r24
    3e38:	99 27       	eor	r25, r25
    3e3a:	e8 94       	clt
    3e3c:	21 91       	ld	r18, Z+
    3e3e:	20 32       	cpi	r18, 0x20	; 32
    3e40:	e9 f3       	breq	.-6      	; 0x3e3c <atoi+0x8>
    3e42:	29 30       	cpi	r18, 0x09	; 9
    3e44:	10 f0       	brcs	.+4      	; 0x3e4a <atoi+0x16>
    3e46:	2e 30       	cpi	r18, 0x0E	; 14
    3e48:	c8 f3       	brcs	.-14     	; 0x3e3c <atoi+0x8>
    3e4a:	2b 32       	cpi	r18, 0x2B	; 43
    3e4c:	39 f0       	breq	.+14     	; 0x3e5c <atoi+0x28>
    3e4e:	2d 32       	cpi	r18, 0x2D	; 45
    3e50:	31 f4       	brne	.+12     	; 0x3e5e <atoi+0x2a>
    3e52:	68 94       	set
    3e54:	03 c0       	rjmp	.+6      	; 0x3e5c <atoi+0x28>
    3e56:	86 d0       	rcall	.+268    	; 0x3f64 <__mulhi_const_10>
    3e58:	82 0f       	add	r24, r18
    3e5a:	91 1d       	adc	r25, r1
    3e5c:	21 91       	ld	r18, Z+
    3e5e:	20 53       	subi	r18, 0x30	; 48
    3e60:	2a 30       	cpi	r18, 0x0A	; 10
    3e62:	c8 f3       	brcs	.-14     	; 0x3e56 <atoi+0x22>
    3e64:	1e f4       	brtc	.+6      	; 0x3e6c <atoi+0x38>
    3e66:	90 95       	com	r25
    3e68:	81 95       	neg	r24
    3e6a:	9f 4f       	sbci	r25, 0xFF	; 255
    3e6c:	08 95       	ret

00003e6e <isupper>:
    3e6e:	85 fd       	sbrc	r24, 5
    3e70:	9a c0       	rjmp	.+308    	; 0x3fa6 <__ctype_isfalse>

00003e72 <isalpha>:
    3e72:	80 62       	ori	r24, 0x20	; 32

00003e74 <islower>:
    3e74:	91 11       	cpse	r25, r1
    3e76:	97 c0       	rjmp	.+302    	; 0x3fa6 <__ctype_isfalse>
    3e78:	81 56       	subi	r24, 0x61	; 97
    3e7a:	8a 51       	subi	r24, 0x1A	; 26
    3e7c:	e0 f7       	brcc	.-8      	; 0x3e76 <islower+0x2>
    3e7e:	08 95       	ret

00003e80 <strtok>:
    3e80:	44 ea       	ldi	r20, 0xA4	; 164
    3e82:	58 e0       	ldi	r21, 0x08	; 8
    3e84:	3e c0       	rjmp	.+124    	; 0x3f02 <strtok_r>

00003e86 <memset>:
    3e86:	dc 01       	movw	r26, r24
    3e88:	01 c0       	rjmp	.+2      	; 0x3e8c <memset+0x6>
    3e8a:	6d 93       	st	X+, r22
    3e8c:	41 50       	subi	r20, 0x01	; 1
    3e8e:	50 40       	sbci	r21, 0x00	; 0
    3e90:	e0 f7       	brcc	.-8      	; 0x3e8a <memset+0x4>
    3e92:	08 95       	ret

00003e94 <strcat>:
    3e94:	fb 01       	movw	r30, r22
    3e96:	dc 01       	movw	r26, r24
    3e98:	0d 90       	ld	r0, X+
    3e9a:	00 20       	and	r0, r0
    3e9c:	e9 f7       	brne	.-6      	; 0x3e98 <strcat+0x4>
    3e9e:	11 97       	sbiw	r26, 0x01	; 1
    3ea0:	01 90       	ld	r0, Z+
    3ea2:	0d 92       	st	X+, r0
    3ea4:	00 20       	and	r0, r0
    3ea6:	e1 f7       	brne	.-8      	; 0x3ea0 <strcat+0xc>
    3ea8:	08 95       	ret

00003eaa <strchr>:
    3eaa:	fc 01       	movw	r30, r24
    3eac:	81 91       	ld	r24, Z+
    3eae:	86 17       	cp	r24, r22
    3eb0:	21 f0       	breq	.+8      	; 0x3eba <strchr+0x10>
    3eb2:	88 23       	and	r24, r24
    3eb4:	d9 f7       	brne	.-10     	; 0x3eac <strchr+0x2>
    3eb6:	99 27       	eor	r25, r25
    3eb8:	08 95       	ret
    3eba:	31 97       	sbiw	r30, 0x01	; 1
    3ebc:	cf 01       	movw	r24, r30
    3ebe:	08 95       	ret

00003ec0 <strcpy>:
    3ec0:	fb 01       	movw	r30, r22
    3ec2:	dc 01       	movw	r26, r24
    3ec4:	01 90       	ld	r0, Z+
    3ec6:	0d 92       	st	X+, r0
    3ec8:	00 20       	and	r0, r0
    3eca:	e1 f7       	brne	.-8      	; 0x3ec4 <strcpy+0x4>
    3ecc:	08 95       	ret

00003ece <strstr>:
    3ece:	fb 01       	movw	r30, r22
    3ed0:	51 91       	ld	r21, Z+
    3ed2:	55 23       	and	r21, r21
    3ed4:	a9 f0       	breq	.+42     	; 0x3f00 <strstr+0x32>
    3ed6:	bf 01       	movw	r22, r30
    3ed8:	dc 01       	movw	r26, r24
    3eda:	4d 91       	ld	r20, X+
    3edc:	45 17       	cp	r20, r21
    3ede:	41 11       	cpse	r20, r1
    3ee0:	e1 f7       	brne	.-8      	; 0x3eda <strstr+0xc>
    3ee2:	59 f4       	brne	.+22     	; 0x3efa <strstr+0x2c>
    3ee4:	cd 01       	movw	r24, r26
    3ee6:	01 90       	ld	r0, Z+
    3ee8:	00 20       	and	r0, r0
    3eea:	49 f0       	breq	.+18     	; 0x3efe <strstr+0x30>
    3eec:	4d 91       	ld	r20, X+
    3eee:	40 15       	cp	r20, r0
    3ef0:	41 11       	cpse	r20, r1
    3ef2:	c9 f3       	breq	.-14     	; 0x3ee6 <strstr+0x18>
    3ef4:	fb 01       	movw	r30, r22
    3ef6:	41 11       	cpse	r20, r1
    3ef8:	ef cf       	rjmp	.-34     	; 0x3ed8 <strstr+0xa>
    3efa:	81 e0       	ldi	r24, 0x01	; 1
    3efc:	90 e0       	ldi	r25, 0x00	; 0
    3efe:	01 97       	sbiw	r24, 0x01	; 1
    3f00:	08 95       	ret

00003f02 <strtok_r>:
    3f02:	fa 01       	movw	r30, r20
    3f04:	a1 91       	ld	r26, Z+
    3f06:	b0 81       	ld	r27, Z
    3f08:	00 97       	sbiw	r24, 0x00	; 0
    3f0a:	19 f4       	brne	.+6      	; 0x3f12 <strtok_r+0x10>
    3f0c:	10 97       	sbiw	r26, 0x00	; 0
    3f0e:	e1 f0       	breq	.+56     	; 0x3f48 <strtok_r+0x46>
    3f10:	cd 01       	movw	r24, r26
    3f12:	dc 01       	movw	r26, r24
    3f14:	cd 01       	movw	r24, r26
    3f16:	0d 90       	ld	r0, X+
    3f18:	00 20       	and	r0, r0
    3f1a:	11 f4       	brne	.+4      	; 0x3f20 <strtok_r+0x1e>
    3f1c:	c0 01       	movw	r24, r0
    3f1e:	13 c0       	rjmp	.+38     	; 0x3f46 <strtok_r+0x44>
    3f20:	fb 01       	movw	r30, r22
    3f22:	21 91       	ld	r18, Z+
    3f24:	22 23       	and	r18, r18
    3f26:	19 f0       	breq	.+6      	; 0x3f2e <strtok_r+0x2c>
    3f28:	20 15       	cp	r18, r0
    3f2a:	d9 f7       	brne	.-10     	; 0x3f22 <strtok_r+0x20>
    3f2c:	f3 cf       	rjmp	.-26     	; 0x3f14 <strtok_r+0x12>
    3f2e:	fb 01       	movw	r30, r22
    3f30:	21 91       	ld	r18, Z+
    3f32:	20 15       	cp	r18, r0
    3f34:	19 f4       	brne	.+6      	; 0x3f3c <strtok_r+0x3a>
    3f36:	1e 92       	st	-X, r1
    3f38:	11 96       	adiw	r26, 0x01	; 1
    3f3a:	06 c0       	rjmp	.+12     	; 0x3f48 <strtok_r+0x46>
    3f3c:	22 23       	and	r18, r18
    3f3e:	c1 f7       	brne	.-16     	; 0x3f30 <strtok_r+0x2e>
    3f40:	0d 90       	ld	r0, X+
    3f42:	00 20       	and	r0, r0
    3f44:	a1 f7       	brne	.-24     	; 0x3f2e <strtok_r+0x2c>
    3f46:	d0 01       	movw	r26, r0
    3f48:	fa 01       	movw	r30, r20
    3f4a:	a1 93       	st	Z+, r26
    3f4c:	b0 83       	st	Z, r27
    3f4e:	08 95       	ret

00003f50 <__itoa_ncheck>:
    3f50:	bb 27       	eor	r27, r27
    3f52:	4a 30       	cpi	r20, 0x0A	; 10
    3f54:	31 f4       	brne	.+12     	; 0x3f62 <__itoa_ncheck+0x12>
    3f56:	99 23       	and	r25, r25
    3f58:	22 f4       	brpl	.+8      	; 0x3f62 <__itoa_ncheck+0x12>
    3f5a:	bd e2       	ldi	r27, 0x2D	; 45
    3f5c:	90 95       	com	r25
    3f5e:	81 95       	neg	r24
    3f60:	9f 4f       	sbci	r25, 0xFF	; 255
    3f62:	09 c0       	rjmp	.+18     	; 0x3f76 <__utoa_common>

00003f64 <__mulhi_const_10>:
    3f64:	7a e0       	ldi	r23, 0x0A	; 10
    3f66:	97 9f       	mul	r25, r23
    3f68:	90 2d       	mov	r25, r0
    3f6a:	87 9f       	mul	r24, r23
    3f6c:	80 2d       	mov	r24, r0
    3f6e:	91 0d       	add	r25, r1
    3f70:	11 24       	eor	r1, r1
    3f72:	08 95       	ret

00003f74 <__utoa_ncheck>:
    3f74:	bb 27       	eor	r27, r27

00003f76 <__utoa_common>:
    3f76:	fb 01       	movw	r30, r22
    3f78:	55 27       	eor	r21, r21
    3f7a:	aa 27       	eor	r26, r26
    3f7c:	88 0f       	add	r24, r24
    3f7e:	99 1f       	adc	r25, r25
    3f80:	aa 1f       	adc	r26, r26
    3f82:	a4 17       	cp	r26, r20
    3f84:	10 f0       	brcs	.+4      	; 0x3f8a <__utoa_common+0x14>
    3f86:	a4 1b       	sub	r26, r20
    3f88:	83 95       	inc	r24
    3f8a:	50 51       	subi	r21, 0x10	; 16
    3f8c:	b9 f7       	brne	.-18     	; 0x3f7c <__utoa_common+0x6>
    3f8e:	a0 5d       	subi	r26, 0xD0	; 208
    3f90:	aa 33       	cpi	r26, 0x3A	; 58
    3f92:	08 f0       	brcs	.+2      	; 0x3f96 <__utoa_common+0x20>
    3f94:	a9 5d       	subi	r26, 0xD9	; 217
    3f96:	a1 93       	st	Z+, r26
    3f98:	00 97       	sbiw	r24, 0x00	; 0
    3f9a:	79 f7       	brne	.-34     	; 0x3f7a <__utoa_common+0x4>
    3f9c:	b1 11       	cpse	r27, r1
    3f9e:	b1 93       	st	Z+, r27
    3fa0:	11 92       	st	Z+, r1
    3fa2:	cb 01       	movw	r24, r22
    3fa4:	03 c0       	rjmp	.+6      	; 0x3fac <strrev>

00003fa6 <__ctype_isfalse>:
    3fa6:	99 27       	eor	r25, r25
    3fa8:	88 27       	eor	r24, r24

00003faa <__ctype_istrue>:
    3faa:	08 95       	ret

00003fac <strrev>:
    3fac:	dc 01       	movw	r26, r24
    3fae:	fc 01       	movw	r30, r24
    3fb0:	67 2f       	mov	r22, r23
    3fb2:	71 91       	ld	r23, Z+
    3fb4:	77 23       	and	r23, r23
    3fb6:	e1 f7       	brne	.-8      	; 0x3fb0 <strrev+0x4>
    3fb8:	32 97       	sbiw	r30, 0x02	; 2
    3fba:	04 c0       	rjmp	.+8      	; 0x3fc4 <strrev+0x18>
    3fbc:	7c 91       	ld	r23, X
    3fbe:	6d 93       	st	X+, r22
    3fc0:	70 83       	st	Z, r23
    3fc2:	62 91       	ld	r22, -Z
    3fc4:	ae 17       	cp	r26, r30
    3fc6:	bf 07       	cpc	r27, r31
    3fc8:	c8 f3       	brcs	.-14     	; 0x3fbc <strrev+0x10>
    3fca:	08 95       	ret

00003fcc <eeprom_read_byte>:
    3fcc:	f9 99       	sbic	0x1f, 1	; 31
    3fce:	fe cf       	rjmp	.-4      	; 0x3fcc <eeprom_read_byte>
    3fd0:	92 bd       	out	0x22, r25	; 34
    3fd2:	81 bd       	out	0x21, r24	; 33
    3fd4:	f8 9a       	sbi	0x1f, 0	; 31
    3fd6:	99 27       	eor	r25, r25
    3fd8:	80 b5       	in	r24, 0x20	; 32
    3fda:	08 95       	ret

00003fdc <eeprom_write_byte>:
    3fdc:	26 2f       	mov	r18, r22

00003fde <eeprom_write_r18>:
    3fde:	f9 99       	sbic	0x1f, 1	; 31
    3fe0:	fe cf       	rjmp	.-4      	; 0x3fde <eeprom_write_r18>
    3fe2:	1f ba       	out	0x1f, r1	; 31
    3fe4:	92 bd       	out	0x22, r25	; 34
    3fe6:	81 bd       	out	0x21, r24	; 33
    3fe8:	20 bd       	out	0x20, r18	; 32
    3fea:	0f b6       	in	r0, 0x3f	; 63
    3fec:	f8 94       	cli
    3fee:	fa 9a       	sbi	0x1f, 2	; 31
    3ff0:	f9 9a       	sbi	0x1f, 1	; 31
    3ff2:	0f be       	out	0x3f, r0	; 63
    3ff4:	01 96       	adiw	r24, 0x01	; 1
    3ff6:	08 95       	ret

00003ff8 <_exit>:
    3ff8:	f8 94       	cli

00003ffa <__stop_program>:
    3ffa:	ff cf       	rjmp	.-2      	; 0x3ffa <__stop_program>
