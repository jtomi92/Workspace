
home_control_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000602  00800100  00002e92  00002f26  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002e92  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000404  00800702  00800702  00003528  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00003528  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003558  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002c8  00000000  00000000  00003598  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00007a38  00000000  00000000  00003860  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000105e  00000000  00000000  0000b298  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002959  00000000  00000000  0000c2f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000ba8  00000000  00000000  0000ec50  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000125b  00000000  00000000  0000f7f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000039b4  00000000  00000000  00010a53  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000460  00000000  00000000  00014407  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	96 c0       	rjmp	.+300    	; 0x12e <__ctors_end>
       2:	00 00       	nop
       4:	b3 c0       	rjmp	.+358    	; 0x16c <__bad_interrupt>
       6:	00 00       	nop
       8:	b1 c0       	rjmp	.+354    	; 0x16c <__bad_interrupt>
       a:	00 00       	nop
       c:	af c0       	rjmp	.+350    	; 0x16c <__bad_interrupt>
       e:	00 00       	nop
      10:	ad c0       	rjmp	.+346    	; 0x16c <__bad_interrupt>
      12:	00 00       	nop
      14:	ab c0       	rjmp	.+342    	; 0x16c <__bad_interrupt>
      16:	00 00       	nop
      18:	a9 c0       	rjmp	.+338    	; 0x16c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	a7 c0       	rjmp	.+334    	; 0x16c <__bad_interrupt>
      1e:	00 00       	nop
      20:	a5 c0       	rjmp	.+330    	; 0x16c <__bad_interrupt>
      22:	00 00       	nop
      24:	a3 c0       	rjmp	.+326    	; 0x16c <__bad_interrupt>
      26:	00 00       	nop
      28:	a1 c0       	rjmp	.+322    	; 0x16c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	9f c0       	rjmp	.+318    	; 0x16c <__bad_interrupt>
      2e:	00 00       	nop
      30:	9d c0       	rjmp	.+314    	; 0x16c <__bad_interrupt>
      32:	00 00       	nop
      34:	9b c0       	rjmp	.+310    	; 0x16c <__bad_interrupt>
      36:	00 00       	nop
      38:	99 c0       	rjmp	.+306    	; 0x16c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	97 c0       	rjmp	.+302    	; 0x16c <__bad_interrupt>
      3e:	00 00       	nop
      40:	95 c0       	rjmp	.+298    	; 0x16c <__bad_interrupt>
      42:	00 00       	nop
      44:	93 c0       	rjmp	.+294    	; 0x16c <__bad_interrupt>
      46:	00 00       	nop
      48:	18 c6       	rjmp	.+3120   	; 0xc7a <__vector_18>
      4a:	00 00       	nop
      4c:	8f c0       	rjmp	.+286    	; 0x16c <__bad_interrupt>
      4e:	00 00       	nop
      50:	d1 c5       	rjmp	.+2978   	; 0xbf4 <__vector_20>
      52:	00 00       	nop
      54:	8b c0       	rjmp	.+278    	; 0x16c <__bad_interrupt>
      56:	00 00       	nop
      58:	89 c0       	rjmp	.+274    	; 0x16c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	87 c0       	rjmp	.+270    	; 0x16c <__bad_interrupt>
      5e:	00 00       	nop
      60:	85 c0       	rjmp	.+266    	; 0x16c <__bad_interrupt>
      62:	00 00       	nop
      64:	83 c0       	rjmp	.+262    	; 0x16c <__bad_interrupt>
      66:	00 00       	nop
      68:	81 c0       	rjmp	.+258    	; 0x16c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	7f c0       	rjmp	.+254    	; 0x16c <__bad_interrupt>
      6e:	00 00       	nop
      70:	7e c5       	rjmp	.+2812   	; 0xb6e <__vector_28>
      72:	00 00       	nop
      74:	7b c0       	rjmp	.+246    	; 0x16c <__bad_interrupt>
      76:	00 00       	nop
      78:	79 c0       	rjmp	.+242    	; 0x16c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	77 c0       	rjmp	.+238    	; 0x16c <__bad_interrupt>
      7e:	00 00       	nop
      80:	75 c0       	rjmp	.+234    	; 0x16c <__bad_interrupt>
      82:	00 00       	nop
      84:	73 c0       	rjmp	.+230    	; 0x16c <__bad_interrupt>
      86:	00 00       	nop
      88:	71 c0       	rjmp	.+226    	; 0x16c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	ec 08       	sbc	r14, r12
      8e:	f2 08       	sbc	r15, r2
      90:	f8 08       	sbc	r15, r8
      92:	fe 08       	sbc	r15, r14
      94:	04 09       	sbc	r16, r4
      96:	0a 09       	sbc	r16, r10
      98:	10 09       	sbc	r17, r0
      9a:	8f 12       	cpse	r8, r31
      9c:	95 12       	cpse	r9, r21
      9e:	9b 12       	cpse	r9, r27
      a0:	ee 12       	cpse	r14, r30
      a2:	ee 12       	cpse	r14, r30
      a4:	ee 12       	cpse	r14, r30
      a6:	ee 12       	cpse	r14, r30
      a8:	ee 12       	cpse	r14, r30
      aa:	ee 12       	cpse	r14, r30
      ac:	ee 12       	cpse	r14, r30
      ae:	ee 12       	cpse	r14, r30
      b0:	ee 12       	cpse	r14, r30
      b2:	a1 12       	cpse	r10, r17
      b4:	a7 12       	cpse	r10, r23
      b6:	ad 12       	cpse	r10, r29
      b8:	b3 12       	cpse	r11, r19
      ba:	ee 12       	cpse	r14, r30
      bc:	ee 12       	cpse	r14, r30
      be:	ee 12       	cpse	r14, r30
      c0:	ee 12       	cpse	r14, r30
      c2:	b9 12       	cpse	r11, r25
      c4:	bf 12       	cpse	r11, r31
      c6:	c5 12       	cpse	r12, r21
      c8:	cb 12       	cpse	r12, r27
      ca:	ee 12       	cpse	r14, r30
      cc:	ee 12       	cpse	r14, r30
      ce:	ee 12       	cpse	r14, r30
      d0:	ee 12       	cpse	r14, r30
      d2:	ee 12       	cpse	r14, r30
      d4:	ee 12       	cpse	r14, r30
      d6:	ee 12       	cpse	r14, r30
      d8:	ee 12       	cpse	r14, r30
      da:	ee 12       	cpse	r14, r30
      dc:	ee 12       	cpse	r14, r30
      de:	ee 12       	cpse	r14, r30
      e0:	ee 12       	cpse	r14, r30
      e2:	ee 12       	cpse	r14, r30
      e4:	ee 12       	cpse	r14, r30
      e6:	ee 12       	cpse	r14, r30
      e8:	d1 12       	cpse	r13, r17
      ea:	d7 12       	cpse	r13, r23
      ec:	dd 12       	cpse	r13, r29
      ee:	e3 12       	cpse	r14, r19
      f0:	e9 12       	cpse	r14, r25
      f2:	f7 12       	cpse	r15, r23
      f4:	fd 12       	cpse	r15, r29
      f6:	03 13       	cpse	r16, r19
      f8:	09 13       	cpse	r16, r25
      fa:	20 13       	cpse	r18, r16
      fc:	20 13       	cpse	r18, r16
      fe:	20 13       	cpse	r18, r16
     100:	20 13       	cpse	r18, r16
     102:	20 13       	cpse	r18, r16
     104:	20 13       	cpse	r18, r16
     106:	20 13       	cpse	r18, r16
     108:	20 13       	cpse	r18, r16
     10a:	20 13       	cpse	r18, r16
     10c:	20 13       	cpse	r18, r16
     10e:	20 13       	cpse	r18, r16
     110:	20 13       	cpse	r18, r16
     112:	20 13       	cpse	r18, r16
     114:	20 13       	cpse	r18, r16
     116:	20 13       	cpse	r18, r16
     118:	20 13       	cpse	r18, r16
     11a:	20 13       	cpse	r18, r16
     11c:	20 13       	cpse	r18, r16
     11e:	20 13       	cpse	r18, r16
     120:	20 13       	cpse	r18, r16
     122:	20 13       	cpse	r18, r16
     124:	20 13       	cpse	r18, r16
     126:	20 13       	cpse	r18, r16
     128:	0f 13       	cpse	r16, r31
     12a:	15 13       	cpse	r17, r21
     12c:	1b 13       	cpse	r17, r27

0000012e <__ctors_end>:
     12e:	11 24       	eor	r1, r1
     130:	1f be       	out	0x3f, r1	; 63
     132:	cf ef       	ldi	r28, 0xFF	; 255
     134:	d0 e4       	ldi	r29, 0x40	; 64
     136:	de bf       	out	0x3e, r29	; 62
     138:	cd bf       	out	0x3d, r28	; 61

0000013a <__do_copy_data>:
     13a:	17 e0       	ldi	r17, 0x07	; 7
     13c:	a0 e0       	ldi	r26, 0x00	; 0
     13e:	b1 e0       	ldi	r27, 0x01	; 1
     140:	e2 e9       	ldi	r30, 0x92	; 146
     142:	fe e2       	ldi	r31, 0x2E	; 46
     144:	00 e0       	ldi	r16, 0x00	; 0
     146:	0b bf       	out	0x3b, r16	; 59
     148:	02 c0       	rjmp	.+4      	; 0x14e <__do_copy_data+0x14>
     14a:	07 90       	elpm	r0, Z+
     14c:	0d 92       	st	X+, r0
     14e:	a2 30       	cpi	r26, 0x02	; 2
     150:	b1 07       	cpc	r27, r17
     152:	d9 f7       	brne	.-10     	; 0x14a <__do_copy_data+0x10>

00000154 <__do_clear_bss>:
     154:	2b e0       	ldi	r18, 0x0B	; 11
     156:	a2 e0       	ldi	r26, 0x02	; 2
     158:	b7 e0       	ldi	r27, 0x07	; 7
     15a:	01 c0       	rjmp	.+2      	; 0x15e <.do_clear_bss_start>

0000015c <.do_clear_bss_loop>:
     15c:	1d 92       	st	X+, r1

0000015e <.do_clear_bss_start>:
     15e:	a6 30       	cpi	r26, 0x06	; 6
     160:	b2 07       	cpc	r27, r18
     162:	e1 f7       	brne	.-8      	; 0x15c <.do_clear_bss_loop>
     164:	0e 94 17 15 	call	0x2a2e	; 0x2a2e <main>
     168:	0c 94 47 17 	jmp	0x2e8e	; 0x2e8e <_exit>

0000016c <__bad_interrupt>:
     16c:	49 cf       	rjmp	.-366    	; 0x0 <__vectors>

0000016e <_Z13eepromSaveCfgPKci>:
		strcpy(apn,container);
		} else {
		strcpy(apn,NETWORK_APN);
	}

}
     16e:	0f 93       	push	r16
     170:	1f 93       	push	r17
     172:	cf 93       	push	r28
     174:	df 93       	push	r29
     176:	eb 01       	movw	r28, r22
     178:	fc 01       	movw	r30, r24
     17a:	60 81       	ld	r22, Z
     17c:	66 23       	and	r22, r22
     17e:	79 f0       	breq	.+30     	; 0x19e <_Z13eepromSaveCfgPKci+0x30>
     180:	8c 01       	movw	r16, r24
     182:	0f 5f       	subi	r16, 0xFF	; 255
     184:	1f 4f       	sbci	r17, 0xFF	; 255
     186:	f9 99       	sbic	0x1f, 1	; 31
     188:	fe cf       	rjmp	.-4      	; 0x186 <_Z13eepromSaveCfgPKci+0x18>
     18a:	21 96       	adiw	r28, 0x01	; 1
     18c:	ce 01       	movw	r24, r28
     18e:	01 97       	sbiw	r24, 0x01	; 1
     190:	0e 94 39 17 	call	0x2e72	; 0x2e72 <eeprom_write_byte>
     194:	f8 01       	movw	r30, r16
     196:	61 91       	ld	r22, Z+
     198:	8f 01       	movw	r16, r30
     19a:	61 11       	cpse	r22, r1
     19c:	f4 cf       	rjmp	.-24     	; 0x186 <_Z13eepromSaveCfgPKci+0x18>
     19e:	ce 01       	movw	r24, r28
     1a0:	df 91       	pop	r29
     1a2:	cf 91       	pop	r28
     1a4:	1f 91       	pop	r17
     1a6:	0f 91       	pop	r16
     1a8:	08 95       	ret

000001aa <_Z11clearEEPROMii>:
     1aa:	ef 92       	push	r14
     1ac:	ff 92       	push	r15
     1ae:	0f 93       	push	r16
     1b0:	1f 93       	push	r17
     1b2:	cf 93       	push	r28
     1b4:	df 93       	push	r29
     1b6:	ec 01       	movw	r28, r24
     1b8:	7b 01       	movw	r14, r22
     1ba:	86 17       	cp	r24, r22
     1bc:	97 07       	cpc	r25, r23
     1be:	a4 f4       	brge	.+40     	; 0x1e8 <_Z11clearEEPROMii+0x3e>
     1c0:	f9 99       	sbic	0x1f, 1	; 31
     1c2:	fe cf       	rjmp	.-4      	; 0x1c0 <_Z11clearEEPROMii+0x16>
     1c4:	0c 2f       	mov	r16, r28
     1c6:	1d 2f       	mov	r17, r29
     1c8:	ce 01       	movw	r24, r28
     1ca:	0e 94 31 17 	call	0x2e62	; 0x2e62 <eeprom_read_byte>
     1ce:	8f 3f       	cpi	r24, 0xFF	; 255
     1d0:	59 f0       	breq	.+22     	; 0x1e8 <_Z11clearEEPROMii+0x3e>
     1d2:	f9 99       	sbic	0x1f, 1	; 31
     1d4:	fe cf       	rjmp	.-4      	; 0x1d2 <_Z11clearEEPROMii+0x28>
     1d6:	6f ef       	ldi	r22, 0xFF	; 255
     1d8:	80 2f       	mov	r24, r16
     1da:	91 2f       	mov	r25, r17
     1dc:	0e 94 39 17 	call	0x2e72	; 0x2e72 <eeprom_write_byte>
     1e0:	21 96       	adiw	r28, 0x01	; 1
     1e2:	ce 15       	cp	r28, r14
     1e4:	df 05       	cpc	r29, r15
     1e6:	64 f3       	brlt	.-40     	; 0x1c0 <_Z11clearEEPROMii+0x16>
     1e8:	df 91       	pop	r29
     1ea:	cf 91       	pop	r28
     1ec:	1f 91       	pop	r17
     1ee:	0f 91       	pop	r16
     1f0:	ff 90       	pop	r15
     1f2:	ef 90       	pop	r14
     1f4:	08 95       	ret

000001f6 <_Z19eepromReadAttributePciS_i>:
     1f6:	2f 92       	push	r2
     1f8:	3f 92       	push	r3
     1fa:	4f 92       	push	r4
     1fc:	5f 92       	push	r5
     1fe:	6f 92       	push	r6
     200:	7f 92       	push	r7
     202:	8f 92       	push	r8
     204:	9f 92       	push	r9
     206:	af 92       	push	r10
     208:	bf 92       	push	r11
     20a:	cf 92       	push	r12
     20c:	df 92       	push	r13
     20e:	ef 92       	push	r14
     210:	ff 92       	push	r15
     212:	0f 93       	push	r16
     214:	1f 93       	push	r17
     216:	cf 93       	push	r28
     218:	df 93       	push	r29
     21a:	cd b7       	in	r28, 0x3d	; 61
     21c:	de b7       	in	r29, 0x3e	; 62
     21e:	cc 5c       	subi	r28, 0xCC	; 204
     220:	d1 09       	sbc	r29, r1
     222:	0f b6       	in	r0, 0x3f	; 63
     224:	f8 94       	cli
     226:	de bf       	out	0x3e, r29	; 62
     228:	0f be       	out	0x3f, r0	; 63
     22a:	cd bf       	out	0x3d, r28	; 61
     22c:	dc 01       	movw	r26, r24
     22e:	21 30       	cpi	r18, 0x01	; 1
     230:	31 05       	cpc	r19, r1
     232:	21 f4       	brne	.+8      	; 0x23c <_Z19eepromReadAttributePciS_i+0x46>
     234:	10 92 fe 0a 	sts	0x0AFE, r1	; 0x800afe <__system_var+0x42>
     238:	10 92 fd 0a 	sts	0x0AFD, r1	; 0x800afd <__system_var+0x41>
     23c:	9a 01       	movw	r18, r20
     23e:	2f 5f       	subi	r18, 0xFF	; 255
     240:	3f 4f       	sbci	r19, 0xFF	; 255
     242:	fa 01       	movw	r30, r20
     244:	80 81       	ld	r24, Z
     246:	88 23       	and	r24, r24
     248:	51 f0       	breq	.+20     	; 0x25e <_Z19eepromReadAttributePciS_i+0x68>
     24a:	f9 01       	movw	r30, r18
     24c:	81 2c       	mov	r8, r1
     24e:	91 2c       	mov	r9, r1
     250:	2f ef       	ldi	r18, 0xFF	; 255
     252:	82 1a       	sub	r8, r18
     254:	92 0a       	sbc	r9, r18
     256:	91 91       	ld	r25, Z+
     258:	91 11       	cpse	r25, r1
     25a:	fa cf       	rjmp	.-12     	; 0x250 <_Z19eepromReadAttributePciS_i+0x5a>
     25c:	02 c0       	rjmp	.+4      	; 0x262 <_Z19eepromReadAttributePciS_i+0x6c>
     25e:	81 2c       	mov	r8, r1
     260:	91 2c       	mov	r9, r1
     262:	e0 90 fd 0a 	lds	r14, 0x0AFD	; 0x800afd <__system_var+0x41>
     266:	f0 90 fe 0a 	lds	r15, 0x0AFE	; 0x800afe <__system_var+0x42>
     26a:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <EEPROM_SIZE>
     26e:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <EEPROM_SIZE+0x1>
     272:	e8 16       	cp	r14, r24
     274:	f9 06       	cpc	r15, r25
     276:	0c f0       	brlt	.+2      	; 0x27a <_Z19eepromReadAttributePciS_i+0x84>
     278:	90 c0       	rjmp	.+288    	; 0x39a <_Z19eepromReadAttributePciS_i+0x1a4>
     27a:	2a 01       	movw	r4, r20
     27c:	c5 53       	subi	r28, 0x35	; 53
     27e:	df 4f       	sbci	r29, 0xFF	; 255
     280:	79 83       	std	Y+1, r23	; 0x01
     282:	68 83       	st	Y, r22
     284:	cb 5c       	subi	r28, 0xCB	; 203
     286:	d0 40       	sbci	r29, 0x00	; 0
     288:	c7 53       	subi	r28, 0x37	; 55
     28a:	df 4f       	sbci	r29, 0xFF	; 255
     28c:	b9 83       	std	Y+1, r27	; 0x01
     28e:	a8 83       	st	Y, r26
     290:	c9 5c       	subi	r28, 0xC9	; 201
     292:	d0 40       	sbci	r29, 0x00	; 0
     294:	a1 2c       	mov	r10, r1
     296:	b1 2c       	mov	r11, r1
     298:	00 e0       	ldi	r16, 0x00	; 0
     29a:	10 e0       	ldi	r17, 0x00	; 0
     29c:	ce 01       	movw	r24, r28
     29e:	01 96       	adiw	r24, 0x01	; 1
     2a0:	6c 01       	movw	r12, r24
     2a2:	0f 2e       	mov	r0, r31
     2a4:	f7 ec       	ldi	r31, 0xC7	; 199
     2a6:	2f 2e       	mov	r2, r31
     2a8:	f0 2d       	mov	r31, r0
     2aa:	31 2c       	mov	r3, r1
     2ac:	60 90 a4 01 	lds	r6, 0x01A4	; 0x8001a4 <EEPROM_SIZE>
     2b0:	70 90 a5 01 	lds	r7, 0x01A5	; 0x8001a5 <EEPROM_SIZE+0x1>
     2b4:	f9 99       	sbic	0x1f, 1	; 31
     2b6:	fe cf       	rjmp	.-4      	; 0x2b4 <_Z19eepromReadAttributePciS_i+0xbe>
     2b8:	c7 01       	movw	r24, r14
     2ba:	0e 94 31 17 	call	0x2e62	; 0x2e62 <eeprom_read_byte>
     2be:	83 32       	cpi	r24, 0x23	; 35
     2c0:	31 f4       	brne	.+12     	; 0x2ce <_Z19eepromReadAttributePciS_i+0xd8>
     2c2:	91 e0       	ldi	r25, 0x01	; 1
     2c4:	ab 28       	or	r10, r11
     2c6:	09 f0       	breq	.+2      	; 0x2ca <_Z19eepromReadAttributePciS_i+0xd4>
     2c8:	90 e0       	ldi	r25, 0x00	; 0
     2ca:	a9 2e       	mov	r10, r25
     2cc:	b1 2c       	mov	r11, r1
     2ce:	91 e0       	ldi	r25, 0x01	; 1
     2d0:	a9 16       	cp	r10, r25
     2d2:	b1 04       	cpc	r11, r1
     2d4:	59 f4       	brne	.+22     	; 0x2ec <_Z19eepromReadAttributePciS_i+0xf6>
     2d6:	07 3c       	cpi	r16, 0xC7	; 199
     2d8:	11 05       	cpc	r17, r1
     2da:	09 f4       	brne	.+2      	; 0x2de <_Z19eepromReadAttributePciS_i+0xe8>
     2dc:	60 c0       	rjmp	.+192    	; 0x39e <_Z19eepromReadAttributePciS_i+0x1a8>
     2de:	f6 01       	movw	r30, r12
     2e0:	e0 0f       	add	r30, r16
     2e2:	f1 1f       	adc	r31, r17
     2e4:	80 83       	st	Z, r24
     2e6:	0f 5f       	subi	r16, 0xFF	; 255
     2e8:	1f 4f       	sbci	r17, 0xFF	; 255
     2ea:	4e c0       	rjmp	.+156    	; 0x388 <_Z19eepromReadAttributePciS_i+0x192>
     2ec:	10 16       	cp	r1, r16
     2ee:	11 06       	cpc	r1, r17
     2f0:	0c f0       	brlt	.+2      	; 0x2f4 <_Z19eepromReadAttributePciS_i+0xfe>
     2f2:	4a c0       	rjmp	.+148    	; 0x388 <_Z19eepromReadAttributePciS_i+0x192>
     2f4:	f6 01       	movw	r30, r12
     2f6:	e0 0f       	add	r30, r16
     2f8:	f1 1f       	adc	r31, r17
     2fa:	10 82       	st	Z, r1
     2fc:	b2 01       	movw	r22, r4
     2fe:	c6 01       	movw	r24, r12
     300:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
     304:	00 97       	sbiw	r24, 0x00	; 0
     306:	c9 f1       	breq	.+114    	; 0x37a <_Z19eepromReadAttributePciS_i+0x184>
     308:	ef ef       	ldi	r30, 0xFF	; 255
     30a:	8e 1a       	sub	r8, r30
     30c:	9e 0a       	sbc	r9, r30
     30e:	fc 01       	movw	r30, r24
     310:	e8 0d       	add	r30, r8
     312:	f9 1d       	adc	r31, r9
     314:	20 81       	ld	r18, Z
     316:	22 23       	and	r18, r18
     318:	e1 f0       	breq	.+56     	; 0x352 <_Z19eepromReadAttributePciS_i+0x15c>
     31a:	c5 53       	subi	r28, 0x35	; 53
     31c:	df 4f       	sbci	r29, 0xFF	; 255
     31e:	48 81       	ld	r20, Y
     320:	59 81       	ldd	r21, Y+1	; 0x01
     322:	cb 5c       	subi	r28, 0xCB	; 203
     324:	d0 40       	sbci	r29, 0x00	; 0
     326:	41 50       	subi	r20, 0x01	; 1
     328:	51 09       	sbc	r21, r1
     32a:	d9 f1       	breq	.+118    	; 0x3a2 <_Z19eepromReadAttributePciS_i+0x1ac>
     32c:	c7 53       	subi	r28, 0x37	; 55
     32e:	df 4f       	sbci	r29, 0xFF	; 255
     330:	a8 81       	ld	r26, Y
     332:	b9 81       	ldd	r27, Y+1	; 0x01
     334:	c9 5c       	subi	r28, 0xC9	; 201
     336:	d0 40       	sbci	r29, 0x00	; 0
     338:	31 96       	adiw	r30, 0x01	; 1
     33a:	80 e0       	ldi	r24, 0x00	; 0
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	03 c0       	rjmp	.+6      	; 0x346 <_Z19eepromReadAttributePciS_i+0x150>
     340:	84 17       	cp	r24, r20
     342:	95 07       	cpc	r25, r21
     344:	81 f1       	breq	.+96     	; 0x3a6 <_Z19eepromReadAttributePciS_i+0x1b0>
     346:	01 96       	adiw	r24, 0x01	; 1
     348:	2d 93       	st	X+, r18
     34a:	21 91       	ld	r18, Z+
     34c:	21 11       	cpse	r18, r1
     34e:	f8 cf       	rjmp	.-16     	; 0x340 <_Z19eepromReadAttributePciS_i+0x14a>
     350:	02 c0       	rjmp	.+4      	; 0x356 <_Z19eepromReadAttributePciS_i+0x160>
     352:	80 e0       	ldi	r24, 0x00	; 0
     354:	90 e0       	ldi	r25, 0x00	; 0
     356:	c7 53       	subi	r28, 0x37	; 55
     358:	df 4f       	sbci	r29, 0xFF	; 255
     35a:	e8 81       	ld	r30, Y
     35c:	f9 81       	ldd	r31, Y+1	; 0x01
     35e:	c9 5c       	subi	r28, 0xC9	; 201
     360:	d0 40       	sbci	r29, 0x00	; 0
     362:	e8 0f       	add	r30, r24
     364:	f9 1f       	adc	r31, r25
     366:	10 82       	st	Z, r1
     368:	ff ef       	ldi	r31, 0xFF	; 255
     36a:	ef 1a       	sub	r14, r31
     36c:	ff 0a       	sbc	r15, r31
     36e:	f0 92 fe 0a 	sts	0x0AFE, r15	; 0x800afe <__system_var+0x42>
     372:	e0 92 fd 0a 	sts	0x0AFD, r14	; 0x800afd <__system_var+0x41>
     376:	81 e0       	ldi	r24, 0x01	; 1
     378:	17 c0       	rjmp	.+46     	; 0x3a8 <_Z19eepromReadAttributePciS_i+0x1b2>
     37a:	f6 01       	movw	r30, r12
     37c:	22 2d       	mov	r18, r2
     37e:	11 92       	st	Z+, r1
     380:	2a 95       	dec	r18
     382:	e9 f7       	brne	.-6      	; 0x37e <_Z19eepromReadAttributePciS_i+0x188>
     384:	03 2d       	mov	r16, r3
     386:	10 e0       	ldi	r17, 0x00	; 0
     388:	8f ef       	ldi	r24, 0xFF	; 255
     38a:	e8 1a       	sub	r14, r24
     38c:	f8 0a       	sbc	r15, r24
     38e:	e6 14       	cp	r14, r6
     390:	f7 04       	cpc	r15, r7
     392:	0c f4       	brge	.+2      	; 0x396 <_Z19eepromReadAttributePciS_i+0x1a0>
     394:	8f cf       	rjmp	.-226    	; 0x2b4 <_Z19eepromReadAttributePciS_i+0xbe>
     396:	80 e0       	ldi	r24, 0x00	; 0
     398:	07 c0       	rjmp	.+14     	; 0x3a8 <_Z19eepromReadAttributePciS_i+0x1b2>
     39a:	80 e0       	ldi	r24, 0x00	; 0
     39c:	05 c0       	rjmp	.+10     	; 0x3a8 <_Z19eepromReadAttributePciS_i+0x1b2>
     39e:	80 e0       	ldi	r24, 0x00	; 0
     3a0:	03 c0       	rjmp	.+6      	; 0x3a8 <_Z19eepromReadAttributePciS_i+0x1b2>
     3a2:	80 e0       	ldi	r24, 0x00	; 0
     3a4:	01 c0       	rjmp	.+2      	; 0x3a8 <_Z19eepromReadAttributePciS_i+0x1b2>
     3a6:	80 e0       	ldi	r24, 0x00	; 0
     3a8:	c4 53       	subi	r28, 0x34	; 52
     3aa:	df 4f       	sbci	r29, 0xFF	; 255
     3ac:	0f b6       	in	r0, 0x3f	; 63
     3ae:	f8 94       	cli
     3b0:	de bf       	out	0x3e, r29	; 62
     3b2:	0f be       	out	0x3f, r0	; 63
     3b4:	cd bf       	out	0x3d, r28	; 61
     3b6:	df 91       	pop	r29
     3b8:	cf 91       	pop	r28
     3ba:	1f 91       	pop	r17
     3bc:	0f 91       	pop	r16
     3be:	ff 90       	pop	r15
     3c0:	ef 90       	pop	r14
     3c2:	df 90       	pop	r13
     3c4:	cf 90       	pop	r12
     3c6:	bf 90       	pop	r11
     3c8:	af 90       	pop	r10
     3ca:	9f 90       	pop	r9
     3cc:	8f 90       	pop	r8
     3ce:	7f 90       	pop	r7
     3d0:	6f 90       	pop	r6
     3d2:	5f 90       	pop	r5
     3d4:	4f 90       	pop	r4
     3d6:	3f 90       	pop	r3
     3d8:	2f 90       	pop	r2
     3da:	08 95       	ret

000003dc <_Z15getRelaySettingii>:
     3dc:	4f 92       	push	r4
     3de:	5f 92       	push	r5
     3e0:	6f 92       	push	r6
     3e2:	7f 92       	push	r7
     3e4:	8f 92       	push	r8
     3e6:	9f 92       	push	r9
     3e8:	af 92       	push	r10
     3ea:	bf 92       	push	r11
     3ec:	cf 92       	push	r12
     3ee:	df 92       	push	r13
     3f0:	ef 92       	push	r14
     3f2:	ff 92       	push	r15
     3f4:	0f 93       	push	r16
     3f6:	1f 93       	push	r17
     3f8:	cf 93       	push	r28
     3fa:	df 93       	push	r29
     3fc:	cd b7       	in	r28, 0x3d	; 61
     3fe:	de b7       	in	r29, 0x3e	; 62
     400:	ce 5c       	subi	r28, 0xCE	; 206
     402:	d1 09       	sbc	r29, r1
     404:	0f b6       	in	r0, 0x3f	; 63
     406:	f8 94       	cli
     408:	de bf       	out	0x3e, r29	; 62
     40a:	0f be       	out	0x3f, r0	; 63
     40c:	cd bf       	out	0x3d, r28	; 61
     40e:	5c 01       	movw	r10, r24
     410:	4b 01       	movw	r8, r22
     412:	10 92 fe 0a 	sts	0x0AFE, r1	; 0x800afe <__system_var+0x42>
     416:	10 92 fd 0a 	sts	0x0AFD, r1	; 0x800afd <__system_var+0x41>
     41a:	06 e0       	ldi	r16, 0x06	; 6
     41c:	18 e0       	ldi	r17, 0x08	; 8
     41e:	0f 2e       	mov	r0, r31
     420:	f8 ec       	ldi	r31, 0xC8	; 200
     422:	6f 2e       	mov	r6, r31
     424:	71 2c       	mov	r7, r1
     426:	f0 2d       	mov	r31, r0
     428:	0f 2e       	mov	r0, r31
     42a:	fe e0       	ldi	r31, 0x0E	; 14
     42c:	4f 2e       	mov	r4, r31
     42e:	f8 e0       	ldi	r31, 0x08	; 8
     430:	5f 2e       	mov	r5, r31
     432:	f0 2d       	mov	r31, r0
     434:	bf c0       	rjmp	.+382    	; 0x5b4 <__FUSE_REGION_LENGTH__+0x1b4>
     436:	ae 01       	movw	r20, r28
     438:	43 53       	subi	r20, 0x33	; 51
     43a:	5f 4f       	sbci	r21, 0xFF	; 255
     43c:	69 e8       	ldi	r22, 0x89	; 137
     43e:	76 e0       	ldi	r23, 0x06	; 6
     440:	ce 01       	movw	r24, r28
     442:	01 96       	adiw	r24, 0x01	; 1
     444:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
     448:	00 97       	sbiw	r24, 0x00	; 0
     44a:	09 f4       	brne	.+2      	; 0x44e <__FUSE_REGION_LENGTH__+0x4e>
     44c:	a5 c0       	rjmp	.+330    	; 0x598 <__FUSE_REGION_LENGTH__+0x198>
     44e:	ae 01       	movw	r20, r28
     450:	45 53       	subi	r20, 0x35	; 53
     452:	5f 4f       	sbci	r21, 0xFF	; 255
     454:	66 e3       	ldi	r22, 0x36	; 54
     456:	71 e0       	ldi	r23, 0x01	; 1
     458:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
     45c:	7c 01       	movw	r14, r24
     45e:	6b e3       	ldi	r22, 0x3B	; 59
     460:	71 e0       	ldi	r23, 0x01	; 1
     462:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
     466:	89 2b       	or	r24, r25
     468:	79 f0       	breq	.+30     	; 0x488 <__FUSE_REGION_LENGTH__+0x88>
     46a:	ae 01       	movw	r20, r28
     46c:	45 53       	subi	r20, 0x35	; 53
     46e:	5f 4f       	sbci	r21, 0xFF	; 255
     470:	66 e3       	ldi	r22, 0x36	; 54
     472:	71 e0       	ldi	r23, 0x01	; 1
     474:	80 e0       	ldi	r24, 0x00	; 0
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
     47c:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
     480:	f8 01       	movw	r30, r16
     482:	91 83       	std	Z+1, r25	; 0x01
     484:	80 83       	st	Z, r24
     486:	7c c0       	rjmp	.+248    	; 0x580 <__FUSE_REGION_LENGTH__+0x180>
     488:	6e e3       	ldi	r22, 0x3E	; 62
     48a:	71 e0       	ldi	r23, 0x01	; 1
     48c:	c7 01       	movw	r24, r14
     48e:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
     492:	89 2b       	or	r24, r25
     494:	79 f0       	breq	.+30     	; 0x4b4 <__FUSE_REGION_LENGTH__+0xb4>
     496:	ae 01       	movw	r20, r28
     498:	45 53       	subi	r20, 0x35	; 53
     49a:	5f 4f       	sbci	r21, 0xFF	; 255
     49c:	66 e3       	ldi	r22, 0x36	; 54
     49e:	71 e0       	ldi	r23, 0x01	; 1
     4a0:	80 e0       	ldi	r24, 0x00	; 0
     4a2:	90 e0       	ldi	r25, 0x00	; 0
     4a4:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
     4a8:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
     4ac:	f8 01       	movw	r30, r16
     4ae:	93 83       	std	Z+3, r25	; 0x03
     4b0:	82 83       	std	Z+2, r24	; 0x02
     4b2:	66 c0       	rjmp	.+204    	; 0x580 <__FUSE_REGION_LENGTH__+0x180>
     4b4:	64 e4       	ldi	r22, 0x44	; 68
     4b6:	70 e0       	ldi	r23, 0x00	; 0
     4b8:	c7 01       	movw	r24, r14
     4ba:	0e 94 a3 16 	call	0x2d46	; 0x2d46 <strchr>
     4be:	89 2b       	or	r24, r25
     4c0:	79 f0       	breq	.+30     	; 0x4e0 <__FUSE_REGION_LENGTH__+0xe0>
     4c2:	ae 01       	movw	r20, r28
     4c4:	45 53       	subi	r20, 0x35	; 53
     4c6:	5f 4f       	sbci	r21, 0xFF	; 255
     4c8:	66 e3       	ldi	r22, 0x36	; 54
     4ca:	71 e0       	ldi	r23, 0x01	; 1
     4cc:	80 e0       	ldi	r24, 0x00	; 0
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
     4d4:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
     4d8:	f8 01       	movw	r30, r16
     4da:	95 83       	std	Z+5, r25	; 0x05
     4dc:	84 83       	std	Z+4, r24	; 0x04
     4de:	50 c0       	rjmp	.+160    	; 0x580 <__FUSE_REGION_LENGTH__+0x180>
     4e0:	61 e4       	ldi	r22, 0x41	; 65
     4e2:	71 e0       	ldi	r23, 0x01	; 1
     4e4:	c7 01       	movw	r24, r14
     4e6:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
     4ea:	89 2b       	or	r24, r25
     4ec:	79 f0       	breq	.+30     	; 0x50c <__FUSE_REGION_LENGTH__+0x10c>
     4ee:	ae 01       	movw	r20, r28
     4f0:	45 53       	subi	r20, 0x35	; 53
     4f2:	5f 4f       	sbci	r21, 0xFF	; 255
     4f4:	66 e3       	ldi	r22, 0x36	; 54
     4f6:	71 e0       	ldi	r23, 0x01	; 1
     4f8:	80 e0       	ldi	r24, 0x00	; 0
     4fa:	90 e0       	ldi	r25, 0x00	; 0
     4fc:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
     500:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
     504:	f8 01       	movw	r30, r16
     506:	97 83       	std	Z+7, r25	; 0x07
     508:	86 83       	std	Z+6, r24	; 0x06
     50a:	3a c0       	rjmp	.+116    	; 0x580 <__FUSE_REGION_LENGTH__+0x180>
     50c:	64 e4       	ldi	r22, 0x44	; 68
     50e:	71 e0       	ldi	r23, 0x01	; 1
     510:	c7 01       	movw	r24, r14
     512:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
     516:	89 2b       	or	r24, r25
     518:	99 f1       	breq	.+102    	; 0x580 <__FUSE_REGION_LENGTH__+0x180>
     51a:	ae 01       	movw	r20, r28
     51c:	45 53       	subi	r20, 0x35	; 53
     51e:	5f 4f       	sbci	r21, 0xFF	; 255
     520:	66 e3       	ldi	r22, 0x36	; 54
     522:	71 e0       	ldi	r23, 0x01	; 1
     524:	80 e0       	ldi	r24, 0x00	; 0
     526:	90 e0       	ldi	r25, 0x00	; 0
     528:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
     52c:	ae 01       	movw	r20, r28
     52e:	47 53       	subi	r20, 0x37	; 55
     530:	5f 4f       	sbci	r21, 0xFF	; 255
     532:	66 e3       	ldi	r22, 0x36	; 54
     534:	73 e0       	ldi	r23, 0x03	; 3
     536:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
     53a:	00 97       	sbiw	r24, 0x00	; 0
     53c:	c1 f0       	breq	.+48     	; 0x56e <__FUSE_REGION_LENGTH__+0x16e>
     53e:	62 01       	movw	r12, r4
     540:	e1 2c       	mov	r14, r1
     542:	f1 2c       	mov	r15, r1
     544:	ff ef       	ldi	r31, 0xFF	; 255
     546:	ef 1a       	sub	r14, r31
     548:	ff 0a       	sbc	r15, r31
     54a:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
     54e:	f6 01       	movw	r30, r12
     550:	81 93       	st	Z+, r24
     552:	91 93       	st	Z+, r25
     554:	6f 01       	movw	r12, r30
     556:	ae 01       	movw	r20, r28
     558:	47 53       	subi	r20, 0x37	; 55
     55a:	5f 4f       	sbci	r21, 0xFF	; 255
     55c:	66 e3       	ldi	r22, 0x36	; 54
     55e:	73 e0       	ldi	r23, 0x03	; 3
     560:	80 e0       	ldi	r24, 0x00	; 0
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
     568:	00 97       	sbiw	r24, 0x00	; 0
     56a:	61 f7       	brne	.-40     	; 0x544 <__FUSE_REGION_LENGTH__+0x144>
     56c:	02 c0       	rjmp	.+4      	; 0x572 <__FUSE_REGION_LENGTH__+0x172>
     56e:	e1 2c       	mov	r14, r1
     570:	f1 2c       	mov	r15, r1
     572:	f7 01       	movw	r30, r14
     574:	ee 0f       	add	r30, r30
     576:	ff 1f       	adc	r31, r31
     578:	e2 5f       	subi	r30, 0xF2	; 242
     57a:	f7 4f       	sbci	r31, 0xF7	; 247
     57c:	71 82       	std	Z+1, r7	; 0x01
     57e:	60 82       	st	Z, r6
     580:	ae 01       	movw	r20, r28
     582:	43 53       	subi	r20, 0x33	; 51
     584:	5f 4f       	sbci	r21, 0xFF	; 255
     586:	69 e8       	ldi	r22, 0x89	; 137
     588:	76 e0       	ldi	r23, 0x06	; 6
     58a:	80 e0       	ldi	r24, 0x00	; 0
     58c:	90 e0       	ldi	r25, 0x00	; 0
     58e:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
     592:	00 97       	sbiw	r24, 0x00	; 0
     594:	09 f0       	breq	.+2      	; 0x598 <__FUSE_REGION_LENGTH__+0x198>
     596:	5b cf       	rjmp	.-330    	; 0x44e <__FUSE_REGION_LENGTH__+0x4e>
     598:	f8 01       	movw	r30, r16
     59a:	80 81       	ld	r24, Z
     59c:	91 81       	ldd	r25, Z+1	; 0x01
     59e:	8a 15       	cp	r24, r10
     5a0:	9b 05       	cpc	r25, r11
     5a2:	41 f4       	brne	.+16     	; 0x5b4 <__FUSE_REGION_LENGTH__+0x1b4>
     5a4:	82 81       	ldd	r24, Z+2	; 0x02
     5a6:	93 81       	ldd	r25, Z+3	; 0x03
     5a8:	88 15       	cp	r24, r8
     5aa:	99 05       	cpc	r25, r9
     5ac:	19 f4       	brne	.+6      	; 0x5b4 <__FUSE_REGION_LENGTH__+0x1b4>
     5ae:	81 e0       	ldi	r24, 0x01	; 1
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	0d c0       	rjmp	.+26     	; 0x5ce <__FUSE_REGION_LENGTH__+0x1ce>
     5b4:	20 e0       	ldi	r18, 0x00	; 0
     5b6:	30 e0       	ldi	r19, 0x00	; 0
     5b8:	47 e4       	ldi	r20, 0x47	; 71
     5ba:	51 e0       	ldi	r21, 0x01	; 1
     5bc:	67 ec       	ldi	r22, 0xC7	; 199
     5be:	70 e0       	ldi	r23, 0x00	; 0
     5c0:	ce 01       	movw	r24, r28
     5c2:	01 96       	adiw	r24, 0x01	; 1
     5c4:	18 de       	rcall	.-976    	; 0x1f6 <_Z19eepromReadAttributePciS_i>
     5c6:	81 11       	cpse	r24, r1
     5c8:	36 cf       	rjmp	.-404    	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
     5ca:	80 e0       	ldi	r24, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	c2 53       	subi	r28, 0x32	; 50
     5d0:	df 4f       	sbci	r29, 0xFF	; 255
     5d2:	0f b6       	in	r0, 0x3f	; 63
     5d4:	f8 94       	cli
     5d6:	de bf       	out	0x3e, r29	; 62
     5d8:	0f be       	out	0x3f, r0	; 63
     5da:	cd bf       	out	0x3d, r28	; 61
     5dc:	df 91       	pop	r29
     5de:	cf 91       	pop	r28
     5e0:	1f 91       	pop	r17
     5e2:	0f 91       	pop	r16
     5e4:	ff 90       	pop	r15
     5e6:	ef 90       	pop	r14
     5e8:	df 90       	pop	r13
     5ea:	cf 90       	pop	r12
     5ec:	bf 90       	pop	r11
     5ee:	af 90       	pop	r10
     5f0:	9f 90       	pop	r9
     5f2:	8f 90       	pop	r8
     5f4:	7f 90       	pop	r7
     5f6:	6f 90       	pop	r6
     5f8:	5f 90       	pop	r5
     5fa:	4f 90       	pop	r4
     5fc:	08 95       	ret

000005fe <_Z25initializeTimerSettingIdsv>:

void initializeTimerSettingIds(){
     5fe:	5f 92       	push	r5
     600:	6f 92       	push	r6
     602:	7f 92       	push	r7
     604:	8f 92       	push	r8
     606:	9f 92       	push	r9
     608:	af 92       	push	r10
     60a:	bf 92       	push	r11
     60c:	cf 92       	push	r12
     60e:	df 92       	push	r13
     610:	ef 92       	push	r14
     612:	ff 92       	push	r15
     614:	0f 93       	push	r16
     616:	1f 93       	push	r17
     618:	cf 93       	push	r28
     61a:	df 93       	push	r29
     61c:	cd b7       	in	r28, 0x3d	; 61
     61e:	de b7       	in	r29, 0x3e	; 62
     620:	cc 5c       	subi	r28, 0xCC	; 204
     622:	d1 09       	sbc	r29, r1
     624:	0f b6       	in	r0, 0x3f	; 63
     626:	f8 94       	cli
     628:	de bf       	out	0x3e, r29	; 62
     62a:	0f be       	out	0x3f, r0	; 63
     62c:	cd bf       	out	0x3d, r28	; 61
     62e:	4e e6       	ldi	r20, 0x6E	; 110
     630:	57 e0       	ldi	r21, 0x07	; 7
     632:	6e ed       	ldi	r22, 0xDE	; 222
     634:	77 e0       	ldi	r23, 0x07	; 7
	int index = 0;

	for (index=0;index<MAX_MODULE_COUNT;index++){
		int j;
		for (j=0;j<MAX_RELAY_COUNT;j++){
			__timer_records[index].relays[j] = 254;
     636:	2e ef       	ldi	r18, 0xFE	; 254
     638:	30 e0       	ldi	r19, 0x00	; 0
     63a:	0a c0       	rjmp	.+20     	; 0x650 <_Z25initializeTimerSettingIdsv+0x52>
     63c:	21 93       	st	Z+, r18
     63e:	31 93       	st	Z+, r19
	int moduleId=0,relayId=0;
	int index = 0;

	for (index=0;index<MAX_MODULE_COUNT;index++){
		int j;
		for (j=0;j<MAX_RELAY_COUNT;j++){
     640:	e8 17       	cp	r30, r24
     642:	f9 07       	cpc	r31, r25
     644:	d9 f7       	brne	.-10     	; 0x63c <_Z25initializeTimerSettingIdsv+0x3e>
     646:	44 5e       	subi	r20, 0xE4	; 228
     648:	5f 4f       	sbci	r21, 0xFF	; 255
void initializeTimerSettingIds(){
	char container[200];
	int moduleId=0,relayId=0;
	int index = 0;

	for (index=0;index<MAX_MODULE_COUNT;index++){
     64a:	46 17       	cp	r20, r22
     64c:	57 07       	cpc	r21, r23
     64e:	21 f0       	breq	.+8      	; 0x658 <_Z25initializeTimerSettingIdsv+0x5a>
     650:	ca 01       	movw	r24, r20
     652:	4a 96       	adiw	r24, 0x1a	; 26
		strcpy(apn,NETWORK_APN);
	}

}

void initializeTimerSettingIds(){
     654:	fa 01       	movw	r30, r20
     656:	f2 cf       	rjmp	.-28     	; 0x63c <_Z25initializeTimerSettingIdsv+0x3e>
		for (j=0;j<MAX_RELAY_COUNT;j++){
			__timer_records[index].relays[j] = 254;
		}
	}

	__system_var.eeprom_position = 0;
     658:	10 92 fe 0a 	sts	0x0AFE, r1	; 0x800afe <__system_var+0x42>
     65c:	10 92 fd 0a 	sts	0x0AFD, r1	; 0x800afd <__system_var+0x41>
void initializeTimerSettingIds(){
	char container[200];
	int moduleId=0,relayId=0;
	int index = 0;

	for (index=0;index<MAX_MODULE_COUNT;index++){
     660:	68 94       	set
     662:	aa 24       	eor	r10, r10
     664:	a2 f8       	bld	r10, 2
     666:	b1 2c       	mov	r11, r1

}

void initializeTimerSettingIds(){
	char container[200];
	int moduleId=0,relayId=0;
     668:	81 2c       	mov	r8, r1
     66a:	91 2c       	mov	r9, r1
     66c:	c1 2c       	mov	r12, r1
     66e:	d1 2c       	mov	r13, r1
     670:	0f 2e       	mov	r0, r31
     672:	fc e1       	ldi	r31, 0x1C	; 28
     674:	6f 2e       	mov	r6, r31
     676:	f0 2d       	mov	r31, r0
				found += 1;
			}
			p1 = strtok_r(0,";",&save_ptr1);
		}

		if (found == 2){
     678:	55 24       	eor	r5, r5
     67a:	53 94       	inc	r5
			flag = 1;
			for (i=0;i<MAX_RELAY_COUNT;i++){
				if (__timer_records[moduleId].relays[i] == relayId){
					flag = 0;
     67c:	71 2c       	mov	r7, r1
			__timer_records[index].relays[j] = 254;
		}
	}

	__system_var.eeprom_position = 0;
	while (eepromReadAttribute(container,sizeof(container),"TS",0) != 0){
     67e:	78 c0       	rjmp	.+240    	; 0x770 <_Z25initializeTimerSettingIdsv+0x172>
		char *save_ptr1,*p1,flag;
		int i,found = 0;

		p1 = strtok_r(container,";",&save_ptr1);
     680:	ae 01       	movw	r20, r28
     682:	45 53       	subi	r20, 0x35	; 53
     684:	5f 4f       	sbci	r21, 0xFF	; 255
     686:	69 e8       	ldi	r22, 0x89	; 137
     688:	76 e0       	ldi	r23, 0x06	; 6
     68a:	ce 01       	movw	r24, r28
     68c:	01 96       	adiw	r24, 0x01	; 1
     68e:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
		while (p1!= 0){
     692:	00 97       	sbiw	r24, 0x00	; 0
     694:	09 f4       	brne	.+2      	; 0x698 <_Z25initializeTimerSettingIdsv+0x9a>
     696:	6c c0       	rjmp	.+216    	; 0x770 <_Z25initializeTimerSettingIdsv+0x172>
     698:	e1 2c       	mov	r14, r1
     69a:	f1 2c       	mov	r15, r1
			char *p2,*save_ptr2;

			p2 = strtok_r(p1,":",&save_ptr2);
     69c:	ae 01       	movw	r20, r28
     69e:	47 53       	subi	r20, 0x37	; 55
     6a0:	5f 4f       	sbci	r21, 0xFF	; 255
     6a2:	66 e3       	ldi	r22, 0x36	; 54
     6a4:	71 e0       	ldi	r23, 0x01	; 1
     6a6:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
     6aa:	8c 01       	movw	r16, r24
			if (strstr(p2,"MI")){
     6ac:	6b e3       	ldi	r22, 0x3B	; 59
     6ae:	71 e0       	ldi	r23, 0x01	; 1
     6b0:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
     6b4:	89 2b       	or	r24, r25
     6b6:	81 f0       	breq	.+32     	; 0x6d8 <_Z25initializeTimerSettingIdsv+0xda>
				p2 = strtok_r(0,":",&save_ptr2);
     6b8:	ae 01       	movw	r20, r28
     6ba:	47 53       	subi	r20, 0x37	; 55
     6bc:	5f 4f       	sbci	r21, 0xFF	; 255
     6be:	66 e3       	ldi	r22, 0x36	; 54
     6c0:	71 e0       	ldi	r23, 0x01	; 1
     6c2:	80 e0       	ldi	r24, 0x00	; 0
     6c4:	90 e0       	ldi	r25, 0x00	; 0
     6c6:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
				moduleId = atoi(p2);
     6ca:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
     6ce:	6c 01       	movw	r12, r24
				found += 1;
     6d0:	2f ef       	ldi	r18, 0xFF	; 255
     6d2:	e2 1a       	sub	r14, r18
     6d4:	f2 0a       	sbc	r15, r18
     6d6:	17 c0       	rjmp	.+46     	; 0x706 <_Z25initializeTimerSettingIdsv+0x108>
				} else if (strstr(p2,"RI")){
     6d8:	6e e3       	ldi	r22, 0x3E	; 62
     6da:	71 e0       	ldi	r23, 0x01	; 1
     6dc:	c8 01       	movw	r24, r16
     6de:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
     6e2:	89 2b       	or	r24, r25
     6e4:	81 f0       	breq	.+32     	; 0x706 <_Z25initializeTimerSettingIdsv+0x108>
				p2 = strtok_r(0,":",&save_ptr2);
     6e6:	ae 01       	movw	r20, r28
     6e8:	47 53       	subi	r20, 0x37	; 55
     6ea:	5f 4f       	sbci	r21, 0xFF	; 255
     6ec:	66 e3       	ldi	r22, 0x36	; 54
     6ee:	71 e0       	ldi	r23, 0x01	; 1
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
				relayId = atoi(p2);
     6f8:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
     6fc:	88 2e       	mov	r8, r24
     6fe:	99 2e       	mov	r9, r25
				found += 1;
     700:	8f ef       	ldi	r24, 0xFF	; 255
     702:	e8 1a       	sub	r14, r24
     704:	f8 0a       	sbc	r15, r24
			}
			p1 = strtok_r(0,";",&save_ptr1);
     706:	ae 01       	movw	r20, r28
     708:	45 53       	subi	r20, 0x35	; 53
     70a:	5f 4f       	sbci	r21, 0xFF	; 255
     70c:	69 e8       	ldi	r22, 0x89	; 137
     70e:	76 e0       	ldi	r23, 0x06	; 6
     710:	80 e0       	ldi	r24, 0x00	; 0
     712:	90 e0       	ldi	r25, 0x00	; 0
     714:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
	while (eepromReadAttribute(container,sizeof(container),"TS",0) != 0){
		char *save_ptr1,*p1,flag;
		int i,found = 0;

		p1 = strtok_r(container,";",&save_ptr1);
		while (p1!= 0){
     718:	00 97       	sbiw	r24, 0x00	; 0
     71a:	09 f0       	breq	.+2      	; 0x71e <_Z25initializeTimerSettingIdsv+0x120>
     71c:	bf cf       	rjmp	.-130    	; 0x69c <_Z25initializeTimerSettingIdsv+0x9e>
     71e:	88 2d       	mov	r24, r8
     720:	99 2d       	mov	r25, r9
     722:	a6 01       	movw	r20, r12
				found += 1;
			}
			p1 = strtok_r(0,";",&save_ptr1);
		}

		if (found == 2){
     724:	22 e0       	ldi	r18, 0x02	; 2
     726:	e2 16       	cp	r14, r18
     728:	f1 04       	cpc	r15, r1
     72a:	11 f5       	brne	.+68     	; 0x770 <_Z25initializeTimerSettingIdsv+0x172>
     72c:	2d c0       	rjmp	.+90     	; 0x788 <_Z25initializeTimerSettingIdsv+0x18a>
			flag = 1;
			for (i=0;i<MAX_RELAY_COUNT;i++){
				if (__timer_records[moduleId].relays[i] == relayId){
     72e:	21 91       	ld	r18, Z+
     730:	31 91       	ld	r19, Z+
     732:	28 17       	cp	r18, r24
     734:	39 07       	cpc	r19, r25
     736:	09 f4       	brne	.+2      	; 0x73a <_Z25initializeTimerSettingIdsv+0x13c>
					flag = 0;
     738:	a7 2d       	mov	r26, r7
			p1 = strtok_r(0,";",&save_ptr1);
		}

		if (found == 2){
			flag = 1;
			for (i=0;i<MAX_RELAY_COUNT;i++){
     73a:	e6 17       	cp	r30, r22
     73c:	f7 07       	cpc	r31, r23
     73e:	b9 f7       	brne	.-18     	; 0x72e <_Z25initializeTimerSettingIdsv+0x130>
				if (__timer_records[moduleId].relays[i] == relayId){
					flag = 0;
				}
			}
			if (flag == 1){
     740:	a1 30       	cpi	r26, 0x01	; 1
     742:	b1 f4       	brne	.+44     	; 0x770 <_Z25initializeTimerSettingIdsv+0x172>
				__timer_records[moduleId].relays[index++] = relayId;
     744:	44 0f       	add	r20, r20
     746:	55 1f       	adc	r21, r21
     748:	fa 01       	movw	r30, r20
     74a:	ee 0f       	add	r30, r30
     74c:	ff 1f       	adc	r31, r31
     74e:	ee 0f       	add	r30, r30
     750:	ff 1f       	adc	r31, r31
     752:	ee 0f       	add	r30, r30
     754:	ff 1f       	adc	r31, r31
     756:	e4 1b       	sub	r30, r20
     758:	f5 0b       	sbc	r31, r21
     75a:	ea 0d       	add	r30, r10
     75c:	fb 1d       	adc	r31, r11
     75e:	ee 0f       	add	r30, r30
     760:	ff 1f       	adc	r31, r31
     762:	e2 59       	subi	r30, 0x92	; 146
     764:	f8 4f       	sbci	r31, 0xF8	; 248
     766:	91 83       	std	Z+1, r25	; 0x01
     768:	80 83       	st	Z, r24
     76a:	c5 01       	movw	r24, r10
     76c:	01 96       	adiw	r24, 0x01	; 1
     76e:	5c 01       	movw	r10, r24
			__timer_records[index].relays[j] = 254;
		}
	}

	__system_var.eeprom_position = 0;
	while (eepromReadAttribute(container,sizeof(container),"TS",0) != 0){
     770:	20 e0       	ldi	r18, 0x00	; 0
     772:	30 e0       	ldi	r19, 0x00	; 0
     774:	42 e7       	ldi	r20, 0x72	; 114
     776:	51 e0       	ldi	r21, 0x01	; 1
     778:	68 ec       	ldi	r22, 0xC8	; 200
     77a:	70 e0       	ldi	r23, 0x00	; 0
     77c:	ce 01       	movw	r24, r28
     77e:	01 96       	adiw	r24, 0x01	; 1
     780:	3a dd       	rcall	.-1420   	; 0x1f6 <_Z19eepromReadAttributePciS_i>
     782:	81 11       	cpse	r24, r1
     784:	7d cf       	rjmp	.-262    	; 0x680 <_Z25initializeTimerSettingIdsv+0x82>
     786:	0c c0       	rjmp	.+24     	; 0x7a0 <_Z25initializeTimerSettingIdsv+0x1a2>
     788:	6c 9c       	mul	r6, r12
     78a:	b0 01       	movw	r22, r0
     78c:	6d 9c       	mul	r6, r13
     78e:	70 0d       	add	r23, r0
     790:	11 24       	eor	r1, r1
     792:	fb 01       	movw	r30, r22
     794:	e2 59       	subi	r30, 0x92	; 146
     796:	f8 4f       	sbci	r31, 0xF8	; 248
     798:	68 57       	subi	r22, 0x78	; 120
     79a:	78 4f       	sbci	r23, 0xF8	; 248
				found += 1;
			}
			p1 = strtok_r(0,";",&save_ptr1);
		}

		if (found == 2){
     79c:	a5 2d       	mov	r26, r5
     79e:	c7 cf       	rjmp	.-114    	; 0x72e <_Z25initializeTimerSettingIdsv+0x130>
			if (flag == 1){
				__timer_records[moduleId].relays[index++] = relayId;
			}
		}
	}
}
     7a0:	c4 53       	subi	r28, 0x34	; 52
     7a2:	df 4f       	sbci	r29, 0xFF	; 255
     7a4:	0f b6       	in	r0, 0x3f	; 63
     7a6:	f8 94       	cli
     7a8:	de bf       	out	0x3e, r29	; 62
     7aa:	0f be       	out	0x3f, r0	; 63
     7ac:	cd bf       	out	0x3d, r28	; 61
     7ae:	df 91       	pop	r29
     7b0:	cf 91       	pop	r28
     7b2:	1f 91       	pop	r17
     7b4:	0f 91       	pop	r16
     7b6:	ff 90       	pop	r15
     7b8:	ef 90       	pop	r14
     7ba:	df 90       	pop	r13
     7bc:	cf 90       	pop	r12
     7be:	bf 90       	pop	r11
     7c0:	af 90       	pop	r10
     7c2:	9f 90       	pop	r9
     7c4:	8f 90       	pop	r8
     7c6:	7f 90       	pop	r7
     7c8:	6f 90       	pop	r6
     7ca:	5f 90       	pop	r5
     7cc:	08 95       	ret

000007ce <_Z15getTimerSettingii>:

int getTimerSetting(int moduleId, int relayId){
     7ce:	2f 92       	push	r2
     7d0:	3f 92       	push	r3
     7d2:	4f 92       	push	r4
     7d4:	5f 92       	push	r5
     7d6:	6f 92       	push	r6
     7d8:	7f 92       	push	r7
     7da:	8f 92       	push	r8
     7dc:	9f 92       	push	r9
     7de:	af 92       	push	r10
     7e0:	bf 92       	push	r11
     7e2:	cf 92       	push	r12
     7e4:	df 92       	push	r13
     7e6:	ef 92       	push	r14
     7e8:	ff 92       	push	r15
     7ea:	0f 93       	push	r16
     7ec:	1f 93       	push	r17
     7ee:	cf 93       	push	r28
     7f0:	df 93       	push	r29
     7f2:	cd b7       	in	r28, 0x3d	; 61
     7f4:	de b7       	in	r29, 0x3e	; 62
     7f6:	cc 56       	subi	r28, 0x6C	; 108
     7f8:	d1 09       	sbc	r29, r1
     7fa:	0f b6       	in	r0, 0x3f	; 63
     7fc:	f8 94       	cli
     7fe:	de bf       	out	0x3e, r29	; 62
     800:	0f be       	out	0x3f, r0	; 63
     802:	cd bf       	out	0x3d, r28	; 61
     804:	5c 01       	movw	r10, r24
     806:	4b 01       	movw	r8, r22
     808:	0f 2e       	mov	r0, r31
     80a:	f4 ee       	ldi	r31, 0xE4	; 228
     80c:	6f 2e       	mov	r6, r31
     80e:	f7 e0       	ldi	r31, 0x07	; 7
     810:	7f 2e       	mov	r7, r31
     812:	f0 2d       	mov	r31, r0
		char *save_ptr1;
		unsigned int i;
		
		p1 = strtok_r(container,";",&save_ptr1);
		for (i=0;i<sizeof(__timer_setting.start_week);i++){
			__timer_setting.start_week[i] = 254;
     814:	0e ef       	ldi	r16, 0xFE	; 254
     816:	10 e0       	ldi	r17, 0x00	; 0
     818:	0f 2e       	mov	r0, r31
     81a:	f6 ef       	ldi	r31, 0xF6	; 246
     81c:	4f 2e       	mov	r4, r31
     81e:	f7 e0       	ldi	r31, 0x07	; 7
     820:	5f 2e       	mov	r5, r31
     822:	f0 2d       	mov	r31, r0
				} else if (strstr(p2,"EW")){
				char *p3, *save_ptr3; int i=0;
				p2 = strtok_r(0,":",&save_ptr2);
				p3 = strtok_r(p2,",",&save_ptr3);

				while (p3 != 0){
     824:	ac 96       	adiw	r28, 0x2c	; 44
     826:	4f ae       	std	Y+63, r4	; 0x3f
     828:	ac 97       	sbiw	r28, 0x2c	; 44
     82a:	ad 96       	adiw	r28, 0x2d	; 45
     82c:	5f ae       	std	Y+63, r5	; 0x3f
     82e:	ad 97       	sbiw	r28, 0x2d	; 45

				} else if (strstr(p2,"SW")){
				char *p3, *save_ptr3; int i=0;
				p2 = strtok_r(0,":",&save_ptr2);
				p3 = strtok_r(p2,",",&save_ptr3);
				while (p3 != 0){
     830:	36 2c       	mov	r3, r6
     832:	27 2c       	mov	r2, r7
}

int getTimerSetting(int moduleId, int relayId){
	char container[100]; char *p1;

	while (eepromReadAttribute(container,sizeof(container),"TS",0) != 0){
     834:	12 c1       	rjmp	.+548    	; 0xa5a <_Z15getTimerSettingii+0x28c>

		char *save_ptr1;
		unsigned int i;
		
		p1 = strtok_r(container,";",&save_ptr1);
     836:	ae 01       	movw	r20, r28
     838:	47 59       	subi	r20, 0x97	; 151
     83a:	5f 4f       	sbci	r21, 0xFF	; 255
     83c:	69 e8       	ldi	r22, 0x89	; 137
     83e:	76 e0       	ldi	r23, 0x06	; 6
     840:	ce 01       	movw	r24, r28
     842:	01 96       	adiw	r24, 0x01	; 1
     844:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
     848:	24 e0       	ldi	r18, 0x04	; 4
     84a:	38 e0       	ldi	r19, 0x08	; 8
     84c:	f3 01       	movw	r30, r6
		for (i=0;i<sizeof(__timer_setting.start_week);i++){
			__timer_setting.start_week[i] = 254;
     84e:	01 93       	st	Z+, r16
     850:	11 93       	st	Z+, r17

		char *save_ptr1;
		unsigned int i;
		
		p1 = strtok_r(container,";",&save_ptr1);
		for (i=0;i<sizeof(__timer_setting.start_week);i++){
     852:	e2 17       	cp	r30, r18
     854:	f3 07       	cpc	r31, r19
     856:	d9 f7       	brne	.-10     	; 0x84e <_Z15getTimerSettingii+0x80>
     858:	26 e1       	ldi	r18, 0x16	; 22
     85a:	38 e0       	ldi	r19, 0x08	; 8
     85c:	f2 01       	movw	r30, r4
			__timer_setting.start_week[i] = 254;
		}
		for (i=0;i<sizeof(__timer_setting.end_week);i++){
			__timer_setting.end_week[i] = 254;
     85e:	01 93       	st	Z+, r16
     860:	11 93       	st	Z+, r17
		
		p1 = strtok_r(container,";",&save_ptr1);
		for (i=0;i<sizeof(__timer_setting.start_week);i++){
			__timer_setting.start_week[i] = 254;
		}
		for (i=0;i<sizeof(__timer_setting.end_week);i++){
     862:	e2 17       	cp	r30, r18
     864:	f3 07       	cpc	r31, r19
     866:	d9 f7       	brne	.-10     	; 0x85e <_Z15getTimerSettingii+0x90>
			__timer_setting.end_week[i] = 254;
		}

		while (p1!= 0){
     868:	00 97       	sbiw	r24, 0x00	; 0
     86a:	09 f4       	brne	.+2      	; 0x86e <_Z15getTimerSettingii+0xa0>
     86c:	e5 c0       	rjmp	.+458    	; 0xa38 <_Z15getTimerSettingii+0x26a>
			char *p2,*save_ptr2;

			p2 = strtok_r(p1,":",&save_ptr2);
			if (strstr(p2,"MI")){
				p2 = strtok_r(0,":",&save_ptr2);
				__timer_setting.module_id = atoi(p2);
     86e:	0f 2e       	mov	r0, r31
     870:	fc ed       	ldi	r31, 0xDC	; 220
     872:	cf 2e       	mov	r12, r31
     874:	f7 e0       	ldi	r31, 0x07	; 7
     876:	df 2e       	mov	r13, r31
     878:	f0 2d       	mov	r31, r0
		}

		while (p1!= 0){
			char *p2,*save_ptr2;

			p2 = strtok_r(p1,":",&save_ptr2);
     87a:	ae 01       	movw	r20, r28
     87c:	49 59       	subi	r20, 0x99	; 153
     87e:	5f 4f       	sbci	r21, 0xFF	; 255
     880:	66 e3       	ldi	r22, 0x36	; 54
     882:	71 e0       	ldi	r23, 0x01	; 1
     884:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
     888:	7c 01       	movw	r14, r24
			if (strstr(p2,"MI")){
     88a:	6b e3       	ldi	r22, 0x3B	; 59
     88c:	71 e0       	ldi	r23, 0x01	; 1
     88e:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
     892:	89 2b       	or	r24, r25
     894:	79 f0       	breq	.+30     	; 0x8b4 <_Z15getTimerSettingii+0xe6>
				p2 = strtok_r(0,":",&save_ptr2);
     896:	ae 01       	movw	r20, r28
     898:	49 59       	subi	r20, 0x99	; 153
     89a:	5f 4f       	sbci	r21, 0xFF	; 255
     89c:	66 e3       	ldi	r22, 0x36	; 54
     89e:	71 e0       	ldi	r23, 0x01	; 1
     8a0:	80 e0       	ldi	r24, 0x00	; 0
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
				__timer_setting.module_id = atoi(p2);
     8a8:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
     8ac:	f6 01       	movw	r30, r12
     8ae:	91 83       	std	Z+1, r25	; 0x01
     8b0:	80 83       	st	Z, r24
     8b2:	b6 c0       	rjmp	.+364    	; 0xa20 <_Z15getTimerSettingii+0x252>

				} else if (strstr(p2,"RI")){
     8b4:	6e e3       	ldi	r22, 0x3E	; 62
     8b6:	71 e0       	ldi	r23, 0x01	; 1
     8b8:	c7 01       	movw	r24, r14
     8ba:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
     8be:	89 2b       	or	r24, r25
     8c0:	79 f0       	breq	.+30     	; 0x8e0 <_Z15getTimerSettingii+0x112>
				p2 = strtok_r(0,":",&save_ptr2);
     8c2:	ae 01       	movw	r20, r28
     8c4:	49 59       	subi	r20, 0x99	; 153
     8c6:	5f 4f       	sbci	r21, 0xFF	; 255
     8c8:	66 e3       	ldi	r22, 0x36	; 54
     8ca:	71 e0       	ldi	r23, 0x01	; 1
     8cc:	80 e0       	ldi	r24, 0x00	; 0
     8ce:	90 e0       	ldi	r25, 0x00	; 0
     8d0:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
				__timer_setting.relay_id = atoi(p2);
     8d4:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
     8d8:	f6 01       	movw	r30, r12
     8da:	93 83       	std	Z+3, r25	; 0x03
     8dc:	82 83       	std	Z+2, r24	; 0x02
     8de:	a0 c0       	rjmp	.+320    	; 0xa20 <_Z15getTimerSettingii+0x252>

				} else if (strstr(p2,"TI")){
     8e0:	65 e7       	ldi	r22, 0x75	; 117
     8e2:	71 e0       	ldi	r23, 0x01	; 1
     8e4:	c7 01       	movw	r24, r14
     8e6:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
     8ea:	89 2b       	or	r24, r25
     8ec:	79 f0       	breq	.+30     	; 0x90c <_Z15getTimerSettingii+0x13e>
				p2 = strtok_r(0,":",&save_ptr2);
     8ee:	ae 01       	movw	r20, r28
     8f0:	49 59       	subi	r20, 0x99	; 153
     8f2:	5f 4f       	sbci	r21, 0xFF	; 255
     8f4:	66 e3       	ldi	r22, 0x36	; 54
     8f6:	71 e0       	ldi	r23, 0x01	; 1
     8f8:	80 e0       	ldi	r24, 0x00	; 0
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
				__timer_setting.timer_id = atoi(p2);
     900:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
     904:	f6 01       	movw	r30, r12
     906:	95 83       	std	Z+5, r25	; 0x05
     908:	84 83       	std	Z+4, r24	; 0x04
     90a:	8a c0       	rjmp	.+276    	; 0xa20 <_Z15getTimerSettingii+0x252>

				} else if (strstr(p2,"ST")){
     90c:	68 e7       	ldi	r22, 0x78	; 120
     90e:	71 e0       	ldi	r23, 0x01	; 1
     910:	c7 01       	movw	r24, r14
     912:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
     916:	89 2b       	or	r24, r25
     918:	79 f0       	breq	.+30     	; 0x938 <_Z15getTimerSettingii+0x16a>
				p2 = strtok_r(0,":",&save_ptr2);
     91a:	ae 01       	movw	r20, r28
     91c:	49 59       	subi	r20, 0x99	; 153
     91e:	5f 4f       	sbci	r21, 0xFF	; 255
     920:	66 e3       	ldi	r22, 0x36	; 54
     922:	71 e0       	ldi	r23, 0x01	; 1
     924:	80 e0       	ldi	r24, 0x00	; 0
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
				__timer_setting.start_timer = atoi(p2);
     92c:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
     930:	f6 01       	movw	r30, r12
     932:	97 83       	std	Z+7, r25	; 0x07
     934:	86 83       	std	Z+6, r24	; 0x06
     936:	74 c0       	rjmp	.+232    	; 0xa20 <_Z15getTimerSettingii+0x252>

				} else if (strstr(p2,"SW")){
     938:	6b e7       	ldi	r22, 0x7B	; 123
     93a:	71 e0       	ldi	r23, 0x01	; 1
     93c:	c7 01       	movw	r24, r14
     93e:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
     942:	89 2b       	or	r24, r25
     944:	39 f1       	breq	.+78     	; 0x994 <_Z15getTimerSettingii+0x1c6>
				char *p3, *save_ptr3; int i=0;
				p2 = strtok_r(0,":",&save_ptr2);
     946:	ae 01       	movw	r20, r28
     948:	49 59       	subi	r20, 0x99	; 153
     94a:	5f 4f       	sbci	r21, 0xFF	; 255
     94c:	66 e3       	ldi	r22, 0x36	; 54
     94e:	71 e0       	ldi	r23, 0x01	; 1
     950:	80 e0       	ldi	r24, 0x00	; 0
     952:	90 e0       	ldi	r25, 0x00	; 0
     954:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
				p3 = strtok_r(p2,",",&save_ptr3);
     958:	ae 01       	movw	r20, r28
     95a:	4b 59       	subi	r20, 0x9B	; 155
     95c:	5f 4f       	sbci	r21, 0xFF	; 255
     95e:	66 e3       	ldi	r22, 0x36	; 54
     960:	73 e0       	ldi	r23, 0x03	; 3
     962:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
				while (p3 != 0){
     966:	00 97       	sbiw	r24, 0x00	; 0
     968:	09 f4       	brne	.+2      	; 0x96c <_Z15getTimerSettingii+0x19e>
     96a:	5a c0       	rjmp	.+180    	; 0xa20 <_Z15getTimerSettingii+0x252>
     96c:	e3 2c       	mov	r14, r3
     96e:	f2 2c       	mov	r15, r2
					__timer_setting.start_week[i++] = atoi(p3);
     970:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
     974:	f7 01       	movw	r30, r14
     976:	81 93       	st	Z+, r24
     978:	91 93       	st	Z+, r25
     97a:	7f 01       	movw	r14, r30
					p3 = strtok_r(0,",",&save_ptr3);
     97c:	ae 01       	movw	r20, r28
     97e:	4b 59       	subi	r20, 0x9B	; 155
     980:	5f 4f       	sbci	r21, 0xFF	; 255
     982:	66 e3       	ldi	r22, 0x36	; 54
     984:	73 e0       	ldi	r23, 0x03	; 3
     986:	80 e0       	ldi	r24, 0x00	; 0
     988:	90 e0       	ldi	r25, 0x00	; 0
     98a:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>

				} else if (strstr(p2,"SW")){
				char *p3, *save_ptr3; int i=0;
				p2 = strtok_r(0,":",&save_ptr2);
				p3 = strtok_r(p2,",",&save_ptr3);
				while (p3 != 0){
     98e:	00 97       	sbiw	r24, 0x00	; 0
     990:	79 f7       	brne	.-34     	; 0x970 <_Z15getTimerSettingii+0x1a2>
     992:	46 c0       	rjmp	.+140    	; 0xa20 <_Z15getTimerSettingii+0x252>
					__timer_setting.start_week[i++] = atoi(p3);
					p3 = strtok_r(0,",",&save_ptr3);
				}
				} else if (strstr(p2,"ET")){
     994:	6e e7       	ldi	r22, 0x7E	; 126
     996:	71 e0       	ldi	r23, 0x01	; 1
     998:	c7 01       	movw	r24, r14
     99a:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
     99e:	89 2b       	or	r24, r25
     9a0:	79 f0       	breq	.+30     	; 0x9c0 <_Z15getTimerSettingii+0x1f2>
				p2 = strtok_r(0,":",&save_ptr2);
     9a2:	ae 01       	movw	r20, r28
     9a4:	49 59       	subi	r20, 0x99	; 153
     9a6:	5f 4f       	sbci	r21, 0xFF	; 255
     9a8:	66 e3       	ldi	r22, 0x36	; 54
     9aa:	71 e0       	ldi	r23, 0x01	; 1
     9ac:	80 e0       	ldi	r24, 0x00	; 0
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
				__timer_setting.end_timer = atoi(p2);
     9b4:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
     9b8:	f6 01       	movw	r30, r12
     9ba:	91 8f       	std	Z+25, r25	; 0x19
     9bc:	80 8f       	std	Z+24, r24	; 0x18
     9be:	30 c0       	rjmp	.+96     	; 0xa20 <_Z15getTimerSettingii+0x252>

				} else if (strstr(p2,"EW")){
     9c0:	61 e8       	ldi	r22, 0x81	; 129
     9c2:	71 e0       	ldi	r23, 0x01	; 1
     9c4:	c7 01       	movw	r24, r14
     9c6:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
     9ca:	89 2b       	or	r24, r25
     9cc:	49 f1       	breq	.+82     	; 0xa20 <_Z15getTimerSettingii+0x252>
				char *p3, *save_ptr3; int i=0;
				p2 = strtok_r(0,":",&save_ptr2);
     9ce:	ae 01       	movw	r20, r28
     9d0:	49 59       	subi	r20, 0x99	; 153
     9d2:	5f 4f       	sbci	r21, 0xFF	; 255
     9d4:	66 e3       	ldi	r22, 0x36	; 54
     9d6:	71 e0       	ldi	r23, 0x01	; 1
     9d8:	80 e0       	ldi	r24, 0x00	; 0
     9da:	90 e0       	ldi	r25, 0x00	; 0
     9dc:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
				p3 = strtok_r(p2,",",&save_ptr3);
     9e0:	ae 01       	movw	r20, r28
     9e2:	4b 59       	subi	r20, 0x9B	; 155
     9e4:	5f 4f       	sbci	r21, 0xFF	; 255
     9e6:	66 e3       	ldi	r22, 0x36	; 54
     9e8:	73 e0       	ldi	r23, 0x03	; 3
     9ea:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>

				while (p3 != 0){
     9ee:	00 97       	sbiw	r24, 0x00	; 0
     9f0:	b9 f0       	breq	.+46     	; 0xa20 <_Z15getTimerSettingii+0x252>
     9f2:	ac 96       	adiw	r28, 0x2c	; 44
     9f4:	ef ac       	ldd	r14, Y+63	; 0x3f
     9f6:	ac 97       	sbiw	r28, 0x2c	; 44
     9f8:	ad 96       	adiw	r28, 0x2d	; 45
     9fa:	ff ac       	ldd	r15, Y+63	; 0x3f
     9fc:	ad 97       	sbiw	r28, 0x2d	; 45
					__timer_setting.end_week[i++] = atoi(p3);
     9fe:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
     a02:	f7 01       	movw	r30, r14
     a04:	81 93       	st	Z+, r24
     a06:	91 93       	st	Z+, r25
     a08:	7f 01       	movw	r14, r30
					p3 = strtok_r(0,",",&save_ptr3);
     a0a:	ae 01       	movw	r20, r28
     a0c:	4b 59       	subi	r20, 0x9B	; 155
     a0e:	5f 4f       	sbci	r21, 0xFF	; 255
     a10:	66 e3       	ldi	r22, 0x36	; 54
     a12:	73 e0       	ldi	r23, 0x03	; 3
     a14:	80 e0       	ldi	r24, 0x00	; 0
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
				} else if (strstr(p2,"EW")){
				char *p3, *save_ptr3; int i=0;
				p2 = strtok_r(0,":",&save_ptr2);
				p3 = strtok_r(p2,",",&save_ptr3);

				while (p3 != 0){
     a1c:	00 97       	sbiw	r24, 0x00	; 0
     a1e:	79 f7       	brne	.-34     	; 0x9fe <_Z15getTimerSettingii+0x230>
					__timer_setting.end_week[i++] = atoi(p3);
					p3 = strtok_r(0,",",&save_ptr3);
				}
			}
			p1 = strtok_r(0,";",&save_ptr1);
     a20:	ae 01       	movw	r20, r28
     a22:	47 59       	subi	r20, 0x97	; 151
     a24:	5f 4f       	sbci	r21, 0xFF	; 255
     a26:	69 e8       	ldi	r22, 0x89	; 137
     a28:	76 e0       	ldi	r23, 0x06	; 6
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	90 e0       	ldi	r25, 0x00	; 0
     a2e:	0e 94 cf 16 	call	0x2d9e	; 0x2d9e <strtok_r>
		}
		for (i=0;i<sizeof(__timer_setting.end_week);i++){
			__timer_setting.end_week[i] = 254;
		}

		while (p1!= 0){
     a32:	00 97       	sbiw	r24, 0x00	; 0
     a34:	09 f0       	breq	.+2      	; 0xa38 <_Z15getTimerSettingii+0x26a>
     a36:	21 cf       	rjmp	.-446    	; 0x87a <_Z15getTimerSettingii+0xac>
				}
			}
			p1 = strtok_r(0,";",&save_ptr1);
		}	

		if (__timer_setting.module_id == moduleId && __timer_setting.relay_id == relayId){
     a38:	80 91 dc 07 	lds	r24, 0x07DC	; 0x8007dc <__timer_setting>
     a3c:	90 91 dd 07 	lds	r25, 0x07DD	; 0x8007dd <__timer_setting+0x1>
     a40:	8a 15       	cp	r24, r10
     a42:	9b 05       	cpc	r25, r11
     a44:	51 f4       	brne	.+20     	; 0xa5a <_Z15getTimerSettingii+0x28c>
     a46:	80 91 de 07 	lds	r24, 0x07DE	; 0x8007de <__timer_setting+0x2>
     a4a:	90 91 df 07 	lds	r25, 0x07DF	; 0x8007df <__timer_setting+0x3>
     a4e:	88 15       	cp	r24, r8
     a50:	99 05       	cpc	r25, r9
     a52:	19 f4       	brne	.+6      	; 0xa5a <_Z15getTimerSettingii+0x28c>
			return 1;
     a54:	81 e0       	ldi	r24, 0x01	; 1
     a56:	90 e0       	ldi	r25, 0x00	; 0
     a58:	0d c0       	rjmp	.+26     	; 0xa74 <_Z15getTimerSettingii+0x2a6>
}

int getTimerSetting(int moduleId, int relayId){
	char container[100]; char *p1;

	while (eepromReadAttribute(container,sizeof(container),"TS",0) != 0){
     a5a:	20 e0       	ldi	r18, 0x00	; 0
     a5c:	30 e0       	ldi	r19, 0x00	; 0
     a5e:	42 e7       	ldi	r20, 0x72	; 114
     a60:	51 e0       	ldi	r21, 0x01	; 1
     a62:	64 e6       	ldi	r22, 0x64	; 100
     a64:	70 e0       	ldi	r23, 0x00	; 0
     a66:	ce 01       	movw	r24, r28
     a68:	01 96       	adiw	r24, 0x01	; 1
     a6a:	c5 db       	rcall	.-2166   	; 0x1f6 <_Z19eepromReadAttributePciS_i>
     a6c:	81 11       	cpse	r24, r1
     a6e:	e3 ce       	rjmp	.-570    	; 0x836 <_Z15getTimerSettingii+0x68>
		if (__timer_setting.module_id == moduleId && __timer_setting.relay_id == relayId){
			return 1;
		}
	}

	return 0;
     a70:	80 e0       	ldi	r24, 0x00	; 0
     a72:	90 e0       	ldi	r25, 0x00	; 0
}
     a74:	c4 59       	subi	r28, 0x94	; 148
     a76:	df 4f       	sbci	r29, 0xFF	; 255
     a78:	0f b6       	in	r0, 0x3f	; 63
     a7a:	f8 94       	cli
     a7c:	de bf       	out	0x3e, r29	; 62
     a7e:	0f be       	out	0x3f, r0	; 63
     a80:	cd bf       	out	0x3d, r28	; 61
     a82:	df 91       	pop	r29
     a84:	cf 91       	pop	r28
     a86:	1f 91       	pop	r17
     a88:	0f 91       	pop	r16
     a8a:	ff 90       	pop	r15
     a8c:	ef 90       	pop	r14
     a8e:	df 90       	pop	r13
     a90:	cf 90       	pop	r12
     a92:	bf 90       	pop	r11
     a94:	af 90       	pop	r10
     a96:	9f 90       	pop	r9
     a98:	8f 90       	pop	r8
     a9a:	7f 90       	pop	r7
     a9c:	6f 90       	pop	r6
     a9e:	5f 90       	pop	r5
     aa0:	4f 90       	pop	r4
     aa2:	3f 90       	pop	r3
     aa4:	2f 90       	pop	r2
     aa6:	08 95       	ret

00000aa8 <_Z20isCurrentTimerActivev>:

int isCurrentTimerActive(){
     aa8:	ef 92       	push	r14
     aaa:	ff 92       	push	r15
     aac:	0f 93       	push	r16
     aae:	1f 93       	push	r17
     ab0:	cf 93       	push	r28
     ab2:	df 93       	push	r29
	int currentMin = __system_time._hour * 60 + __system_time._min + (__system_time._day_of_week * 24 * 60);
     ab4:	ea e4       	ldi	r30, 0x4A	; 74
     ab6:	f8 e0       	ldi	r31, 0x08	; 8
     ab8:	80 85       	ldd	r24, Z+8	; 0x08
     aba:	91 85       	ldd	r25, Z+9	; 0x09
     abc:	2c e3       	ldi	r18, 0x3C	; 60
     abe:	28 9f       	mul	r18, r24
     ac0:	b0 01       	movw	r22, r0
     ac2:	29 9f       	mul	r18, r25
     ac4:	70 0d       	add	r23, r0
     ac6:	11 24       	eor	r1, r1
     ac8:	82 85       	ldd	r24, Z+10	; 0x0a
     aca:	93 85       	ldd	r25, Z+11	; 0x0b
     acc:	68 0f       	add	r22, r24
     ace:	79 1f       	adc	r23, r25
     ad0:	46 81       	ldd	r20, Z+6	; 0x06
     ad2:	57 81       	ldd	r21, Z+7	; 0x07
     ad4:	20 ea       	ldi	r18, 0xA0	; 160
     ad6:	35 e0       	ldi	r19, 0x05	; 5
     ad8:	42 9f       	mul	r20, r18
     ada:	c0 01       	movw	r24, r0
     adc:	43 9f       	mul	r20, r19
     ade:	90 0d       	add	r25, r0
     ae0:	52 9f       	mul	r21, r18
     ae2:	90 0d       	add	r25, r0
     ae4:	11 24       	eor	r1, r1
     ae6:	68 0f       	add	r22, r24
     ae8:	79 1f       	adc	r23, r25
	USART0_SendString("\n");
	USART0_SendString("\n");*/
	
	for (i=0;i<7;i++){
		if (__timer_setting.start_week[i] != 254 && __timer_setting.end_week[i] != 254){
			int startTimer = (__timer_setting.start_week[i] * 24 * 60) + __timer_setting.start_timer;
     aea:	ec ed       	ldi	r30, 0xDC	; 220
     aec:	f7 e0       	ldi	r31, 0x07	; 7
     aee:	06 81       	ldd	r16, Z+6	; 0x06
     af0:	17 81       	ldd	r17, Z+7	; 0x07
			int endTimer = (__timer_setting.end_week[i] * 24 * 60) + __timer_setting.end_timer;
     af2:	e0 8c       	ldd	r14, Z+24	; 0x18
     af4:	f1 8c       	ldd	r15, Z+25	; 0x19
     af6:	e4 ee       	ldi	r30, 0xE4	; 228
     af8:	f7 e0       	ldi	r31, 0x07	; 7
     afa:	a2 ef       	ldi	r26, 0xF2	; 242
     afc:	b7 e0       	ldi	r27, 0x07	; 7
	USART0_SendString("\n");
	USART0_SendString("\n");*/
	
	for (i=0;i<7;i++){
		if (__timer_setting.start_week[i] != 254 && __timer_setting.end_week[i] != 254){
			int startTimer = (__timer_setting.start_week[i] * 24 * 60) + __timer_setting.start_timer;
     afe:	c0 ea       	ldi	r28, 0xA0	; 160
     b00:	d5 e0       	ldi	r29, 0x05	; 5
	USART0_SendString(conv);
	USART0_SendString("\n");
	USART0_SendString("\n");*/
	
	for (i=0;i<7;i++){
		if (__timer_setting.start_week[i] != 254 && __timer_setting.end_week[i] != 254){
     b02:	81 91       	ld	r24, Z+
     b04:	91 91       	ld	r25, Z+
     b06:	8e 3f       	cpi	r24, 0xFE	; 254
     b08:	91 05       	cpc	r25, r1
     b0a:	19 f1       	breq	.+70     	; 0xb52 <_Z20isCurrentTimerActivev+0xaa>
     b0c:	40 89       	ldd	r20, Z+16	; 0x10
     b0e:	51 89       	ldd	r21, Z+17	; 0x11
     b10:	4e 3f       	cpi	r20, 0xFE	; 254
     b12:	51 05       	cpc	r21, r1
     b14:	f1 f0       	breq	.+60     	; 0xb52 <_Z20isCurrentTimerActivev+0xaa>
			int startTimer = (__timer_setting.start_week[i] * 24 * 60) + __timer_setting.start_timer;
     b16:	8c 9f       	mul	r24, r28
     b18:	90 01       	movw	r18, r0
     b1a:	8d 9f       	mul	r24, r29
     b1c:	30 0d       	add	r19, r0
     b1e:	9c 9f       	mul	r25, r28
     b20:	30 0d       	add	r19, r0
     b22:	11 24       	eor	r1, r1
     b24:	c9 01       	movw	r24, r18
     b26:	80 0f       	add	r24, r16
     b28:	91 1f       	adc	r25, r17
			int endTimer = (__timer_setting.end_week[i] * 24 * 60) + __timer_setting.end_timer;

			if (currentMin >= startTimer && currentMin < endTimer){
     b2a:	68 17       	cp	r22, r24
     b2c:	79 07       	cpc	r23, r25
     b2e:	8c f0       	brlt	.+34     	; 0xb52 <_Z20isCurrentTimerActivev+0xaa>
	USART0_SendString("\n");*/
	
	for (i=0;i<7;i++){
		if (__timer_setting.start_week[i] != 254 && __timer_setting.end_week[i] != 254){
			int startTimer = (__timer_setting.start_week[i] * 24 * 60) + __timer_setting.start_timer;
			int endTimer = (__timer_setting.end_week[i] * 24 * 60) + __timer_setting.end_timer;
     b30:	4c 9f       	mul	r20, r28
     b32:	c0 01       	movw	r24, r0
     b34:	4d 9f       	mul	r20, r29
     b36:	90 0d       	add	r25, r0
     b38:	5c 9f       	mul	r21, r28
     b3a:	90 0d       	add	r25, r0
     b3c:	11 24       	eor	r1, r1
     b3e:	8e 0d       	add	r24, r14
     b40:	9f 1d       	adc	r25, r15

			if (currentMin >= startTimer && currentMin < endTimer){
     b42:	68 17       	cp	r22, r24
     b44:	79 07       	cpc	r23, r25
     b46:	2c f4       	brge	.+10     	; 0xb52 <_Z20isCurrentTimerActivev+0xaa>
				return TRUE;
     b48:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <TRUE>
     b4c:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <TRUE+0x1>
     b50:	07 c0       	rjmp	.+14     	; 0xb60 <_Z20isCurrentTimerActivev+0xb8>
	itoa(__timer_setting.end_timer,conv,10);
	USART0_SendString(conv);
	USART0_SendString("\n");
	USART0_SendString("\n");*/
	
	for (i=0;i<7;i++){
     b52:	ea 17       	cp	r30, r26
     b54:	fb 07       	cpc	r31, r27
     b56:	a9 f6       	brne	.-86     	; 0xb02 <_Z20isCurrentTimerActivev+0x5a>
			if (currentMin >= startTimer && currentMin < endTimer){
				return TRUE;
			}
		}
	}
	return FALSE;
     b58:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <FALSE>
     b5c:	90 91 6e 03 	lds	r25, 0x036E	; 0x80036e <FALSE+0x1>
}
     b60:	df 91       	pop	r29
     b62:	cf 91       	pop	r28
     b64:	1f 91       	pop	r17
     b66:	0f 91       	pop	r16
     b68:	ff 90       	pop	r15
     b6a:	ef 90       	pop	r14
     b6c:	08 95       	ret

00000b6e <__vector_28>:
		return FALSE;
	}

	//UART2_Write_Text("AT+CIFSR\r");
	//readUntil("OK",10,GPRS);
}
     b6e:	1f 92       	push	r1
     b70:	0f 92       	push	r0
     b72:	0f b6       	in	r0, 0x3f	; 63
     b74:	0f 92       	push	r0
     b76:	11 24       	eor	r1, r1
     b78:	0b b6       	in	r0, 0x3b	; 59
     b7a:	0f 92       	push	r0
     b7c:	2f 93       	push	r18
     b7e:	3f 93       	push	r19
     b80:	4f 93       	push	r20
     b82:	8f 93       	push	r24
     b84:	9f 93       	push	r25
     b86:	ef 93       	push	r30
     b88:	ff 93       	push	r31
     b8a:	40 91 ce 00 	lds	r20, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     b8e:	80 91 ba 0a 	lds	r24, 0x0ABA	; 0x800aba <__network_data+0x250>
     b92:	90 91 bb 0a 	lds	r25, 0x0ABB	; 0x800abb <__network_data+0x251>
     b96:	85 3c       	cpi	r24, 0xC5	; 197
     b98:	91 05       	cpc	r25, r1
     b9a:	20 f0       	brcs	.+8      	; 0xba4 <__vector_28+0x36>
     b9c:	10 92 bb 0a 	sts	0x0ABB, r1	; 0x800abb <__network_data+0x251>
     ba0:	10 92 ba 0a 	sts	0x0ABA, r1	; 0x800aba <__network_data+0x250>
     ba4:	ea eb       	ldi	r30, 0xBA	; 186
     ba6:	fa e0       	ldi	r31, 0x0A	; 10
     ba8:	80 81       	ld	r24, Z
     baa:	91 81       	ldd	r25, Z+1	; 0x01
     bac:	9c 01       	movw	r18, r24
     bae:	2f 5f       	subi	r18, 0xFF	; 255
     bb0:	3f 4f       	sbci	r19, 0xFF	; 255
     bb2:	31 83       	std	Z+1, r19	; 0x01
     bb4:	20 83       	st	Z, r18
     bb6:	fc 01       	movw	r30, r24
     bb8:	e2 51       	subi	r30, 0x12	; 18
     bba:	f6 4f       	sbci	r31, 0xF6	; 246
     bbc:	40 83       	st	Z, r20
     bbe:	4d 30       	cpi	r20, 0x0D	; 13
     bc0:	21 f0       	breq	.+8      	; 0xbca <__vector_28+0x5c>
     bc2:	4a 30       	cpi	r20, 0x0A	; 10
     bc4:	11 f0       	breq	.+4      	; 0xbca <__vector_28+0x5c>
     bc6:	41 11       	cpse	r20, r1
     bc8:	07 c0       	rjmp	.+14     	; 0xbd8 <__vector_28+0x6a>
     bca:	81 e0       	ldi	r24, 0x01	; 1
     bcc:	80 93 b7 0a 	sts	0x0AB7, r24	; 0x800ab7 <__network_data+0x24d>
     bd0:	f9 01       	movw	r30, r18
     bd2:	ee 53       	subi	r30, 0x3E	; 62
     bd4:	f7 4f       	sbci	r31, 0xF7	; 247
     bd6:	10 82       	st	Z, r1
     bd8:	ff 91       	pop	r31
     bda:	ef 91       	pop	r30
     bdc:	9f 91       	pop	r25
     bde:	8f 91       	pop	r24
     be0:	4f 91       	pop	r20
     be2:	3f 91       	pop	r19
     be4:	2f 91       	pop	r18
     be6:	0f 90       	pop	r0
     be8:	0b be       	out	0x3b, r0	; 59
     bea:	0f 90       	pop	r0
     bec:	0f be       	out	0x3f, r0	; 63
     bee:	0f 90       	pop	r0
     bf0:	1f 90       	pop	r1
     bf2:	18 95       	reti

00000bf4 <__vector_20>:
     bf4:	1f 92       	push	r1
     bf6:	0f 92       	push	r0
     bf8:	0f b6       	in	r0, 0x3f	; 63
     bfa:	0f 92       	push	r0
     bfc:	11 24       	eor	r1, r1
     bfe:	0b b6       	in	r0, 0x3b	; 59
     c00:	0f 92       	push	r0
     c02:	2f 93       	push	r18
     c04:	3f 93       	push	r19
     c06:	4f 93       	push	r20
     c08:	8f 93       	push	r24
     c0a:	9f 93       	push	r25
     c0c:	ef 93       	push	r30
     c0e:	ff 93       	push	r31
     c10:	40 91 c6 00 	lds	r20, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     c14:	80 91 b8 0a 	lds	r24, 0x0AB8	; 0x800ab8 <__network_data+0x24e>
     c18:	90 91 b9 0a 	lds	r25, 0x0AB9	; 0x800ab9 <__network_data+0x24f>
     c1c:	89 32       	cpi	r24, 0x29	; 41
     c1e:	91 40       	sbci	r25, 0x01	; 1
     c20:	20 f0       	brcs	.+8      	; 0xc2a <__vector_20+0x36>
     c22:	10 92 b9 0a 	sts	0x0AB9, r1	; 0x800ab9 <__network_data+0x24f>
     c26:	10 92 b8 0a 	sts	0x0AB8, r1	; 0x800ab8 <__network_data+0x24e>
     c2a:	e8 eb       	ldi	r30, 0xB8	; 184
     c2c:	fa e0       	ldi	r31, 0x0A	; 10
     c2e:	80 81       	ld	r24, Z
     c30:	91 81       	ldd	r25, Z+1	; 0x01
     c32:	9c 01       	movw	r18, r24
     c34:	2f 5f       	subi	r18, 0xFF	; 255
     c36:	3f 4f       	sbci	r19, 0xFF	; 255
     c38:	31 83       	std	Z+1, r19	; 0x01
     c3a:	20 83       	st	Z, r18
     c3c:	fc 01       	movw	r30, r24
     c3e:	ee 53       	subi	r30, 0x3E	; 62
     c40:	f7 4f       	sbci	r31, 0xF7	; 247
     c42:	40 83       	st	Z, r20
     c44:	4d 30       	cpi	r20, 0x0D	; 13
     c46:	21 f0       	breq	.+8      	; 0xc50 <__vector_20+0x5c>
     c48:	4a 30       	cpi	r20, 0x0A	; 10
     c4a:	11 f0       	breq	.+4      	; 0xc50 <__vector_20+0x5c>
     c4c:	41 11       	cpse	r20, r1
     c4e:	07 c0       	rjmp	.+14     	; 0xc5e <__vector_20+0x6a>
     c50:	81 e0       	ldi	r24, 0x01	; 1
     c52:	80 93 b6 0a 	sts	0x0AB6, r24	; 0x800ab6 <__network_data+0x24c>
     c56:	f9 01       	movw	r30, r18
     c58:	ee 53       	subi	r30, 0x3E	; 62
     c5a:	f7 4f       	sbci	r31, 0xF7	; 247
     c5c:	10 82       	st	Z, r1
     c5e:	ff 91       	pop	r31
     c60:	ef 91       	pop	r30
     c62:	9f 91       	pop	r25
     c64:	8f 91       	pop	r24
     c66:	4f 91       	pop	r20
     c68:	3f 91       	pop	r19
     c6a:	2f 91       	pop	r18
     c6c:	0f 90       	pop	r0
     c6e:	0b be       	out	0x3b, r0	; 59
     c70:	0f 90       	pop	r0
     c72:	0f be       	out	0x3f, r0	; 63
     c74:	0f 90       	pop	r0
     c76:	1f 90       	pop	r1
     c78:	18 95       	reti

00000c7a <__vector_18>:
     c7a:	1f 92       	push	r1
     c7c:	0f 92       	push	r0
     c7e:	0f b6       	in	r0, 0x3f	; 63
     c80:	0f 92       	push	r0
     c82:	11 24       	eor	r1, r1
     c84:	0b b6       	in	r0, 0x3b	; 59
     c86:	0f 92       	push	r0
     c88:	2f 93       	push	r18
     c8a:	3f 93       	push	r19
     c8c:	4f 93       	push	r20
     c8e:	5f 93       	push	r21
     c90:	8f 93       	push	r24
     c92:	9f 93       	push	r25
     c94:	af 93       	push	r26
     c96:	bf 93       	push	r27
     c98:	ef 93       	push	r30
     c9a:	ff 93       	push	r31
     c9c:	80 91 fb 0a 	lds	r24, 0x0AFB	; 0x800afb <__system_var+0x3f>
     ca0:	90 91 fc 0a 	lds	r25, 0x0AFC	; 0x800afc <__system_var+0x40>
     ca4:	01 96       	adiw	r24, 0x01	; 1
     ca6:	87 32       	cpi	r24, 0x27	; 39
     ca8:	91 05       	cpc	r25, r1
     caa:	29 f0       	breq	.+10     	; 0xcb6 <__vector_18+0x3c>
     cac:	90 93 fc 0a 	sts	0x0AFC, r25	; 0x800afc <__system_var+0x40>
     cb0:	80 93 fb 0a 	sts	0x0AFB, r24	; 0x800afb <__system_var+0x3f>
     cb4:	a1 c0       	rjmp	.+322    	; 0xdf8 <__vector_18+0x17e>
     cb6:	10 92 fc 0a 	sts	0x0AFC, r1	; 0x800afc <__system_var+0x40>
     cba:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <__system_var+0x3f>
     cbe:	ea e4       	ldi	r30, 0x4A	; 74
     cc0:	f8 e0       	ldi	r31, 0x08	; 8
     cc2:	86 85       	ldd	r24, Z+14	; 0x0e
     cc4:	97 85       	ldd	r25, Z+15	; 0x0f
     cc6:	01 96       	adiw	r24, 0x01	; 1
     cc8:	97 87       	std	Z+15, r25	; 0x0f
     cca:	86 87       	std	Z+14, r24	; 0x0e
     ccc:	88 3e       	cpi	r24, 0xE8	; 232
     cce:	93 40       	sbci	r25, 0x03	; 3
     cd0:	e9 f5       	brne	.+122    	; 0xd4c <__vector_18+0xd2>
     cd2:	84 85       	ldd	r24, Z+12	; 0x0c
     cd4:	95 85       	ldd	r25, Z+13	; 0x0d
     cd6:	01 96       	adiw	r24, 0x01	; 1
     cd8:	95 87       	std	Z+13, r25	; 0x0d
     cda:	84 87       	std	Z+12, r24	; 0x0c
     cdc:	17 86       	std	Z+15, r1	; 0x0f
     cde:	16 86       	std	Z+14, r1	; 0x0e
     ce0:	82 89       	ldd	r24, Z+18	; 0x12
     ce2:	93 89       	ldd	r25, Z+19	; 0x13
     ce4:	20 89       	ldd	r18, Z+16	; 0x10
     ce6:	31 89       	ldd	r19, Z+17	; 0x11
     ce8:	28 17       	cp	r18, r24
     cea:	39 07       	cpc	r19, r25
     cec:	2c f0       	brlt	.+10     	; 0xcf8 <__vector_18+0x7e>
     cee:	01 96       	adiw	r24, 0x01	; 1
     cf0:	90 93 5d 08 	sts	0x085D, r25	; 0x80085d <__system_time+0x13>
     cf4:	80 93 5c 08 	sts	0x085C, r24	; 0x80085c <__system_time+0x12>
     cf8:	ea e4       	ldi	r30, 0x4A	; 74
     cfa:	f8 e0       	ldi	r31, 0x08	; 8
     cfc:	86 89       	ldd	r24, Z+22	; 0x16
     cfe:	97 89       	ldd	r25, Z+23	; 0x17
     d00:	24 89       	ldd	r18, Z+20	; 0x14
     d02:	35 89       	ldd	r19, Z+21	; 0x15
     d04:	28 17       	cp	r18, r24
     d06:	39 07       	cpc	r19, r25
     d08:	2c f0       	brlt	.+10     	; 0xd14 <__vector_18+0x9a>
     d0a:	01 96       	adiw	r24, 0x01	; 1
     d0c:	90 93 61 08 	sts	0x0861, r25	; 0x800861 <__system_time+0x17>
     d10:	80 93 60 08 	sts	0x0860, r24	; 0x800860 <__system_time+0x16>
     d14:	ea e4       	ldi	r30, 0x4A	; 74
     d16:	f8 e0       	ldi	r31, 0x08	; 8
     d18:	82 8d       	ldd	r24, Z+26	; 0x1a
     d1a:	93 8d       	ldd	r25, Z+27	; 0x1b
     d1c:	20 8d       	ldd	r18, Z+24	; 0x18
     d1e:	31 8d       	ldd	r19, Z+25	; 0x19
     d20:	28 17       	cp	r18, r24
     d22:	39 07       	cpc	r19, r25
     d24:	2c f0       	brlt	.+10     	; 0xd30 <__vector_18+0xb6>
     d26:	01 96       	adiw	r24, 0x01	; 1
     d28:	90 93 65 08 	sts	0x0865, r25	; 0x800865 <__system_time+0x1b>
     d2c:	80 93 64 08 	sts	0x0864, r24	; 0x800864 <__system_time+0x1a>
     d30:	ea e4       	ldi	r30, 0x4A	; 74
     d32:	f8 e0       	ldi	r31, 0x08	; 8
     d34:	86 8d       	ldd	r24, Z+30	; 0x1e
     d36:	97 8d       	ldd	r25, Z+31	; 0x1f
     d38:	24 8d       	ldd	r18, Z+28	; 0x1c
     d3a:	35 8d       	ldd	r19, Z+29	; 0x1d
     d3c:	28 17       	cp	r18, r24
     d3e:	39 07       	cpc	r19, r25
     d40:	2c f0       	brlt	.+10     	; 0xd4c <__vector_18+0xd2>
     d42:	01 96       	adiw	r24, 0x01	; 1
     d44:	90 93 69 08 	sts	0x0869, r25	; 0x800869 <__system_time+0x1f>
     d48:	80 93 68 08 	sts	0x0868, r24	; 0x800868 <__system_time+0x1e>
     d4c:	80 91 56 08 	lds	r24, 0x0856	; 0x800856 <__system_time+0xc>
     d50:	90 91 57 08 	lds	r25, 0x0857	; 0x800857 <__system_time+0xd>
     d54:	cc 97       	sbiw	r24, 0x3c	; 60
     d56:	49 f4       	brne	.+18     	; 0xd6a <__vector_18+0xf0>
     d58:	ea e4       	ldi	r30, 0x4A	; 74
     d5a:	f8 e0       	ldi	r31, 0x08	; 8
     d5c:	82 85       	ldd	r24, Z+10	; 0x0a
     d5e:	93 85       	ldd	r25, Z+11	; 0x0b
     d60:	01 96       	adiw	r24, 0x01	; 1
     d62:	93 87       	std	Z+11, r25	; 0x0b
     d64:	82 87       	std	Z+10, r24	; 0x0a
     d66:	15 86       	std	Z+13, r1	; 0x0d
     d68:	14 86       	std	Z+12, r1	; 0x0c
     d6a:	80 91 54 08 	lds	r24, 0x0854	; 0x800854 <__system_time+0xa>
     d6e:	90 91 55 08 	lds	r25, 0x0855	; 0x800855 <__system_time+0xb>
     d72:	cc 97       	sbiw	r24, 0x3c	; 60
     d74:	49 f4       	brne	.+18     	; 0xd88 <__vector_18+0x10e>
     d76:	ea e4       	ldi	r30, 0x4A	; 74
     d78:	f8 e0       	ldi	r31, 0x08	; 8
     d7a:	80 85       	ldd	r24, Z+8	; 0x08
     d7c:	91 85       	ldd	r25, Z+9	; 0x09
     d7e:	01 96       	adiw	r24, 0x01	; 1
     d80:	91 87       	std	Z+9, r25	; 0x09
     d82:	80 87       	std	Z+8, r24	; 0x08
     d84:	13 86       	std	Z+11, r1	; 0x0b
     d86:	12 86       	std	Z+10, r1	; 0x0a
     d88:	80 91 52 08 	lds	r24, 0x0852	; 0x800852 <__system_time+0x8>
     d8c:	90 91 53 08 	lds	r25, 0x0853	; 0x800853 <__system_time+0x9>
     d90:	48 97       	sbiw	r24, 0x18	; 24
     d92:	49 f4       	brne	.+18     	; 0xda6 <__vector_18+0x12c>
     d94:	ea e4       	ldi	r30, 0x4A	; 74
     d96:	f8 e0       	ldi	r31, 0x08	; 8
     d98:	84 81       	ldd	r24, Z+4	; 0x04
     d9a:	95 81       	ldd	r25, Z+5	; 0x05
     d9c:	01 96       	adiw	r24, 0x01	; 1
     d9e:	95 83       	std	Z+5, r25	; 0x05
     da0:	84 83       	std	Z+4, r24	; 0x04
     da2:	11 86       	std	Z+9, r1	; 0x09
     da4:	10 86       	std	Z+8, r1	; 0x08
     da6:	aa e4       	ldi	r26, 0x4A	; 74
     da8:	b8 e0       	ldi	r27, 0x08	; 8
     daa:	12 96       	adiw	r26, 0x02	; 2
     dac:	8d 91       	ld	r24, X+
     dae:	9c 91       	ld	r25, X
     db0:	13 97       	sbiw	r26, 0x03	; 3
     db2:	fc 01       	movw	r30, r24
     db4:	ee 0f       	add	r30, r30
     db6:	ff 1f       	adc	r31, r31
     db8:	ed 5a       	subi	r30, 0xAD	; 173
     dba:	fc 4f       	sbci	r31, 0xFC	; 252
     dbc:	14 96       	adiw	r26, 0x04	; 4
     dbe:	4d 91       	ld	r20, X+
     dc0:	5c 91       	ld	r21, X
     dc2:	15 97       	sbiw	r26, 0x05	; 5
     dc4:	20 81       	ld	r18, Z
     dc6:	31 81       	ldd	r19, Z+1	; 0x01
     dc8:	42 17       	cp	r20, r18
     dca:	53 07       	cpc	r21, r19
     dcc:	31 f4       	brne	.+12     	; 0xdda <__vector_18+0x160>
     dce:	fd 01       	movw	r30, r26
     dd0:	01 96       	adiw	r24, 0x01	; 1
     dd2:	93 83       	std	Z+3, r25	; 0x03
     dd4:	82 83       	std	Z+2, r24	; 0x02
     dd6:	15 82       	std	Z+5, r1	; 0x05
     dd8:	14 82       	std	Z+4, r1	; 0x04
     dda:	80 91 4c 08 	lds	r24, 0x084C	; 0x80084c <__system_time+0x2>
     dde:	90 91 4d 08 	lds	r25, 0x084D	; 0x80084d <__system_time+0x3>
     de2:	0c 97       	sbiw	r24, 0x0c	; 12
     de4:	49 f4       	brne	.+18     	; 0xdf8 <__vector_18+0x17e>
     de6:	ea e4       	ldi	r30, 0x4A	; 74
     de8:	f8 e0       	ldi	r31, 0x08	; 8
     dea:	80 81       	ld	r24, Z
     dec:	91 81       	ldd	r25, Z+1	; 0x01
     dee:	01 96       	adiw	r24, 0x01	; 1
     df0:	91 83       	std	Z+1, r25	; 0x01
     df2:	80 83       	st	Z, r24
     df4:	13 82       	std	Z+3, r1	; 0x03
     df6:	12 82       	std	Z+2, r1	; 0x02
     df8:	ff 91       	pop	r31
     dfa:	ef 91       	pop	r30
     dfc:	bf 91       	pop	r27
     dfe:	af 91       	pop	r26
     e00:	9f 91       	pop	r25
     e02:	8f 91       	pop	r24
     e04:	5f 91       	pop	r21
     e06:	4f 91       	pop	r20
     e08:	3f 91       	pop	r19
     e0a:	2f 91       	pop	r18
     e0c:	0f 90       	pop	r0
     e0e:	0b be       	out	0x3b, r0	; 59
     e10:	0f 90       	pop	r0
     e12:	0f be       	out	0x3f, r0	; 63
     e14:	0f 90       	pop	r0
     e16:	1f 90       	pop	r1
     e18:	18 95       	reti

00000e1a <_Z9readUntilPKci>:
     e1a:	6f 92       	push	r6
     e1c:	7f 92       	push	r7
     e1e:	8f 92       	push	r8
     e20:	9f 92       	push	r9
     e22:	af 92       	push	r10
     e24:	bf 92       	push	r11
     e26:	cf 92       	push	r12
     e28:	df 92       	push	r13
     e2a:	ef 92       	push	r14
     e2c:	ff 92       	push	r15
     e2e:	0f 93       	push	r16
     e30:	1f 93       	push	r17
     e32:	cf 93       	push	r28
     e34:	df 93       	push	r29
     e36:	3c 01       	movw	r6, r24
     e38:	eb 01       	movw	r28, r22
     e3a:	0e 94 40 14 	call	0x2880	; 0x2880 <_Z13clearReadLinev>
     e3e:	88 ee       	ldi	r24, 0xE8	; 232
     e40:	93 e0       	ldi	r25, 0x03	; 3
     e42:	c8 9f       	mul	r28, r24
     e44:	80 01       	movw	r16, r0
     e46:	c9 9f       	mul	r28, r25
     e48:	10 0d       	add	r17, r0
     e4a:	d8 9f       	mul	r29, r24
     e4c:	10 0d       	add	r17, r0
     e4e:	11 24       	eor	r1, r1
     e50:	11 23       	and	r17, r17
     e52:	b4 f1       	brlt	.+108    	; 0xec0 <_Z9readUntilPKci+0xa6>
     e54:	81 2c       	mov	r8, r1
     e56:	91 2c       	mov	r9, r1
     e58:	0f 2e       	mov	r0, r31
     e5a:	fc eb       	ldi	r31, 0xBC	; 188
     e5c:	cf 2e       	mov	r12, r31
     e5e:	fa e0       	ldi	r31, 0x0A	; 10
     e60:	df 2e       	mov	r13, r31
     e62:	f0 2d       	mov	r31, r0
     e64:	e0 90 73 03 	lds	r14, 0x0373	; 0x800373 <ESP>
     e68:	f0 90 74 03 	lds	r15, 0x0374	; 0x800374 <ESP+0x1>
     e6c:	a0 90 71 03 	lds	r10, 0x0371	; 0x800371 <SIM>
     e70:	b0 90 72 03 	lds	r11, 0x0372	; 0x800372 <SIM+0x1>
     e74:	f6 01       	movw	r30, r12
     e76:	c6 ad       	ldd	r28, Z+62	; 0x3e
     e78:	d0 e0       	ldi	r29, 0x00	; 0
     e7a:	ce 15       	cp	r28, r14
     e7c:	df 05       	cpc	r29, r15
     e7e:	39 f4       	brne	.+14     	; 0xe8e <_Z9readUntilPKci+0x74>
     e80:	b3 01       	movw	r22, r6
     e82:	82 ec       	ldi	r24, 0xC2	; 194
     e84:	98 e0       	ldi	r25, 0x08	; 8
     e86:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
     e8a:	89 2b       	or	r24, r25
     e8c:	e1 f4       	brne	.+56     	; 0xec6 <_Z9readUntilPKci+0xac>
     e8e:	ca 15       	cp	r28, r10
     e90:	db 05       	cpc	r29, r11
     e92:	39 f4       	brne	.+14     	; 0xea2 <_Z9readUntilPKci+0x88>
     e94:	b3 01       	movw	r22, r6
     e96:	8e ee       	ldi	r24, 0xEE	; 238
     e98:	99 e0       	ldi	r25, 0x09	; 9
     e9a:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
     e9e:	89 2b       	or	r24, r25
     ea0:	a9 f4       	brne	.+42     	; 0xecc <_Z9readUntilPKci+0xb2>
     ea2:	ff ef       	ldi	r31, 0xFF	; 255
     ea4:	8f 1a       	sub	r8, r31
     ea6:	9f 0a       	sbc	r9, r31
     ea8:	83 ec       	ldi	r24, 0xC3	; 195
     eaa:	99 e0       	ldi	r25, 0x09	; 9
     eac:	01 97       	sbiw	r24, 0x01	; 1
     eae:	f1 f7       	brne	.-4      	; 0xeac <_Z9readUntilPKci+0x92>
     eb0:	00 c0       	rjmp	.+0      	; 0xeb2 <_Z9readUntilPKci+0x98>
     eb2:	00 00       	nop
     eb4:	08 15       	cp	r16, r8
     eb6:	19 05       	cpc	r17, r9
     eb8:	ec f6       	brge	.-70     	; 0xe74 <_Z9readUntilPKci+0x5a>
     eba:	80 e0       	ldi	r24, 0x00	; 0
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	08 c0       	rjmp	.+16     	; 0xed0 <_Z9readUntilPKci+0xb6>
     ec0:	80 e0       	ldi	r24, 0x00	; 0
     ec2:	90 e0       	ldi	r25, 0x00	; 0
     ec4:	05 c0       	rjmp	.+10     	; 0xed0 <_Z9readUntilPKci+0xb6>
     ec6:	81 e0       	ldi	r24, 0x01	; 1
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	02 c0       	rjmp	.+4      	; 0xed0 <_Z9readUntilPKci+0xb6>
     ecc:	81 e0       	ldi	r24, 0x01	; 1
     ece:	90 e0       	ldi	r25, 0x00	; 0
     ed0:	df 91       	pop	r29
     ed2:	cf 91       	pop	r28
     ed4:	1f 91       	pop	r17
     ed6:	0f 91       	pop	r16
     ed8:	ff 90       	pop	r15
     eda:	ef 90       	pop	r14
     edc:	df 90       	pop	r13
     ede:	cf 90       	pop	r12
     ee0:	bf 90       	pop	r11
     ee2:	af 90       	pop	r10
     ee4:	9f 90       	pop	r9
     ee6:	8f 90       	pop	r8
     ee8:	7f 90       	pop	r7
     eea:	6f 90       	pop	r6
     eec:	08 95       	ret

00000eee <_Z7cipsendPcS_>:
     eee:	cf 92       	push	r12
     ef0:	df 92       	push	r13
     ef2:	ef 92       	push	r14
     ef4:	ff 92       	push	r15
     ef6:	0f 93       	push	r16
     ef8:	1f 93       	push	r17
     efa:	cf 93       	push	r28
     efc:	df 93       	push	r29
     efe:	00 d0       	rcall	.+0      	; 0xf00 <_Z7cipsendPcS_+0x12>
     f00:	00 d0       	rcall	.+0      	; 0xf02 <_Z7cipsendPcS_+0x14>
     f02:	1f 92       	push	r1
     f04:	cd b7       	in	r28, 0x3d	; 61
     f06:	de b7       	in	r29, 0x3e	; 62
     f08:	7c 01       	movw	r14, r24
     f0a:	6b 01       	movw	r12, r22
     f0c:	80 91 fa 0a 	lds	r24, 0x0AFA	; 0x800afa <__system_var+0x3e>
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	20 91 73 03 	lds	r18, 0x0373	; 0x800373 <ESP>
     f16:	30 91 74 03 	lds	r19, 0x0374	; 0x800374 <ESP+0x1>
     f1a:	82 17       	cp	r24, r18
     f1c:	93 07       	cpc	r25, r19
     f1e:	49 f5       	brne	.+82     	; 0xf72 <_Z7cipsendPcS_+0x84>
     f20:	f7 01       	movw	r30, r14
     f22:	31 96       	adiw	r30, 0x01	; 1
     f24:	d7 01       	movw	r26, r14
     f26:	8c 91       	ld	r24, X
     f28:	88 23       	and	r24, r24
     f2a:	41 f0       	breq	.+16     	; 0xf3c <_Z7cipsendPcS_+0x4e>
     f2c:	00 e0       	ldi	r16, 0x00	; 0
     f2e:	10 e0       	ldi	r17, 0x00	; 0
     f30:	0f 5f       	subi	r16, 0xFF	; 255
     f32:	1f 4f       	sbci	r17, 0xFF	; 255
     f34:	81 91       	ld	r24, Z+
     f36:	81 11       	cpse	r24, r1
     f38:	fb cf       	rjmp	.-10     	; 0xf30 <_Z7cipsendPcS_+0x42>
     f3a:	02 c0       	rjmp	.+4      	; 0xf40 <_Z7cipsendPcS_+0x52>
     f3c:	00 e0       	ldi	r16, 0x00	; 0
     f3e:	10 e0       	ldi	r17, 0x00	; 0
     f40:	86 ee       	ldi	r24, 0xE6	; 230
     f42:	91 e0       	ldi	r25, 0x01	; 1
     f44:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
     f48:	c6 01       	movw	r24, r12
     f4a:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
     f4e:	86 e3       	ldi	r24, 0x36	; 54
     f50:	93 e0       	ldi	r25, 0x03	; 3
     f52:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
     f56:	4a e0       	ldi	r20, 0x0A	; 10
     f58:	be 01       	movw	r22, r28
     f5a:	6f 5f       	subi	r22, 0xFF	; 255
     f5c:	7f 4f       	sbci	r23, 0xFF	; 255
     f5e:	c8 01       	movw	r24, r16
     f60:	0e 94 f6 16 	call	0x2dec	; 0x2dec <__itoa_ncheck>
     f64:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
     f68:	8f e4       	ldi	r24, 0x4F	; 79
     f6a:	96 e0       	ldi	r25, 0x06	; 6
     f6c:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
     f70:	04 c0       	rjmp	.+8      	; 0xf7a <_Z7cipsendPcS_+0x8c>
     f72:	82 ef       	ldi	r24, 0xF2	; 242
     f74:	91 e0       	ldi	r25, 0x01	; 1
     f76:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
     f7a:	62 e0       	ldi	r22, 0x02	; 2
     f7c:	70 e0       	ldi	r23, 0x00	; 0
     f7e:	85 e6       	ldi	r24, 0x65	; 101
     f80:	94 e0       	ldi	r25, 0x04	; 4
     f82:	4b df       	rcall	.-362    	; 0xe1a <_Z9readUntilPKci>
     f84:	89 2b       	or	r24, r25
     f86:	81 f4       	brne	.+32     	; 0xfa8 <_Z7cipsendPcS_+0xba>
     f88:	81 e0       	ldi	r24, 0x01	; 1
     f8a:	20 91 6b 03 	lds	r18, 0x036B	; 0x80036b <SERVER_CONNECTED>
     f8e:	30 91 6c 03 	lds	r19, 0x036C	; 0x80036c <SERVER_CONNECTED+0x1>
     f92:	23 2b       	or	r18, r19
     f94:	09 f0       	breq	.+2      	; 0xf98 <_Z7cipsendPcS_+0xaa>
     f96:	80 e0       	ldi	r24, 0x00	; 0
     f98:	80 93 c1 08 	sts	0x08C1, r24	; 0x8008c1 <__network_data+0x57>
     f9c:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <FALSE>
     fa0:	80 93 bf 08 	sts	0x08BF, r24	; 0x8008bf <__network_data+0x55>
     fa4:	80 93 c0 08 	sts	0x08C0, r24	; 0x8008c0 <__network_data+0x56>
     fa8:	80 91 fa 0a 	lds	r24, 0x0AFA	; 0x800afa <__system_var+0x3e>
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	20 91 73 03 	lds	r18, 0x0373	; 0x800373 <ESP>
     fb2:	30 91 74 03 	lds	r19, 0x0374	; 0x800374 <ESP+0x1>
     fb6:	82 17       	cp	r24, r18
     fb8:	93 07       	cpc	r25, r19
     fba:	21 f4       	brne	.+8      	; 0xfc4 <_Z7cipsendPcS_+0xd6>
     fbc:	c7 01       	movw	r24, r14
     fbe:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
     fc2:	09 c0       	rjmp	.+18     	; 0xfd6 <_Z7cipsendPcS_+0xe8>
     fc4:	c7 01       	movw	r24, r14
     fc6:	0e 94 56 12 	call	0x24ac	; 0x24ac <_Z17USART1_SendStringPKc>
     fca:	8a e1       	ldi	r24, 0x1A	; 26
     fcc:	0e 94 4e 12 	call	0x249c	; 0x249c <_Z15USART1_SendBytec>
     fd0:	8d e0       	ldi	r24, 0x0D	; 13
     fd2:	0e 94 4e 12 	call	0x249c	; 0x249c <_Z15USART1_SendBytec>
     fd6:	0f 90       	pop	r0
     fd8:	0f 90       	pop	r0
     fda:	0f 90       	pop	r0
     fdc:	0f 90       	pop	r0
     fde:	0f 90       	pop	r0
     fe0:	df 91       	pop	r29
     fe2:	cf 91       	pop	r28
     fe4:	1f 91       	pop	r17
     fe6:	0f 91       	pop	r16
     fe8:	ff 90       	pop	r15
     fea:	ef 90       	pop	r14
     fec:	df 90       	pop	r13
     fee:	cf 90       	pop	r12
     ff0:	08 95       	ret

00000ff2 <_Z12sendToServerPci>:
     ff2:	af 92       	push	r10
     ff4:	bf 92       	push	r11
     ff6:	cf 92       	push	r12
     ff8:	df 92       	push	r13
     ffa:	ef 92       	push	r14
     ffc:	ff 92       	push	r15
     ffe:	0f 93       	push	r16
    1000:	1f 93       	push	r17
    1002:	cf 93       	push	r28
    1004:	df 93       	push	r29
    1006:	00 d0       	rcall	.+0      	; 0x1008 <_Z12sendToServerPci+0x16>
    1008:	00 d0       	rcall	.+0      	; 0x100a <_Z12sendToServerPci+0x18>
    100a:	1f 92       	push	r1
    100c:	cd b7       	in	r28, 0x3d	; 61
    100e:	de b7       	in	r29, 0x3e	; 62
    1010:	7c 01       	movw	r14, r24
    1012:	90 91 c1 08 	lds	r25, 0x08C1	; 0x8008c1 <__network_data+0x57>
    1016:	99 23       	and	r25, r25
    1018:	09 f4       	brne	.+2      	; 0x101c <_Z12sendToServerPci+0x2a>
    101a:	42 c0       	rjmp	.+132    	; 0x10a0 <_Z12sendToServerPci+0xae>
    101c:	6b 01       	movw	r12, r22
    101e:	f7 01       	movw	r30, r14
    1020:	31 96       	adiw	r30, 0x01	; 1
    1022:	d7 01       	movw	r26, r14
    1024:	8c 91       	ld	r24, X
    1026:	88 23       	and	r24, r24
    1028:	71 f1       	breq	.+92     	; 0x1086 <_Z12sendToServerPci+0x94>
    102a:	00 e0       	ldi	r16, 0x00	; 0
    102c:	10 e0       	ldi	r17, 0x00	; 0
    102e:	0f 5f       	subi	r16, 0xFF	; 255
    1030:	1f 4f       	sbci	r17, 0xFF	; 255
    1032:	81 91       	ld	r24, Z+
    1034:	81 11       	cpse	r24, r1
    1036:	fb cf       	rjmp	.-10     	; 0x102e <_Z12sendToServerPci+0x3c>
    1038:	c8 01       	movw	r24, r16
    103a:	01 96       	adiw	r24, 0x01	; 1
    103c:	0e 94 30 15 	call	0x2a60	; 0x2a60 <malloc>
    1040:	a8 2e       	mov	r10, r24
    1042:	b9 2e       	mov	r11, r25
    1044:	e8 2f       	mov	r30, r24
    1046:	f9 2f       	mov	r31, r25
    1048:	83 e2       	ldi	r24, 0x23	; 35
    104a:	81 93       	st	Z+, r24
    104c:	11 23       	and	r17, r17
    104e:	54 f0       	brlt	.+20     	; 0x1064 <_Z12sendToServerPci+0x72>
    1050:	d7 01       	movw	r26, r14
    1052:	20 e0       	ldi	r18, 0x00	; 0
    1054:	30 e0       	ldi	r19, 0x00	; 0
    1056:	8d 91       	ld	r24, X+
    1058:	81 93       	st	Z+, r24
    105a:	2f 5f       	subi	r18, 0xFF	; 255
    105c:	3f 4f       	sbci	r19, 0xFF	; 255
    105e:	02 17       	cp	r16, r18
    1060:	13 07       	cpc	r17, r19
    1062:	cc f7       	brge	.-14     	; 0x1056 <_Z12sendToServerPci+0x64>
    1064:	4a e0       	ldi	r20, 0x0A	; 10
    1066:	be 01       	movw	r22, r28
    1068:	6f 5f       	subi	r22, 0xFF	; 255
    106a:	7f 4f       	sbci	r23, 0xFF	; 255
    106c:	c6 01       	movw	r24, r12
    106e:	0e 94 f6 16 	call	0x2dec	; 0x2dec <__itoa_ncheck>
    1072:	bc 01       	movw	r22, r24
    1074:	8a 2d       	mov	r24, r10
    1076:	9b 2d       	mov	r25, r11
    1078:	3a df       	rcall	.-396    	; 0xeee <_Z7cipsendPcS_>
    107a:	63 e0       	ldi	r22, 0x03	; 3
    107c:	70 e0       	ldi	r23, 0x00	; 0
    107e:	8e ef       	ldi	r24, 0xFE	; 254
    1080:	91 e0       	ldi	r25, 0x01	; 1
    1082:	cb de       	rcall	.-618    	; 0xe1a <_Z9readUntilPKci>
    1084:	0d c0       	rjmp	.+26     	; 0x10a0 <_Z12sendToServerPci+0xae>
    1086:	81 e0       	ldi	r24, 0x01	; 1
    1088:	90 e0       	ldi	r25, 0x00	; 0
    108a:	0e 94 30 15 	call	0x2a60	; 0x2a60 <malloc>
    108e:	a8 2e       	mov	r10, r24
    1090:	b9 2e       	mov	r11, r25
    1092:	e8 2f       	mov	r30, r24
    1094:	f9 2f       	mov	r31, r25
    1096:	83 e2       	ldi	r24, 0x23	; 35
    1098:	81 93       	st	Z+, r24
    109a:	00 e0       	ldi	r16, 0x00	; 0
    109c:	10 e0       	ldi	r17, 0x00	; 0
    109e:	d8 cf       	rjmp	.-80     	; 0x1050 <_Z12sendToServerPci+0x5e>
    10a0:	0f 90       	pop	r0
    10a2:	0f 90       	pop	r0
    10a4:	0f 90       	pop	r0
    10a6:	0f 90       	pop	r0
    10a8:	0f 90       	pop	r0
    10aa:	df 91       	pop	r29
    10ac:	cf 91       	pop	r28
    10ae:	1f 91       	pop	r17
    10b0:	0f 91       	pop	r16
    10b2:	ff 90       	pop	r15
    10b4:	ef 90       	pop	r14
    10b6:	df 90       	pop	r13
    10b8:	cf 90       	pop	r12
    10ba:	bf 90       	pop	r11
    10bc:	af 90       	pop	r10
    10be:	08 95       	ret

000010c0 <_Z8sendToAPPcS_>:
    10c0:	cf 92       	push	r12
    10c2:	df 92       	push	r13
    10c4:	ef 92       	push	r14
    10c6:	ff 92       	push	r15
    10c8:	0f 93       	push	r16
    10ca:	1f 93       	push	r17
    10cc:	cf 93       	push	r28
    10ce:	df 93       	push	r29
    10d0:	00 d0       	rcall	.+0      	; 0x10d2 <_Z8sendToAPPcS_+0x12>
    10d2:	00 d0       	rcall	.+0      	; 0x10d4 <_Z8sendToAPPcS_+0x14>
    10d4:	1f 92       	push	r1
    10d6:	cd b7       	in	r28, 0x3d	; 61
    10d8:	de b7       	in	r29, 0x3e	; 62
    10da:	7c 01       	movw	r14, r24
    10dc:	6b 01       	movw	r12, r22
    10de:	fc 01       	movw	r30, r24
    10e0:	31 96       	adiw	r30, 0x01	; 1
    10e2:	dc 01       	movw	r26, r24
    10e4:	8c 91       	ld	r24, X
    10e6:	88 23       	and	r24, r24
    10e8:	41 f0       	breq	.+16     	; 0x10fa <_Z8sendToAPPcS_+0x3a>
    10ea:	00 e0       	ldi	r16, 0x00	; 0
    10ec:	10 e0       	ldi	r17, 0x00	; 0
    10ee:	0f 5f       	subi	r16, 0xFF	; 255
    10f0:	1f 4f       	sbci	r17, 0xFF	; 255
    10f2:	81 91       	ld	r24, Z+
    10f4:	81 11       	cpse	r24, r1
    10f6:	fb cf       	rjmp	.-10     	; 0x10ee <_Z8sendToAPPcS_+0x2e>
    10f8:	02 c0       	rjmp	.+4      	; 0x10fe <_Z8sendToAPPcS_+0x3e>
    10fa:	00 e0       	ldi	r16, 0x00	; 0
    10fc:	10 e0       	ldi	r17, 0x00	; 0
    10fe:	86 ee       	ldi	r24, 0xE6	; 230
    1100:	91 e0       	ldi	r25, 0x01	; 1
    1102:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
    1106:	c6 01       	movw	r24, r12
    1108:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
    110c:	86 e3       	ldi	r24, 0x36	; 54
    110e:	93 e0       	ldi	r25, 0x03	; 3
    1110:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
    1114:	4a e0       	ldi	r20, 0x0A	; 10
    1116:	be 01       	movw	r22, r28
    1118:	6f 5f       	subi	r22, 0xFF	; 255
    111a:	7f 4f       	sbci	r23, 0xFF	; 255
    111c:	c8 01       	movw	r24, r16
    111e:	0e 94 f6 16 	call	0x2dec	; 0x2dec <__itoa_ncheck>
    1122:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
    1126:	8f e4       	ldi	r24, 0x4F	; 79
    1128:	96 e0       	ldi	r25, 0x06	; 6
    112a:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
    112e:	62 e0       	ldi	r22, 0x02	; 2
    1130:	70 e0       	ldi	r23, 0x00	; 0
    1132:	85 e6       	ldi	r24, 0x65	; 101
    1134:	94 e0       	ldi	r25, 0x04	; 4
    1136:	71 de       	rcall	.-798    	; 0xe1a <_Z9readUntilPKci>
    1138:	89 2b       	or	r24, r25
    113a:	81 f4       	brne	.+32     	; 0x115c <_Z8sendToAPPcS_+0x9c>
    113c:	81 e0       	ldi	r24, 0x01	; 1
    113e:	20 91 6b 03 	lds	r18, 0x036B	; 0x80036b <SERVER_CONNECTED>
    1142:	30 91 6c 03 	lds	r19, 0x036C	; 0x80036c <SERVER_CONNECTED+0x1>
    1146:	23 2b       	or	r18, r19
    1148:	09 f0       	breq	.+2      	; 0x114c <_Z8sendToAPPcS_+0x8c>
    114a:	80 e0       	ldi	r24, 0x00	; 0
    114c:	80 93 c1 08 	sts	0x08C1, r24	; 0x8008c1 <__network_data+0x57>
    1150:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <FALSE>
    1154:	80 93 bf 08 	sts	0x08BF, r24	; 0x8008bf <__network_data+0x55>
    1158:	80 93 c0 08 	sts	0x08C0, r24	; 0x8008c0 <__network_data+0x56>
    115c:	c7 01       	movw	r24, r14
    115e:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
    1162:	63 e0       	ldi	r22, 0x03	; 3
    1164:	70 e0       	ldi	r23, 0x00	; 0
    1166:	8e ef       	ldi	r24, 0xFE	; 254
    1168:	91 e0       	ldi	r25, 0x01	; 1
    116a:	57 de       	rcall	.-850    	; 0xe1a <_Z9readUntilPKci>
    116c:	0f 90       	pop	r0
    116e:	0f 90       	pop	r0
    1170:	0f 90       	pop	r0
    1172:	0f 90       	pop	r0
    1174:	0f 90       	pop	r0
    1176:	df 91       	pop	r29
    1178:	cf 91       	pop	r28
    117a:	1f 91       	pop	r17
    117c:	0f 91       	pop	r16
    117e:	ff 90       	pop	r15
    1180:	ef 90       	pop	r14
    1182:	df 90       	pop	r13
    1184:	cf 90       	pop	r12
    1186:	08 95       	ret

00001188 <_Z13getSystemTimev>:
    1188:	ef 92       	push	r14
    118a:	ff 92       	push	r15
    118c:	0f 93       	push	r16
    118e:	1f 93       	push	r17
    1190:	cf 93       	push	r28
    1192:	df 93       	push	r29
    1194:	6f e0       	ldi	r22, 0x0F	; 15
    1196:	70 e0       	ldi	r23, 0x00	; 0
    1198:	81 e0       	ldi	r24, 0x01	; 1
    119a:	92 e0       	ldi	r25, 0x02	; 2
    119c:	3e de       	rcall	.-900    	; 0xe1a <_Z9readUntilPKci>
    119e:	89 2b       	or	r24, r25
    11a0:	09 f4       	brne	.+2      	; 0x11a4 <_Z13getSystemTimev+0x1c>
    11a2:	63 c0       	rjmp	.+198    	; 0x126a <_Z13getSystemTimev+0xe2>
    11a4:	84 e6       	ldi	r24, 0x64	; 100
    11a6:	90 e0       	ldi	r25, 0x00	; 0
    11a8:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <_Z5delayi>
    11ac:	61 e0       	ldi	r22, 0x01	; 1
    11ae:	72 e0       	ldi	r23, 0x02	; 2
    11b0:	82 ec       	ldi	r24, 0xC2	; 194
    11b2:	98 e0       	ldi	r25, 0x08	; 8
    11b4:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
    11b8:	69 e8       	ldi	r22, 0x89	; 137
    11ba:	76 e0       	ldi	r23, 0x06	; 6
    11bc:	0e 94 8e 16 	call	0x2d1c	; 0x2d1c <strtok>
    11c0:	89 2b       	or	r24, r25
    11c2:	a1 f5       	brne	.+104    	; 0x122c <_Z13getSystemTimev+0xa4>
    11c4:	47 c0       	rjmp	.+142    	; 0x1254 <_Z13getSystemTimev+0xcc>
    11c6:	fe 01       	movw	r30, r28
    11c8:	31 97       	sbiw	r30, 0x01	; 1
    11ca:	e7 30       	cpi	r30, 0x07	; 7
    11cc:	f1 05       	cpc	r31, r1
    11ce:	b0 f5       	brcc	.+108    	; 0x123c <_Z13getSystemTimev+0xb4>
    11d0:	ea 5b       	subi	r30, 0xBA	; 186
    11d2:	ff 4f       	sbci	r31, 0xFF	; 255
    11d4:	0c 94 27 15 	jmp	0x2a4e	; 0x2a4e <__tablejump2__>
    11d8:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
    11dc:	f7 01       	movw	r30, r14
    11de:	91 83       	std	Z+1, r25	; 0x01
    11e0:	80 83       	st	Z, r24
    11e2:	2c c0       	rjmp	.+88     	; 0x123c <_Z13getSystemTimev+0xb4>
    11e4:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
    11e8:	f7 01       	movw	r30, r14
    11ea:	93 83       	std	Z+3, r25	; 0x03
    11ec:	82 83       	std	Z+2, r24	; 0x02
    11ee:	26 c0       	rjmp	.+76     	; 0x123c <_Z13getSystemTimev+0xb4>
    11f0:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
    11f4:	f7 01       	movw	r30, r14
    11f6:	95 83       	std	Z+5, r25	; 0x05
    11f8:	84 83       	std	Z+4, r24	; 0x04
    11fa:	20 c0       	rjmp	.+64     	; 0x123c <_Z13getSystemTimev+0xb4>
    11fc:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
    1200:	f7 01       	movw	r30, r14
    1202:	91 87       	std	Z+9, r25	; 0x09
    1204:	80 87       	std	Z+8, r24	; 0x08
    1206:	1a c0       	rjmp	.+52     	; 0x123c <_Z13getSystemTimev+0xb4>
    1208:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
    120c:	f7 01       	movw	r30, r14
    120e:	93 87       	std	Z+11, r25	; 0x0b
    1210:	82 87       	std	Z+10, r24	; 0x0a
    1212:	14 c0       	rjmp	.+40     	; 0x123c <_Z13getSystemTimev+0xb4>
    1214:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
    1218:	f7 01       	movw	r30, r14
    121a:	95 87       	std	Z+13, r25	; 0x0d
    121c:	84 87       	std	Z+12, r24	; 0x0c
    121e:	0e c0       	rjmp	.+28     	; 0x123c <_Z13getSystemTimev+0xb4>
    1220:	0e 94 5d 16 	call	0x2cba	; 0x2cba <atoi>
    1224:	f7 01       	movw	r30, r14
    1226:	97 83       	std	Z+7, r25	; 0x07
    1228:	86 83       	std	Z+6, r24	; 0x06
    122a:	08 c0       	rjmp	.+16     	; 0x123c <_Z13getSystemTimev+0xb4>
    122c:	00 e0       	ldi	r16, 0x00	; 0
    122e:	10 e0       	ldi	r17, 0x00	; 0
    1230:	0f 2e       	mov	r0, r31
    1232:	fa e4       	ldi	r31, 0x4A	; 74
    1234:	ef 2e       	mov	r14, r31
    1236:	f8 e0       	ldi	r31, 0x08	; 8
    1238:	ff 2e       	mov	r15, r31
    123a:	f0 2d       	mov	r31, r0
    123c:	e8 01       	movw	r28, r16
    123e:	21 96       	adiw	r28, 0x01	; 1
    1240:	8e 01       	movw	r16, r28
    1242:	69 e8       	ldi	r22, 0x89	; 137
    1244:	76 e0       	ldi	r23, 0x06	; 6
    1246:	80 e0       	ldi	r24, 0x00	; 0
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	0e 94 8e 16 	call	0x2d1c	; 0x2d1c <strtok>
    124e:	00 97       	sbiw	r24, 0x00	; 0
    1250:	09 f0       	breq	.+2      	; 0x1254 <_Z13getSystemTimev+0xcc>
    1252:	b9 cf       	rjmp	.-142    	; 0x11c6 <_Z13getSystemTimev+0x3e>
    1254:	60 91 aa 01 	lds	r22, 0x01AA	; 0x8001aa <CONNECTION>
    1258:	70 91 ab 01 	lds	r23, 0x01AB	; 0x8001ab <CONNECTION+0x1>
    125c:	86 e0       	ldi	r24, 0x06	; 6
    125e:	92 e0       	ldi	r25, 0x02	; 2
    1260:	c8 de       	rcall	.-624    	; 0xff2 <_Z12sendToServerPci>
    1262:	0e 94 40 14 	call	0x2880	; 0x2880 <_Z13clearReadLinev>
    1266:	81 e0       	ldi	r24, 0x01	; 1
    1268:	01 c0       	rjmp	.+2      	; 0x126c <_Z13getSystemTimev+0xe4>
    126a:	80 e0       	ldi	r24, 0x00	; 0
    126c:	df 91       	pop	r29
    126e:	cf 91       	pop	r28
    1270:	1f 91       	pop	r17
    1272:	0f 91       	pop	r16
    1274:	ff 90       	pop	r15
    1276:	ef 90       	pop	r14
    1278:	08 95       	ret

0000127a <_Z15setSerialNumberv>:
    127a:	0f 93       	push	r16
    127c:	1f 93       	push	r17
    127e:	cf 93       	push	r28
    1280:	df 93       	push	r29
    1282:	cd b7       	in	r28, 0x3d	; 61
    1284:	de b7       	in	r29, 0x3e	; 62
    1286:	e2 97       	sbiw	r28, 0x32	; 50
    1288:	0f b6       	in	r0, 0x3f	; 63
    128a:	f8 94       	cli
    128c:	de bf       	out	0x3e, r29	; 62
    128e:	0f be       	out	0x3f, r0	; 63
    1290:	cd bf       	out	0x3d, r28	; 61
    1292:	6f e0       	ldi	r22, 0x0F	; 15
    1294:	72 e0       	ldi	r23, 0x02	; 2
    1296:	82 ec       	ldi	r24, 0xC2	; 194
    1298:	98 e0       	ldi	r25, 0x08	; 8
    129a:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
    129e:	89 2b       	or	r24, r25
    12a0:	a9 f1       	breq	.+106    	; 0x130c <_Z15setSerialNumberv+0x92>
    12a2:	6d e1       	ldi	r22, 0x1D	; 29
    12a4:	72 e0       	ldi	r23, 0x02	; 2
    12a6:	82 ec       	ldi	r24, 0xC2	; 194
    12a8:	98 e0       	ldi	r25, 0x08	; 8
    12aa:	0e 94 8e 16 	call	0x2d1c	; 0x2d1c <strtok>
    12ae:	6d e1       	ldi	r22, 0x1D	; 29
    12b0:	72 e0       	ldi	r23, 0x02	; 2
    12b2:	80 e0       	ldi	r24, 0x00	; 0
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	0e 94 8e 16 	call	0x2d1c	; 0x2d1c <strtok>
    12ba:	bc 01       	movw	r22, r24
    12bc:	8c eb       	ldi	r24, 0xBC	; 188
    12be:	9a e0       	ldi	r25, 0x0A	; 10
    12c0:	0e 94 ae 16 	call	0x2d5c	; 0x2d5c <strcpy>
    12c4:	89 e0       	ldi	r24, 0x09	; 9
    12c6:	ef e1       	ldi	r30, 0x1F	; 31
    12c8:	f2 e0       	ldi	r31, 0x02	; 2
    12ca:	8e 01       	movw	r16, r28
    12cc:	0f 5f       	subi	r16, 0xFF	; 255
    12ce:	1f 4f       	sbci	r17, 0xFF	; 255
    12d0:	d8 01       	movw	r26, r16
    12d2:	01 90       	ld	r0, Z+
    12d4:	0d 92       	st	X+, r0
    12d6:	8a 95       	dec	r24
    12d8:	e1 f7       	brne	.-8      	; 0x12d2 <_Z15setSerialNumberv+0x58>
    12da:	6c eb       	ldi	r22, 0xBC	; 188
    12dc:	7a e0       	ldi	r23, 0x0A	; 10
    12de:	c8 01       	movw	r24, r16
    12e0:	0e 94 98 16 	call	0x2d30	; 0x2d30 <strcat>
    12e4:	f8 01       	movw	r30, r16
    12e6:	01 90       	ld	r0, Z+
    12e8:	00 20       	and	r0, r0
    12ea:	e9 f7       	brne	.-6      	; 0x12e6 <_Z15setSerialNumberv+0x6c>
    12ec:	31 97       	sbiw	r30, 0x01	; 1
    12ee:	83 e2       	ldi	r24, 0x23	; 35
    12f0:	90 e0       	ldi	r25, 0x00	; 0
    12f2:	91 83       	std	Z+1, r25	; 0x01
    12f4:	80 83       	st	Z, r24
    12f6:	60 91 a0 01 	lds	r22, 0x01A0	; 0x8001a0 <EEPROM_SERIAL_START>
    12fa:	70 91 a1 01 	lds	r23, 0x01A1	; 0x8001a1 <EEPROM_SERIAL_START+0x1>
    12fe:	c8 01       	movw	r24, r16
    1300:	0e 94 b7 00 	call	0x16e	; 0x16e <_Z13eepromSaveCfgPKci>
    1304:	0e 94 40 14 	call	0x2880	; 0x2880 <_Z13clearReadLinev>
    1308:	81 e0       	ldi	r24, 0x01	; 1
    130a:	01 c0       	rjmp	.+2      	; 0x130e <_Z15setSerialNumberv+0x94>
    130c:	80 e0       	ldi	r24, 0x00	; 0
    130e:	e2 96       	adiw	r28, 0x32	; 50
    1310:	0f b6       	in	r0, 0x3f	; 63
    1312:	f8 94       	cli
    1314:	de bf       	out	0x3e, r29	; 62
    1316:	0f be       	out	0x3f, r0	; 63
    1318:	cd bf       	out	0x3d, r28	; 61
    131a:	df 91       	pop	r29
    131c:	cf 91       	pop	r28
    131e:	1f 91       	pop	r17
    1320:	0f 91       	pop	r16
    1322:	08 95       	ret

00001324 <_Z17checkSerialNumberv>:
    1324:	0f 93       	push	r16
    1326:	1f 93       	push	r17
    1328:	cf 93       	push	r28
    132a:	df 93       	push	r29
    132c:	cd b7       	in	r28, 0x3d	; 61
    132e:	de b7       	in	r29, 0x3e	; 62
    1330:	c4 56       	subi	r28, 0x64	; 100
    1332:	d1 09       	sbc	r29, r1
    1334:	0f b6       	in	r0, 0x3f	; 63
    1336:	f8 94       	cli
    1338:	de bf       	out	0x3e, r29	; 62
    133a:	0f be       	out	0x3f, r0	; 63
    133c:	cd bf       	out	0x3d, r28	; 61
    133e:	21 e0       	ldi	r18, 0x01	; 1
    1340:	30 e0       	ldi	r19, 0x00	; 0
    1342:	48 e2       	ldi	r20, 0x28	; 40
    1344:	52 e0       	ldi	r21, 0x02	; 2
    1346:	6f e0       	ldi	r22, 0x0F	; 15
    1348:	70 e0       	ldi	r23, 0x00	; 0
    134a:	8c eb       	ldi	r24, 0xBC	; 188
    134c:	9a e0       	ldi	r25, 0x0A	; 10
    134e:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <_Z19eepromReadAttributePciS_i>
    1352:	81 11       	cpse	r24, r1
    1354:	32 c0       	rjmp	.+100    	; 0x13ba <_Z17checkSerialNumberv+0x96>
    1356:	0e 94 40 14 	call	0x2880	; 0x2880 <_Z13clearReadLinev>
    135a:	87 e1       	ldi	r24, 0x17	; 23
    135c:	ef e2       	ldi	r30, 0x2F	; 47
    135e:	f2 e0       	ldi	r31, 0x02	; 2
    1360:	8e 01       	movw	r16, r28
    1362:	0f 5f       	subi	r16, 0xFF	; 255
    1364:	1f 4f       	sbci	r17, 0xFF	; 255
    1366:	d8 01       	movw	r26, r16
    1368:	01 90       	ld	r0, Z+
    136a:	0d 92       	st	X+, r0
    136c:	8a 95       	dec	r24
    136e:	e1 f7       	brne	.-8      	; 0x1368 <_Z17checkSerialNumberv+0x44>
    1370:	67 ed       	ldi	r22, 0xD7	; 215
    1372:	71 e0       	ldi	r23, 0x01	; 1
    1374:	c8 01       	movw	r24, r16
    1376:	0e 94 98 16 	call	0x2d30	; 0x2d30 <strcat>
    137a:	f8 01       	movw	r30, r16
    137c:	01 90       	ld	r0, Z+
    137e:	00 20       	and	r0, r0
    1380:	e9 f7       	brne	.-6      	; 0x137c <_Z17checkSerialNumberv+0x58>
    1382:	31 97       	sbiw	r30, 0x01	; 1
    1384:	8a e0       	ldi	r24, 0x0A	; 10
    1386:	90 e0       	ldi	r25, 0x00	; 0
    1388:	91 83       	std	Z+1, r25	; 0x01
    138a:	80 83       	st	Z, r24
    138c:	88 ee       	ldi	r24, 0xE8	; 232
    138e:	93 e0       	ldi	r25, 0x03	; 3
    1390:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <_Z5delayi>
    1394:	60 91 aa 01 	lds	r22, 0x01AA	; 0x8001aa <CONNECTION>
    1398:	70 91 ab 01 	lds	r23, 0x01AB	; 0x8001ab <CONNECTION+0x1>
    139c:	c8 01       	movw	r24, r16
    139e:	29 de       	rcall	.-942    	; 0xff2 <_Z12sendToServerPci>
    13a0:	6f e0       	ldi	r22, 0x0F	; 15
    13a2:	70 e0       	ldi	r23, 0x00	; 0
    13a4:	8f e0       	ldi	r24, 0x0F	; 15
    13a6:	92 e0       	ldi	r25, 0x02	; 2
    13a8:	38 dd       	rcall	.-1424   	; 0xe1a <_Z9readUntilPKci>
    13aa:	84 e6       	ldi	r24, 0x64	; 100
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <_Z5delayi>
    13b2:	63 df       	rcall	.-314    	; 0x127a <_Z15setSerialNumberv>
    13b4:	81 11       	cpse	r24, r1
    13b6:	22 c0       	rjmp	.+68     	; 0x13fc <_Z17checkSerialNumberv+0xd8>
    13b8:	32 c0       	rjmp	.+100    	; 0x141e <_Z17checkSerialNumberv+0xfa>
    13ba:	8f e0       	ldi	r24, 0x0F	; 15
    13bc:	e7 e3       	ldi	r30, 0x37	; 55
    13be:	f2 e0       	ldi	r31, 0x02	; 2
    13c0:	8e 01       	movw	r16, r28
    13c2:	0f 5f       	subi	r16, 0xFF	; 255
    13c4:	1f 4f       	sbci	r17, 0xFF	; 255
    13c6:	d8 01       	movw	r26, r16
    13c8:	01 90       	ld	r0, Z+
    13ca:	0d 92       	st	X+, r0
    13cc:	8a 95       	dec	r24
    13ce:	e1 f7       	brne	.-8      	; 0x13c8 <_Z17checkSerialNumberv+0xa4>
    13d0:	6c eb       	ldi	r22, 0xBC	; 188
    13d2:	7a e0       	ldi	r23, 0x0A	; 10
    13d4:	c8 01       	movw	r24, r16
    13d6:	0e 94 98 16 	call	0x2d30	; 0x2d30 <strcat>
    13da:	f8 01       	movw	r30, r16
    13dc:	01 90       	ld	r0, Z+
    13de:	00 20       	and	r0, r0
    13e0:	e9 f7       	brne	.-6      	; 0x13dc <_Z17checkSerialNumberv+0xb8>
    13e2:	31 97       	sbiw	r30, 0x01	; 1
    13e4:	8b e3       	ldi	r24, 0x3B	; 59
    13e6:	9a e0       	ldi	r25, 0x0A	; 10
    13e8:	a0 e0       	ldi	r26, 0x00	; 0
    13ea:	80 83       	st	Z, r24
    13ec:	91 83       	std	Z+1, r25	; 0x01
    13ee:	a2 83       	std	Z+2, r26	; 0x02
    13f0:	60 91 aa 01 	lds	r22, 0x01AA	; 0x8001aa <CONNECTION>
    13f4:	70 91 ab 01 	lds	r23, 0x01AB	; 0x8001ab <CONNECTION+0x1>
    13f8:	c8 01       	movw	r24, r16
    13fa:	fb dd       	rcall	.-1034   	; 0xff2 <_Z12sendToServerPci>
    13fc:	86 e4       	ldi	r24, 0x46	; 70
    13fe:	92 e0       	ldi	r25, 0x02	; 2
    1400:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
    1404:	8c eb       	ldi	r24, 0xBC	; 188
    1406:	9a e0       	ldi	r25, 0x0A	; 10
    1408:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
    140c:	80 e5       	ldi	r24, 0x50	; 80
    140e:	96 e0       	ldi	r25, 0x06	; 6
    1410:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
    1414:	84 e6       	ldi	r24, 0x64	; 100
    1416:	90 e0       	ldi	r25, 0x00	; 0
    1418:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <_Z5delayi>
    141c:	81 e0       	ldi	r24, 0x01	; 1
    141e:	cc 59       	subi	r28, 0x9C	; 156
    1420:	df 4f       	sbci	r29, 0xFF	; 255
    1422:	0f b6       	in	r0, 0x3f	; 63
    1424:	f8 94       	cli
    1426:	de bf       	out	0x3e, r29	; 62
    1428:	0f be       	out	0x3f, r0	; 63
    142a:	cd bf       	out	0x3d, r28	; 61
    142c:	df 91       	pop	r29
    142e:	cf 91       	pop	r28
    1430:	1f 91       	pop	r17
    1432:	0f 91       	pop	r16
    1434:	08 95       	ret

00001436 <_Z13connectToWifiPKcS0_>:
    1436:	0f 93       	push	r16
    1438:	1f 93       	push	r17
    143a:	cf 93       	push	r28
    143c:	df 93       	push	r29
    143e:	8c 01       	movw	r16, r24
    1440:	eb 01       	movw	r28, r22
    1442:	85 e5       	ldi	r24, 0x55	; 85
    1444:	92 e0       	ldi	r25, 0x02	; 2
    1446:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
    144a:	63 e0       	ldi	r22, 0x03	; 3
    144c:	70 e0       	ldi	r23, 0x00	; 0
    144e:	8e ef       	ldi	r24, 0xFE	; 254
    1450:	91 e0       	ldi	r25, 0x01	; 1
    1452:	e3 dc       	rcall	.-1594   	; 0xe1a <_Z9readUntilPKci>
    1454:	82 e6       	ldi	r24, 0x62	; 98
    1456:	92 e0       	ldi	r25, 0x02	; 2
    1458:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
    145c:	63 e0       	ldi	r22, 0x03	; 3
    145e:	70 e0       	ldi	r23, 0x00	; 0
    1460:	8e ef       	ldi	r24, 0xFE	; 254
    1462:	91 e0       	ldi	r25, 0x01	; 1
    1464:	da dc       	rcall	.-1612   	; 0xe1a <_Z9readUntilPKci>
    1466:	80 e7       	ldi	r24, 0x70	; 112
    1468:	92 e0       	ldi	r25, 0x02	; 2
    146a:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
    146e:	63 e0       	ldi	r22, 0x03	; 3
    1470:	70 e0       	ldi	r23, 0x00	; 0
    1472:	8e ef       	ldi	r24, 0xFE	; 254
    1474:	91 e0       	ldi	r25, 0x01	; 1
    1476:	d1 dc       	rcall	.-1630   	; 0xe1a <_Z9readUntilPKci>
    1478:	8e e7       	ldi	r24, 0x7E	; 126
    147a:	92 e0       	ldi	r25, 0x02	; 2
    147c:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
    1480:	63 e0       	ldi	r22, 0x03	; 3
    1482:	70 e0       	ldi	r23, 0x00	; 0
    1484:	8e ef       	ldi	r24, 0xFE	; 254
    1486:	91 e0       	ldi	r25, 0x01	; 1
    1488:	c8 dc       	rcall	.-1648   	; 0xe1a <_Z9readUntilPKci>
    148a:	87 ea       	ldi	r24, 0xA7	; 167
    148c:	92 e0       	ldi	r25, 0x02	; 2
    148e:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
    1492:	63 e0       	ldi	r22, 0x03	; 3
    1494:	70 e0       	ldi	r23, 0x00	; 0
    1496:	8e ef       	ldi	r24, 0xFE	; 254
    1498:	91 e0       	ldi	r25, 0x01	; 1
    149a:	bf dc       	rcall	.-1666   	; 0xe1a <_Z9readUntilPKci>
    149c:	8b eb       	ldi	r24, 0xBB	; 187
    149e:	92 e0       	ldi	r25, 0x02	; 2
    14a0:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
    14a4:	63 e0       	ldi	r22, 0x03	; 3
    14a6:	70 e0       	ldi	r23, 0x00	; 0
    14a8:	8e ef       	ldi	r24, 0xFE	; 254
    14aa:	91 e0       	ldi	r25, 0x01	; 1
    14ac:	b6 dc       	rcall	.-1684   	; 0xe1a <_Z9readUntilPKci>
    14ae:	86 ec       	ldi	r24, 0xC6	; 198
    14b0:	92 e0       	ldi	r25, 0x02	; 2
    14b2:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
    14b6:	c8 01       	movw	r24, r16
    14b8:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
    14bc:	81 e3       	ldi	r24, 0x31	; 49
    14be:	93 e0       	ldi	r25, 0x03	; 3
    14c0:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
    14c4:	ce 01       	movw	r24, r28
    14c6:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
    14ca:	81 ed       	ldi	r24, 0xD1	; 209
    14cc:	92 e0       	ldi	r25, 0x02	; 2
    14ce:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <_Z17USART0_SendStringPKc>
    14d2:	6a e0       	ldi	r22, 0x0A	; 10
    14d4:	70 e0       	ldi	r23, 0x00	; 0
    14d6:	8e ef       	ldi	r24, 0xFE	; 254
    14d8:	91 e0       	ldi	r25, 0x01	; 1
    14da:	9f dc       	rcall	.-1730   	; 0xe1a <_Z9readUntilPKci>
    14dc:	89 2b       	or	r24, r25
    14de:	19 f0       	breq	.+6      	; 0x14e6 <_Z13connectToWifiPKcS0_+0xb0>
    14e0:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <TRUE>
    14e4:	02 c0       	rjmp	.+4      	; 0x14ea <_Z13connectToWifiPKcS0_+0xb4>
    14e6:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <FALSE>
    14ea:	df 91       	pop	r29
    14ec:	cf 91       	pop	r28
    14ee:	1f 91       	pop	r17
    14f0:	0f 91       	pop	r16
    14f2:	08 95       	ret

000014f4 <_Z15connectToServerPKcS0_>:
char connectToServer(const char *host, const char *port) {
    14f4:	0f 93       	push	r16
    14f6:	1f 93       	push	r17
    14f8:	cf 93       	push	r28
    14fa:	df 93       	push	r29
    14fc:	8c 01       	movw	r16, r24
    14fe:	eb 01       	movw	r28, r22
		//USART0_SendString("AT+CIPMUX=1\r\n");
		//if (readUntil("OK", 2) == 0) return 0;
	}

	// AT+CIPSTART    Connect to server , replace variables
	clearReadLine();
    1500:	0e 94 40 14 	call	0x2880	; 0x2880 <_Z13clearReadLinev>

	if (__system_var.interface_ == ESP) {
    1504:	20 91 fa 0a 	lds	r18, 0x0AFA	; 0x800afa <__system_var+0x3e>
    1508:	30 e0       	ldi	r19, 0x00	; 0
    150a:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <ESP>
    150e:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <ESP+0x1>
    1512:	28 17       	cp	r18, r24
    1514:	39 07       	cpc	r19, r25
    1516:	69 f4       	brne	.+26     	; 0x1532 <_Z15connectToServerPKcS0_+0x3e>
		USART0_SendString("AT+CIPSTART=0,\"TCP\",\"");
    1518:	8f e1       	ldi	r24, 0x1F	; 31
    151a:	93 e0       	ldi	r25, 0x03	; 3
    151c:	dd d7       	rcall	.+4026   	; 0x24d8 <_Z17USART0_SendStringPKc>
		USART0_SendString(host);
    151e:	c8 01       	movw	r24, r16
    1520:	db d7       	rcall	.+4022   	; 0x24d8 <_Z17USART0_SendStringPKc>
		USART0_SendString("\",");
    1522:	85 e3       	ldi	r24, 0x35	; 53
    1524:	93 e0       	ldi	r25, 0x03	; 3
    1526:	d8 d7       	rcall	.+4016   	; 0x24d8 <_Z17USART0_SendStringPKc>
		USART0_SendString(port);
    1528:	ce 01       	movw	r24, r28
    152a:	d6 d7       	rcall	.+4012   	; 0x24d8 <_Z17USART0_SendStringPKc>
		USART0_SendString("\r\n");
    152c:	8f e4       	ldi	r24, 0x4F	; 79
    152e:	96 e0       	ldi	r25, 0x06	; 6
    1530:	d3 d7       	rcall	.+4006   	; 0x24d8 <_Z17USART0_SendStringPKc>
	}
	if (__system_var.interface_ == SIM) {
    1532:	20 91 fa 0a 	lds	r18, 0x0AFA	; 0x800afa <__system_var+0x3e>
    1536:	30 e0       	ldi	r19, 0x00	; 0
    1538:	80 91 71 03 	lds	r24, 0x0371	; 0x800371 <SIM>
    153c:	90 91 72 03 	lds	r25, 0x0372	; 0x800372 <SIM+0x1>
    1540:	28 17       	cp	r18, r24
    1542:	39 07       	cpc	r19, r25
    1544:	69 f4       	brne	.+26     	; 0x1560 <_Z15connectToServerPKcS0_+0x6c>
		USART0_SendString("AT+CIPSTART=\"TCP\",\"");
    1546:	88 e3       	ldi	r24, 0x38	; 56
    1548:	93 e0       	ldi	r25, 0x03	; 3
    154a:	c6 d7       	rcall	.+3980   	; 0x24d8 <_Z17USART0_SendStringPKc>
		USART0_SendString(host);
    154c:	c8 01       	movw	r24, r16
    154e:	c4 d7       	rcall	.+3976   	; 0x24d8 <_Z17USART0_SendStringPKc>
		USART0_SendString("\",\"");
    1550:	81 e3       	ldi	r24, 0x31	; 49
    1552:	93 e0       	ldi	r25, 0x03	; 3
    1554:	c1 d7       	rcall	.+3970   	; 0x24d8 <_Z17USART0_SendStringPKc>
		USART0_SendString(port);
    1556:	ce 01       	movw	r24, r28
    1558:	bf d7       	rcall	.+3966   	; 0x24d8 <_Z17USART0_SendStringPKc>
		USART0_SendString("\"\r");
    155a:	81 e1       	ldi	r24, 0x11	; 17
    155c:	93 e0       	ldi	r25, 0x03	; 3
    155e:	bc d7       	rcall	.+3960   	; 0x24d8 <_Z17USART0_SendStringPKc>
	}

	if (readUntil("OK", 10) == 1) {
    1560:	6a e0       	ldi	r22, 0x0A	; 10
    1562:	70 e0       	ldi	r23, 0x00	; 0
    1564:	8e ef       	ldi	r24, 0xFE	; 254
    1566:	91 e0       	ldi	r25, 0x01	; 1
    1568:	58 dc       	rcall	.-1872   	; 0xe1a <_Z9readUntilPKci>
    156a:	01 97       	sbiw	r24, 0x01	; 1
    156c:	71 f4       	brne	.+28     	; 0x158a <_Z15connectToServerPKcS0_+0x96>
		// Send HELLO to SERVER
		__network_data.is_server_connected = TRUE;
    156e:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <TRUE>
    1572:	80 93 c1 08 	sts	0x08C1, r24	; 0x8008c1 <__network_data+0x57>
		if (getSystemTime() == 0) return 0;
    1576:	08 de       	rcall	.-1008   	; 0x1188 <_Z13getSystemTimev>
    1578:	98 2f       	mov	r25, r24
    157a:	88 23       	and	r24, r24
    157c:	39 f0       	breq	.+14     	; 0x158c <_Z15connectToServerPKcS0_+0x98>
		
		if (checkSerialNumber() == 0)return 0;
    157e:	d2 de       	rcall	.-604    	; 0x1324 <_Z17checkSerialNumberv>
    1580:	91 e0       	ldi	r25, 0x01	; 1
    1582:	81 11       	cpse	r24, r1
    1584:	03 c0       	rjmp	.+6      	; 0x158c <_Z15connectToServerPKcS0_+0x98>
    1586:	90 e0       	ldi	r25, 0x00	; 0
    1588:	01 c0       	rjmp	.+2      	; 0x158c <_Z15connectToServerPKcS0_+0x98>
		//__network_data.is_server_connected = FALSE;
		
		return 1;
		} else {
		return 0;
    158a:	90 e0       	ldi	r25, 0x00	; 0
	}
	

}
    158c:	89 2f       	mov	r24, r25
    158e:	df 91       	pop	r29
    1590:	cf 91       	pop	r28
    1592:	1f 91       	pop	r17
    1594:	0f 91       	pop	r16
    1596:	08 95       	ret

00001598 <_Z10networkingv>:
void networking() {
    1598:	0f 93       	push	r16
    159a:	1f 93       	push	r17
    159c:	cf 93       	push	r28
    159e:	df 93       	push	r29
	

	if (__system_time.connection_timer_buffer >= __system_time.connection_timer) {
    15a0:	ea e4       	ldi	r30, 0x4A	; 74
    15a2:	f8 e0       	ldi	r31, 0x08	; 8
    15a4:	22 89       	ldd	r18, Z+18	; 0x12
    15a6:	33 89       	ldd	r19, Z+19	; 0x13
    15a8:	80 89       	ldd	r24, Z+16	; 0x10
    15aa:	91 89       	ldd	r25, Z+17	; 0x11
    15ac:	28 17       	cp	r18, r24
    15ae:	39 07       	cpc	r19, r25
    15b0:	0c f4       	brge	.+2      	; 0x15b4 <_Z10networkingv+0x1c>
    15b2:	66 c0       	rjmp	.+204    	; 0x1680 <_Z10networkingv+0xe8>
		
		if ( __network_data.is_server_connected != SERVER_CONNECTED ) {
    15b4:	c0 91 6b 03 	lds	r28, 0x036B	; 0x80036b <SERVER_CONNECTED>
    15b8:	d0 91 6c 03 	lds	r29, 0x036C	; 0x80036c <SERVER_CONNECTED+0x1>
    15bc:	80 91 c1 08 	lds	r24, 0x08C1	; 0x8008c1 <__network_data+0x57>
    15c0:	90 e0       	ldi	r25, 0x00	; 0
    15c2:	8c 17       	cp	r24, r28
    15c4:	9d 07       	cpc	r25, r29
    15c6:	09 f4       	brne	.+2      	; 0x15ca <_Z10networkingv+0x32>
    15c8:	51 c0       	rjmp	.+162    	; 0x166c <_Z10networkingv+0xd4>
			setSource(ESP);
    15ca:	00 91 73 03 	lds	r16, 0x0373	; 0x800373 <ESP>
    15ce:	10 91 74 03 	lds	r17, 0x0374	; 0x800374 <ESP+0x1>
    15d2:	c8 01       	movw	r24, r16
    15d4:	0e 94 42 13 	call	0x2684	; 0x2684 <_Z9setSourcei>
			__network_data.is_esp_connected = connectToWifi(__network_data.ssid, __network_data.password);
    15d8:	61 ea       	ldi	r22, 0xA1	; 161
    15da:	78 e0       	ldi	r23, 0x08	; 8
    15dc:	8d e8       	ldi	r24, 0x8D	; 141
    15de:	98 e0       	ldi	r25, 0x08	; 8
    15e0:	2a df       	rcall	.-428    	; 0x1436 <_Z13connectToWifiPKcS0_>
    15e2:	80 93 bf 08 	sts	0x08BF, r24	; 0x8008bf <__network_data+0x55>

			if (!__network_data.is_esp_connected) {
    15e6:	81 11       	cpse	r24, r1
    15e8:	0a c0       	rjmp	.+20     	; 0x15fe <_Z10networkingv+0x66>
				setSource(SIM);
    15ea:	80 91 71 03 	lds	r24, 0x0371	; 0x800371 <SIM>
    15ee:	90 91 72 03 	lds	r25, 0x0372	; 0x800372 <SIM+0x1>
    15f2:	0e 94 42 13 	call	0x2684	; 0x2684 <_Z9setSourcei>
				//__network_data.is_sim_connected = connectToGprs(__network_data.apn);
			}

			if (__network_data.is_esp_connected) {
    15f6:	80 91 bf 08 	lds	r24, 0x08BF	; 0x8008bf <__network_data+0x55>
    15fa:	88 23       	and	r24, r24
    15fc:	e1 f1       	breq	.+120    	; 0x1676 <_Z10networkingv+0xde>
				setSource(ESP);
    15fe:	c8 01       	movw	r24, r16
    1600:	0e 94 42 13 	call	0x2684	; 0x2684 <_Z9setSourcei>
				if (connectToServer(__network_data.host, __network_data.port) == 1){
    1604:	68 e8       	ldi	r22, 0x88	; 136
    1606:	78 e0       	ldi	r23, 0x08	; 8
    1608:	8a e6       	ldi	r24, 0x6A	; 106
    160a:	98 e0       	ldi	r25, 0x08	; 8
    160c:	73 df       	rcall	.-282    	; 0x14f4 <_Z15connectToServerPKcS0_>
    160e:	81 30       	cpi	r24, 0x01	; 1
    1610:	21 f4       	brne	.+8      	; 0x161a <_Z10networkingv+0x82>
					__network_data.is_server_connected = SERVER_CONNECTED;
    1612:	c0 93 c1 08 	sts	0x08C1, r28	; 0x8008c1 <__network_data+0x57>
					//sendToServer("NOTIFICATION;CONNECTION;ONLINE\n",CONNECTION);
					clearReadLine();
    1616:	0e 94 40 14 	call	0x2880	; 0x2880 <_Z13clearReadLinev>
				}
			}
			if (__network_data.is_sim_connected) {
    161a:	80 91 c0 08 	lds	r24, 0x08C0	; 0x8008c0 <__network_data+0x56>
    161e:	88 23       	and	r24, r24
    1620:	51 f0       	breq	.+20     	; 0x1636 <_Z10networkingv+0x9e>
				setSource(SIM);
    1622:	80 91 71 03 	lds	r24, 0x0371	; 0x800371 <SIM>
    1626:	90 91 72 03 	lds	r25, 0x0372	; 0x800372 <SIM+0x1>
    162a:	0e 94 42 13 	call	0x2684	; 0x2684 <_Z9setSourcei>
				//connectToServer(__network_data.host, __network_data.port);
			}

			if (!(__network_data.is_sim_connected || __network_data.is_esp_connected ) || !__network_data.is_server_connected) {
    162e:	80 91 c0 08 	lds	r24, 0x08C0	; 0x8008c0 <__network_data+0x56>
    1632:	81 11       	cpse	r24, r1
    1634:	04 c0       	rjmp	.+8      	; 0x163e <_Z10networkingv+0xa6>
    1636:	80 91 bf 08 	lds	r24, 0x08BF	; 0x8008bf <__network_data+0x55>
    163a:	88 23       	and	r24, r24
    163c:	21 f0       	breq	.+8      	; 0x1646 <_Z10networkingv+0xae>
    163e:	80 91 c1 08 	lds	r24, 0x08C1	; 0x8008c1 <__network_data+0x57>
    1642:	81 11       	cpse	r24, r1
    1644:	0d c0       	rjmp	.+26     	; 0x1660 <_Z10networkingv+0xc8>
				if (__system_time.connection_timer <= 600) __system_time.connection_timer += 20;
    1646:	80 91 5a 08 	lds	r24, 0x085A	; 0x80085a <__system_time+0x10>
    164a:	90 91 5b 08 	lds	r25, 0x085B	; 0x80085b <__system_time+0x11>
    164e:	89 35       	cpi	r24, 0x59	; 89
    1650:	22 e0       	ldi	r18, 0x02	; 2
    1652:	92 07       	cpc	r25, r18
    1654:	2c f4       	brge	.+10     	; 0x1660 <_Z10networkingv+0xc8>
    1656:	44 96       	adiw	r24, 0x14	; 20
    1658:	90 93 5b 08 	sts	0x085B, r25	; 0x80085b <__system_time+0x11>
    165c:	80 93 5a 08 	sts	0x085A, r24	; 0x80085a <__system_time+0x10>
			}
			__system_time.check_timer_buffer = 0;
    1660:	ea e4       	ldi	r30, 0x4A	; 74
    1662:	f8 e0       	ldi	r31, 0x08	; 8
    1664:	17 8a       	std	Z+23, r1	; 0x17
    1666:	16 8a       	std	Z+22, r1	; 0x16
			__system_time.relay_module_check_timer_buffer = 0;
    1668:	13 8e       	std	Z+27, r1	; 0x1b
    166a:	12 8e       	std	Z+26, r1	; 0x1a

		}
		__system_time.connection_timer_buffer = 0;
    166c:	10 92 5d 08 	sts	0x085D, r1	; 0x80085d <__system_time+0x13>
    1670:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <__system_time+0x12>
    1674:	05 c0       	rjmp	.+10     	; 0x1680 <_Z10networkingv+0xe8>
					__network_data.is_server_connected = SERVER_CONNECTED;
					//sendToServer("NOTIFICATION;CONNECTION;ONLINE\n",CONNECTION);
					clearReadLine();
				}
			}
			if (__network_data.is_sim_connected) {
    1676:	80 91 c0 08 	lds	r24, 0x08C0	; 0x8008c0 <__network_data+0x56>
    167a:	88 23       	and	r24, r24
    167c:	21 f3       	breq	.-56     	; 0x1646 <_Z10networkingv+0xae>
    167e:	d1 cf       	rjmp	.-94     	; 0x1622 <_Z10networkingv+0x8a>

		}
		__system_time.connection_timer_buffer = 0;
		
	}
}
    1680:	df 91       	pop	r29
    1682:	cf 91       	pop	r28
    1684:	1f 91       	pop	r17
    1686:	0f 91       	pop	r16
    1688:	08 95       	ret

0000168a <_Z6WebAppv>:
*  Author: tjozsa
*/
#include <Processes.h>
#include <HCM.h>

void WebApp(){
    168a:	af 92       	push	r10
    168c:	bf 92       	push	r11
    168e:	cf 92       	push	r12
    1690:	df 92       	push	r13
    1692:	ff 92       	push	r15
    1694:	0f 93       	push	r16
    1696:	1f 93       	push	r17
    1698:	cf 93       	push	r28
    169a:	df 93       	push	r29
    169c:	cd b7       	in	r28, 0x3d	; 61
    169e:	de b7       	in	r29, 0x3e	; 62
    16a0:	c1 54       	subi	r28, 0x41	; 65
    16a2:	d7 40       	sbci	r29, 0x07	; 7
    16a4:	0f b6       	in	r0, 0x3f	; 63
    16a6:	f8 94       	cli
    16a8:	de bf       	out	0x3e, r29	; 62
    16aa:	0f be       	out	0x3f, r0	; 63
    16ac:	cd bf       	out	0x3d, r28	; 61
	
	if (strstr(__network_data.esp_buffer, "GET / HTTP/") != 0){
    16ae:	67 e7       	ldi	r22, 0x77	; 119
    16b0:	73 e0       	ldi	r23, 0x03	; 3
    16b2:	82 ec       	ldi	r24, 0xC2	; 194
    16b4:	98 e0       	ldi	r25, 0x08	; 8
    16b6:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
    16ba:	89 2b       	or	r24, r25
    16bc:	09 f4       	brne	.+2      	; 0x16c0 <_Z6WebAppv+0x36>
    16be:	1a c1       	rjmp	.+564    	; 0x18f4 <_Z6WebAppv+0x26a>
		char content[850];
		char page[1000];
		int contentLength;
		char converter[5];
		char connection[2];
		char *p = strstr(__network_data.esp_buffer,"+IPD,");
    16c0:	63 e8       	ldi	r22, 0x83	; 131
    16c2:	73 e0       	ldi	r23, 0x03	; 3
    16c4:	82 ec       	ldi	r24, 0xC2	; 194
    16c6:	98 e0       	ldi	r25, 0x08	; 8
    16c8:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
		connection[0] = *(p+=5);
    16cc:	fc 01       	movw	r30, r24
    16ce:	85 81       	ldd	r24, Z+5	; 0x05
    16d0:	c0 5c       	subi	r28, 0xC0	; 192
    16d2:	d8 4f       	sbci	r29, 0xF8	; 248
    16d4:	88 83       	st	Y, r24
    16d6:	c0 54       	subi	r28, 0x40	; 64
    16d8:	d7 40       	sbci	r29, 0x07	; 7
		connection[1] = '\0';
    16da:	cf 5b       	subi	r28, 0xBF	; 191
    16dc:	d8 4f       	sbci	r29, 0xF8	; 248
    16de:	18 82       	st	Y, r1
    16e0:	c1 54       	subi	r28, 0x41	; 65
    16e2:	d7 40       	sbci	r29, 0x07	; 7
		delay(500);
    16e4:	84 ef       	ldi	r24, 0xF4	; 244
    16e6:	91 e0       	ldi	r25, 0x01	; 1
    16e8:	05 d7       	rcall	.+3594   	; 0x24f4 <_Z5delayi>
		strcpy(content,"<html><head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0\"></head><body>");
    16ea:	8e 01       	movw	r16, r28
    16ec:	07 51       	subi	r16, 0x17	; 23
    16ee:	1c 4f       	sbci	r17, 0xFC	; 252
    16f0:	83 e7       	ldi	r24, 0x73	; 115
    16f2:	e9 e8       	ldi	r30, 0x89	; 137
    16f4:	f3 e0       	ldi	r31, 0x03	; 3
    16f6:	d8 01       	movw	r26, r16
    16f8:	01 90       	ld	r0, Z+
    16fa:	0d 92       	st	X+, r0
    16fc:	8a 95       	dec	r24
    16fe:	e1 f7       	brne	.-8      	; 0x16f8 <_Z6WebAppv+0x6e>
		strcat(content,"<title>HCM Console</title>");
    1700:	d8 01       	movw	r26, r16
    1702:	0d 90       	ld	r0, X+
    1704:	00 20       	and	r0, r0
    1706:	e9 f7       	brne	.-6      	; 0x1702 <_Z6WebAppv+0x78>
    1708:	11 97       	sbiw	r26, 0x01	; 1
    170a:	8b e1       	ldi	r24, 0x1B	; 27
    170c:	ec ef       	ldi	r30, 0xFC	; 252
    170e:	f3 e0       	ldi	r31, 0x03	; 3
    1710:	01 90       	ld	r0, Z+
    1712:	0d 92       	st	X+, r0
    1714:	8a 95       	dec	r24
    1716:	e1 f7       	brne	.-8      	; 0x1710 <_Z6WebAppv+0x86>
		strcat(content,"<div style=\"font-size: medium; text-align: center;\"><span>");
    1718:	d8 01       	movw	r26, r16
    171a:	0d 90       	ld	r0, X+
    171c:	00 20       	and	r0, r0
    171e:	e9 f7       	brne	.-6      	; 0x171a <_Z6WebAppv+0x90>
    1720:	11 97       	sbiw	r26, 0x01	; 1
    1722:	8b e3       	ldi	r24, 0x3B	; 59
    1724:	e7 e1       	ldi	r30, 0x17	; 23
    1726:	f4 e0       	ldi	r31, 0x04	; 4
    1728:	01 90       	ld	r0, Z+
    172a:	0d 92       	st	X+, r0
    172c:	8a 95       	dec	r24
    172e:	e1 f7       	brne	.-8      	; 0x1728 <_Z6WebAppv+0x9e>
		strcat(content,"<form method=\"POST\">");
    1730:	d8 01       	movw	r26, r16
    1732:	0d 90       	ld	r0, X+
    1734:	00 20       	and	r0, r0
    1736:	e9 f7       	brne	.-6      	; 0x1732 <_Z6WebAppv+0xa8>
    1738:	11 97       	sbiw	r26, 0x01	; 1
    173a:	85 e1       	ldi	r24, 0x15	; 21
    173c:	e2 e5       	ldi	r30, 0x52	; 82
    173e:	f4 e0       	ldi	r31, 0x04	; 4
    1740:	01 90       	ld	r0, Z+
    1742:	0d 92       	st	X+, r0
    1744:	8a 95       	dec	r24
    1746:	e1 f7       	brne	.-8      	; 0x1740 <_Z6WebAppv+0xb6>
		strcat(content,"<p><strong>SERIAL: ");
    1748:	d8 01       	movw	r26, r16
    174a:	0d 90       	ld	r0, X+
    174c:	00 20       	and	r0, r0
    174e:	e9 f7       	brne	.-6      	; 0x174a <_Z6WebAppv+0xc0>
    1750:	11 97       	sbiw	r26, 0x01	; 1
    1752:	84 e1       	ldi	r24, 0x14	; 20
    1754:	e7 e6       	ldi	r30, 0x67	; 103
    1756:	f4 e0       	ldi	r31, 0x04	; 4
    1758:	01 90       	ld	r0, Z+
    175a:	0d 92       	st	X+, r0
    175c:	8a 95       	dec	r24
    175e:	e1 f7       	brne	.-8      	; 0x1758 <_Z6WebAppv+0xce>
		strcat(content,__system_var.serial_number);
    1760:	6c eb       	ldi	r22, 0xBC	; 188
    1762:	7a e0       	ldi	r23, 0x0A	; 10
    1764:	c8 01       	movw	r24, r16
    1766:	0e 94 98 16 	call	0x2d30	; 0x2d30 <strcat>
		strcat(content,"</strong></p><p><strong>SSID</strong><br><input type=\"text\" name=\"ssid\" value=\"");
    176a:	d8 01       	movw	r26, r16
    176c:	0d 90       	ld	r0, X+
    176e:	00 20       	and	r0, r0
    1770:	e9 f7       	brne	.-6      	; 0x176c <_Z6WebAppv+0xe2>
    1772:	11 97       	sbiw	r26, 0x01	; 1
    1774:	80 e5       	ldi	r24, 0x50	; 80
    1776:	eb e7       	ldi	r30, 0x7B	; 123
    1778:	f4 e0       	ldi	r31, 0x04	; 4
    177a:	01 90       	ld	r0, Z+
    177c:	0d 92       	st	X+, r0
    177e:	8a 95       	dec	r24
    1780:	e1 f7       	brne	.-8      	; 0x177a <_Z6WebAppv+0xf0>
		strcat(content,__network_data.ssid);
    1782:	6d e8       	ldi	r22, 0x8D	; 141
    1784:	78 e0       	ldi	r23, 0x08	; 8
    1786:	c8 01       	movw	r24, r16
    1788:	0e 94 98 16 	call	0x2d30	; 0x2d30 <strcat>
		strcat(content,"\"></p>");
    178c:	d8 01       	movw	r26, r16
    178e:	0d 90       	ld	r0, X+
    1790:	00 20       	and	r0, r0
    1792:	e9 f7       	brne	.-6      	; 0x178e <_Z6WebAppv+0x104>
    1794:	11 97       	sbiw	r26, 0x01	; 1
    1796:	87 e0       	ldi	r24, 0x07	; 7
    1798:	eb ec       	ldi	r30, 0xCB	; 203
    179a:	f4 e0       	ldi	r31, 0x04	; 4
    179c:	01 90       	ld	r0, Z+
    179e:	0d 92       	st	X+, r0
    17a0:	8a 95       	dec	r24
    17a2:	e1 f7       	brne	.-8      	; 0x179c <_Z6WebAppv+0x112>
		strcat(content,"<p><strong>PASSWORD</strong><br><input type=\"password\" name=\"password\" value=\"");
    17a4:	d8 01       	movw	r26, r16
    17a6:	0d 90       	ld	r0, X+
    17a8:	00 20       	and	r0, r0
    17aa:	e9 f7       	brne	.-6      	; 0x17a6 <_Z6WebAppv+0x11c>
    17ac:	11 97       	sbiw	r26, 0x01	; 1
    17ae:	8f e4       	ldi	r24, 0x4F	; 79
    17b0:	e2 ed       	ldi	r30, 0xD2	; 210
    17b2:	f4 e0       	ldi	r31, 0x04	; 4
    17b4:	01 90       	ld	r0, Z+
    17b6:	0d 92       	st	X+, r0
    17b8:	8a 95       	dec	r24
    17ba:	e1 f7       	brne	.-8      	; 0x17b4 <_Z6WebAppv+0x12a>
		strcat(content,__network_data.password);
    17bc:	61 ea       	ldi	r22, 0xA1	; 161
    17be:	78 e0       	ldi	r23, 0x08	; 8
    17c0:	c8 01       	movw	r24, r16
    17c2:	0e 94 98 16 	call	0x2d30	; 0x2d30 <strcat>
		strcat(content,"\"></p>");
    17c6:	d8 01       	movw	r26, r16
    17c8:	0d 90       	ld	r0, X+
    17ca:	00 20       	and	r0, r0
    17cc:	e9 f7       	brne	.-6      	; 0x17c8 <_Z6WebAppv+0x13e>
    17ce:	11 97       	sbiw	r26, 0x01	; 1
    17d0:	87 e0       	ldi	r24, 0x07	; 7
    17d2:	eb ec       	ldi	r30, 0xCB	; 203
    17d4:	f4 e0       	ldi	r31, 0x04	; 4
    17d6:	01 90       	ld	r0, Z+
    17d8:	0d 92       	st	X+, r0
    17da:	8a 95       	dec	r24
    17dc:	e1 f7       	brne	.-8      	; 0x17d6 <_Z6WebAppv+0x14c>
		strcat(content,"<p><strong>APN</strong><br><input type=\"text\" name=\"apn\" value=\"");
    17de:	d8 01       	movw	r26, r16
    17e0:	0d 90       	ld	r0, X+
    17e2:	00 20       	and	r0, r0
    17e4:	e9 f7       	brne	.-6      	; 0x17e0 <_Z6WebAppv+0x156>
    17e6:	11 97       	sbiw	r26, 0x01	; 1
    17e8:	81 e4       	ldi	r24, 0x41	; 65
    17ea:	e1 e2       	ldi	r30, 0x21	; 33
    17ec:	f5 e0       	ldi	r31, 0x05	; 5
    17ee:	01 90       	ld	r0, Z+
    17f0:	0d 92       	st	X+, r0
    17f2:	8a 95       	dec	r24
    17f4:	e1 f7       	brne	.-8      	; 0x17ee <_Z6WebAppv+0x164>
		strcat(content,__network_data.apn);
    17f6:	65 eb       	ldi	r22, 0xB5	; 181
    17f8:	78 e0       	ldi	r23, 0x08	; 8
    17fa:	c8 01       	movw	r24, r16
    17fc:	0e 94 98 16 	call	0x2d30	; 0x2d30 <strcat>
		strcat(content,"\"></p>");
    1800:	d8 01       	movw	r26, r16
    1802:	0d 90       	ld	r0, X+
    1804:	00 20       	and	r0, r0
    1806:	e9 f7       	brne	.-6      	; 0x1802 <_Z6WebAppv+0x178>
    1808:	11 97       	sbiw	r26, 0x01	; 1
    180a:	87 e0       	ldi	r24, 0x07	; 7
    180c:	eb ec       	ldi	r30, 0xCB	; 203
    180e:	f4 e0       	ldi	r31, 0x04	; 4
    1810:	01 90       	ld	r0, Z+
    1812:	0d 92       	st	X+, r0
    1814:	8a 95       	dec	r24
    1816:	e1 f7       	brne	.-8      	; 0x1810 <_Z6WebAppv+0x186>
		strcat(content,"<p><strong>HOST</strong><br><input type=\"text\" name=\"host\" value=\"");
    1818:	d8 01       	movw	r26, r16
    181a:	0d 90       	ld	r0, X+
    181c:	00 20       	and	r0, r0
    181e:	e9 f7       	brne	.-6      	; 0x181a <_Z6WebAppv+0x190>
    1820:	11 97       	sbiw	r26, 0x01	; 1
    1822:	83 e4       	ldi	r24, 0x43	; 67
    1824:	e2 e6       	ldi	r30, 0x62	; 98
    1826:	f5 e0       	ldi	r31, 0x05	; 5
    1828:	01 90       	ld	r0, Z+
    182a:	0d 92       	st	X+, r0
    182c:	8a 95       	dec	r24
    182e:	e1 f7       	brne	.-8      	; 0x1828 <_Z6WebAppv+0x19e>
		strcat(content,__network_data.host);
    1830:	6a e6       	ldi	r22, 0x6A	; 106
    1832:	78 e0       	ldi	r23, 0x08	; 8
    1834:	c8 01       	movw	r24, r16
    1836:	0e 94 98 16 	call	0x2d30	; 0x2d30 <strcat>
		strcat(content,"\"></p>");
    183a:	d8 01       	movw	r26, r16
    183c:	0d 90       	ld	r0, X+
    183e:	00 20       	and	r0, r0
    1840:	e9 f7       	brne	.-6      	; 0x183c <_Z6WebAppv+0x1b2>
    1842:	11 97       	sbiw	r26, 0x01	; 1
    1844:	87 e0       	ldi	r24, 0x07	; 7
    1846:	eb ec       	ldi	r30, 0xCB	; 203
    1848:	f4 e0       	ldi	r31, 0x04	; 4
    184a:	01 90       	ld	r0, Z+
    184c:	0d 92       	st	X+, r0
    184e:	8a 95       	dec	r24
    1850:	e1 f7       	brne	.-8      	; 0x184a <_Z6WebAppv+0x1c0>
		strcat(content,"<input type=\"submit\"></form></span></div>");
    1852:	d8 01       	movw	r26, r16
    1854:	0d 90       	ld	r0, X+
    1856:	00 20       	and	r0, r0
    1858:	e9 f7       	brne	.-6      	; 0x1854 <_Z6WebAppv+0x1ca>
    185a:	11 97       	sbiw	r26, 0x01	; 1
    185c:	8a e2       	ldi	r24, 0x2A	; 42
    185e:	e5 ea       	ldi	r30, 0xA5	; 165
    1860:	f5 e0       	ldi	r31, 0x05	; 5
    1862:	01 90       	ld	r0, Z+
    1864:	0d 92       	st	X+, r0
    1866:	8a 95       	dec	r24
    1868:	e1 f7       	brne	.-8      	; 0x1862 <_Z6WebAppv+0x1d8>
		strcat(content,"</body></html>");
    186a:	d8 01       	movw	r26, r16
    186c:	0d 90       	ld	r0, X+
    186e:	00 20       	and	r0, r0
    1870:	e9 f7       	brne	.-6      	; 0x186c <_Z6WebAppv+0x1e2>
    1872:	11 97       	sbiw	r26, 0x01	; 1
    1874:	8f e0       	ldi	r24, 0x0F	; 15
    1876:	ef ec       	ldi	r30, 0xCF	; 207
    1878:	f5 e0       	ldi	r31, 0x05	; 5
    187a:	01 90       	ld	r0, Z+
    187c:	0d 92       	st	X+, r0
    187e:	8a 95       	dec	r24
    1880:	e1 f7       	brne	.-8      	; 0x187a <_Z6WebAppv+0x1f0>

		contentLength = strlen(content);
    1882:	f8 01       	movw	r30, r16
    1884:	01 90       	ld	r0, Z+
    1886:	00 20       	and	r0, r0
    1888:	e9 f7       	brne	.-6      	; 0x1884 <_Z6WebAppv+0x1fa>
    188a:	cf 01       	movw	r24, r30
    188c:	01 97       	sbiw	r24, 0x01	; 1

		strcpy(page,"HTTP/1.0 200 OK\r\nContent-Type: text/html; charset=UTF-8\r\nPragma: no-cache\r\nContent-Length: ");
    188e:	2c e5       	ldi	r18, 0x5C	; 92
    1890:	ee ed       	ldi	r30, 0xDE	; 222
    1892:	f5 e0       	ldi	r31, 0x05	; 5
    1894:	ae 01       	movw	r20, r28
    1896:	4f 5f       	subi	r20, 0xFF	; 255
    1898:	5f 4f       	sbci	r21, 0xFF	; 255
    189a:	6a 01       	movw	r12, r20
    189c:	da 01       	movw	r26, r20
    189e:	01 90       	ld	r0, Z+
    18a0:	0d 92       	st	X+, r0
    18a2:	2a 95       	dec	r18
    18a4:	e1 f7       	brne	.-8      	; 0x189e <_Z6WebAppv+0x214>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    18a6:	4a e0       	ldi	r20, 0x0A	; 10
    18a8:	be 01       	movw	r22, r28
    18aa:	65 5c       	subi	r22, 0xC5	; 197
    18ac:	78 4f       	sbci	r23, 0xF8	; 248
    18ae:	80 1b       	sub	r24, r16
    18b0:	91 0b       	sbc	r25, r17
    18b2:	0e 94 f6 16 	call	0x2dec	; 0x2dec <__itoa_ncheck>
		strcat(page,itoa(contentLength,converter,10));
    18b6:	bc 01       	movw	r22, r24
    18b8:	c6 01       	movw	r24, r12
    18ba:	0e 94 98 16 	call	0x2d30	; 0x2d30 <strcat>
		strcat(page,"\r\nConnection: close\r\n\r\n");
    18be:	d6 01       	movw	r26, r12
    18c0:	0d 90       	ld	r0, X+
    18c2:	00 20       	and	r0, r0
    18c4:	e9 f7       	brne	.-6      	; 0x18c0 <_Z6WebAppv+0x236>
    18c6:	11 97       	sbiw	r26, 0x01	; 1
    18c8:	88 e1       	ldi	r24, 0x18	; 24
    18ca:	ea e3       	ldi	r30, 0x3A	; 58
    18cc:	f6 e0       	ldi	r31, 0x06	; 6
    18ce:	01 90       	ld	r0, Z+
    18d0:	0d 92       	st	X+, r0
    18d2:	8a 95       	dec	r24
    18d4:	e1 f7       	brne	.-8      	; 0x18ce <_Z6WebAppv+0x244>
		strcat(page,content);
    18d6:	b8 01       	movw	r22, r16
    18d8:	c6 01       	movw	r24, r12
    18da:	0e 94 98 16 	call	0x2d30	; 0x2d30 <strcat>
		
		sendToAP(page, connection);
    18de:	be 01       	movw	r22, r28
    18e0:	60 5c       	subi	r22, 0xC0	; 192
    18e2:	78 4f       	sbci	r23, 0xF8	; 248
    18e4:	c6 01       	movw	r24, r12
    18e6:	ec db       	rcall	.-2088   	; 0x10c0 <_Z8sendToAPPcS_>
		readUntil("OK",3);
    18e8:	63 e0       	ldi	r22, 0x03	; 3
    18ea:	70 e0       	ldi	r23, 0x00	; 0
    18ec:	8e ef       	ldi	r24, 0xFE	; 254
    18ee:	91 e0       	ldi	r25, 0x01	; 1
    18f0:	94 da       	rcall	.-2776   	; 0xe1a <_Z9readUntilPKci>
		clearReadLine();
    18f2:	c6 d7       	rcall	.+3980   	; 0x2880 <_Z13clearReadLinev>
	}
	
	if (strstr(__network_data.esp_buffer, "POST / HTTP/") != 0){
    18f4:	62 e5       	ldi	r22, 0x52	; 82
    18f6:	76 e0       	ldi	r23, 0x06	; 6
    18f8:	82 ec       	ldi	r24, 0xC2	; 194
    18fa:	98 e0       	ldi	r25, 0x08	; 8
    18fc:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
    1900:	89 2b       	or	r24, r25
    1902:	09 f0       	breq	.+2      	; 0x1906 <_Z6WebAppv+0x27c>
    1904:	30 c1       	rjmp	.+608    	; 0x1b66 <_Z6WebAppv+0x4dc>
    1906:	3b c1       	rjmp	.+630    	; 0x1b7e <_Z6WebAppv+0x4f4>
		int timeout=0;
		int flag = 0;
		while (1){
			timeout++; delay(1);
    1908:	81 e0       	ldi	r24, 0x01	; 1
    190a:	90 e0       	ldi	r25, 0x00	; 0
    190c:	f3 d5       	rcall	.+3046   	; 0x24f4 <_Z5delayi>
    190e:	01 50       	subi	r16, 0x01	; 1
    1910:	11 09       	sbc	r17, r1
			if (timeout == 1000) break;
    1912:	21 f1       	breq	.+72     	; 0x195c <_Z6WebAppv+0x2d2>
			if (strstr(__network_data.esp_buffer,"password") != 0 || strstr(__network_data.esp_buffer,"ssid") != 0)break;
    1914:	6f e5       	ldi	r22, 0x5F	; 95
    1916:	76 e0       	ldi	r23, 0x06	; 6
    1918:	82 ec       	ldi	r24, 0xC2	; 194
    191a:	98 e0       	ldi	r25, 0x08	; 8
    191c:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
    1920:	89 2b       	or	r24, r25
    1922:	e1 f4       	brne	.+56     	; 0x195c <_Z6WebAppv+0x2d2>
    1924:	68 e6       	ldi	r22, 0x68	; 104
    1926:	76 e0       	ldi	r23, 0x06	; 6
    1928:	82 ec       	ldi	r24, 0xC2	; 194
    192a:	98 e0       	ldi	r25, 0x08	; 8
    192c:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
    1930:	89 2b       	or	r24, r25
    1932:	a1 f4       	brne	.+40     	; 0x195c <_Z6WebAppv+0x2d2>
			if (strstr(__network_data.esp_buffer,"\r\n") != 0){
    1934:	6f e4       	ldi	r22, 0x4F	; 79
    1936:	76 e0       	ldi	r23, 0x06	; 6
    1938:	82 ec       	ldi	r24, 0xC2	; 194
    193a:	98 e0       	ldi	r25, 0x08	; 8
    193c:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
    1940:	89 2b       	or	r24, r25
    1942:	11 f3       	breq	.-60     	; 0x1908 <_Z6WebAppv+0x27e>
				memset(__network_data.esp_buffer,' ',sizeof(__network_data.esp_buffer)-1);
    1944:	4b e2       	ldi	r20, 0x2B	; 43
    1946:	51 e0       	ldi	r21, 0x01	; 1
    1948:	60 e2       	ldi	r22, 0x20	; 32
    194a:	70 e0       	ldi	r23, 0x00	; 0
    194c:	82 ec       	ldi	r24, 0xC2	; 194
    194e:	98 e0       	ldi	r25, 0x08	; 8
    1950:	0e 94 91 16 	call	0x2d22	; 0x2d22 <memset>
				__network_data.index_esp = 0;
    1954:	f6 01       	movw	r30, r12
    1956:	11 82       	std	Z+1, r1	; 0x01
    1958:	10 82       	st	Z, r1
    195a:	d6 cf       	rjmp	.-84     	; 0x1908 <_Z6WebAppv+0x27e>
			}
		}
		delay(200);
    195c:	88 ec       	ldi	r24, 0xC8	; 200
    195e:	90 e0       	ldi	r25, 0x00	; 0
    1960:	c9 d5       	rcall	.+2962   	; 0x24f4 <_Z5delayi>
		if (strstr(__network_data.esp_buffer,"ssid") != 0){
    1962:	68 e6       	ldi	r22, 0x68	; 104
    1964:	76 e0       	ldi	r23, 0x06	; 6
    1966:	82 ec       	ldi	r24, 0xC2	; 194
    1968:	98 e0       	ldi	r25, 0x08	; 8
    196a:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
    196e:	8c 01       	movw	r16, r24
    1970:	89 2b       	or	r24, r25
    1972:	61 f1       	breq	.+88     	; 0x19cc <_Z6WebAppv+0x342>
			int pos=0;
			char *p1 = strstr(__network_data.esp_buffer,"ssid");
			p1+=5;
			memset(__network_data.ssid,' ',sizeof(__network_data.ssid)-1);
    1974:	43 e1       	ldi	r20, 0x13	; 19
    1976:	50 e0       	ldi	r21, 0x00	; 0
    1978:	60 e2       	ldi	r22, 0x20	; 32
    197a:	70 e0       	ldi	r23, 0x00	; 0
    197c:	8d e8       	ldi	r24, 0x8D	; 141
    197e:	98 e0       	ldi	r25, 0x08	; 8
    1980:	0e 94 91 16 	call	0x2d22	; 0x2d22 <memset>
			while (1){
				if (pos == sizeof(__network_data.ssid))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
    1984:	f8 01       	movw	r30, r16
    1986:	85 81       	ldd	r24, Z+5	; 0x05
    1988:	86 32       	cpi	r24, 0x26	; 38
    198a:	a1 f0       	breq	.+40     	; 0x19b4 <_Z6WebAppv+0x32a>
    198c:	8d 30       	cpi	r24, 0x0D	; 13
    198e:	a9 f0       	breq	.+42     	; 0x19ba <_Z6WebAppv+0x330>
    1990:	8a 30       	cpi	r24, 0x0A	; 10
    1992:	09 f0       	breq	.+2      	; 0x1996 <_Z6WebAppv+0x30c>
    1994:	df c0       	rjmp	.+446    	; 0x1b54 <_Z6WebAppv+0x4ca>
    1996:	14 c0       	rjmp	.+40     	; 0x19c0 <_Z6WebAppv+0x336>
    1998:	91 91       	ld	r25, Z+
    199a:	96 32       	cpi	r25, 0x26	; 38
    199c:	99 f0       	breq	.+38     	; 0x19c4 <_Z6WebAppv+0x33a>
    199e:	9d 30       	cpi	r25, 0x0D	; 13
    19a0:	89 f0       	breq	.+34     	; 0x19c4 <_Z6WebAppv+0x33a>
    19a2:	9a 30       	cpi	r25, 0x0A	; 10
    19a4:	79 f0       	breq	.+30     	; 0x19c4 <_Z6WebAppv+0x33a>
				__network_data.ssid[pos++] = *p1++;
    19a6:	2f 5f       	subi	r18, 0xFF	; 255
    19a8:	3f 4f       	sbci	r19, 0xFF	; 255
    19aa:	9d 93       	st	X+, r25
			int pos=0;
			char *p1 = strstr(__network_data.esp_buffer,"ssid");
			p1+=5;
			memset(__network_data.ssid,' ',sizeof(__network_data.ssid)-1);
			while (1){
				if (pos == sizeof(__network_data.ssid))break;
    19ac:	24 31       	cpi	r18, 0x14	; 20
    19ae:	31 05       	cpc	r19, r1
    19b0:	99 f7       	brne	.-26     	; 0x1998 <_Z6WebAppv+0x30e>
    19b2:	08 c0       	rjmp	.+16     	; 0x19c4 <_Z6WebAppv+0x33a>
				__network_data.index_esp = 0;
			}
		}
		delay(200);
		if (strstr(__network_data.esp_buffer,"ssid") != 0){
			int pos=0;
    19b4:	20 e0       	ldi	r18, 0x00	; 0
    19b6:	30 e0       	ldi	r19, 0x00	; 0
    19b8:	05 c0       	rjmp	.+10     	; 0x19c4 <_Z6WebAppv+0x33a>
    19ba:	20 e0       	ldi	r18, 0x00	; 0
    19bc:	30 e0       	ldi	r19, 0x00	; 0
    19be:	02 c0       	rjmp	.+4      	; 0x19c4 <_Z6WebAppv+0x33a>
    19c0:	20 e0       	ldi	r18, 0x00	; 0
    19c2:	30 e0       	ldi	r19, 0x00	; 0
			while (1){
				if (pos == sizeof(__network_data.ssid))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
				__network_data.ssid[pos++] = *p1++;
			}
			__network_data.ssid[pos] = '\0';
    19c4:	f9 01       	movw	r30, r18
    19c6:	e6 59       	subi	r30, 0x96	; 150
    19c8:	f7 4f       	sbci	r31, 0xF7	; 247
    19ca:	13 a2       	std	Z+35, r1	; 0x23
			flag++;
		}
		if (strstr(__network_data.esp_buffer,"password") != 0){
    19cc:	6f e5       	ldi	r22, 0x5F	; 95
    19ce:	76 e0       	ldi	r23, 0x06	; 6
    19d0:	82 ec       	ldi	r24, 0xC2	; 194
    19d2:	98 e0       	ldi	r25, 0x08	; 8
    19d4:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
    19d8:	8c 01       	movw	r16, r24
    19da:	89 2b       	or	r24, r25
    19dc:	61 f1       	breq	.+88     	; 0x1a36 <_Z6WebAppv+0x3ac>
			int pos=0;
			char *p1 = strstr(__network_data.esp_buffer,"password");
			p1+=9;
			memset(__network_data.password,' ',sizeof(__network_data.password)-1);
    19de:	43 e1       	ldi	r20, 0x13	; 19
    19e0:	50 e0       	ldi	r21, 0x00	; 0
    19e2:	60 e2       	ldi	r22, 0x20	; 32
    19e4:	70 e0       	ldi	r23, 0x00	; 0
    19e6:	81 ea       	ldi	r24, 0xA1	; 161
    19e8:	98 e0       	ldi	r25, 0x08	; 8
    19ea:	0e 94 91 16 	call	0x2d22	; 0x2d22 <memset>
			while (1){
				if (pos == sizeof(__network_data.password))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
    19ee:	f8 01       	movw	r30, r16
    19f0:	81 85       	ldd	r24, Z+9	; 0x09
    19f2:	86 32       	cpi	r24, 0x26	; 38
    19f4:	a1 f0       	breq	.+40     	; 0x1a1e <_Z6WebAppv+0x394>
    19f6:	8d 30       	cpi	r24, 0x0D	; 13
    19f8:	a9 f0       	breq	.+42     	; 0x1a24 <_Z6WebAppv+0x39a>
    19fa:	8a 30       	cpi	r24, 0x0A	; 10
    19fc:	09 f0       	breq	.+2      	; 0x1a00 <_Z6WebAppv+0x376>
    19fe:	a1 c0       	rjmp	.+322    	; 0x1b42 <_Z6WebAppv+0x4b8>
    1a00:	14 c0       	rjmp	.+40     	; 0x1a2a <_Z6WebAppv+0x3a0>
    1a02:	91 91       	ld	r25, Z+
    1a04:	96 32       	cpi	r25, 0x26	; 38
    1a06:	99 f0       	breq	.+38     	; 0x1a2e <_Z6WebAppv+0x3a4>
    1a08:	9d 30       	cpi	r25, 0x0D	; 13
    1a0a:	89 f0       	breq	.+34     	; 0x1a2e <_Z6WebAppv+0x3a4>
    1a0c:	9a 30       	cpi	r25, 0x0A	; 10
    1a0e:	79 f0       	breq	.+30     	; 0x1a2e <_Z6WebAppv+0x3a4>
				__network_data.password[pos++] = *p1++;
    1a10:	2f 5f       	subi	r18, 0xFF	; 255
    1a12:	3f 4f       	sbci	r19, 0xFF	; 255
    1a14:	9d 93       	st	X+, r25
			int pos=0;
			char *p1 = strstr(__network_data.esp_buffer,"password");
			p1+=9;
			memset(__network_data.password,' ',sizeof(__network_data.password)-1);
			while (1){
				if (pos == sizeof(__network_data.password))break;
    1a16:	24 31       	cpi	r18, 0x14	; 20
    1a18:	31 05       	cpc	r19, r1
    1a1a:	99 f7       	brne	.-26     	; 0x1a02 <_Z6WebAppv+0x378>
    1a1c:	08 c0       	rjmp	.+16     	; 0x1a2e <_Z6WebAppv+0x3a4>
			}
			__network_data.ssid[pos] = '\0';
			flag++;
		}
		if (strstr(__network_data.esp_buffer,"password") != 0){
			int pos=0;
    1a1e:	20 e0       	ldi	r18, 0x00	; 0
    1a20:	30 e0       	ldi	r19, 0x00	; 0
    1a22:	05 c0       	rjmp	.+10     	; 0x1a2e <_Z6WebAppv+0x3a4>
    1a24:	20 e0       	ldi	r18, 0x00	; 0
    1a26:	30 e0       	ldi	r19, 0x00	; 0
    1a28:	02 c0       	rjmp	.+4      	; 0x1a2e <_Z6WebAppv+0x3a4>
    1a2a:	20 e0       	ldi	r18, 0x00	; 0
    1a2c:	30 e0       	ldi	r19, 0x00	; 0
			while (1){
				if (pos == sizeof(__network_data.password))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
				__network_data.password[pos++] = *p1++;
			}
			__network_data.password[pos] = '\0';
    1a2e:	f9 01       	movw	r30, r18
    1a30:	e6 59       	subi	r30, 0x96	; 150
    1a32:	f7 4f       	sbci	r31, 0xF7	; 247
    1a34:	17 aa       	std	Z+55, r1	; 0x37
			flag++;
		}
		
		if (strstr(__network_data.esp_buffer,"apn") != 0){
    1a36:	6d e6       	ldi	r22, 0x6D	; 109
    1a38:	76 e0       	ldi	r23, 0x06	; 6
    1a3a:	82 ec       	ldi	r24, 0xC2	; 194
    1a3c:	98 e0       	ldi	r25, 0x08	; 8
    1a3e:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
    1a42:	8c 01       	movw	r16, r24
    1a44:	89 2b       	or	r24, r25
    1a46:	61 f1       	breq	.+88     	; 0x1aa0 <_Z6WebAppv+0x416>
			int pos=0;
			char *p1 = strstr(__network_data.esp_buffer,"apn");
			p1+=4;
			memset(__network_data.apn,' ',sizeof(__network_data.apn)-1);
    1a48:	49 e0       	ldi	r20, 0x09	; 9
    1a4a:	50 e0       	ldi	r21, 0x00	; 0
    1a4c:	60 e2       	ldi	r22, 0x20	; 32
    1a4e:	70 e0       	ldi	r23, 0x00	; 0
    1a50:	85 eb       	ldi	r24, 0xB5	; 181
    1a52:	98 e0       	ldi	r25, 0x08	; 8
    1a54:	0e 94 91 16 	call	0x2d22	; 0x2d22 <memset>
			while (1){
				if (pos == sizeof(__network_data.apn))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
    1a58:	f8 01       	movw	r30, r16
    1a5a:	84 81       	ldd	r24, Z+4	; 0x04
    1a5c:	86 32       	cpi	r24, 0x26	; 38
    1a5e:	a1 f0       	breq	.+40     	; 0x1a88 <_Z6WebAppv+0x3fe>
    1a60:	8d 30       	cpi	r24, 0x0D	; 13
    1a62:	a9 f0       	breq	.+42     	; 0x1a8e <_Z6WebAppv+0x404>
    1a64:	8a 30       	cpi	r24, 0x0A	; 10
    1a66:	09 f0       	breq	.+2      	; 0x1a6a <_Z6WebAppv+0x3e0>
    1a68:	63 c0       	rjmp	.+198    	; 0x1b30 <_Z6WebAppv+0x4a6>
    1a6a:	14 c0       	rjmp	.+40     	; 0x1a94 <_Z6WebAppv+0x40a>
    1a6c:	91 91       	ld	r25, Z+
    1a6e:	96 32       	cpi	r25, 0x26	; 38
    1a70:	99 f0       	breq	.+38     	; 0x1a98 <_Z6WebAppv+0x40e>
    1a72:	9d 30       	cpi	r25, 0x0D	; 13
    1a74:	89 f0       	breq	.+34     	; 0x1a98 <_Z6WebAppv+0x40e>
    1a76:	9a 30       	cpi	r25, 0x0A	; 10
    1a78:	79 f0       	breq	.+30     	; 0x1a98 <_Z6WebAppv+0x40e>
				__network_data.apn[pos++] = *p1++;
    1a7a:	2f 5f       	subi	r18, 0xFF	; 255
    1a7c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a7e:	9d 93       	st	X+, r25
			int pos=0;
			char *p1 = strstr(__network_data.esp_buffer,"apn");
			p1+=4;
			memset(__network_data.apn,' ',sizeof(__network_data.apn)-1);
			while (1){
				if (pos == sizeof(__network_data.apn))break;
    1a80:	2a 30       	cpi	r18, 0x0A	; 10
    1a82:	31 05       	cpc	r19, r1
    1a84:	99 f7       	brne	.-26     	; 0x1a6c <_Z6WebAppv+0x3e2>
    1a86:	08 c0       	rjmp	.+16     	; 0x1a98 <_Z6WebAppv+0x40e>
			__network_data.password[pos] = '\0';
			flag++;
		}
		
		if (strstr(__network_data.esp_buffer,"apn") != 0){
			int pos=0;
    1a88:	20 e0       	ldi	r18, 0x00	; 0
    1a8a:	30 e0       	ldi	r19, 0x00	; 0
    1a8c:	05 c0       	rjmp	.+10     	; 0x1a98 <_Z6WebAppv+0x40e>
    1a8e:	20 e0       	ldi	r18, 0x00	; 0
    1a90:	30 e0       	ldi	r19, 0x00	; 0
    1a92:	02 c0       	rjmp	.+4      	; 0x1a98 <_Z6WebAppv+0x40e>
    1a94:	20 e0       	ldi	r18, 0x00	; 0
    1a96:	30 e0       	ldi	r19, 0x00	; 0
			while (1){
				if (pos == sizeof(__network_data.apn))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
				__network_data.apn[pos++] = *p1++;
			}
			__network_data.apn[pos] = '\0';
    1a98:	f9 01       	movw	r30, r18
    1a9a:	eb 54       	subi	r30, 0x4B	; 75
    1a9c:	f7 4f       	sbci	r31, 0xF7	; 247
    1a9e:	10 82       	st	Z, r1
			flag++;
		}
		
		if (strstr(__network_data.esp_buffer,"host") != 0){
    1aa0:	61 e7       	ldi	r22, 0x71	; 113
    1aa2:	76 e0       	ldi	r23, 0x06	; 6
    1aa4:	82 ec       	ldi	r24, 0xC2	; 194
    1aa6:	98 e0       	ldi	r25, 0x08	; 8
    1aa8:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
    1aac:	89 2b       	or	r24, r25
    1aae:	79 f1       	breq	.+94     	; 0x1b0e <_Z6WebAppv+0x484>
			int pos=0;
			char *p1 = strstr(__network_data.host,"host");
    1ab0:	61 e7       	ldi	r22, 0x71	; 113
    1ab2:	76 e0       	ldi	r23, 0x06	; 6
    1ab4:	8a e6       	ldi	r24, 0x6A	; 106
    1ab6:	98 e0       	ldi	r25, 0x08	; 8
    1ab8:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <strstr>
    1abc:	6c 01       	movw	r12, r24
			p1+=5;
			memset(__network_data.host,' ',sizeof(__network_data.host)-1);
    1abe:	4d e1       	ldi	r20, 0x1D	; 29
    1ac0:	50 e0       	ldi	r21, 0x00	; 0
    1ac2:	60 e2       	ldi	r22, 0x20	; 32
    1ac4:	70 e0       	ldi	r23, 0x00	; 0
    1ac6:	8a e6       	ldi	r24, 0x6A	; 106
    1ac8:	98 e0       	ldi	r25, 0x08	; 8
    1aca:	0e 94 91 16 	call	0x2d22	; 0x2d22 <memset>
		}
		
		if (strstr(__network_data.esp_buffer,"host") != 0){
			int pos=0;
			char *p1 = strstr(__network_data.host,"host");
			p1+=5;
    1ace:	f5 e0       	ldi	r31, 0x05	; 5
    1ad0:	cf 0e       	add	r12, r31
    1ad2:	d1 1c       	adc	r13, r1
    1ad4:	0f 2e       	mov	r0, r31
    1ad6:	fa e6       	ldi	r31, 0x6A	; 106
    1ad8:	af 2e       	mov	r10, r31
    1ada:	f8 e0       	ldi	r31, 0x08	; 8
    1adc:	bf 2e       	mov	r11, r31
    1ade:	f0 2d       	mov	r31, r0
			__network_data.apn[pos] = '\0';
			flag++;
		}
		
		if (strstr(__network_data.esp_buffer,"host") != 0){
			int pos=0;
    1ae0:	00 e0       	ldi	r16, 0x00	; 0
    1ae2:	10 e0       	ldi	r17, 0x00	; 0
			char *p1 = strstr(__network_data.host,"host");
			p1+=5;
			memset(__network_data.host,' ',sizeof(__network_data.host)-1);
			while (1){
				if (pos == sizeof(__network_data.host))break;
				if (!isalnum(*p1))break;
    1ae4:	f6 01       	movw	r30, r12
    1ae6:	f1 90       	ld	r15, Z+
    1ae8:	6f 01       	movw	r12, r30
    1aea:	8f 2d       	mov	r24, r15
    1aec:	90 e0       	ldi	r25, 0x00	; 0
    1aee:	0e 94 7a 16 	call	0x2cf4	; 0x2cf4 <isalnum>
    1af2:	89 2b       	or	r24, r25
    1af4:	41 f0       	breq	.+16     	; 0x1b06 <_Z6WebAppv+0x47c>
				__network_data.host[pos++] = *p1++;
    1af6:	0f 5f       	subi	r16, 0xFF	; 255
    1af8:	1f 4f       	sbci	r17, 0xFF	; 255
    1afa:	f5 01       	movw	r30, r10
    1afc:	f1 92       	st	Z+, r15
    1afe:	5f 01       	movw	r10, r30
			int pos=0;
			char *p1 = strstr(__network_data.host,"host");
			p1+=5;
			memset(__network_data.host,' ',sizeof(__network_data.host)-1);
			while (1){
				if (pos == sizeof(__network_data.host))break;
    1b00:	0e 31       	cpi	r16, 0x1E	; 30
    1b02:	11 05       	cpc	r17, r1
    1b04:	79 f7       	brne	.-34     	; 0x1ae4 <_Z6WebAppv+0x45a>
				if (!isalnum(*p1))break;
				__network_data.host[pos++] = *p1++;
			}
			__network_data.host[pos] = '\0';
    1b06:	f8 01       	movw	r30, r16
    1b08:	e6 59       	subi	r30, 0x96	; 150
    1b0a:	f7 4f       	sbci	r31, 0xF7	; 247
    1b0c:	10 82       	st	Z, r1
			flag++;
		}
		
		//if (flag == 4){
			__system_time.connection_timer_buffer = 0;
    1b0e:	ea e4       	ldi	r30, 0x4A	; 74
    1b10:	f8 e0       	ldi	r31, 0x08	; 8
    1b12:	13 8a       	std	Z+19, r1	; 0x13
    1b14:	12 8a       	std	Z+18, r1	; 0x12
			__system_time.connection_timer = 0;
    1b16:	11 8a       	std	Z+17, r1	; 0x11
    1b18:	10 8a       	std	Z+16, r1	; 0x10
			__network_data.is_server_connected = false;
    1b1a:	10 92 c1 08 	sts	0x08C1, r1	; 0x8008c1 <__network_data+0x57>
			__network_data.is_esp_connected = false;
    1b1e:	10 92 bf 08 	sts	0x08BF, r1	; 0x8008bf <__network_data+0x55>
			setSource(ESP);
    1b22:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <ESP>
    1b26:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <ESP+0x1>
    1b2a:	ac d5       	rcall	.+2904   	; 0x2684 <_Z9setSourcei>
		//}
		clearReadLine();
    1b2c:	a9 d6       	rcall	.+3410   	; 0x2880 <_Z13clearReadLinev>
    1b2e:	27 c0       	rjmp	.+78     	; 0x1b7e <_Z6WebAppv+0x4f4>
			p1+=4;
			memset(__network_data.apn,' ',sizeof(__network_data.apn)-1);
			while (1){
				if (pos == sizeof(__network_data.apn))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
				__network_data.apn[pos++] = *p1++;
    1b30:	80 93 b5 08 	sts	0x08B5, r24	; 0x8008b5 <__network_data+0x4b>
    1b34:	f8 01       	movw	r30, r16
    1b36:	35 96       	adiw	r30, 0x05	; 5
    1b38:	a6 eb       	ldi	r26, 0xB6	; 182
    1b3a:	b8 e0       	ldi	r27, 0x08	; 8
    1b3c:	21 e0       	ldi	r18, 0x01	; 1
    1b3e:	30 e0       	ldi	r19, 0x00	; 0
    1b40:	95 cf       	rjmp	.-214    	; 0x1a6c <_Z6WebAppv+0x3e2>
			p1+=9;
			memset(__network_data.password,' ',sizeof(__network_data.password)-1);
			while (1){
				if (pos == sizeof(__network_data.password))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
				__network_data.password[pos++] = *p1++;
    1b42:	80 93 a1 08 	sts	0x08A1, r24	; 0x8008a1 <__network_data+0x37>
    1b46:	f8 01       	movw	r30, r16
    1b48:	3a 96       	adiw	r30, 0x0a	; 10
    1b4a:	a2 ea       	ldi	r26, 0xA2	; 162
    1b4c:	b8 e0       	ldi	r27, 0x08	; 8
    1b4e:	21 e0       	ldi	r18, 0x01	; 1
    1b50:	30 e0       	ldi	r19, 0x00	; 0
    1b52:	57 cf       	rjmp	.-338    	; 0x1a02 <_Z6WebAppv+0x378>
			p1+=5;
			memset(__network_data.ssid,' ',sizeof(__network_data.ssid)-1);
			while (1){
				if (pos == sizeof(__network_data.ssid))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
				__network_data.ssid[pos++] = *p1++;
    1b54:	80 93 8d 08 	sts	0x088D, r24	; 0x80088d <__network_data+0x23>
    1b58:	f8 01       	movw	r30, r16
    1b5a:	36 96       	adiw	r30, 0x06	; 6
    1b5c:	ae e8       	ldi	r26, 0x8E	; 142
    1b5e:	b8 e0       	ldi	r27, 0x08	; 8
    1b60:	21 e0       	ldi	r18, 0x01	; 1
    1b62:	30 e0       	ldi	r19, 0x00	; 0
    1b64:	19 cf       	rjmp	.-462    	; 0x1998 <_Z6WebAppv+0x30e>
	
	if (strstr(__network_data.esp_buffer, "POST / HTTP/") != 0){
		int timeout=0;
		int flag = 0;
		while (1){
			timeout++; delay(1);
    1b66:	81 e0       	ldi	r24, 0x01	; 1
    1b68:	90 e0       	ldi	r25, 0x00	; 0
    1b6a:	c4 d4       	rcall	.+2440   	; 0x24f4 <_Z5delayi>
    1b6c:	07 ee       	ldi	r16, 0xE7	; 231
    1b6e:	13 e0       	ldi	r17, 0x03	; 3
			if (timeout == 1000) break;
			if (strstr(__network_data.esp_buffer,"password") != 0 || strstr(__network_data.esp_buffer,"ssid") != 0)break;
			if (strstr(__network_data.esp_buffer,"\r\n") != 0){
				memset(__network_data.esp_buffer,' ',sizeof(__network_data.esp_buffer)-1);
				__network_data.index_esp = 0;
    1b70:	0f 2e       	mov	r0, r31
    1b72:	f8 eb       	ldi	r31, 0xB8	; 184
    1b74:	cf 2e       	mov	r12, r31
    1b76:	fa e0       	ldi	r31, 0x0A	; 10
    1b78:	df 2e       	mov	r13, r31
    1b7a:	f0 2d       	mov	r31, r0
    1b7c:	cb ce       	rjmp	.-618    	; 0x1914 <_Z6WebAppv+0x28a>
			setSource(ESP);
		//}
		clearReadLine();
	}
	
}
    1b7e:	cf 5b       	subi	r28, 0xBF	; 191
    1b80:	d8 4f       	sbci	r29, 0xF8	; 248
    1b82:	0f b6       	in	r0, 0x3f	; 63
    1b84:	f8 94       	cli
    1b86:	de bf       	out	0x3e, r29	; 62
    1b88:	0f be       	out	0x3f, r0	; 63
    1b8a:	cd bf       	out	0x3d, r28	; 61
    1b8c:	df 91       	pop	r29
    1b8e:	cf 91       	pop	r28
    1b90:	1f 91       	pop	r17
    1b92:	0f 91       	pop	r16
    1b94:	ff 90       	pop	r15
    1b96:	df 90       	pop	r13
    1b98:	cf 90       	pop	r12
    1b9a:	bf 90       	pop	r11
    1b9c:	af 90       	pop	r10
    1b9e:	08 95       	ret

00001ba0 <_Z11switchRelayccc>:

void switchRelay(char moduleId, char relayId, char state){
    1ba0:	3f 92       	push	r3
    1ba2:	4f 92       	push	r4
    1ba4:	5f 92       	push	r5
    1ba6:	6f 92       	push	r6
    1ba8:	7f 92       	push	r7
    1baa:	8f 92       	push	r8
    1bac:	9f 92       	push	r9
    1bae:	af 92       	push	r10
    1bb0:	bf 92       	push	r11
    1bb2:	cf 92       	push	r12
    1bb4:	df 92       	push	r13
    1bb6:	ef 92       	push	r14
    1bb8:	ff 92       	push	r15
    1bba:	0f 93       	push	r16
    1bbc:	1f 93       	push	r17
    1bbe:	cf 93       	push	r28
    1bc0:	df 93       	push	r29
    1bc2:	cd b7       	in	r28, 0x3d	; 61
    1bc4:	de b7       	in	r29, 0x3e	; 62
    1bc6:	ad 97       	sbiw	r28, 0x2d	; 45
    1bc8:	0f b6       	in	r0, 0x3f	; 63
    1bca:	f8 94       	cli
    1bcc:	de bf       	out	0x3e, r29	; 62
    1bce:	0f be       	out	0x3f, r0	; 63
    1bd0:	cd bf       	out	0x3d, r28	; 61
    1bd2:	76 2e       	mov	r7, r22
    1bd4:	54 2e       	mov	r5, r20
	int impulse = 0;
	int _delay = 0;
	char conv[5];
	char response[40];
	
	if (getRelaySetting(moduleId,relayId) == 1){
    1bd6:	a6 2e       	mov	r10, r22
    1bd8:	b1 2c       	mov	r11, r1
    1bda:	e8 2e       	mov	r14, r24
    1bdc:	f1 2c       	mov	r15, r1
    1bde:	b5 01       	movw	r22, r10
    1be0:	c7 01       	movw	r24, r14
    1be2:	0e 94 ee 01 	call	0x3dc	; 0x3dc <_Z15getRelaySettingii>
    1be6:	01 97       	sbiw	r24, 0x01	; 1
    1be8:	39 f4       	brne	.+14     	; 0x1bf8 <_Z11switchRelayccc+0x58>
		impulse = __relay_setting.impulse;
    1bea:	e6 e0       	ldi	r30, 0x06	; 6
    1bec:	f8 e0       	ldi	r31, 0x08	; 8
    1bee:	c6 80       	ldd	r12, Z+6	; 0x06
    1bf0:	d7 80       	ldd	r13, Z+7	; 0x07
		_delay = __relay_setting._delay;
    1bf2:	84 80       	ldd	r8, Z+4	; 0x04
    1bf4:	95 80       	ldd	r9, Z+5	; 0x05
    1bf6:	04 c0       	rjmp	.+8      	; 0x1c00 <_Z11switchRelayccc+0x60>
void switchRelay(char moduleId, char relayId, char state){
	
	char r1,r2;
	int i;
	int impulse = 0;
	int _delay = 0;
    1bf8:	81 2c       	mov	r8, r1
    1bfa:	91 2c       	mov	r9, r1

void switchRelay(char moduleId, char relayId, char state){
	
	char r1,r2;
	int i;
	int impulse = 0;
    1bfc:	c1 2c       	mov	r12, r1
    1bfe:	d1 2c       	mov	r13, r1
    1c00:	0a e0       	ldi	r16, 0x0A	; 10
    1c02:	10 e0       	ldi	r17, 0x00	; 0
		_delay = __relay_setting._delay;
	}

	for (i=0;i<10;i++){
		chipSelect(moduleId,0);
		SPI_WriteRead(SWITCH_RELAY);
    1c04:	60 90 4c 03 	lds	r6, 0x034C	; 0x80034c <SWITCH_RELAY>
		impulse = __relay_setting.impulse;
		_delay = __relay_setting._delay;
	}

	for (i=0;i<10;i++){
		chipSelect(moduleId,0);
    1c08:	60 e0       	ldi	r22, 0x00	; 0
    1c0a:	70 e0       	ldi	r23, 0x00	; 0
    1c0c:	c7 01       	movw	r24, r14
    1c0e:	f2 d3       	rcall	.+2020   	; 0x23f4 <_Z10chipSelectii>
		SPI_WriteRead(SWITCH_RELAY);
    1c10:	86 2d       	mov	r24, r6
    1c12:	2b d4       	rcall	.+2134   	; 0x246a <_Z13SPI_WriteReadh>
		r1 = SPI_WriteRead(relayId);
    1c14:	87 2d       	mov	r24, r7
    1c16:	29 d4       	rcall	.+2130   	; 0x246a <_Z13SPI_WriteReadh>
    1c18:	48 2e       	mov	r4, r24
		if (impulse == 1){
    1c1a:	21 e0       	ldi	r18, 0x01	; 1
    1c1c:	c2 16       	cp	r12, r18
    1c1e:	d1 04       	cpc	r13, r1
    1c20:	21 f4       	brne	.+8      	; 0x1c2a <_Z11switchRelayccc+0x8a>
			r2 = SPI_WriteRead(1);
    1c22:	81 e0       	ldi	r24, 0x01	; 1
    1c24:	22 d4       	rcall	.+2116   	; 0x246a <_Z13SPI_WriteReadh>
    1c26:	38 2e       	mov	r3, r24
    1c28:	03 c0       	rjmp	.+6      	; 0x1c30 <_Z11switchRelayccc+0x90>
		} else {
			r2 = SPI_WriteRead(state);
    1c2a:	85 2d       	mov	r24, r5
    1c2c:	1e d4       	rcall	.+2108   	; 0x246a <_Z13SPI_WriteReadh>
    1c2e:	38 2e       	mov	r3, r24
		}
		chipSelect(moduleId,1);
    1c30:	61 e0       	ldi	r22, 0x01	; 1
    1c32:	70 e0       	ldi	r23, 0x00	; 0
    1c34:	c7 01       	movw	r24, r14
    1c36:	de d3       	rcall	.+1980   	; 0x23f4 <_Z10chipSelectii>
		
		if (r1 + r2 == 14){
    1c38:	23 2d       	mov	r18, r3
    1c3a:	30 e0       	ldi	r19, 0x00	; 0
    1c3c:	24 0d       	add	r18, r4
    1c3e:	31 1d       	adc	r19, r1
    1c40:	2e 30       	cpi	r18, 0x0E	; 14
    1c42:	31 05       	cpc	r19, r1
    1c44:	09 f4       	brne	.+2      	; 0x1c48 <_Z11switchRelayccc+0xa8>
    1c46:	86 c0       	rjmp	.+268    	; 0x1d54 <_Z11switchRelayccc+0x1b4>
			break;
		} else {
			delay(50);
    1c48:	82 e3       	ldi	r24, 0x32	; 50
    1c4a:	90 e0       	ldi	r25, 0x00	; 0
    1c4c:	53 d4       	rcall	.+2214   	; 0x24f4 <_Z5delayi>
    1c4e:	01 50       	subi	r16, 0x01	; 1
    1c50:	11 09       	sbc	r17, r1
	if (getRelaySetting(moduleId,relayId) == 1){
		impulse = __relay_setting.impulse;
		_delay = __relay_setting._delay;
	}

	for (i=0;i<10;i++){
    1c52:	d1 f6       	brne	.-76     	; 0x1c08 <_Z11switchRelayccc+0x68>
    1c54:	84 c0       	rjmp	.+264    	; 0x1d5e <_Z11switchRelayccc+0x1be>
		} else {
			delay(50);
		}
	}
	if (impulse == 1){
		delay(_delay*1000);
    1c56:	88 ee       	ldi	r24, 0xE8	; 232
    1c58:	93 e0       	ldi	r25, 0x03	; 3
    1c5a:	9c 01       	movw	r18, r24
    1c5c:	82 9e       	mul	r8, r18
    1c5e:	c0 01       	movw	r24, r0
    1c60:	83 9e       	mul	r8, r19
    1c62:	90 0d       	add	r25, r0
    1c64:	92 9e       	mul	r9, r18
    1c66:	90 0d       	add	r25, r0
    1c68:	11 24       	eor	r1, r1
    1c6a:	44 d4       	rcall	.+2184   	; 0x24f4 <_Z5delayi>
    1c6c:	0a e0       	ldi	r16, 0x0A	; 10
    1c6e:	10 e0       	ldi	r17, 0x00	; 0
		for (i=0;i<10;i++){
			chipSelect(moduleId,0);
			SPI_WriteRead(SWITCH_RELAY);
    1c70:	90 90 4c 03 	lds	r9, 0x034C	; 0x80034c <SWITCH_RELAY>
		}
	}
	if (impulse == 1){
		delay(_delay*1000);
		for (i=0;i<10;i++){
			chipSelect(moduleId,0);
    1c74:	60 e0       	ldi	r22, 0x00	; 0
    1c76:	70 e0       	ldi	r23, 0x00	; 0
    1c78:	c7 01       	movw	r24, r14
    1c7a:	bc d3       	rcall	.+1912   	; 0x23f4 <_Z10chipSelectii>
			SPI_WriteRead(SWITCH_RELAY);
    1c7c:	89 2d       	mov	r24, r9
    1c7e:	f5 d3       	rcall	.+2026   	; 0x246a <_Z13SPI_WriteReadh>
			r1 = SPI_WriteRead(relayId);
    1c80:	87 2d       	mov	r24, r7
    1c82:	f3 d3       	rcall	.+2022   	; 0x246a <_Z13SPI_WriteReadh>
    1c84:	c8 2e       	mov	r12, r24
			r2 = SPI_WriteRead(0);
    1c86:	80 e0       	ldi	r24, 0x00	; 0
    1c88:	f0 d3       	rcall	.+2016   	; 0x246a <_Z13SPI_WriteReadh>
    1c8a:	d8 2e       	mov	r13, r24
			chipSelect(moduleId,1);
    1c8c:	61 e0       	ldi	r22, 0x01	; 1
    1c8e:	70 e0       	ldi	r23, 0x00	; 0
    1c90:	c7 01       	movw	r24, r14
    1c92:	b0 d3       	rcall	.+1888   	; 0x23f4 <_Z10chipSelectii>
			
			if (r1 + r2 == 14){
    1c94:	2d 2d       	mov	r18, r13
    1c96:	30 e0       	ldi	r19, 0x00	; 0
    1c98:	2c 0d       	add	r18, r12
    1c9a:	31 1d       	adc	r19, r1
    1c9c:	2e 30       	cpi	r18, 0x0E	; 14
    1c9e:	31 05       	cpc	r19, r1
    1ca0:	39 f0       	breq	.+14     	; 0x1cb0 <_Z11switchRelayccc+0x110>
				break;
				} else {
				delay(50);
    1ca2:	82 e3       	ldi	r24, 0x32	; 50
    1ca4:	90 e0       	ldi	r25, 0x00	; 0
    1ca6:	26 d4       	rcall	.+2124   	; 0x24f4 <_Z5delayi>
    1ca8:	01 50       	subi	r16, 0x01	; 1
    1caa:	11 09       	sbc	r17, r1
			delay(50);
		}
	}
	if (impulse == 1){
		delay(_delay*1000);
		for (i=0;i<10;i++){
    1cac:	19 f7       	brne	.-58     	; 0x1c74 <_Z11switchRelayccc+0xd4>
    1cae:	5b c0       	rjmp	.+182    	; 0x1d66 <_Z11switchRelayccc+0x1c6>
			}
		}
	}
	
	if (r1 + r2 == 14){
		strcpy(response,"NOTIFICATION;SWITCH;");
    1cb0:	85 e1       	ldi	r24, 0x15	; 21
    1cb2:	e6 e7       	ldi	r30, 0x76	; 118
    1cb4:	f6 e0       	ldi	r31, 0x06	; 6
    1cb6:	8e 01       	movw	r16, r28
    1cb8:	0f 5f       	subi	r16, 0xFF	; 255
    1cba:	1f 4f       	sbci	r17, 0xFF	; 255
    1cbc:	d8 01       	movw	r26, r16
    1cbe:	01 90       	ld	r0, Z+
    1cc0:	0d 92       	st	X+, r0
    1cc2:	8a 95       	dec	r24
    1cc4:	e1 f7       	brne	.-8      	; 0x1cbe <_Z11switchRelayccc+0x11e>
    1cc6:	4a e0       	ldi	r20, 0x0A	; 10
    1cc8:	be 01       	movw	r22, r28
    1cca:	67 5d       	subi	r22, 0xD7	; 215
    1ccc:	7f 4f       	sbci	r23, 0xFF	; 255
    1cce:	c7 01       	movw	r24, r14
    1cd0:	0e 94 f6 16 	call	0x2dec	; 0x2dec <__itoa_ncheck>
		strcat(response,itoa(moduleId,conv,10));
    1cd4:	bc 01       	movw	r22, r24
    1cd6:	c8 01       	movw	r24, r16
    1cd8:	0e 94 98 16 	call	0x2d30	; 0x2d30 <strcat>
		strcat(response,";");
    1cdc:	f8 01       	movw	r30, r16
    1cde:	01 90       	ld	r0, Z+
    1ce0:	00 20       	and	r0, r0
    1ce2:	e9 f7       	brne	.-6      	; 0x1cde <_Z11switchRelayccc+0x13e>
    1ce4:	31 97       	sbiw	r30, 0x01	; 1
    1ce6:	0f 2e       	mov	r0, r31
    1ce8:	fb e3       	ldi	r31, 0x3B	; 59
    1cea:	ef 2e       	mov	r14, r31
    1cec:	f1 2c       	mov	r15, r1
    1cee:	f0 2d       	mov	r31, r0
    1cf0:	f1 82       	std	Z+1, r15	; 0x01
    1cf2:	e0 82       	st	Z, r14
    1cf4:	4a e0       	ldi	r20, 0x0A	; 10
    1cf6:	be 01       	movw	r22, r28
    1cf8:	67 5d       	subi	r22, 0xD7	; 215
    1cfa:	7f 4f       	sbci	r23, 0xFF	; 255
    1cfc:	c5 01       	movw	r24, r10
    1cfe:	0e 94 f6 16 	call	0x2dec	; 0x2dec <__itoa_ncheck>
		strcat(response,itoa(relayId,conv,10));
    1d02:	bc 01       	movw	r22, r24
    1d04:	c8 01       	movw	r24, r16
    1d06:	0e 94 98 16 	call	0x2d30	; 0x2d30 <strcat>
		strcat(response,";");
    1d0a:	f8 01       	movw	r30, r16
    1d0c:	01 90       	ld	r0, Z+
    1d0e:	00 20       	and	r0, r0
    1d10:	e9 f7       	brne	.-6      	; 0x1d0c <_Z11switchRelayccc+0x16c>
    1d12:	31 97       	sbiw	r30, 0x01	; 1
    1d14:	f1 82       	std	Z+1, r15	; 0x01
    1d16:	e0 82       	st	Z, r14
    1d18:	4a e0       	ldi	r20, 0x0A	; 10
    1d1a:	be 01       	movw	r22, r28
    1d1c:	67 5d       	subi	r22, 0xD7	; 215
    1d1e:	7f 4f       	sbci	r23, 0xFF	; 255
    1d20:	85 2d       	mov	r24, r5
    1d22:	90 e0       	ldi	r25, 0x00	; 0
    1d24:	0e 94 f6 16 	call	0x2dec	; 0x2dec <__itoa_ncheck>
		strcat(response,itoa(state,conv,10));
    1d28:	bc 01       	movw	r22, r24
    1d2a:	c8 01       	movw	r24, r16
    1d2c:	0e 94 98 16 	call	0x2d30	; 0x2d30 <strcat>
		strcat(response,";\n");
    1d30:	f8 01       	movw	r30, r16
    1d32:	01 90       	ld	r0, Z+
    1d34:	00 20       	and	r0, r0
    1d36:	e9 f7       	brne	.-6      	; 0x1d32 <_Z11switchRelayccc+0x192>
    1d38:	31 97       	sbiw	r30, 0x01	; 1
    1d3a:	8b e3       	ldi	r24, 0x3B	; 59
    1d3c:	9a e0       	ldi	r25, 0x0A	; 10
    1d3e:	a0 e0       	ldi	r26, 0x00	; 0
    1d40:	80 83       	st	Z, r24
    1d42:	91 83       	std	Z+1, r25	; 0x01
    1d44:	a2 83       	std	Z+2, r26	; 0x02

		sendToServer(response,CONNECTION);
    1d46:	60 91 aa 01 	lds	r22, 0x01AA	; 0x8001aa <CONNECTION>
    1d4a:	70 91 ab 01 	lds	r23, 0x01AB	; 0x8001ab <CONNECTION+0x1>
    1d4e:	c8 01       	movw	r24, r16
    1d50:	50 d9       	rcall	.-3424   	; 0xff2 <_Z12sendToServerPci>
    1d52:	09 c0       	rjmp	.+18     	; 0x1d66 <_Z11switchRelayccc+0x1c6>
			break;
		} else {
			delay(50);
		}
	}
	if (impulse == 1){
    1d54:	ca 94       	dec	r12
    1d56:	cd 28       	or	r12, r13
    1d58:	09 f0       	breq	.+2      	; 0x1d5c <_Z11switchRelayccc+0x1bc>
    1d5a:	aa cf       	rjmp	.-172    	; 0x1cb0 <_Z11switchRelayccc+0x110>
    1d5c:	7c cf       	rjmp	.-264    	; 0x1c56 <_Z11switchRelayccc+0xb6>
    1d5e:	ca 94       	dec	r12
    1d60:	cd 28       	or	r12, r13
    1d62:	09 f4       	brne	.+2      	; 0x1d66 <_Z11switchRelayccc+0x1c6>
    1d64:	78 cf       	rjmp	.-272    	; 0x1c56 <_Z11switchRelayccc+0xb6>
		strcat(response,";\n");

		sendToServer(response,CONNECTION);
	}
	
}
    1d66:	ad 96       	adiw	r28, 0x2d	; 45
    1d68:	0f b6       	in	r0, 0x3f	; 63
    1d6a:	f8 94       	cli
    1d6c:	de bf       	out	0x3e, r29	; 62
    1d6e:	0f be       	out	0x3f, r0	; 63
    1d70:	cd bf       	out	0x3d, r28	; 61
    1d72:	df 91       	pop	r29
    1d74:	cf 91       	pop	r28
    1d76:	1f 91       	pop	r17
    1d78:	0f 91       	pop	r16
    1d7a:	ff 90       	pop	r15
    1d7c:	ef 90       	pop	r14
    1d7e:	df 90       	pop	r13
    1d80:	cf 90       	pop	r12
    1d82:	bf 90       	pop	r11
    1d84:	af 90       	pop	r10
    1d86:	9f 90       	pop	r9
    1d88:	8f 90       	pop	r8
    1d8a:	7f 90       	pop	r7
    1d8c:	6f 90       	pop	r6
    1d8e:	5f 90       	pop	r5
    1d90:	4f 90       	pop	r4
    1d92:	3f 90       	pop	r3
    1d94:	08 95       	ret

00001d96 <_Z12RelayControlv>:

void RelayControl(){
    1d96:	ef 92       	push	r14
    1d98:	ff 92       	push	r15
    1d9a:	0f 93       	push	r16
    1d9c:	1f 93       	push	r17
    1d9e:	cf 93       	push	r28
    1da0:	df 93       	push	r29
	//&& __system_var.enabled_flag == 1
	if (strstr(__network_data.esp_buffer, "SWITCHRELAY") != 0){
    1da2:	6b e8       	ldi	r22, 0x8B	; 139
    1da4:	76 e0       	ldi	r23, 0x06	; 6
    1da6:	82 ec       	ldi	r24, 0xC2	; 194
    1da8:	98 e0       	ldi	r25, 0x08	; 8
    1daa:	df d7       	rcall	.+4030   	; 0x2d6a <strstr>
    1dac:	00 97       	sbiw	r24, 0x00	; 0
    1dae:	09 f4       	brne	.+2      	; 0x1db2 <_Z12RelayControlv+0x1c>
    1db0:	45 c0       	rjmp	.+138    	; 0x1e3c <_Z12RelayControlv+0xa6>
		int relayId, moduleId, state, index, i;

		
		
		p1 = strstr(__network_data.esp_buffer, "SWITCHRELAY");
		strtok(p1,";");
    1db2:	69 e8       	ldi	r22, 0x89	; 137
    1db4:	76 e0       	ldi	r23, 0x06	; 6
    1db6:	b2 d7       	rcall	.+3940   	; 0x2d1c <strtok>
		moduleId = atoi(strtok(0,";"));
    1db8:	69 e8       	ldi	r22, 0x89	; 137
    1dba:	76 e0       	ldi	r23, 0x06	; 6
    1dbc:	80 e0       	ldi	r24, 0x00	; 0
    1dbe:	90 e0       	ldi	r25, 0x00	; 0
    1dc0:	ad d7       	rcall	.+3930   	; 0x2d1c <strtok>
    1dc2:	7b d7       	rcall	.+3830   	; 0x2cba <atoi>
    1dc4:	8c 01       	movw	r16, r24
		relayId = atoi(strtok(0,";"));
    1dc6:	69 e8       	ldi	r22, 0x89	; 137
    1dc8:	76 e0       	ldi	r23, 0x06	; 6
    1dca:	80 e0       	ldi	r24, 0x00	; 0
    1dcc:	90 e0       	ldi	r25, 0x00	; 0
    1dce:	a6 d7       	rcall	.+3916   	; 0x2d1c <strtok>
    1dd0:	74 d7       	rcall	.+3816   	; 0x2cba <atoi>
    1dd2:	ec 01       	movw	r28, r24
		state = atoi(strtok(0,";"));
    1dd4:	69 e8       	ldi	r22, 0x89	; 137
    1dd6:	76 e0       	ldi	r23, 0x06	; 6
    1dd8:	80 e0       	ldi	r24, 0x00	; 0
    1dda:	90 e0       	ldi	r25, 0x00	; 0
    1ddc:	9f d7       	rcall	.+3902   	; 0x2d1c <strtok>
    1dde:	6d d7       	rcall	.+3802   	; 0x2cba <atoi>
    1de0:	7c 01       	movw	r14, r24
			
		switchRelay(moduleId,relayId,state);	
    1de2:	48 2f       	mov	r20, r24
    1de4:	6c 2f       	mov	r22, r28
    1de6:	80 2f       	mov	r24, r16
    1de8:	db de       	rcall	.-586    	; 0x1ba0 <_Z11switchRelayccc>
		
		if (moduleId < MAX_MODULE_COUNT && relayId < MAX_RELAY_COUNT){
    1dea:	04 30       	cpi	r16, 0x04	; 4
    1dec:	11 05       	cpc	r17, r1
    1dee:	2c f5       	brge	.+74     	; 0x1e3a <_Z12RelayControlv+0xa4>
    1df0:	cd 30       	cpi	r28, 0x0D	; 13
    1df2:	d1 05       	cpc	r29, r1
    1df4:	14 f5       	brge	.+68     	; 0x1e3a <_Z12RelayControlv+0xa4>
			char conv[5];
			if (state == 1){
    1df6:	ea 94       	dec	r14
    1df8:	ef 28       	or	r14, r15
    1dfa:	89 f4       	brne	.+34     	; 0x1e1e <_Z12RelayControlv+0x88>
				__relay_states[moduleId].states[relayId] = 1;	
    1dfc:	2d e0       	ldi	r18, 0x0D	; 13
    1dfe:	20 9f       	mul	r18, r16
    1e00:	c0 01       	movw	r24, r0
    1e02:	21 9f       	mul	r18, r17
    1e04:	90 0d       	add	r25, r0
    1e06:	11 24       	eor	r1, r1
    1e08:	c8 0f       	add	r28, r24
    1e0a:	d9 1f       	adc	r29, r25
    1e0c:	cc 0f       	add	r28, r28
    1e0e:	dd 1f       	adc	r29, r29
    1e10:	cc 5f       	subi	r28, 0xFC	; 252
    1e12:	d8 4f       	sbci	r29, 0xF8	; 248
    1e14:	81 e0       	ldi	r24, 0x01	; 1
    1e16:	90 e0       	ldi	r25, 0x00	; 0
    1e18:	99 83       	std	Y+1, r25	; 0x01
    1e1a:	88 83       	st	Y, r24
    1e1c:	0e c0       	rjmp	.+28     	; 0x1e3a <_Z12RelayControlv+0xa4>
			} else {
				__relay_states[moduleId].states[relayId] = 0;
    1e1e:	2d e0       	ldi	r18, 0x0D	; 13
    1e20:	20 9f       	mul	r18, r16
    1e22:	c0 01       	movw	r24, r0
    1e24:	21 9f       	mul	r18, r17
    1e26:	90 0d       	add	r25, r0
    1e28:	11 24       	eor	r1, r1
    1e2a:	c8 0f       	add	r28, r24
    1e2c:	d9 1f       	adc	r29, r25
    1e2e:	cc 0f       	add	r28, r28
    1e30:	dd 1f       	adc	r29, r29
    1e32:	cc 5f       	subi	r28, 0xFC	; 252
    1e34:	d8 4f       	sbci	r29, 0xF8	; 248
    1e36:	19 82       	std	Y+1, r1	; 0x01
    1e38:	18 82       	st	Y, r1
			}
		}

		clearReadLine();
    1e3a:	22 d5       	rcall	.+2628   	; 0x2880 <_Z13clearReadLinev>
	}
}
    1e3c:	df 91       	pop	r29
    1e3e:	cf 91       	pop	r28
    1e40:	1f 91       	pop	r17
    1e42:	0f 91       	pop	r16
    1e44:	ff 90       	pop	r15
    1e46:	ef 90       	pop	r14
    1e48:	08 95       	ret

00001e4a <_Z15ReceiveSettingsv>:

void ReceiveSettings(){
    1e4a:	cf 93       	push	r28
    1e4c:	df 93       	push	r29
	
	if (strstr(__network_data.esp_buffer, "CFG") != 0){
    1e4e:	67 e9       	ldi	r22, 0x97	; 151
    1e50:	76 e0       	ldi	r23, 0x06	; 6
    1e52:	82 ec       	ldi	r24, 0xC2	; 194
    1e54:	98 e0       	ldi	r25, 0x08	; 8
    1e56:	89 d7       	rcall	.+3858   	; 0x2d6a <strstr>
    1e58:	89 2b       	or	r24, r25
    1e5a:	09 f4       	brne	.+2      	; 0x1e5e <_Z15ReceiveSettingsv+0x14>
    1e5c:	66 c0       	rjmp	.+204    	; 0x1f2a <_Z15ReceiveSettingsv+0xe0>
		
		__system_time.check_timer_buffer = 0;
    1e5e:	10 92 61 08 	sts	0x0861, r1	; 0x800861 <__system_time+0x17>
    1e62:	10 92 60 08 	sts	0x0860, r1	; 0x800860 <__system_time+0x16>
		
		if (strstr(__network_data.esp_buffer, "[CLEAR_EEPROM]") != 0){
    1e66:	6b e9       	ldi	r22, 0x9B	; 155
    1e68:	76 e0       	ldi	r23, 0x06	; 6
    1e6a:	82 ec       	ldi	r24, 0xC2	; 194
    1e6c:	98 e0       	ldi	r25, 0x08	; 8
    1e6e:	7d d7       	rcall	.+3834   	; 0x2d6a <strstr>
    1e70:	89 2b       	or	r24, r25
    1e72:	e1 f0       	breq	.+56     	; 0x1eac <_Z15ReceiveSettingsv+0x62>
			__system_var.enabled_flag = 0;
    1e74:	10 92 01 0b 	sts	0x0B01, r1	; 0x800b01 <__system_var+0x45>
			USART0_SendString("CLEARING...");
    1e78:	8a ea       	ldi	r24, 0xAA	; 170
    1e7a:	96 e0       	ldi	r25, 0x06	; 6
    1e7c:	2d d3       	rcall	.+1626   	; 0x24d8 <_Z17USART0_SendStringPKc>
			clearEEPROM(EEPROM_CFG_START,EEPROM_SIZE);
    1e7e:	c0 91 a2 01 	lds	r28, 0x01A2	; 0x8001a2 <EEPROM_CFG_START>
    1e82:	d0 91 a3 01 	lds	r29, 0x01A3	; 0x8001a3 <EEPROM_CFG_START+0x1>
    1e86:	60 91 a4 01 	lds	r22, 0x01A4	; 0x8001a4 <EEPROM_SIZE>
    1e8a:	70 91 a5 01 	lds	r23, 0x01A5	; 0x8001a5 <EEPROM_SIZE+0x1>
    1e8e:	ce 01       	movw	r24, r28
    1e90:	0e 94 d5 00 	call	0x1aa	; 0x1aa <_Z11clearEEPROMii>
			__system_var.eeprom_position = EEPROM_CFG_START;
    1e94:	d0 93 fe 0a 	sts	0x0AFE, r29	; 0x800afe <__system_var+0x42>
    1e98:	c0 93 fd 0a 	sts	0x0AFD, r28	; 0x800afd <__system_var+0x41>
			sendToServer("OK\n",CONNECTION);
    1e9c:	60 91 aa 01 	lds	r22, 0x01AA	; 0x8001aa <CONNECTION>
    1ea0:	70 91 ab 01 	lds	r23, 0x01AB	; 0x8001ab <CONNECTION+0x1>
    1ea4:	8b e0       	ldi	r24, 0x0B	; 11
    1ea6:	92 e0       	ldi	r25, 0x02	; 2
    1ea8:	a4 d8       	rcall	.-3768   	; 0xff2 <_Z12sendToServerPci>
			return;
    1eaa:	4e c0       	rjmp	.+156    	; 0x1f48 <_Z15ReceiveSettingsv+0xfe>
		}
		if (strstr(__network_data.esp_buffer, "[END]") != 0){
    1eac:	66 eb       	ldi	r22, 0xB6	; 182
    1eae:	76 e0       	ldi	r23, 0x06	; 6
    1eb0:	82 ec       	ldi	r24, 0xC2	; 194
    1eb2:	98 e0       	ldi	r25, 0x08	; 8
    1eb4:	5a d7       	rcall	.+3764   	; 0x2d6a <strstr>
    1eb6:	89 2b       	or	r24, r25
    1eb8:	d9 f0       	breq	.+54     	; 0x1ef0 <_Z15ReceiveSettingsv+0xa6>
			__system_var.eeprom_position = EEPROM_CFG_START;
    1eba:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <EEPROM_CFG_START>
    1ebe:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <EEPROM_CFG_START+0x1>
    1ec2:	90 93 fe 0a 	sts	0x0AFE, r25	; 0x800afe <__system_var+0x42>
    1ec6:	80 93 fd 0a 	sts	0x0AFD, r24	; 0x800afd <__system_var+0x41>
			__system_var.enabled_flag = 1;
    1eca:	81 e0       	ldi	r24, 0x01	; 1
    1ecc:	80 93 01 0b 	sts	0x0B01, r24	; 0x800b01 <__system_var+0x45>
			sendToServer("OK\n",CONNECTION);
    1ed0:	c0 91 aa 01 	lds	r28, 0x01AA	; 0x8001aa <CONNECTION>
    1ed4:	d0 91 ab 01 	lds	r29, 0x01AB	; 0x8001ab <CONNECTION+0x1>
    1ed8:	be 01       	movw	r22, r28
    1eda:	8b e0       	ldi	r24, 0x0B	; 11
    1edc:	92 e0       	ldi	r25, 0x02	; 2
    1ede:	89 d8       	rcall	.-3822   	; 0xff2 <_Z12sendToServerPci>
			delay(500);
    1ee0:	84 ef       	ldi	r24, 0xF4	; 244
    1ee2:	91 e0       	ldi	r25, 0x01	; 1
    1ee4:	07 d3       	rcall	.+1550   	; 0x24f4 <_Z5delayi>
			sendToServer("NOTIFICATION;UPDATED;\n",CONNECTION);
    1ee6:	be 01       	movw	r22, r28
    1ee8:	8c eb       	ldi	r24, 0xBC	; 188
    1eea:	96 e0       	ldi	r25, 0x06	; 6
    1eec:	82 d8       	rcall	.-3836   	; 0xff2 <_Z12sendToServerPci>
			return;
    1eee:	2c c0       	rjmp	.+88     	; 0x1f48 <_Z15ReceiveSettingsv+0xfe>
		}
		char *p1;
		p1 = strtok(__network_data.esp_buffer,"$");
    1ef0:	63 ed       	ldi	r22, 0xD3	; 211
    1ef2:	76 e0       	ldi	r23, 0x06	; 6
    1ef4:	82 ec       	ldi	r24, 0xC2	; 194
    1ef6:	98 e0       	ldi	r25, 0x08	; 8
    1ef8:	11 d7       	rcall	.+3618   	; 0x2d1c <strtok>
		p1 = strtok(0,"$");
    1efa:	63 ed       	ldi	r22, 0xD3	; 211
    1efc:	76 e0       	ldi	r23, 0x06	; 6
    1efe:	80 e0       	ldi	r24, 0x00	; 0
    1f00:	90 e0       	ldi	r25, 0x00	; 0
    1f02:	0c d7       	rcall	.+3608   	; 0x2d1c <strtok>
		__system_var.eeprom_position = eepromSaveCfg(p1,__system_var.eeprom_position);
    1f04:	cd ef       	ldi	r28, 0xFD	; 253
    1f06:	da e0       	ldi	r29, 0x0A	; 10
    1f08:	68 81       	ld	r22, Y
    1f0a:	79 81       	ldd	r23, Y+1	; 0x01
    1f0c:	0e 94 b7 00 	call	0x16e	; 0x16e <_Z13eepromSaveCfgPKci>
    1f10:	99 83       	std	Y+1, r25	; 0x01
    1f12:	88 83       	st	Y, r24
		delay(10);
    1f14:	8a e0       	ldi	r24, 0x0A	; 10
    1f16:	90 e0       	ldi	r25, 0x00	; 0
    1f18:	ed d2       	rcall	.+1498   	; 0x24f4 <_Z5delayi>
		sendToServer("OK\n",CONNECTION);
    1f1a:	60 91 aa 01 	lds	r22, 0x01AA	; 0x8001aa <CONNECTION>
    1f1e:	70 91 ab 01 	lds	r23, 0x01AB	; 0x8001ab <CONNECTION+0x1>
    1f22:	8b e0       	ldi	r24, 0x0B	; 11
    1f24:	92 e0       	ldi	r25, 0x02	; 2
    1f26:	65 d8       	rcall	.-3894   	; 0xff2 <_Z12sendToServerPci>
		clearReadLine();
    1f28:	ab d4       	rcall	.+2390   	; 0x2880 <_Z13clearReadLinev>
	}
	
	if (strstr(__network_data.esp_buffer, "UPDATE") != 0){
    1f2a:	65 ed       	ldi	r22, 0xD5	; 213
    1f2c:	76 e0       	ldi	r23, 0x06	; 6
    1f2e:	82 ec       	ldi	r24, 0xC2	; 194
    1f30:	98 e0       	ldi	r25, 0x08	; 8
    1f32:	1b d7       	rcall	.+3638   	; 0x2d6a <strstr>
    1f34:	89 2b       	or	r24, r25
    1f36:	41 f0       	breq	.+16     	; 0x1f48 <_Z15ReceiveSettingsv+0xfe>
		sendToServer("REQUEST_UPDATE\n",CONNECTION);
    1f38:	60 91 aa 01 	lds	r22, 0x01AA	; 0x8001aa <CONNECTION>
    1f3c:	70 91 ab 01 	lds	r23, 0x01AB	; 0x8001ab <CONNECTION+0x1>
    1f40:	8c ed       	ldi	r24, 0xDC	; 220
    1f42:	96 e0       	ldi	r25, 0x06	; 6
    1f44:	56 d8       	rcall	.-3924   	; 0xff2 <_Z12sendToServerPci>
		clearReadLine();
    1f46:	9c d4       	rcall	.+2360   	; 0x2880 <_Z13clearReadLinev>
	}
}
    1f48:	df 91       	pop	r29
    1f4a:	cf 91       	pop	r28
    1f4c:	08 95       	ret

00001f4e <_Z22CheckModuleConnectionsv>:

void CheckModuleConnections(){
    1f4e:	2f 92       	push	r2
    1f50:	3f 92       	push	r3
    1f52:	4f 92       	push	r4
    1f54:	5f 92       	push	r5
    1f56:	6f 92       	push	r6
    1f58:	7f 92       	push	r7
    1f5a:	8f 92       	push	r8
    1f5c:	9f 92       	push	r9
    1f5e:	af 92       	push	r10
    1f60:	bf 92       	push	r11
    1f62:	cf 92       	push	r12
    1f64:	df 92       	push	r13
    1f66:	ef 92       	push	r14
    1f68:	ff 92       	push	r15
    1f6a:	0f 93       	push	r16
    1f6c:	1f 93       	push	r17
    1f6e:	cf 93       	push	r28
    1f70:	df 93       	push	r29
    1f72:	cd b7       	in	r28, 0x3d	; 61
    1f74:	de b7       	in	r29, 0x3e	; 62
    1f76:	a3 97       	sbiw	r28, 0x23	; 35
    1f78:	0f b6       	in	r0, 0x3f	; 63
    1f7a:	f8 94       	cli
    1f7c:	de bf       	out	0x3e, r29	; 62
    1f7e:	0f be       	out	0x3f, r0	; 63
    1f80:	cd bf       	out	0x3d, r28	; 61
	
	if (__system_time.relay_module_check_timer_buffer >= __system_time.relay_module_check_timer){
    1f82:	ea e4       	ldi	r30, 0x4A	; 74
    1f84:	f8 e0       	ldi	r31, 0x08	; 8
    1f86:	22 8d       	ldd	r18, Z+26	; 0x1a
    1f88:	33 8d       	ldd	r19, Z+27	; 0x1b
    1f8a:	80 8d       	ldd	r24, Z+24	; 0x18
    1f8c:	91 8d       	ldd	r25, Z+25	; 0x19
    1f8e:	28 17       	cp	r18, r24
    1f90:	39 07       	cpc	r19, r25
    1f92:	0c f4       	brge	.+2      	; 0x1f96 <_Z22CheckModuleConnectionsv+0x48>
    1f94:	f9 c0       	rjmp	.+498    	; 0x2188 <_Z22CheckModuleConnectionsv+0x23a>
    1f96:	4a e0       	ldi	r20, 0x0A	; 10
    1f98:	be 01       	movw	r22, r28
    1f9a:	61 5e       	subi	r22, 0xE1	; 225
    1f9c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f9e:	80 91 60 08 	lds	r24, 0x0860	; 0x800860 <__system_time+0x16>
    1fa2:	90 91 61 08 	lds	r25, 0x0861	; 0x800861 <__system_time+0x17>
    1fa6:	22 d7       	rcall	.+3652   	; 0x2dec <__itoa_ncheck>
    1fa8:	0f 2e       	mov	r0, r31
    1faa:	fa ed       	ldi	r31, 0xDA	; 218
    1fac:	ef 2e       	mov	r14, r31
    1fae:	fa e0       	ldi	r31, 0x0A	; 10
    1fb0:	ff 2e       	mov	r15, r31
    1fb2:	f0 2d       	mov	r31, r0
		int i,j;
		
		itoa(__system_time.check_timer_buffer,conv,10);
	
		// CHECK RELAY MODULE CONNECTIONS
		for (i=0;i<4;i++){
    1fb4:	00 e0       	ldi	r16, 0x00	; 0
    1fb6:	10 e0       	ldi	r17, 0x00	; 0
			if (digitalRead(__system_var.detect_pins[i]) == 0 && __system_var.module_flags[i] == 0){
				delay(500);
				__system_var.module_connected[i] = 1;
    1fb8:	88 24       	eor	r8, r8
    1fba:	83 94       	inc	r8
    1fbc:	91 2c       	mov	r9, r1
				__system_var.module_flags[i] = 1;
    1fbe:	21 2c       	mov	r2, r1
				for (j=0;j<5;j++){
					chipSelect(i, 0);
					relay_count = SPI_WriteRead(REQUEST_RELAY_COUNT);
    1fc0:	30 90 4e 03 	lds	r3, 0x034E	; 0x80034e <REQUEST_RELAY_COUNT>
					relay_count = SPI_WriteRead(RECIEVE);
    1fc4:	40 90 4d 03 	lds	r4, 0x034D	; 0x80034d <RECIEVE>
				}
				if (relay_count == 0 || relay_count == 1 || relay_count == 255 || relay_count == 254){
					relay_count = 0;
				}
				__system_var.relay_modules[i] = relay_count;
				__system_var.update_flag = 1;
    1fc8:	0f 2e       	mov	r0, r31
    1fca:	ff ef       	ldi	r31, 0xFF	; 255
    1fcc:	6f 2e       	mov	r6, r31
    1fce:	fa e0       	ldi	r31, 0x0A	; 10
    1fd0:	7f 2e       	mov	r7, r31
    1fd2:	f0 2d       	mov	r31, r0
    1fd4:	57 01       	movw	r10, r14
		
		itoa(__system_time.check_timer_buffer,conv,10);
	
		// CHECK RELAY MODULE CONNECTIONS
		for (i=0;i<4;i++){
			if (digitalRead(__system_var.detect_pins[i]) == 0 && __system_var.module_flags[i] == 0){
    1fd6:	d7 01       	movw	r26, r14
    1fd8:	58 96       	adiw	r26, 0x18	; 24
    1fda:	8d 91       	ld	r24, X+
    1fdc:	9c 91       	ld	r25, X
    1fde:	59 97       	sbiw	r26, 0x19	; 25
    1fe0:	30 d3       	rcall	.+1632   	; 0x2642 <_Z11digitalReadi>
    1fe2:	81 11       	cpse	r24, r1
    1fe4:	24 c0       	rjmp	.+72     	; 0x202e <_Z22CheckModuleConnectionsv+0xe0>
    1fe6:	f7 01       	movw	r30, r14
    1fe8:	80 89       	ldd	r24, Z+16	; 0x10
    1fea:	91 89       	ldd	r25, Z+17	; 0x11
    1fec:	89 2b       	or	r24, r25
    1fee:	09 f4       	brne	.+2      	; 0x1ff2 <_Z22CheckModuleConnectionsv+0xa4>
    1ff0:	ad c0       	rjmp	.+346    	; 0x214c <_Z22CheckModuleConnectionsv+0x1fe>
    1ff2:	1d c0       	rjmp	.+58     	; 0x202e <_Z22CheckModuleConnectionsv+0xe0>
				delay(500);
				__system_var.module_connected[i] = 1;
				__system_var.module_flags[i] = 1;
				for (j=0;j<5;j++){
					chipSelect(i, 0);
    1ff4:	60 e0       	ldi	r22, 0x00	; 0
    1ff6:	70 e0       	ldi	r23, 0x00	; 0
    1ff8:	c8 01       	movw	r24, r16
    1ffa:	fc d1       	rcall	.+1016   	; 0x23f4 <_Z10chipSelectii>
					relay_count = SPI_WriteRead(REQUEST_RELAY_COUNT);
    1ffc:	83 2d       	mov	r24, r3
    1ffe:	35 d2       	rcall	.+1130   	; 0x246a <_Z13SPI_WriteReadh>
					relay_count = SPI_WriteRead(RECIEVE);
    2000:	84 2d       	mov	r24, r4
    2002:	33 d2       	rcall	.+1126   	; 0x246a <_Z13SPI_WriteReadh>
    2004:	58 2e       	mov	r5, r24
					chipSelect(i, 1);
    2006:	b4 01       	movw	r22, r8
    2008:	c8 01       	movw	r24, r16
    200a:	f4 d1       	rcall	.+1000   	; 0x23f4 <_Z10chipSelectii>
					if (!(relay_count == 0 || relay_count == 1 || relay_count == 255 || relay_count == 254)){
    200c:	8e ef       	ldi	r24, 0xFE	; 254
    200e:	85 0d       	add	r24, r5
    2010:	8c 3f       	cpi	r24, 0xFC	; 252
    2012:	28 f0       	brcs	.+10     	; 0x201e <_Z22CheckModuleConnectionsv+0xd0>
    2014:	f1 e0       	ldi	r31, 0x01	; 1
    2016:	cf 1a       	sub	r12, r31
    2018:	d1 08       	sbc	r13, r1
		for (i=0;i<4;i++){
			if (digitalRead(__system_var.detect_pins[i]) == 0 && __system_var.module_flags[i] == 0){
				delay(500);
				__system_var.module_connected[i] = 1;
				__system_var.module_flags[i] = 1;
				for (j=0;j<5;j++){
    201a:	61 f7       	brne	.-40     	; 0x1ff4 <_Z22CheckModuleConnectionsv+0xa6>
					if (!(relay_count == 0 || relay_count == 1 || relay_count == 255 || relay_count == 254)){
						break;
					}
				}
				if (relay_count == 0 || relay_count == 1 || relay_count == 255 || relay_count == 254){
					relay_count = 0;
    201c:	51 2c       	mov	r5, r1
				}
				__system_var.relay_modules[i] = relay_count;
    201e:	85 2d       	mov	r24, r5
    2020:	90 e0       	ldi	r25, 0x00	; 0
    2022:	d5 01       	movw	r26, r10
    2024:	8d 93       	st	X+, r24
    2026:	9c 93       	st	X, r25
				__system_var.update_flag = 1;
    2028:	f3 01       	movw	r30, r6
    202a:	91 82       	std	Z+1, r9	; 0x01
    202c:	80 82       	st	Z, r8
			
				//delay(500);
			}
			if (digitalRead(__system_var.detect_pins[i]) != 0 && __system_var.module_flags[i] == 1){
    202e:	d5 01       	movw	r26, r10
    2030:	58 96       	adiw	r26, 0x18	; 24
    2032:	8d 91       	ld	r24, X+
    2034:	9c 91       	ld	r25, X
    2036:	59 97       	sbiw	r26, 0x19	; 25
    2038:	04 d3       	rcall	.+1544   	; 0x2642 <_Z11digitalReadi>
    203a:	88 23       	and	r24, r24
    203c:	31 f0       	breq	.+12     	; 0x204a <_Z22CheckModuleConnectionsv+0xfc>
    203e:	f5 01       	movw	r30, r10
    2040:	80 89       	ldd	r24, Z+16	; 0x10
    2042:	91 89       	ldd	r25, Z+17	; 0x11
    2044:	01 97       	sbiw	r24, 0x01	; 1
    2046:	09 f4       	brne	.+2      	; 0x204a <_Z22CheckModuleConnectionsv+0xfc>
    2048:	8f c0       	rjmp	.+286    	; 0x2168 <_Z22CheckModuleConnectionsv+0x21a>
		int i,j;
		
		itoa(__system_time.check_timer_buffer,conv,10);
	
		// CHECK RELAY MODULE CONNECTIONS
		for (i=0;i<4;i++){
    204a:	0f 5f       	subi	r16, 0xFF	; 255
    204c:	1f 4f       	sbci	r17, 0xFF	; 255
    204e:	f2 e0       	ldi	r31, 0x02	; 2
    2050:	ef 0e       	add	r14, r31
    2052:	f1 1c       	adc	r15, r1
    2054:	04 30       	cpi	r16, 0x04	; 4
    2056:	11 05       	cpc	r17, r1
    2058:	09 f0       	breq	.+2      	; 0x205c <_Z22CheckModuleConnectionsv+0x10e>
    205a:	bc cf       	rjmp	.-136    	; 0x1fd4 <_Z22CheckModuleConnectionsv+0x86>
				__system_var.update_flag = 1;
				//delay(500);
			}
		}
	
		if (__system_var.update_flag == 1){
    205c:	80 91 ff 0a 	lds	r24, 0x0AFF	; 0x800aff <__system_var+0x43>
    2060:	90 91 00 0b 	lds	r25, 0x0B00	; 0x800b00 <__system_var+0x44>
    2064:	01 97       	sbiw	r24, 0x01	; 1
    2066:	09 f0       	breq	.+2      	; 0x206a <_Z22CheckModuleConnectionsv+0x11c>
    2068:	6c c0       	rjmp	.+216    	; 0x2142 <_Z22CheckModuleConnectionsv+0x1f4>
			__system_var.update_flag = 0;
    206a:	10 92 00 0b 	sts	0x0B00, r1	; 0x800b00 <__system_var+0x44>
    206e:	10 92 ff 0a 	sts	0x0AFF, r1	; 0x800aff <__system_var+0x43>
			if (__network_data.is_server_connected){
    2072:	80 91 c1 08 	lds	r24, 0x08C1	; 0x8008c1 <__network_data+0x57>
    2076:	88 23       	and	r24, r24
    2078:	09 f4       	brne	.+2      	; 0x207c <_Z22CheckModuleConnectionsv+0x12e>
    207a:	63 c0       	rjmp	.+198    	; 0x2142 <_Z22CheckModuleConnectionsv+0x1f4>
				char toSend[30] = "RELAYCONNECTIONS;";
    207c:	82 e1       	ldi	r24, 0x12	; 18
    207e:	e6 e0       	ldi	r30, 0x06	; 6
    2080:	f1 e0       	ldi	r31, 0x01	; 1
    2082:	de 01       	movw	r26, r28
    2084:	11 96       	adiw	r26, 0x01	; 1
    2086:	01 90       	ld	r0, Z+
    2088:	0d 92       	st	X+, r0
    208a:	8a 95       	dec	r24
    208c:	e1 f7       	brne	.-8      	; 0x2086 <_Z22CheckModuleConnectionsv+0x138>
    208e:	fe 01       	movw	r30, r28
    2090:	73 96       	adiw	r30, 0x13	; 19
    2092:	8c e0       	ldi	r24, 0x0C	; 12
    2094:	df 01       	movw	r26, r30
    2096:	1d 92       	st	X+, r1
    2098:	8a 95       	dec	r24
    209a:	e9 f7       	brne	.-6      	; 0x2096 <_Z22CheckModuleConnectionsv+0x148>
    209c:	0f 2e       	mov	r0, r31
    209e:	f2 ee       	ldi	r31, 0xE2	; 226
    20a0:	ef 2e       	mov	r14, r31
    20a2:	fa e0       	ldi	r31, 0x0A	; 10
    20a4:	ff 2e       	mov	r15, r31
    20a6:	f0 2d       	mov	r31, r0
				int i;
				for (i=0;i<4;i++){
    20a8:	00 e0       	ldi	r16, 0x00	; 0
    20aa:	10 e0       	ldi	r17, 0x00	; 0
					if (__system_var.module_connected[i] == 1) {
						strcat(toSend,itoa(i,conv,10));
    20ac:	72 97       	sbiw	r30, 0x12	; 18
    20ae:	6f 01       	movw	r12, r30
						strcat(toSend,":");
    20b0:	0f 2e       	mov	r0, r31
    20b2:	fa e3       	ldi	r31, 0x3A	; 58
    20b4:	8f 2e       	mov	r8, r31
    20b6:	91 2c       	mov	r9, r1
    20b8:	f0 2d       	mov	r31, r0
						strcat(toSend,itoa(__system_var.relay_modules[i],conv,10));
						strcat(toSend,";");
    20ba:	0f 2e       	mov	r0, r31
    20bc:	fb e3       	ldi	r31, 0x3B	; 59
    20be:	af 2e       	mov	r10, r31
    20c0:	b1 2c       	mov	r11, r1
    20c2:	f0 2d       	mov	r31, r0
			__system_var.update_flag = 0;
			if (__network_data.is_server_connected){
				char toSend[30] = "RELAYCONNECTIONS;";
				int i;
				for (i=0;i<4;i++){
					if (__system_var.module_connected[i] == 1) {
    20c4:	d7 01       	movw	r26, r14
    20c6:	8d 91       	ld	r24, X+
    20c8:	9d 91       	ld	r25, X+
    20ca:	7d 01       	movw	r14, r26
    20cc:	01 97       	sbiw	r24, 0x01	; 1
    20ce:	19 f5       	brne	.+70     	; 0x2116 <_Z22CheckModuleConnectionsv+0x1c8>
    20d0:	4a e0       	ldi	r20, 0x0A	; 10
    20d2:	be 01       	movw	r22, r28
    20d4:	61 5e       	subi	r22, 0xE1	; 225
    20d6:	7f 4f       	sbci	r23, 0xFF	; 255
    20d8:	c8 01       	movw	r24, r16
    20da:	88 d6       	rcall	.+3344   	; 0x2dec <__itoa_ncheck>
						strcat(toSend,itoa(i,conv,10));
    20dc:	bc 01       	movw	r22, r24
    20de:	c6 01       	movw	r24, r12
    20e0:	27 d6       	rcall	.+3150   	; 0x2d30 <strcat>
						strcat(toSend,":");
    20e2:	f6 01       	movw	r30, r12
    20e4:	01 90       	ld	r0, Z+
    20e6:	00 20       	and	r0, r0
    20e8:	e9 f7       	brne	.-6      	; 0x20e4 <_Z22CheckModuleConnectionsv+0x196>
    20ea:	31 97       	sbiw	r30, 0x01	; 1
    20ec:	91 82       	std	Z+1, r9	; 0x01
    20ee:	80 82       	st	Z, r8
    20f0:	4a e0       	ldi	r20, 0x0A	; 10
    20f2:	be 01       	movw	r22, r28
    20f4:	61 5e       	subi	r22, 0xE1	; 225
    20f6:	7f 4f       	sbci	r23, 0xFF	; 255
    20f8:	f7 01       	movw	r30, r14
    20fa:	3a 97       	sbiw	r30, 0x0a	; 10
    20fc:	80 81       	ld	r24, Z
    20fe:	91 81       	ldd	r25, Z+1	; 0x01
    2100:	75 d6       	rcall	.+3306   	; 0x2dec <__itoa_ncheck>
						strcat(toSend,itoa(__system_var.relay_modules[i],conv,10));
    2102:	bc 01       	movw	r22, r24
    2104:	c6 01       	movw	r24, r12
    2106:	14 d6       	rcall	.+3112   	; 0x2d30 <strcat>
						strcat(toSend,";");
    2108:	f6 01       	movw	r30, r12
    210a:	01 90       	ld	r0, Z+
    210c:	00 20       	and	r0, r0
    210e:	e9 f7       	brne	.-6      	; 0x210a <_Z22CheckModuleConnectionsv+0x1bc>
    2110:	31 97       	sbiw	r30, 0x01	; 1
    2112:	b1 82       	std	Z+1, r11	; 0x01
    2114:	a0 82       	st	Z, r10
		if (__system_var.update_flag == 1){
			__system_var.update_flag = 0;
			if (__network_data.is_server_connected){
				char toSend[30] = "RELAYCONNECTIONS;";
				int i;
				for (i=0;i<4;i++){
    2116:	0f 5f       	subi	r16, 0xFF	; 255
    2118:	1f 4f       	sbci	r17, 0xFF	; 255
    211a:	04 30       	cpi	r16, 0x04	; 4
    211c:	11 05       	cpc	r17, r1
    211e:	91 f6       	brne	.-92     	; 0x20c4 <_Z22CheckModuleConnectionsv+0x176>
						strcat(toSend,":");
						strcat(toSend,itoa(__system_var.relay_modules[i],conv,10));
						strcat(toSend,";");
					}
				}
				strcat(toSend,"\n");
    2120:	ce 01       	movw	r24, r28
    2122:	01 96       	adiw	r24, 0x01	; 1
    2124:	fc 01       	movw	r30, r24
    2126:	01 90       	ld	r0, Z+
    2128:	00 20       	and	r0, r0
    212a:	e9 f7       	brne	.-6      	; 0x2126 <_Z22CheckModuleConnectionsv+0x1d8>
    212c:	31 97       	sbiw	r30, 0x01	; 1
    212e:	2a e0       	ldi	r18, 0x0A	; 10
    2130:	30 e0       	ldi	r19, 0x00	; 0
    2132:	31 83       	std	Z+1, r19	; 0x01
    2134:	20 83       	st	Z, r18
				sendToServer(toSend,CONNECTION);
    2136:	60 91 aa 01 	lds	r22, 0x01AA	; 0x8001aa <CONNECTION>
    213a:	70 91 ab 01 	lds	r23, 0x01AB	; 0x8001ab <CONNECTION+0x1>
    213e:	0e 94 f9 07 	call	0xff2	; 0xff2 <_Z12sendToServerPci>
			
			}
		}
		__system_time.relay_module_check_timer_buffer = 0;
    2142:	10 92 65 08 	sts	0x0865, r1	; 0x800865 <__system_time+0x1b>
    2146:	10 92 64 08 	sts	0x0864, r1	; 0x800864 <__system_time+0x1a>
    214a:	1e c0       	rjmp	.+60     	; 0x2188 <_Z22CheckModuleConnectionsv+0x23a>
		itoa(__system_time.check_timer_buffer,conv,10);
	
		// CHECK RELAY MODULE CONNECTIONS
		for (i=0;i<4;i++){
			if (digitalRead(__system_var.detect_pins[i]) == 0 && __system_var.module_flags[i] == 0){
				delay(500);
    214c:	84 ef       	ldi	r24, 0xF4	; 244
    214e:	91 e0       	ldi	r25, 0x01	; 1
    2150:	d1 d1       	rcall	.+930    	; 0x24f4 <_Z5delayi>
				__system_var.module_connected[i] = 1;
    2152:	f7 01       	movw	r30, r14
    2154:	91 86       	std	Z+9, r9	; 0x09
    2156:	80 86       	std	Z+8, r8	; 0x08
				__system_var.module_flags[i] = 1;
    2158:	91 8a       	std	Z+17, r9	; 0x11
    215a:	80 8a       	std	Z+16, r8	; 0x10
    215c:	0f 2e       	mov	r0, r31
    215e:	f5 e0       	ldi	r31, 0x05	; 5
    2160:	cf 2e       	mov	r12, r31
    2162:	f0 2d       	mov	r31, r0
    2164:	d2 2c       	mov	r13, r2
    2166:	46 cf       	rjmp	.-372    	; 0x1ff4 <_Z22CheckModuleConnectionsv+0xa6>
				__system_var.update_flag = 1;
			
				//delay(500);
			}
			if (digitalRead(__system_var.detect_pins[i]) != 0 && __system_var.module_flags[i] == 1){
				delay(500);
    2168:	84 ef       	ldi	r24, 0xF4	; 244
    216a:	91 e0       	ldi	r25, 0x01	; 1
    216c:	c3 d1       	rcall	.+902    	; 0x24f4 <_Z5delayi>
				__system_var.module_connected[i] = 0;
    216e:	d5 01       	movw	r26, r10
    2170:	19 96       	adiw	r26, 0x09	; 9
    2172:	1c 92       	st	X, r1
    2174:	1e 92       	st	-X, r1
    2176:	18 97       	sbiw	r26, 0x08	; 8
				__system_var.module_flags[i] = 0;
    2178:	51 96       	adiw	r26, 0x11	; 17
    217a:	1c 92       	st	X, r1
    217c:	1e 92       	st	-X, r1
    217e:	50 97       	sbiw	r26, 0x10	; 16
				__system_var.update_flag = 1;
    2180:	f3 01       	movw	r30, r6
    2182:	91 82       	std	Z+1, r9	; 0x01
    2184:	80 82       	st	Z, r8
    2186:	61 cf       	rjmp	.-318    	; 0x204a <_Z22CheckModuleConnectionsv+0xfc>
			
			}
		}
		__system_time.relay_module_check_timer_buffer = 0;
	}
}
    2188:	a3 96       	adiw	r28, 0x23	; 35
    218a:	0f b6       	in	r0, 0x3f	; 63
    218c:	f8 94       	cli
    218e:	de bf       	out	0x3e, r29	; 62
    2190:	0f be       	out	0x3f, r0	; 63
    2192:	cd bf       	out	0x3d, r28	; 61
    2194:	df 91       	pop	r29
    2196:	cf 91       	pop	r28
    2198:	1f 91       	pop	r17
    219a:	0f 91       	pop	r16
    219c:	ff 90       	pop	r15
    219e:	ef 90       	pop	r14
    21a0:	df 90       	pop	r13
    21a2:	cf 90       	pop	r12
    21a4:	bf 90       	pop	r11
    21a6:	af 90       	pop	r10
    21a8:	9f 90       	pop	r9
    21aa:	8f 90       	pop	r8
    21ac:	7f 90       	pop	r7
    21ae:	6f 90       	pop	r6
    21b0:	5f 90       	pop	r5
    21b2:	4f 90       	pop	r4
    21b4:	3f 90       	pop	r3
    21b6:	2f 90       	pop	r2
    21b8:	08 95       	ret

000021ba <_Z9HeartBeatv>:

void HeartBeat(){
	// CHECK SERVER CONNECTION
	if (__system_time.check_timer_buffer >= __system_time.check_timer){
    21ba:	ea e4       	ldi	r30, 0x4A	; 74
    21bc:	f8 e0       	ldi	r31, 0x08	; 8
    21be:	26 89       	ldd	r18, Z+22	; 0x16
    21c0:	37 89       	ldd	r19, Z+23	; 0x17
    21c2:	84 89       	ldd	r24, Z+20	; 0x14
    21c4:	95 89       	ldd	r25, Z+21	; 0x15
    21c6:	28 17       	cp	r18, r24
    21c8:	39 07       	cpc	r19, r25
    21ca:	04 f1       	brlt	.+64     	; 0x220c <_Z9HeartBeatv+0x52>
		
		if (__network_data.is_server_connected ){
    21cc:	80 91 c1 08 	lds	r24, 0x08C1	; 0x8008c1 <__network_data+0x57>
    21d0:	88 23       	and	r24, r24
    21d2:	c1 f0       	breq	.+48     	; 0x2204 <_Z9HeartBeatv+0x4a>
			sendToServer("CHECK\n",CONNECTION);
    21d4:	60 91 aa 01 	lds	r22, 0x01AA	; 0x8001aa <CONNECTION>
    21d8:	70 91 ab 01 	lds	r23, 0x01AB	; 0x8001ab <CONNECTION+0x1>
    21dc:	8c ee       	ldi	r24, 0xEC	; 236
    21de:	96 e0       	ldi	r25, 0x06	; 6
    21e0:	0e 94 f9 07 	call	0xff2	; 0xff2 <_Z12sendToServerPci>
			if (readUntil("LIVE",3) == 0){
    21e4:	63 e0       	ldi	r22, 0x03	; 3
    21e6:	70 e0       	ldi	r23, 0x00	; 0
    21e8:	83 ef       	ldi	r24, 0xF3	; 243
    21ea:	96 e0       	ldi	r25, 0x06	; 6
    21ec:	0e 94 0d 07 	call	0xe1a	; 0xe1a <_Z9readUntilPKci>
    21f0:	89 2b       	or	r24, r25
    21f2:	41 f4       	brne	.+16     	; 0x2204 <_Z9HeartBeatv+0x4a>
				__network_data.is_server_connected = FALSE;
    21f4:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <FALSE>
    21f8:	80 93 c1 08 	sts	0x08C1, r24	; 0x8008c1 <__network_data+0x57>
				__network_data.is_esp_connected = FALSE;
    21fc:	80 93 bf 08 	sts	0x08BF, r24	; 0x8008bf <__network_data+0x55>
				__network_data.is_sim_connected = FALSE;
    2200:	80 93 c0 08 	sts	0x08C0, r24	; 0x8008c0 <__network_data+0x56>
			}
		}
		__system_time.check_timer_buffer = 0;
    2204:	10 92 61 08 	sts	0x0861, r1	; 0x800861 <__system_time+0x17>
    2208:	10 92 60 08 	sts	0x0860, r1	; 0x800860 <__system_time+0x16>
    220c:	08 95       	ret

0000220e <_Z18ProcessRelayTimersv>:
	}
}

void ProcessRelayTimers(){
    220e:	2f 92       	push	r2
    2210:	3f 92       	push	r3
    2212:	4f 92       	push	r4
    2214:	5f 92       	push	r5
    2216:	6f 92       	push	r6
    2218:	7f 92       	push	r7
    221a:	8f 92       	push	r8
    221c:	9f 92       	push	r9
    221e:	af 92       	push	r10
    2220:	bf 92       	push	r11
    2222:	cf 92       	push	r12
    2224:	df 92       	push	r13
    2226:	ef 92       	push	r14
    2228:	ff 92       	push	r15
    222a:	0f 93       	push	r16
    222c:	1f 93       	push	r17
    222e:	cf 93       	push	r28
    2230:	df 93       	push	r29
    2232:	00 d0       	rcall	.+0      	; 0x2234 <_Z18ProcessRelayTimersv+0x26>
    2234:	00 d0       	rcall	.+0      	; 0x2236 <_Z18ProcessRelayTimersv+0x28>
    2236:	cd b7       	in	r28, 0x3d	; 61
    2238:	de b7       	in	r29, 0x3e	; 62
	if ((__system_time.timer_check_timer_buffer >= __system_time.timer_check_timer) && __system_var.enabled_flag == 1){
    223a:	ea e4       	ldi	r30, 0x4A	; 74
    223c:	f8 e0       	ldi	r31, 0x08	; 8
    223e:	26 8d       	ldd	r18, Z+30	; 0x1e
    2240:	37 8d       	ldd	r19, Z+31	; 0x1f
    2242:	84 8d       	ldd	r24, Z+28	; 0x1c
    2244:	95 8d       	ldd	r25, Z+29	; 0x1d
    2246:	28 17       	cp	r18, r24
    2248:	39 07       	cpc	r19, r25
    224a:	0c f4       	brge	.+2      	; 0x224e <_Z18ProcessRelayTimersv+0x40>
    224c:	bc c0       	rjmp	.+376    	; 0x23c6 <_Z18ProcessRelayTimersv+0x1b8>
    224e:	80 91 01 0b 	lds	r24, 0x0B01	; 0x800b01 <__system_var+0x45>
    2252:	81 30       	cpi	r24, 0x01	; 1
    2254:	09 f0       	breq	.+2      	; 0x2258 <_Z18ProcessRelayTimersv+0x4a>
    2256:	b7 c0       	rjmp	.+366    	; 0x23c6 <_Z18ProcessRelayTimersv+0x1b8>
		int module_index;
		char conv[5];
		// this should be initialized after receiving updates from server and after module startup
		initializeTimerSettingIds();
    2258:	0e 94 ff 02 	call	0x5fe	; 0x5fe <_Z25initializeTimerSettingIdsv>
    225c:	8c e6       	ldi	r24, 0x6C	; 108
    225e:	97 e0       	ldi	r25, 0x07	; 7
    2260:	9a 83       	std	Y+2, r25	; 0x02
    2262:	89 83       	std	Y+1, r24	; 0x01
		 
		
		for (module_index=0;module_index<MAX_MODULE_COUNT;module_index++){
    2264:	00 e0       	ldi	r16, 0x00	; 0
    2266:	10 e0       	ldi	r17, 0x00	; 0
		}
		__system_time.check_timer_buffer = 0;
	}
}

void ProcessRelayTimers(){
    2268:	61 2c       	mov	r6, r1
			int relay_index;

			for (relay_index=0;relay_index<MAX_RELAY_COUNT;relay_index++){
				if (__timer_records[module_index].relays[relay_index] != 254){
					char isTimerActive = FALSE;
					__system_var.eeprom_position = EEPROM_CFG_START;
    226a:	0f 2e       	mov	r0, r31
    226c:	fd ef       	ldi	r31, 0xFD	; 253
    226e:	4f 2e       	mov	r4, r31
    2270:	fa e0       	ldi	r31, 0x0A	; 10
    2272:	5f 2e       	mov	r5, r31
    2274:	f0 2d       	mov	r31, r0
    2276:	20 90 a2 01 	lds	r2, 0x01A2	; 0x8001a2 <EEPROM_CFG_START>
    227a:	30 90 a3 01 	lds	r3, 0x01A3	; 0x8001a3 <EEPROM_CFG_START+0x1>

					// Get all the timers associated with relays
					while (getTimerSetting(module_index,__timer_records[module_index].relays[relay_index]) != 0){
						if (isCurrentTimerActive() == TRUE){
    227e:	e0 90 6f 03 	lds	r14, 0x036F	; 0x80036f <TRUE>
    2282:	f0 90 70 03 	lds	r15, 0x0370	; 0x800370 <TRUE+0x1>
    2286:	90 c0       	rjmp	.+288    	; 0x23a8 <_Z18ProcessRelayTimersv+0x19a>
    2288:	dc 82       	std	Y+4, r13	; 0x04
    228a:	cb 82       	std	Y+3, r12	; 0x03
		
		for (module_index=0;module_index<MAX_MODULE_COUNT;module_index++){
			int relay_index;

			for (relay_index=0;relay_index<MAX_RELAY_COUNT;relay_index++){
				if (__timer_records[module_index].relays[relay_index] != 254){
    228c:	d6 01       	movw	r26, r12
    228e:	12 96       	adiw	r26, 0x02	; 2
    2290:	8d 91       	ld	r24, X+
    2292:	9c 91       	ld	r25, X
    2294:	13 97       	sbiw	r26, 0x03	; 3
    2296:	8e 3f       	cpi	r24, 0xFE	; 254
    2298:	91 05       	cpc	r25, r1
    229a:	09 f4       	brne	.+2      	; 0x229e <_Z18ProcessRelayTimersv+0x90>
    229c:	70 c0       	rjmp	.+224    	; 0x237e <_Z18ProcessRelayTimersv+0x170>
					char isTimerActive = FALSE;
    229e:	ed e6       	ldi	r30, 0x6D	; 109
    22a0:	f3 e0       	ldi	r31, 0x03	; 3
    22a2:	70 80       	ld	r7, Z
					__system_var.eeprom_position = EEPROM_CFG_START;
    22a4:	d2 01       	movw	r26, r4
    22a6:	2d 92       	st	X+, r2
    22a8:	3c 92       	st	X, r3

					// Get all the timers associated with relays
					while (getTimerSetting(module_index,__timer_records[module_index].relays[relay_index]) != 0){
    22aa:	06 c0       	rjmp	.+12     	; 0x22b8 <_Z18ProcessRelayTimersv+0xaa>
						if (isCurrentTimerActive() == TRUE){
    22ac:	0e 94 54 05 	call	0xaa8	; 0xaa8 <_Z20isCurrentTimerActivev>
    22b0:	8e 15       	cp	r24, r14
    22b2:	9f 05       	cpc	r25, r15
    22b4:	09 f4       	brne	.+2      	; 0x22b8 <_Z18ProcessRelayTimersv+0xaa>
							isTimerActive = TRUE;
    22b6:	78 2e       	mov	r7, r24
				if (__timer_records[module_index].relays[relay_index] != 254){
					char isTimerActive = FALSE;
					__system_var.eeprom_position = EEPROM_CFG_START;

					// Get all the timers associated with relays
					while (getTimerSetting(module_index,__timer_records[module_index].relays[relay_index]) != 0){
    22b8:	eb 81       	ldd	r30, Y+3	; 0x03
    22ba:	fc 81       	ldd	r31, Y+4	; 0x04
    22bc:	62 81       	ldd	r22, Z+2	; 0x02
    22be:	73 81       	ldd	r23, Z+3	; 0x03
    22c0:	c8 01       	movw	r24, r16
    22c2:	0e 94 e7 03 	call	0x7ce	; 0x7ce <_Z15getTimerSettingii>
    22c6:	89 2b       	or	r24, r25
    22c8:	89 f7       	brne	.-30     	; 0x22ac <_Z18ProcessRelayTimersv+0x9e>
						if (isCurrentTimerActive() == TRUE){
							isTimerActive = TRUE;
						}
					}
					// check if module is connected as well
					if (isTimerActive){
    22ca:	77 20       	and	r7, r7
    22cc:	79 f1       	breq	.+94     	; 0x232c <_Z18ProcessRelayTimersv+0x11e>
						char conv[5];
						
						if (module_index < MAX_MODULE_COUNT && relay_index < MAX_RELAY_COUNT){
    22ce:	04 30       	cpi	r16, 0x04	; 4
    22d0:	11 05       	cpc	r17, r1
    22d2:	0c f0       	brlt	.+2      	; 0x22d6 <_Z18ProcessRelayTimersv+0xc8>
    22d4:	54 c0       	rjmp	.+168    	; 0x237e <_Z18ProcessRelayTimersv+0x170>
    22d6:	fd e0       	ldi	r31, 0x0D	; 13
    22d8:	af 16       	cp	r10, r31
    22da:	b1 04       	cpc	r11, r1
    22dc:	0c f0       	brlt	.+2      	; 0x22e0 <_Z18ProcessRelayTimersv+0xd2>
    22de:	4f c0       	rjmp	.+158    	; 0x237e <_Z18ProcessRelayTimersv+0x170>
							if (__relay_states[module_index].states[__timer_records[module_index].relays[relay_index]] == 0){
    22e0:	ab 81       	ldd	r26, Y+3	; 0x03
    22e2:	bc 81       	ldd	r27, Y+4	; 0x04
    22e4:	12 96       	adiw	r26, 0x02	; 2
    22e6:	6d 91       	ld	r22, X+
    22e8:	7c 91       	ld	r23, X
    22ea:	13 97       	sbiw	r26, 0x03	; 3
    22ec:	f4 01       	movw	r30, r8
    22ee:	e6 0f       	add	r30, r22
    22f0:	f7 1f       	adc	r31, r23
    22f2:	ee 0f       	add	r30, r30
    22f4:	ff 1f       	adc	r31, r31
    22f6:	ec 5f       	subi	r30, 0xFC	; 252
    22f8:	f8 4f       	sbci	r31, 0xF8	; 248
    22fa:	80 81       	ld	r24, Z
    22fc:	91 81       	ldd	r25, Z+1	; 0x01
    22fe:	89 2b       	or	r24, r25
    2300:	09 f0       	breq	.+2      	; 0x2304 <_Z18ProcessRelayTimersv+0xf6>
    2302:	3d c0       	rjmp	.+122    	; 0x237e <_Z18ProcessRelayTimersv+0x170>
								switchRelay(module_index,__timer_records[module_index].relays[relay_index],1);
    2304:	41 e0       	ldi	r20, 0x01	; 1
    2306:	80 2f       	mov	r24, r16
    2308:	4b dc       	rcall	.-1898   	; 0x1ba0 <_Z11switchRelayccc>
								__relay_states[module_index].states[__timer_records[module_index].relays[relay_index]] = 1;
    230a:	ab 81       	ldd	r26, Y+3	; 0x03
    230c:	bc 81       	ldd	r27, Y+4	; 0x04
    230e:	12 96       	adiw	r26, 0x02	; 2
    2310:	ed 91       	ld	r30, X+
    2312:	fc 91       	ld	r31, X
    2314:	13 97       	sbiw	r26, 0x03	; 3
    2316:	e8 0d       	add	r30, r8
    2318:	f9 1d       	adc	r31, r9
    231a:	ee 0f       	add	r30, r30
    231c:	ff 1f       	adc	r31, r31
    231e:	ec 5f       	subi	r30, 0xFC	; 252
    2320:	f8 4f       	sbci	r31, 0xF8	; 248
    2322:	81 e0       	ldi	r24, 0x01	; 1
    2324:	90 e0       	ldi	r25, 0x00	; 0
    2326:	91 83       	std	Z+1, r25	; 0x01
    2328:	80 83       	st	Z, r24
    232a:	29 c0       	rjmp	.+82     	; 0x237e <_Z18ProcessRelayTimersv+0x170>
						
						
						} else {
						char conv[5];
						
						if (module_index < MAX_MODULE_COUNT && relay_index < MAX_RELAY_COUNT){
    232c:	04 30       	cpi	r16, 0x04	; 4
    232e:	11 05       	cpc	r17, r1
    2330:	34 f5       	brge	.+76     	; 0x237e <_Z18ProcessRelayTimersv+0x170>
    2332:	9d e0       	ldi	r25, 0x0D	; 13
    2334:	a9 16       	cp	r10, r25
    2336:	b1 04       	cpc	r11, r1
    2338:	14 f5       	brge	.+68     	; 0x237e <_Z18ProcessRelayTimersv+0x170>
							if (__relay_states[module_index].states[__timer_records[module_index].relays[relay_index]] == 1){
    233a:	ab 81       	ldd	r26, Y+3	; 0x03
    233c:	bc 81       	ldd	r27, Y+4	; 0x04
    233e:	12 96       	adiw	r26, 0x02	; 2
    2340:	6d 91       	ld	r22, X+
    2342:	7c 91       	ld	r23, X
    2344:	13 97       	sbiw	r26, 0x03	; 3
    2346:	f4 01       	movw	r30, r8
    2348:	e6 0f       	add	r30, r22
    234a:	f7 1f       	adc	r31, r23
    234c:	ee 0f       	add	r30, r30
    234e:	ff 1f       	adc	r31, r31
    2350:	ec 5f       	subi	r30, 0xFC	; 252
    2352:	f8 4f       	sbci	r31, 0xF8	; 248
    2354:	80 81       	ld	r24, Z
    2356:	91 81       	ldd	r25, Z+1	; 0x01
    2358:	01 97       	sbiw	r24, 0x01	; 1
    235a:	89 f4       	brne	.+34     	; 0x237e <_Z18ProcessRelayTimersv+0x170>
								switchRelay(module_index,__timer_records[module_index].relays[relay_index],0);
    235c:	40 e0       	ldi	r20, 0x00	; 0
    235e:	80 2f       	mov	r24, r16
    2360:	1f dc       	rcall	.-1986   	; 0x1ba0 <_Z11switchRelayccc>
								__relay_states[module_index].states[__timer_records[module_index].relays[relay_index]] = 0;
    2362:	ab 81       	ldd	r26, Y+3	; 0x03
    2364:	bc 81       	ldd	r27, Y+4	; 0x04
    2366:	12 96       	adiw	r26, 0x02	; 2
    2368:	ed 91       	ld	r30, X+
    236a:	fc 91       	ld	r31, X
    236c:	13 97       	sbiw	r26, 0x03	; 3
    236e:	e8 0d       	add	r30, r8
    2370:	f9 1d       	adc	r31, r9
    2372:	ee 0f       	add	r30, r30
    2374:	ff 1f       	adc	r31, r31
    2376:	ec 5f       	subi	r30, 0xFC	; 252
    2378:	f8 4f       	sbci	r31, 0xF8	; 248
    237a:	11 82       	std	Z+1, r1	; 0x01
    237c:	10 82       	st	Z, r1
		 
		
		for (module_index=0;module_index<MAX_MODULE_COUNT;module_index++){
			int relay_index;

			for (relay_index=0;relay_index<MAX_RELAY_COUNT;relay_index++){
    237e:	bf ef       	ldi	r27, 0xFF	; 255
    2380:	ab 1a       	sub	r10, r27
    2382:	bb 0a       	sbc	r11, r27
    2384:	e2 e0       	ldi	r30, 0x02	; 2
    2386:	ce 0e       	add	r12, r30
    2388:	d1 1c       	adc	r13, r1
    238a:	fd e0       	ldi	r31, 0x0D	; 13
    238c:	af 16       	cp	r10, r31
    238e:	b1 04       	cpc	r11, r1
    2390:	09 f0       	breq	.+2      	; 0x2394 <_Z18ProcessRelayTimersv+0x186>
    2392:	7a cf       	rjmp	.-268    	; 0x2288 <_Z18ProcessRelayTimersv+0x7a>
		char conv[5];
		// this should be initialized after receiving updates from server and after module startup
		initializeTimerSettingIds();
		 
		
		for (module_index=0;module_index<MAX_MODULE_COUNT;module_index++){
    2394:	0f 5f       	subi	r16, 0xFF	; 255
    2396:	1f 4f       	sbci	r17, 0xFF	; 255
    2398:	89 81       	ldd	r24, Y+1	; 0x01
    239a:	9a 81       	ldd	r25, Y+2	; 0x02
    239c:	4c 96       	adiw	r24, 0x1c	; 28
    239e:	9a 83       	std	Y+2, r25	; 0x02
    23a0:	89 83       	std	Y+1, r24	; 0x01
    23a2:	04 30       	cpi	r16, 0x04	; 4
    23a4:	11 05       	cpc	r17, r1
    23a6:	59 f0       	breq	.+22     	; 0x23be <_Z18ProcessRelayTimersv+0x1b0>
		}
		__system_time.check_timer_buffer = 0;
	}
}

void ProcessRelayTimers(){
    23a8:	c9 80       	ldd	r12, Y+1	; 0x01
    23aa:	da 80       	ldd	r13, Y+2	; 0x02
    23ac:	a6 2c       	mov	r10, r6
    23ae:	b1 2c       	mov	r11, r1
						
						} else {
						char conv[5];
						
						if (module_index < MAX_MODULE_COUNT && relay_index < MAX_RELAY_COUNT){
							if (__relay_states[module_index].states[__timer_records[module_index].relays[relay_index]] == 1){
    23b0:	9d e0       	ldi	r25, 0x0D	; 13
    23b2:	90 9f       	mul	r25, r16
    23b4:	40 01       	movw	r8, r0
    23b6:	91 9f       	mul	r25, r17
    23b8:	90 0c       	add	r9, r0
    23ba:	11 24       	eor	r1, r1
    23bc:	65 cf       	rjmp	.-310    	; 0x2288 <_Z18ProcessRelayTimersv+0x7a>
						
					}
				}
			} 
		}
		__system_time.timer_check_timer_buffer = 0;
    23be:	10 92 69 08 	sts	0x0869, r1	; 0x800869 <__system_time+0x1f>
    23c2:	10 92 68 08 	sts	0x0868, r1	; 0x800868 <__system_time+0x1e>
	}
}
    23c6:	0f 90       	pop	r0
    23c8:	0f 90       	pop	r0
    23ca:	0f 90       	pop	r0
    23cc:	0f 90       	pop	r0
    23ce:	df 91       	pop	r29
    23d0:	cf 91       	pop	r28
    23d2:	1f 91       	pop	r17
    23d4:	0f 91       	pop	r16
    23d6:	ff 90       	pop	r15
    23d8:	ef 90       	pop	r14
    23da:	df 90       	pop	r13
    23dc:	cf 90       	pop	r12
    23de:	bf 90       	pop	r11
    23e0:	af 90       	pop	r10
    23e2:	9f 90       	pop	r9
    23e4:	8f 90       	pop	r8
    23e6:	7f 90       	pop	r7
    23e8:	6f 90       	pop	r6
    23ea:	5f 90       	pop	r5
    23ec:	4f 90       	pop	r4
    23ee:	3f 90       	pop	r3
    23f0:	2f 90       	pop	r2
    23f2:	08 95       	ret

000023f4 <_Z10chipSelectii>:

	SPDR = toWrite;

	while(!(SPSR & (1<<SPIF)));

}
    23f4:	1f 93       	push	r17
    23f6:	cf 93       	push	r28
    23f8:	df 93       	push	r29
    23fa:	ec 01       	movw	r28, r24
    23fc:	16 2f       	mov	r17, r22
    23fe:	84 e6       	ldi	r24, 0x64	; 100
    2400:	90 e0       	ldi	r25, 0x00	; 0
    2402:	78 d0       	rcall	.+240    	; 0x24f4 <_Z5delayi>
    2404:	c1 30       	cpi	r28, 0x01	; 1
    2406:	d1 05       	cpc	r29, r1
    2408:	89 f0       	breq	.+34     	; 0x242c <_Z10chipSelectii+0x38>
    240a:	1c f4       	brge	.+6      	; 0x2412 <_Z10chipSelectii+0x1e>
    240c:	cd 2b       	or	r28, r29
    240e:	39 f0       	breq	.+14     	; 0x241e <_Z10chipSelectii+0x2a>
    2410:	21 c0       	rjmp	.+66     	; 0x2454 <_Z10chipSelectii+0x60>
    2412:	c2 30       	cpi	r28, 0x02	; 2
    2414:	d1 05       	cpc	r29, r1
    2416:	89 f0       	breq	.+34     	; 0x243a <_Z10chipSelectii+0x46>
    2418:	23 97       	sbiw	r28, 0x03	; 3
    241a:	b1 f0       	breq	.+44     	; 0x2448 <_Z10chipSelectii+0x54>
    241c:	1b c0       	rjmp	.+54     	; 0x2454 <_Z10chipSelectii+0x60>
    241e:	61 2f       	mov	r22, r17
    2420:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <CS_1>
    2424:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <CS_1+0x1>
    2428:	da d0       	rcall	.+436    	; 0x25de <_Z12digitalWriteic>
    242a:	14 c0       	rjmp	.+40     	; 0x2454 <_Z10chipSelectii+0x60>
    242c:	61 2f       	mov	r22, r17
    242e:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <CS_2>
    2432:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <CS_2+0x1>
    2436:	d3 d0       	rcall	.+422    	; 0x25de <_Z12digitalWriteic>
    2438:	0d c0       	rjmp	.+26     	; 0x2454 <_Z10chipSelectii+0x60>
    243a:	61 2f       	mov	r22, r17
    243c:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <CS_3>
    2440:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <CS_3+0x1>
    2444:	cc d0       	rcall	.+408    	; 0x25de <_Z12digitalWriteic>
    2446:	06 c0       	rjmp	.+12     	; 0x2454 <_Z10chipSelectii+0x60>
    2448:	61 2f       	mov	r22, r17
    244a:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <CS_4>
    244e:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <CS_4+0x1>
    2452:	c5 d0       	rcall	.+394    	; 0x25de <_Z12digitalWriteic>
    2454:	84 e6       	ldi	r24, 0x64	; 100
    2456:	90 e0       	ldi	r25, 0x00	; 0
    2458:	4d d0       	rcall	.+154    	; 0x24f4 <_Z5delayi>
    245a:	df 91       	pop	r29
    245c:	cf 91       	pop	r28
    245e:	1f 91       	pop	r17
    2460:	08 95       	ret

00002462 <_Z15SPI_init_masterv>:
    2462:	81 e5       	ldi	r24, 0x51	; 81
    2464:	8c bd       	out	0x2c, r24	; 44
    2466:	1e bc       	out	0x2e, r1	; 46
    2468:	08 95       	ret

0000246a <_Z13SPI_WriteReadh>:

unsigned char SPI_WriteRead(unsigned char toWrite)
{
	unsigned char data;
												
	SPDR = toWrite;								
    246a:	8e bd       	out	0x2e, r24	; 46
	
	while(!(SPSR & (1<<SPIF)));
    246c:	0d b4       	in	r0, 0x2d	; 45
    246e:	07 fe       	sbrs	r0, 7
    2470:	fd cf       	rjmp	.-6      	; 0x246c <_Z13SPI_WriteReadh+0x2>
	
	data = SPDR;
    2472:	8e b5       	in	r24, 0x2e	; 46
	
	return data;
}
    2474:	08 95       	ret

00002476 <_Z10USART_Initv>:
				j = 0;

			}
		}
	}
}
    2476:	20 91 75 03 	lds	r18, 0x0375	; 0x800375 <BAUD_PRESCALE>
    247a:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    247e:	90 91 76 03 	lds	r25, 0x0376	; 0x800376 <BAUD_PRESCALE+0x1>
    2482:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    2486:	88 e9       	ldi	r24, 0x98	; 152
    2488:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    248c:	20 93 cc 00 	sts	0x00CC, r18	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
    2490:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
    2494:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7e00c9>
    2498:	78 94       	sei
    249a:	08 95       	ret

0000249c <_Z15USART1_SendBytec>:
    249c:	e8 ec       	ldi	r30, 0xC8	; 200
    249e:	f0 e0       	ldi	r31, 0x00	; 0
    24a0:	90 81       	ld	r25, Z
    24a2:	95 ff       	sbrs	r25, 5
    24a4:	fd cf       	rjmp	.-6      	; 0x24a0 <_Z15USART1_SendBytec+0x4>
    24a6:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
    24aa:	08 95       	ret

000024ac <_Z17USART1_SendStringPKc>:
    24ac:	cf 93       	push	r28
    24ae:	df 93       	push	r29
    24b0:	ec 01       	movw	r28, r24
    24b2:	88 81       	ld	r24, Y
    24b4:	88 23       	and	r24, r24
    24b6:	29 f0       	breq	.+10     	; 0x24c2 <_Z17USART1_SendStringPKc+0x16>
    24b8:	21 96       	adiw	r28, 0x01	; 1
    24ba:	f0 df       	rcall	.-32     	; 0x249c <_Z15USART1_SendBytec>
    24bc:	89 91       	ld	r24, Y+
    24be:	81 11       	cpse	r24, r1
    24c0:	fc cf       	rjmp	.-8      	; 0x24ba <_Z17USART1_SendStringPKc+0xe>
    24c2:	df 91       	pop	r29
    24c4:	cf 91       	pop	r28
    24c6:	08 95       	ret

000024c8 <_Z15USART0_SendBytec>:
    24c8:	e0 ec       	ldi	r30, 0xC0	; 192
    24ca:	f0 e0       	ldi	r31, 0x00	; 0
    24cc:	90 81       	ld	r25, Z
    24ce:	95 ff       	sbrs	r25, 5
    24d0:	fd cf       	rjmp	.-6      	; 0x24cc <_Z15USART0_SendBytec+0x4>
    24d2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    24d6:	08 95       	ret

000024d8 <_Z17USART0_SendStringPKc>:
    24d8:	cf 93       	push	r28
    24da:	df 93       	push	r29
    24dc:	ec 01       	movw	r28, r24
    24de:	88 81       	ld	r24, Y
    24e0:	88 23       	and	r24, r24
    24e2:	29 f0       	breq	.+10     	; 0x24ee <_Z17USART0_SendStringPKc+0x16>
    24e4:	21 96       	adiw	r28, 0x01	; 1
    24e6:	f0 df       	rcall	.-32     	; 0x24c8 <_Z15USART0_SendBytec>
    24e8:	89 91       	ld	r24, Y+
    24ea:	81 11       	cpse	r24, r1
    24ec:	fc cf       	rjmp	.-8      	; 0x24e6 <_Z17USART0_SendStringPKc+0xe>
    24ee:	df 91       	pop	r29
    24f0:	cf 91       	pop	r28
    24f2:	08 95       	ret

000024f4 <_Z5delayi>:
    24f4:	18 16       	cp	r1, r24
    24f6:	19 06       	cpc	r1, r25
    24f8:	44 f4       	brge	.+16     	; 0x250a <_Z5delayi+0x16>
    24fa:	e3 ec       	ldi	r30, 0xC3	; 195
    24fc:	f9 e0       	ldi	r31, 0x09	; 9
    24fe:	31 97       	sbiw	r30, 0x01	; 1
    2500:	f1 f7       	brne	.-4      	; 0x24fe <_Z5delayi+0xa>
    2502:	00 c0       	rjmp	.+0      	; 0x2504 <_Z5delayi+0x10>
    2504:	00 00       	nop
    2506:	01 97       	sbiw	r24, 0x01	; 1
    2508:	c1 f7       	brne	.-16     	; 0x24fa <_Z5delayi+0x6>
    250a:	08 95       	ret

0000250c <_Z7pinModeic>:
    250c:	01 97       	sbiw	r24, 0x01	; 1
    250e:	8c 32       	cpi	r24, 0x2C	; 44
    2510:	91 05       	cpc	r25, r1
    2512:	08 f0       	brcs	.+2      	; 0x2516 <_Z7pinModeic+0xa>
    2514:	63 c0       	rjmp	.+198    	; 0x25dc <_Z7pinModeic+0xd0>
    2516:	83 5b       	subi	r24, 0xB3	; 179
    2518:	9f 4f       	sbci	r25, 0xFF	; 255
    251a:	fc 01       	movw	r30, r24
    251c:	98 c2       	rjmp	.+1328   	; 0x2a4e <__tablejump2__>
    251e:	61 30       	cpi	r22, 0x01	; 1
    2520:	11 f4       	brne	.+4      	; 0x2526 <_Z7pinModeic+0x1a>
    2522:	25 9a       	sbi	0x04, 5	; 4
    2524:	08 95       	ret
    2526:	25 98       	cbi	0x04, 5	; 4
    2528:	08 95       	ret
    252a:	61 30       	cpi	r22, 0x01	; 1
    252c:	11 f4       	brne	.+4      	; 0x2532 <_Z7pinModeic+0x26>
    252e:	26 9a       	sbi	0x04, 6	; 4
    2530:	08 95       	ret
    2532:	26 98       	cbi	0x04, 6	; 4
    2534:	08 95       	ret
    2536:	61 30       	cpi	r22, 0x01	; 1
    2538:	11 f4       	brne	.+4      	; 0x253e <_Z7pinModeic+0x32>
    253a:	27 9a       	sbi	0x04, 7	; 4
    253c:	08 95       	ret
    253e:	27 98       	cbi	0x04, 7	; 4
    2540:	08 95       	ret
    2542:	61 30       	cpi	r22, 0x01	; 1
    2544:	11 f4       	brne	.+4      	; 0x254a <_Z7pinModeic+0x3e>
    2546:	54 9a       	sbi	0x0a, 4	; 10
    2548:	08 95       	ret
    254a:	54 98       	cbi	0x0a, 4	; 10
    254c:	08 95       	ret
    254e:	61 30       	cpi	r22, 0x01	; 1
    2550:	11 f4       	brne	.+4      	; 0x2556 <_Z7pinModeic+0x4a>
    2552:	55 9a       	sbi	0x0a, 5	; 10
    2554:	08 95       	ret
    2556:	55 98       	cbi	0x0a, 5	; 10
    2558:	08 95       	ret
    255a:	61 30       	cpi	r22, 0x01	; 1
    255c:	11 f4       	brne	.+4      	; 0x2562 <_Z7pinModeic+0x56>
    255e:	56 9a       	sbi	0x0a, 6	; 10
    2560:	08 95       	ret
    2562:	56 98       	cbi	0x0a, 6	; 10
    2564:	08 95       	ret
    2566:	61 30       	cpi	r22, 0x01	; 1
    2568:	11 f4       	brne	.+4      	; 0x256e <_Z7pinModeic+0x62>
    256a:	57 9a       	sbi	0x0a, 7	; 10
    256c:	08 95       	ret
    256e:	57 98       	cbi	0x0a, 7	; 10
    2570:	08 95       	ret
    2572:	61 30       	cpi	r22, 0x01	; 1
    2574:	11 f4       	brne	.+4      	; 0x257a <_Z7pinModeic+0x6e>
    2576:	3a 9a       	sbi	0x07, 2	; 7
    2578:	08 95       	ret
    257a:	3a 98       	cbi	0x07, 2	; 7
    257c:	08 95       	ret
    257e:	61 30       	cpi	r22, 0x01	; 1
    2580:	11 f4       	brne	.+4      	; 0x2586 <_Z7pinModeic+0x7a>
    2582:	3b 9a       	sbi	0x07, 3	; 7
    2584:	08 95       	ret
    2586:	3b 98       	cbi	0x07, 3	; 7
    2588:	08 95       	ret
    258a:	61 30       	cpi	r22, 0x01	; 1
    258c:	11 f4       	brne	.+4      	; 0x2592 <_Z7pinModeic+0x86>
    258e:	3c 9a       	sbi	0x07, 4	; 7
    2590:	08 95       	ret
    2592:	3c 98       	cbi	0x07, 4	; 7
    2594:	08 95       	ret
    2596:	61 30       	cpi	r22, 0x01	; 1
    2598:	11 f4       	brne	.+4      	; 0x259e <_Z7pinModeic+0x92>
    259a:	3d 9a       	sbi	0x07, 5	; 7
    259c:	08 95       	ret
    259e:	3d 98       	cbi	0x07, 5	; 7
    25a0:	08 95       	ret
    25a2:	61 30       	cpi	r22, 0x01	; 1
    25a4:	11 f4       	brne	.+4      	; 0x25aa <_Z7pinModeic+0x9e>
    25a6:	20 9a       	sbi	0x04, 0	; 4
    25a8:	08 95       	ret
    25aa:	20 98       	cbi	0x04, 0	; 4
    25ac:	08 95       	ret
    25ae:	61 30       	cpi	r22, 0x01	; 1
    25b0:	11 f4       	brne	.+4      	; 0x25b6 <_Z7pinModeic+0xaa>
    25b2:	21 9a       	sbi	0x04, 1	; 4
    25b4:	08 95       	ret
    25b6:	21 98       	cbi	0x04, 1	; 4
    25b8:	08 95       	ret
    25ba:	61 30       	cpi	r22, 0x01	; 1
    25bc:	11 f4       	brne	.+4      	; 0x25c2 <_Z7pinModeic+0xb6>
    25be:	22 9a       	sbi	0x04, 2	; 4
    25c0:	08 95       	ret
    25c2:	22 98       	cbi	0x04, 2	; 4
    25c4:	08 95       	ret
    25c6:	61 30       	cpi	r22, 0x01	; 1
    25c8:	11 f4       	brne	.+4      	; 0x25ce <_Z7pinModeic+0xc2>
    25ca:	23 9a       	sbi	0x04, 3	; 4
    25cc:	08 95       	ret
    25ce:	23 98       	cbi	0x04, 3	; 4
    25d0:	08 95       	ret
    25d2:	61 30       	cpi	r22, 0x01	; 1
    25d4:	11 f4       	brne	.+4      	; 0x25da <_Z7pinModeic+0xce>
    25d6:	24 9a       	sbi	0x04, 4	; 4
    25d8:	08 95       	ret
    25da:	24 98       	cbi	0x04, 4	; 4
    25dc:	08 95       	ret

000025de <_Z12digitalWriteic>:
    25de:	0d 97       	sbiw	r24, 0x0d	; 13
    25e0:	8e 31       	cpi	r24, 0x1E	; 30
    25e2:	91 05       	cpc	r25, r1
    25e4:	68 f5       	brcc	.+90     	; 0x2640 <_Z12digitalWriteic+0x62>
    25e6:	87 58       	subi	r24, 0x87	; 135
    25e8:	9f 4f       	sbci	r25, 0xFF	; 255
    25ea:	fc 01       	movw	r30, r24
    25ec:	30 c2       	rjmp	.+1120   	; 0x2a4e <__tablejump2__>
    25ee:	61 30       	cpi	r22, 0x01	; 1
    25f0:	11 f4       	brne	.+4      	; 0x25f6 <_Z12digitalWriteic+0x18>
    25f2:	5c 9a       	sbi	0x0b, 4	; 11
    25f4:	08 95       	ret
    25f6:	5c 98       	cbi	0x0b, 4	; 11
    25f8:	08 95       	ret
    25fa:	61 30       	cpi	r22, 0x01	; 1
    25fc:	11 f4       	brne	.+4      	; 0x2602 <_Z12digitalWriteic+0x24>
    25fe:	5d 9a       	sbi	0x0b, 5	; 11
    2600:	08 95       	ret
    2602:	5d 98       	cbi	0x0b, 5	; 11
    2604:	08 95       	ret
    2606:	61 30       	cpi	r22, 0x01	; 1
    2608:	11 f4       	brne	.+4      	; 0x260e <_Z12digitalWriteic+0x30>
    260a:	5e 9a       	sbi	0x0b, 6	; 11
    260c:	08 95       	ret
    260e:	5e 98       	cbi	0x0b, 6	; 11
    2610:	08 95       	ret
    2612:	61 30       	cpi	r22, 0x01	; 1
    2614:	11 f4       	brne	.+4      	; 0x261a <_Z12digitalWriteic+0x3c>
    2616:	5f 9a       	sbi	0x0b, 7	; 11
    2618:	08 95       	ret
    261a:	5f 98       	cbi	0x0b, 7	; 11
    261c:	08 95       	ret
    261e:	61 30       	cpi	r22, 0x01	; 1
    2620:	11 f4       	brne	.+4      	; 0x2626 <_Z12digitalWriteic+0x48>
    2622:	28 9a       	sbi	0x05, 0	; 5
    2624:	08 95       	ret
    2626:	28 98       	cbi	0x05, 0	; 5
    2628:	08 95       	ret
    262a:	61 30       	cpi	r22, 0x01	; 1
    262c:	11 f4       	brne	.+4      	; 0x2632 <_Z12digitalWriteic+0x54>
    262e:	29 9a       	sbi	0x05, 1	; 5
    2630:	08 95       	ret
    2632:	29 98       	cbi	0x05, 1	; 5
    2634:	08 95       	ret
    2636:	61 30       	cpi	r22, 0x01	; 1
    2638:	11 f4       	brne	.+4      	; 0x263e <_Z12digitalWriteic+0x60>
    263a:	2a 9a       	sbi	0x05, 2	; 5
    263c:	08 95       	ret
    263e:	2a 98       	cbi	0x05, 2	; 5
    2640:	08 95       	ret

00002642 <_Z11digitalReadi>:
    2642:	87 31       	cpi	r24, 0x17	; 23
    2644:	91 05       	cpc	r25, r1
    2646:	99 f0       	breq	.+38     	; 0x266e <_Z11digitalReadi+0x2c>
    2648:	34 f4       	brge	.+12     	; 0x2656 <_Z11digitalReadi+0x14>
    264a:	85 31       	cpi	r24, 0x15	; 21
    264c:	91 05       	cpc	r25, r1
    264e:	49 f0       	breq	.+18     	; 0x2662 <_Z11digitalReadi+0x20>
    2650:	46 97       	sbiw	r24, 0x16	; 22
    2652:	51 f0       	breq	.+20     	; 0x2668 <_Z11digitalReadi+0x26>
    2654:	15 c0       	rjmp	.+42     	; 0x2680 <_Z11digitalReadi+0x3e>
    2656:	88 31       	cpi	r24, 0x18	; 24
    2658:	91 05       	cpc	r25, r1
    265a:	61 f0       	breq	.+24     	; 0x2674 <_Z11digitalReadi+0x32>
    265c:	8b 97       	sbiw	r24, 0x2b	; 43
    265e:	69 f0       	breq	.+26     	; 0x267a <_Z11digitalReadi+0x38>
    2660:	0f c0       	rjmp	.+30     	; 0x2680 <_Z11digitalReadi+0x3e>
    2662:	86 b1       	in	r24, 0x06	; 6
    2664:	84 70       	andi	r24, 0x04	; 4
    2666:	08 95       	ret
    2668:	86 b1       	in	r24, 0x06	; 6
    266a:	88 70       	andi	r24, 0x08	; 8
    266c:	08 95       	ret
    266e:	86 b1       	in	r24, 0x06	; 6
    2670:	80 71       	andi	r24, 0x10	; 16
    2672:	08 95       	ret
    2674:	86 b1       	in	r24, 0x06	; 6
    2676:	80 72       	andi	r24, 0x20	; 32
    2678:	08 95       	ret
    267a:	83 b1       	in	r24, 0x03	; 3
    267c:	88 70       	andi	r24, 0x08	; 8
    267e:	08 95       	ret
    2680:	80 e0       	ldi	r24, 0x00	; 0
    2682:	08 95       	ret

00002684 <_Z9setSourcei>:
    2684:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <HAS_WIFI>
    2688:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <HAS_WIFI+0x1>
    268c:	23 2b       	or	r18, r19
    268e:	51 f0       	breq	.+20     	; 0x26a4 <_Z9setSourcei+0x20>
    2690:	20 91 73 03 	lds	r18, 0x0373	; 0x800373 <ESP>
    2694:	30 91 74 03 	lds	r19, 0x0374	; 0x800374 <ESP+0x1>
    2698:	82 17       	cp	r24, r18
    269a:	93 07       	cpc	r25, r19
    269c:	19 f4       	brne	.+6      	; 0x26a4 <_Z9setSourcei+0x20>
    269e:	80 93 fa 0a 	sts	0x0AFA, r24	; 0x800afa <__system_var+0x3e>
    26a2:	08 95       	ret
    26a4:	20 91 a6 01 	lds	r18, 0x01A6	; 0x8001a6 <HAS_GSM>
    26a8:	30 91 a7 01 	lds	r19, 0x01A7	; 0x8001a7 <HAS_GSM+0x1>
    26ac:	23 2b       	or	r18, r19
    26ae:	51 f0       	breq	.+20     	; 0x26c4 <_Z9setSourcei+0x40>
    26b0:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <SIM>
    26b4:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <SIM+0x1>
    26b8:	82 17       	cp	r24, r18
    26ba:	93 07       	cpc	r25, r19
    26bc:	19 f4       	brne	.+6      	; 0x26c4 <_Z9setSourcei+0x40>
    26be:	80 93 fa 0a 	sts	0x0AFA, r24	; 0x800afa <__system_var+0x3e>
    26c2:	08 95       	ret
    26c4:	8f ef       	ldi	r24, 0xFF	; 255
    26c6:	80 93 fa 0a 	sts	0x0AFA, r24	; 0x800afa <__system_var+0x3e>
    26ca:	08 95       	ret

000026cc <_Z15defaultSettingsv>:
    26cc:	ea e4       	ldi	r30, 0x4A	; 74
    26ce:	f8 e0       	ldi	r31, 0x08	; 8
    26d0:	11 82       	std	Z+1, r1	; 0x01
    26d2:	10 82       	st	Z, r1
    26d4:	13 82       	std	Z+3, r1	; 0x03
    26d6:	12 82       	std	Z+2, r1	; 0x02
    26d8:	15 82       	std	Z+5, r1	; 0x05
    26da:	14 82       	std	Z+4, r1	; 0x04
    26dc:	11 86       	std	Z+9, r1	; 0x09
    26de:	10 86       	std	Z+8, r1	; 0x08
    26e0:	13 86       	std	Z+11, r1	; 0x0b
    26e2:	12 86       	std	Z+10, r1	; 0x0a
    26e4:	15 86       	std	Z+13, r1	; 0x0d
    26e6:	14 86       	std	Z+12, r1	; 0x0c
    26e8:	17 86       	std	Z+15, r1	; 0x0f
    26ea:	16 86       	std	Z+14, r1	; 0x0e
    26ec:	ea ed       	ldi	r30, 0xDA	; 218
    26ee:	fa e0       	ldi	r31, 0x0A	; 10
    26f0:	82 ee       	ldi	r24, 0xE2	; 226
    26f2:	9a e0       	ldi	r25, 0x0A	; 10
    26f4:	11 92       	st	Z+, r1
    26f6:	11 92       	st	Z+, r1
    26f8:	17 82       	std	Z+7, r1	; 0x07
    26fa:	16 82       	std	Z+6, r1	; 0x06
    26fc:	17 86       	std	Z+15, r1	; 0x0f
    26fe:	16 86       	std	Z+14, r1	; 0x0e
    2700:	e8 17       	cp	r30, r24
    2702:	f9 07       	cpc	r31, r25
    2704:	b9 f7       	brne	.-18     	; 0x26f4 <_Z15defaultSettingsv+0x28>
    2706:	e4 e0       	ldi	r30, 0x04	; 4
    2708:	f7 e0       	ldi	r31, 0x07	; 7
    270a:	2c e6       	ldi	r18, 0x6C	; 108
    270c:	37 e0       	ldi	r19, 0x07	; 7
    270e:	09 c0       	rjmp	.+18     	; 0x2722 <_Z15defaultSettingsv+0x56>
    2710:	11 92       	st	Z+, r1
    2712:	11 92       	st	Z+, r1
    2714:	e8 17       	cp	r30, r24
    2716:	f9 07       	cpc	r31, r25
    2718:	d9 f7       	brne	.-10     	; 0x2710 <_Z15defaultSettingsv+0x44>
    271a:	fc 01       	movw	r30, r24
    271c:	28 17       	cp	r18, r24
    271e:	39 07       	cpc	r19, r25
    2720:	19 f0       	breq	.+6      	; 0x2728 <_Z15defaultSettingsv+0x5c>
    2722:	cf 01       	movw	r24, r30
    2724:	4a 96       	adiw	r24, 0x1a	; 26
    2726:	f4 cf       	rjmp	.-24     	; 0x2710 <_Z15defaultSettingsv+0x44>
    2728:	ec eb       	ldi	r30, 0xBC	; 188
    272a:	fa e0       	ldi	r31, 0x0A	; 10
    272c:	10 92 00 0b 	sts	0x0B00, r1	; 0x800b00 <__system_var+0x44>
    2730:	10 92 ff 0a 	sts	0x0AFF, r1	; 0x800aff <__system_var+0x43>
    2734:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <DETECT_0>
    2738:	90 91 93 01 	lds	r25, 0x0193	; 0x800193 <DETECT_0+0x1>
    273c:	97 ab       	std	Z+55, r25	; 0x37
    273e:	86 ab       	std	Z+54, r24	; 0x36
    2740:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <DETECT_1>
    2744:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <DETECT_1+0x1>
    2748:	91 af       	std	Z+57, r25	; 0x39
    274a:	80 af       	std	Z+56, r24	; 0x38
    274c:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <DETECT_2>
    2750:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <DETECT_2+0x1>
    2754:	93 af       	std	Z+59, r25	; 0x3b
    2756:	82 af       	std	Z+58, r24	; 0x3a
    2758:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <DETECT_3>
    275c:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <DETECT_3+0x1>
    2760:	95 af       	std	Z+61, r25	; 0x3d
    2762:	84 af       	std	Z+60, r24	; 0x3c
    2764:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <ESP>
    2768:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <ESP+0x1>
    276c:	8b df       	rcall	.-234    	; 0x2684 <_Z9setSourcei>
    276e:	10 92 fc 0a 	sts	0x0AFC, r1	; 0x800afc <__system_var+0x40>
    2772:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <__system_var+0x3f>
    2776:	10 92 fe 0a 	sts	0x0AFE, r1	; 0x800afe <__system_var+0x42>
    277a:	10 92 fd 0a 	sts	0x0AFD, r1	; 0x800afd <__system_var+0x41>
    277e:	81 e0       	ldi	r24, 0x01	; 1
    2780:	80 93 01 0b 	sts	0x0B01, r24	; 0x800b01 <__system_var+0x45>
    2784:	68 eb       	ldi	r22, 0xB8	; 184
    2786:	71 e0       	ldi	r23, 0x01	; 1
    2788:	8a e6       	ldi	r24, 0x6A	; 106
    278a:	98 e0       	ldi	r25, 0x08	; 8
    278c:	e7 d2       	rcall	.+1486   	; 0x2d5c <strcpy>
    278e:	63 eb       	ldi	r22, 0xB3	; 179
    2790:	71 e0       	ldi	r23, 0x01	; 1
    2792:	88 e8       	ldi	r24, 0x88	; 136
    2794:	98 e0       	ldi	r25, 0x08	; 8
    2796:	e2 d2       	rcall	.+1476   	; 0x2d5c <strcpy>
    2798:	60 ed       	ldi	r22, 0xD0	; 208
    279a:	71 e0       	ldi	r23, 0x01	; 1
    279c:	8d e8       	ldi	r24, 0x8D	; 141
    279e:	98 e0       	ldi	r25, 0x08	; 8
    27a0:	dd d2       	rcall	.+1466   	; 0x2d5c <strcpy>
    27a2:	65 ec       	ldi	r22, 0xC5	; 197
    27a4:	71 e0       	ldi	r23, 0x01	; 1
    27a6:	81 ea       	ldi	r24, 0xA1	; 161
    27a8:	98 e0       	ldi	r25, 0x08	; 8
    27aa:	d8 d2       	rcall	.+1456   	; 0x2d5c <strcpy>
    27ac:	6c ea       	ldi	r22, 0xAC	; 172
    27ae:	71 e0       	ldi	r23, 0x01	; 1
    27b0:	85 eb       	ldi	r24, 0xB5	; 181
    27b2:	98 e0       	ldi	r25, 0x08	; 8
    27b4:	d3 d2       	rcall	.+1446   	; 0x2d5c <strcpy>
    27b6:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <FALSE>
    27ba:	80 93 bf 08 	sts	0x08BF, r24	; 0x8008bf <__network_data+0x55>
    27be:	80 93 c0 08 	sts	0x08C0, r24	; 0x8008c0 <__network_data+0x56>
    27c2:	80 93 c1 08 	sts	0x08C1, r24	; 0x8008c1 <__network_data+0x57>
    27c6:	2c e2       	ldi	r18, 0x2C	; 44
    27c8:	31 e0       	ldi	r19, 0x01	; 1
    27ca:	e2 ec       	ldi	r30, 0xC2	; 194
    27cc:	f8 e0       	ldi	r31, 0x08	; 8
    27ce:	df 01       	movw	r26, r30
    27d0:	a9 01       	movw	r20, r18
    27d2:	1d 92       	st	X+, r1
    27d4:	41 50       	subi	r20, 0x01	; 1
    27d6:	50 40       	sbci	r21, 0x00	; 0
    27d8:	e1 f7       	brne	.-8      	; 0x27d2 <_Z15defaultSettingsv+0x106>
    27da:	98 ec       	ldi	r25, 0xC8	; 200
    27dc:	ee ee       	ldi	r30, 0xEE	; 238
    27de:	f9 e0       	ldi	r31, 0x09	; 9
    27e0:	df 01       	movw	r26, r30
    27e2:	1d 92       	st	X+, r1
    27e4:	9a 95       	dec	r25
    27e6:	e9 f7       	brne	.-6      	; 0x27e2 <_Z15defaultSettingsv+0x116>
    27e8:	80 93 b6 0a 	sts	0x0AB6, r24	; 0x800ab6 <__network_data+0x24c>
    27ec:	80 93 b7 0a 	sts	0x0AB7, r24	; 0x800ab7 <__network_data+0x24d>
    27f0:	10 92 b9 0a 	sts	0x0AB9, r1	; 0x800ab9 <__network_data+0x24f>
    27f4:	10 92 b8 0a 	sts	0x0AB8, r1	; 0x800ab8 <__network_data+0x24e>
    27f8:	10 92 bb 0a 	sts	0x0ABB, r1	; 0x800abb <__network_data+0x251>
    27fc:	10 92 ba 0a 	sts	0x0ABA, r1	; 0x800aba <__network_data+0x250>
    2800:	ea e4       	ldi	r30, 0x4A	; 74
    2802:	f8 e0       	ldi	r31, 0x08	; 8
    2804:	13 8a       	std	Z+19, r1	; 0x13
    2806:	12 8a       	std	Z+18, r1	; 0x12
    2808:	8a e0       	ldi	r24, 0x0A	; 10
    280a:	90 e0       	ldi	r25, 0x00	; 0
    280c:	91 8b       	std	Z+17, r25	; 0x11
    280e:	80 8b       	std	Z+16, r24	; 0x10
    2810:	17 8a       	std	Z+23, r1	; 0x17
    2812:	16 8a       	std	Z+22, r1	; 0x16
    2814:	8e e1       	ldi	r24, 0x1E	; 30
    2816:	90 e0       	ldi	r25, 0x00	; 0
    2818:	95 8b       	std	Z+21, r25	; 0x15
    281a:	84 8b       	std	Z+20, r24	; 0x14
    281c:	13 8e       	std	Z+27, r1	; 0x1b
    281e:	12 8e       	std	Z+26, r1	; 0x1a
    2820:	85 e0       	ldi	r24, 0x05	; 5
    2822:	90 e0       	ldi	r25, 0x00	; 0
    2824:	91 8f       	std	Z+25, r25	; 0x19
    2826:	80 8f       	std	Z+24, r24	; 0x18
    2828:	17 8e       	std	Z+31, r1	; 0x1f
    282a:	16 8e       	std	Z+30, r1	; 0x1e
    282c:	84 e1       	ldi	r24, 0x14	; 20
    282e:	90 e0       	ldi	r25, 0x00	; 0
    2830:	95 8f       	std	Z+29, r25	; 0x1d
    2832:	84 8f       	std	Z+28, r24	; 0x1c
    2834:	85 e0       	ldi	r24, 0x05	; 5
    2836:	e8 ef       	ldi	r30, 0xF8	; 248
    2838:	f6 e0       	ldi	r31, 0x06	; 6
    283a:	ac eb       	ldi	r26, 0xBC	; 188
    283c:	ba e0       	ldi	r27, 0x0A	; 10
    283e:	01 90       	ld	r0, Z+
    2840:	0d 92       	st	X+, r0
    2842:	8a 95       	dec	r24
    2844:	e1 f7       	brne	.-8      	; 0x283e <_Z15defaultSettingsv+0x172>
    2846:	8f e0       	ldi	r24, 0x0F	; 15
    2848:	eb ec       	ldi	r30, 0xCB	; 203
    284a:	fa e0       	ldi	r31, 0x0A	; 10
    284c:	df 01       	movw	r26, r30
    284e:	1d 92       	st	X+, r1
    2850:	8a 95       	dec	r24
    2852:	e9 f7       	brne	.-6      	; 0x284e <_Z15defaultSettingsv+0x182>
    2854:	21 e0       	ldi	r18, 0x01	; 1
    2856:	30 e0       	ldi	r19, 0x00	; 0
    2858:	48 e2       	ldi	r20, 0x28	; 40
    285a:	52 e0       	ldi	r21, 0x02	; 2
    285c:	6f e0       	ldi	r22, 0x0F	; 15
    285e:	70 e0       	ldi	r23, 0x00	; 0
    2860:	8c eb       	ldi	r24, 0xBC	; 188
    2862:	9a e0       	ldi	r25, 0x0A	; 10
    2864:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <_Z19eepromReadAttributePciS_i>
    2868:	81 11       	cpse	r24, r1
    286a:	09 c0       	rjmp	.+18     	; 0x287e <_Z15defaultSettingsv+0x1b2>
    286c:	85 e0       	ldi	r24, 0x05	; 5
    286e:	e8 ef       	ldi	r30, 0xF8	; 248
    2870:	f6 e0       	ldi	r31, 0x06	; 6
    2872:	ac eb       	ldi	r26, 0xBC	; 188
    2874:	ba e0       	ldi	r27, 0x0A	; 10
    2876:	01 90       	ld	r0, Z+
    2878:	0d 92       	st	X+, r0
    287a:	8a 95       	dec	r24
    287c:	e1 f7       	brne	.-8      	; 0x2876 <_Z15defaultSettingsv+0x1aa>
    287e:	08 95       	ret

00002880 <_Z13clearReadLinev>:
void clearReadLine() {
    2880:	cf 93       	push	r28
    2882:	df 93       	push	r29

	if (__system_var.interface_ == ESP) {
    2884:	c0 91 fa 0a 	lds	r28, 0x0AFA	; 0x800afa <__system_var+0x3e>
    2888:	d0 e0       	ldi	r29, 0x00	; 0
    288a:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <ESP>
    288e:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <ESP+0x1>
    2892:	c8 17       	cp	r28, r24
    2894:	d9 07       	cpc	r29, r25
    2896:	59 f4       	brne	.+22     	; 0x28ae <_Z13clearReadLinev+0x2e>
		memset(__network_data.esp_buffer, ' ', sizeof(__network_data.esp_buffer) - 1);
    2898:	4b e2       	ldi	r20, 0x2B	; 43
    289a:	51 e0       	ldi	r21, 0x01	; 1
    289c:	60 e2       	ldi	r22, 0x20	; 32
    289e:	70 e0       	ldi	r23, 0x00	; 0
    28a0:	82 ec       	ldi	r24, 0xC2	; 194
    28a2:	98 e0       	ldi	r25, 0x08	; 8
    28a4:	3e d2       	rcall	.+1148   	; 0x2d22 <memset>
		__network_data.is_esp_read_line = 0;
		__network_data.index_esp = 0;
    28a6:	10 92 b9 0a 	sts	0x0AB9, r1	; 0x800ab9 <__network_data+0x24f>
    28aa:	10 92 b8 0a 	sts	0x0AB8, r1	; 0x800ab8 <__network_data+0x24e>
	}
	if (__system_var.interface_ == SIM) {
    28ae:	80 91 71 03 	lds	r24, 0x0371	; 0x800371 <SIM>
    28b2:	90 91 72 03 	lds	r25, 0x0372	; 0x800372 <SIM+0x1>
    28b6:	c8 17       	cp	r28, r24
    28b8:	d9 07       	cpc	r29, r25
    28ba:	69 f4       	brne	.+26     	; 0x28d6 <_Z13clearReadLinev+0x56>
		memset(__network_data.sim_buffer, ' ', sizeof(__network_data.sim_buffer) - 1);
    28bc:	47 ec       	ldi	r20, 0xC7	; 199
    28be:	50 e0       	ldi	r21, 0x00	; 0
    28c0:	60 e2       	ldi	r22, 0x20	; 32
    28c2:	70 e0       	ldi	r23, 0x00	; 0
    28c4:	8e ee       	ldi	r24, 0xEE	; 238
    28c6:	99 e0       	ldi	r25, 0x09	; 9
    28c8:	2c d2       	rcall	.+1112   	; 0x2d22 <memset>
		__network_data.is_sim_read_line = 0;
    28ca:	10 92 b7 0a 	sts	0x0AB7, r1	; 0x800ab7 <__network_data+0x24d>
		__network_data.index_sim = 0;
    28ce:	10 92 bb 0a 	sts	0x0ABB, r1	; 0x800abb <__network_data+0x251>
    28d2:	10 92 ba 0a 	sts	0x0ABA, r1	; 0x800aba <__network_data+0x250>
	}
	__network_data.is_esp_read_line = 0;
    28d6:	10 92 b6 0a 	sts	0x0AB6, r1	; 0x800ab6 <__network_data+0x24c>
}
    28da:	df 91       	pop	r29
    28dc:	cf 91       	pop	r28
    28de:	08 95       	ret

000028e0 <_Z9initTimerv>:

void initTimer(){
	// Setting no prescaler
	TCCR0B |= (1 << CS00);
    28e0:	85 b5       	in	r24, 0x25	; 37
    28e2:	81 60       	ori	r24, 0x01	; 1
    28e4:	85 bd       	out	0x25, r24	; 37
	// Initialize Timer0
	TCNT0 = 0;
    28e6:	16 bc       	out	0x26, r1	; 38
	// Initialize the overflow interrupt for TIMER0
	TIMSK0 |= (1 << TOIE0);
    28e8:	ee e6       	ldi	r30, 0x6E	; 110
    28ea:	f0 e0       	ldi	r31, 0x00	; 0
    28ec:	80 81       	ld	r24, Z
    28ee:	81 60       	ori	r24, 0x01	; 1
    28f0:	80 83       	st	Z, r24
    28f2:	08 95       	ret

000028f4 <_Z14powerUpModulesv>:
}
void powerUpModules(){
    28f4:	cf 93       	push	r28
    28f6:	df 93       	push	r29
	setSource(SIM);
    28f8:	80 91 71 03 	lds	r24, 0x0371	; 0x800371 <SIM>
    28fc:	90 91 72 03 	lds	r25, 0x0372	; 0x800372 <SIM+0x1>
    2900:	c1 de       	rcall	.-638    	; 0x2684 <_Z9setSourcei>
	USART0_SendString("AT\r\n");
    2902:	8d ef       	ldi	r24, 0xFD	; 253
    2904:	96 e0       	ldi	r25, 0x06	; 6
    2906:	e8 dd       	rcall	.-1072   	; 0x24d8 <_Z17USART0_SendStringPKc>
	if (readUntil("OK",3) == 0){
    2908:	63 e0       	ldi	r22, 0x03	; 3
    290a:	70 e0       	ldi	r23, 0x00	; 0
    290c:	8e ef       	ldi	r24, 0xFE	; 254
    290e:	91 e0       	ldi	r25, 0x01	; 1
    2910:	0e 94 0d 07 	call	0xe1a	; 0xe1a <_Z9readUntilPKci>
	_delay_ms(1000);
	digitalWrite(pin,0);

}
void espPower(const char pin, const char status){
	digitalWrite(pin,status);
    2914:	c0 91 9c 01 	lds	r28, 0x019C	; 0x80019c <ESP_PWR>
    2918:	d0 91 9d 01 	lds	r29, 0x019D	; 0x80019d <ESP_PWR+0x1>
    291c:	dd 27       	eor	r29, r29
    291e:	61 e0       	ldi	r22, 0x01	; 1
    2920:	ce 01       	movw	r24, r28
    2922:	5d de       	rcall	.-838    	; 0x25de <_Z12digitalWriteic>
	USART0_SendString("AT\r\n");
	if (readUntil("OK",3) == 0){
		//turnOnSim900(SIM_PWR);
	}
	espPower(ESP_PWR,1);
	delay(500);
    2924:	84 ef       	ldi	r24, 0xF4	; 244
    2926:	91 e0       	ldi	r25, 0x01	; 1
    2928:	e5 dd       	rcall	.-1078   	; 0x24f4 <_Z5delayi>
	_delay_ms(1000);
	digitalWrite(pin,0);

}
void espPower(const char pin, const char status){
	digitalWrite(pin,status);
    292a:	60 e0       	ldi	r22, 0x00	; 0
    292c:	ce 01       	movw	r24, r28
    292e:	57 de       	rcall	.-850    	; 0x25de <_Z12digitalWriteic>
		//turnOnSim900(SIM_PWR);
	}
	espPower(ESP_PWR,1);
	delay(500);
	espPower(ESP_PWR,0);
	delay(3000);
    2930:	88 eb       	ldi	r24, 0xB8	; 184
    2932:	9b e0       	ldi	r25, 0x0B	; 11
    2934:	df dd       	rcall	.-1090   	; 0x24f4 <_Z5delayi>
}
    2936:	df 91       	pop	r29
    2938:	cf 91       	pop	r28
    293a:	08 95       	ret

0000293c <_Z11atmegaSetupv>:
void atmegaSetup(){
    293c:	cf 93       	push	r28
    293e:	df 93       	push	r29
	pinMode(ESP_PWR,OUTPUT);
    2940:	c0 91 4f 03 	lds	r28, 0x034F	; 0x80034f <OUTPUT>
    2944:	6c 2f       	mov	r22, r28
    2946:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <ESP_PWR>
    294a:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <ESP_PWR+0x1>
    294e:	de dd       	rcall	.-1092   	; 0x250c <_Z7pinModeic>
	pinMode(SIM_PWR,OUTPUT);
    2950:	6c 2f       	mov	r22, r28
    2952:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <SIM_PWR>
    2956:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <SIM_PWR+0x1>
    295a:	d8 dd       	rcall	.-1104   	; 0x250c <_Z7pinModeic>
	pinMode(CS_1,OUTPUT);
    295c:	6c 2f       	mov	r22, r28
    295e:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <CS_1>
    2962:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <CS_1+0x1>
    2966:	d2 dd       	rcall	.-1116   	; 0x250c <_Z7pinModeic>
	pinMode(CS_2,OUTPUT);
    2968:	6c 2f       	mov	r22, r28
    296a:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <CS_2>
    296e:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <CS_2+0x1>
    2972:	cc dd       	rcall	.-1128   	; 0x250c <_Z7pinModeic>
	pinMode(CS_3,OUTPUT);
    2974:	6c 2f       	mov	r22, r28
    2976:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <CS_3>
    297a:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <CS_3+0x1>
    297e:	c6 dd       	rcall	.-1140   	; 0x250c <_Z7pinModeic>
	pinMode(CS_4,OUTPUT);
    2980:	6c 2f       	mov	r22, r28
    2982:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <CS_4>
    2986:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <CS_4+0x1>
    298a:	c0 dd       	rcall	.-1152   	; 0x250c <_Z7pinModeic>
	pinMode(DETECT_0,INPUT);
    298c:	d0 91 51 03 	lds	r29, 0x0351	; 0x800351 <INPUT>
    2990:	6d 2f       	mov	r22, r29
    2992:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <DETECT_0>
    2996:	90 91 93 01 	lds	r25, 0x0193	; 0x800193 <DETECT_0+0x1>
    299a:	b8 dd       	rcall	.-1168   	; 0x250c <_Z7pinModeic>
	pinMode(DETECT_1,INPUT);
    299c:	6d 2f       	mov	r22, r29
    299e:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <DETECT_1>
    29a2:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <DETECT_1+0x1>
    29a6:	b2 dd       	rcall	.-1180   	; 0x250c <_Z7pinModeic>
	pinMode(DETECT_2,INPUT);
    29a8:	6d 2f       	mov	r22, r29
    29aa:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <DETECT_2>
    29ae:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <DETECT_2+0x1>
    29b2:	ac dd       	rcall	.-1192   	; 0x250c <_Z7pinModeic>
	pinMode(DETECT_3,INPUT);
    29b4:	6d 2f       	mov	r22, r29
    29b6:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <DETECT_3>
    29ba:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <DETECT_3+0x1>
    29be:	a6 dd       	rcall	.-1204   	; 0x250c <_Z7pinModeic>
	pinMode(SCK,OUTPUT);
    29c0:	6c 2f       	mov	r22, r28
    29c2:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <SCK>
    29c6:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <SCK+0x1>
    29ca:	a0 dd       	rcall	.-1216   	; 0x250c <_Z7pinModeic>
	pinMode(MOSI,OUTPUT);
    29cc:	6c 2f       	mov	r22, r28
    29ce:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <MOSI>
    29d2:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <MOSI+0x1>
    29d6:	9a dd       	rcall	.-1228   	; 0x250c <_Z7pinModeic>
	pinMode(MISO,INPUT);
    29d8:	6d 2f       	mov	r22, r29
    29da:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <MISO>
    29de:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <MISO+0x1>
    29e2:	94 dd       	rcall	.-1240   	; 0x250c <_Z7pinModeic>
	pinMode(SS,OUTPUT);
    29e4:	6c 2f       	mov	r22, r28
    29e6:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <SS>
    29ea:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <SS+0x1>
    29ee:	8e dd       	rcall	.-1252   	; 0x250c <_Z7pinModeic>

	
	USART_Init();
    29f0:	42 dd       	rcall	.-1404   	; 0x2476 <_Z10USART_Initv>
	delay(100);	
    29f2:	84 e6       	ldi	r24, 0x64	; 100
    29f4:	90 e0       	ldi	r25, 0x00	; 0
    29f6:	7e dd       	rcall	.-1284   	; 0x24f4 <_Z5delayi>
	
	SPI_init_master();
    29f8:	34 dd       	rcall	.-1432   	; 0x2462 <_Z15SPI_init_masterv>
}
    29fa:	df 91       	pop	r29
    29fc:	cf 91       	pop	r28
    29fe:	08 95       	ret

00002a00 <_Z5setupv>:

void setup(){
	
	atmegaSetup();
    2a00:	9d df       	rcall	.-198    	; 0x293c <_Z11atmegaSetupv>

	defaultSettings();
    2a02:	64 de       	rcall	.-824    	; 0x26cc <_Z15defaultSettingsv>

	initTimer();
    2a04:	6d df       	rcall	.-294    	; 0x28e0 <_Z9initTimerv>
	
	powerUpModules();
    2a06:	76 cf       	rjmp	.-276    	; 0x28f4 <_Z14powerUpModulesv>
    2a08:	08 95       	ret

00002a0a <_Z9processIOv>:

	}
}
void processIO(){
	
	if (__network_data.is_esp_read_line == 1){
    2a0a:	80 91 b6 0a 	lds	r24, 0x0AB6	; 0x800ab6 <__network_data+0x24c>
    2a0e:	81 30       	cpi	r24, 0x01	; 1
    2a10:	49 f4       	brne	.+18     	; 0x2a24 <_Z9processIOv+0x1a>
		
		delay(100);
    2a12:	84 e6       	ldi	r24, 0x64	; 100
    2a14:	90 e0       	ldi	r25, 0x00	; 0
    2a16:	6e dd       	rcall	.-1316   	; 0x24f4 <_Z5delayi>
		
		decodeBuffer(ESP);
		
		RelayControl();
    2a18:	be d9       	rcall	.-3204   	; 0x1d96 <_Z12RelayControlv>
		
		ReceiveSettings();
    2a1a:	17 da       	rcall	.-3026   	; 0x1e4a <_Z15ReceiveSettingsv>
		
		WebApp();	
    2a1c:	0e 94 45 0b 	call	0x168a	; 0x168a <_Z6WebAppv>
		
		__network_data.is_esp_read_line = 0;	
    2a20:	10 92 b6 0a 	sts	0x0AB6, r1	; 0x800ab6 <__network_data+0x24c>
    2a24:	08 95       	ret

00002a26 <_Z15systemProcessesv>:
	
}
void systemProcesses(){
	
	// Detects when a module is connected or disconnected, notifies server of this event
	CheckModuleConnections();
    2a26:	93 da       	rcall	.-2778   	; 0x1f4e <_Z22CheckModuleConnectionsv>
	// Regularly sends heartbeats to the server to keep the connection alive
	HeartBeat(); 
    2a28:	c8 db       	rcall	.-2160   	; 0x21ba <_Z9HeartBeatv>
	// Process Timers
	ProcessRelayTimers();
    2a2a:	f1 cb       	rjmp	.-2078   	; 0x220e <_Z18ProcessRelayTimersv>
    2a2c:	08 95       	ret

00002a2e <main>:
 

int main (void)
{
	int i=0;
	setup();
    2a2e:	e8 df       	rcall	.-48     	; 0x2a00 <_Z5setupv>
	
	for (i=0;i<1000;i++){
    2a30:	c0 e0       	ldi	r28, 0x00	; 0
    2a32:	d0 e0       	ldi	r29, 0x00	; 0
		 USART0_SendByte(eeprom_read_byte((uint8_t*)i));
    2a34:	ce 01       	movw	r24, r28
    2a36:	15 d2       	rcall	.+1066   	; 0x2e62 <eeprom_read_byte>
    2a38:	47 dd       	rcall	.-1394   	; 0x24c8 <_Z15USART0_SendBytec>
int main (void)
{
	int i=0;
	setup();
	
	for (i=0;i<1000;i++){
    2a3a:	21 96       	adiw	r28, 0x01	; 1
    2a3c:	c8 3e       	cpi	r28, 0xE8	; 232
    2a3e:	83 e0       	ldi	r24, 0x03	; 3
    2a40:	d8 07       	cpc	r29, r24
    2a42:	c1 f7       	brne	.-16     	; 0x2a34 <main+0x6>
	}
	 
	while(1)
	{
		
		networking();
    2a44:	0e 94 cc 0a 	call	0x1598	; 0x1598 <_Z10networkingv>
		
		processIO();
    2a48:	e0 df       	rcall	.-64     	; 0x2a0a <_Z9processIOv>
		
		systemProcesses();	
    2a4a:	ed df       	rcall	.-38     	; 0x2a26 <_Z15systemProcessesv>
		
	}
    2a4c:	fb cf       	rjmp	.-10     	; 0x2a44 <main+0x16>

00002a4e <__tablejump2__>:
    2a4e:	ee 0f       	add	r30, r30
    2a50:	ff 1f       	adc	r31, r31
    2a52:	00 24       	eor	r0, r0
    2a54:	00 1c       	adc	r0, r0
    2a56:	0b be       	out	0x3b, r0	; 59
    2a58:	07 90       	elpm	r0, Z+
    2a5a:	f6 91       	elpm	r31, Z
    2a5c:	e0 2d       	mov	r30, r0
    2a5e:	09 94       	ijmp

00002a60 <malloc>:
    2a60:	cf 93       	push	r28
    2a62:	df 93       	push	r29
    2a64:	82 30       	cpi	r24, 0x02	; 2
    2a66:	91 05       	cpc	r25, r1
    2a68:	10 f4       	brcc	.+4      	; 0x2a6e <malloc+0xe>
    2a6a:	82 e0       	ldi	r24, 0x02	; 2
    2a6c:	90 e0       	ldi	r25, 0x00	; 0
    2a6e:	e0 91 04 0b 	lds	r30, 0x0B04	; 0x800b04 <__flp>
    2a72:	f0 91 05 0b 	lds	r31, 0x0B05	; 0x800b05 <__flp+0x1>
    2a76:	20 e0       	ldi	r18, 0x00	; 0
    2a78:	30 e0       	ldi	r19, 0x00	; 0
    2a7a:	c0 e0       	ldi	r28, 0x00	; 0
    2a7c:	d0 e0       	ldi	r29, 0x00	; 0
    2a7e:	30 97       	sbiw	r30, 0x00	; 0
    2a80:	11 f1       	breq	.+68     	; 0x2ac6 <malloc+0x66>
    2a82:	40 81       	ld	r20, Z
    2a84:	51 81       	ldd	r21, Z+1	; 0x01
    2a86:	48 17       	cp	r20, r24
    2a88:	59 07       	cpc	r21, r25
    2a8a:	c0 f0       	brcs	.+48     	; 0x2abc <malloc+0x5c>
    2a8c:	48 17       	cp	r20, r24
    2a8e:	59 07       	cpc	r21, r25
    2a90:	61 f4       	brne	.+24     	; 0x2aaa <malloc+0x4a>
    2a92:	82 81       	ldd	r24, Z+2	; 0x02
    2a94:	93 81       	ldd	r25, Z+3	; 0x03
    2a96:	20 97       	sbiw	r28, 0x00	; 0
    2a98:	19 f0       	breq	.+6      	; 0x2aa0 <malloc+0x40>
    2a9a:	9b 83       	std	Y+3, r25	; 0x03
    2a9c:	8a 83       	std	Y+2, r24	; 0x02
    2a9e:	2b c0       	rjmp	.+86     	; 0x2af6 <malloc+0x96>
    2aa0:	90 93 05 0b 	sts	0x0B05, r25	; 0x800b05 <__flp+0x1>
    2aa4:	80 93 04 0b 	sts	0x0B04, r24	; 0x800b04 <__flp>
    2aa8:	26 c0       	rjmp	.+76     	; 0x2af6 <malloc+0x96>
    2aaa:	21 15       	cp	r18, r1
    2aac:	31 05       	cpc	r19, r1
    2aae:	19 f0       	breq	.+6      	; 0x2ab6 <malloc+0x56>
    2ab0:	42 17       	cp	r20, r18
    2ab2:	53 07       	cpc	r21, r19
    2ab4:	18 f4       	brcc	.+6      	; 0x2abc <malloc+0x5c>
    2ab6:	9a 01       	movw	r18, r20
    2ab8:	be 01       	movw	r22, r28
    2aba:	df 01       	movw	r26, r30
    2abc:	ef 01       	movw	r28, r30
    2abe:	02 80       	ldd	r0, Z+2	; 0x02
    2ac0:	f3 81       	ldd	r31, Z+3	; 0x03
    2ac2:	e0 2d       	mov	r30, r0
    2ac4:	dc cf       	rjmp	.-72     	; 0x2a7e <malloc+0x1e>
    2ac6:	21 15       	cp	r18, r1
    2ac8:	31 05       	cpc	r19, r1
    2aca:	09 f1       	breq	.+66     	; 0x2b0e <malloc+0xae>
    2acc:	28 1b       	sub	r18, r24
    2ace:	39 0b       	sbc	r19, r25
    2ad0:	24 30       	cpi	r18, 0x04	; 4
    2ad2:	31 05       	cpc	r19, r1
    2ad4:	90 f4       	brcc	.+36     	; 0x2afa <malloc+0x9a>
    2ad6:	12 96       	adiw	r26, 0x02	; 2
    2ad8:	8d 91       	ld	r24, X+
    2ada:	9c 91       	ld	r25, X
    2adc:	13 97       	sbiw	r26, 0x03	; 3
    2ade:	61 15       	cp	r22, r1
    2ae0:	71 05       	cpc	r23, r1
    2ae2:	21 f0       	breq	.+8      	; 0x2aec <malloc+0x8c>
    2ae4:	fb 01       	movw	r30, r22
    2ae6:	93 83       	std	Z+3, r25	; 0x03
    2ae8:	82 83       	std	Z+2, r24	; 0x02
    2aea:	04 c0       	rjmp	.+8      	; 0x2af4 <malloc+0x94>
    2aec:	90 93 05 0b 	sts	0x0B05, r25	; 0x800b05 <__flp+0x1>
    2af0:	80 93 04 0b 	sts	0x0B04, r24	; 0x800b04 <__flp>
    2af4:	fd 01       	movw	r30, r26
    2af6:	32 96       	adiw	r30, 0x02	; 2
    2af8:	44 c0       	rjmp	.+136    	; 0x2b82 <malloc+0x122>
    2afa:	fd 01       	movw	r30, r26
    2afc:	e2 0f       	add	r30, r18
    2afe:	f3 1f       	adc	r31, r19
    2b00:	81 93       	st	Z+, r24
    2b02:	91 93       	st	Z+, r25
    2b04:	22 50       	subi	r18, 0x02	; 2
    2b06:	31 09       	sbc	r19, r1
    2b08:	2d 93       	st	X+, r18
    2b0a:	3c 93       	st	X, r19
    2b0c:	3a c0       	rjmp	.+116    	; 0x2b82 <malloc+0x122>
    2b0e:	20 91 02 0b 	lds	r18, 0x0B02	; 0x800b02 <__brkval>
    2b12:	30 91 03 0b 	lds	r19, 0x0B03	; 0x800b03 <__brkval+0x1>
    2b16:	23 2b       	or	r18, r19
    2b18:	41 f4       	brne	.+16     	; 0x2b2a <malloc+0xca>
    2b1a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    2b1e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    2b22:	30 93 03 0b 	sts	0x0B03, r19	; 0x800b03 <__brkval+0x1>
    2b26:	20 93 02 0b 	sts	0x0B02, r18	; 0x800b02 <__brkval>
    2b2a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    2b2e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    2b32:	21 15       	cp	r18, r1
    2b34:	31 05       	cpc	r19, r1
    2b36:	41 f4       	brne	.+16     	; 0x2b48 <malloc+0xe8>
    2b38:	2d b7       	in	r18, 0x3d	; 61
    2b3a:	3e b7       	in	r19, 0x3e	; 62
    2b3c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    2b40:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    2b44:	24 1b       	sub	r18, r20
    2b46:	35 0b       	sbc	r19, r21
    2b48:	e0 91 02 0b 	lds	r30, 0x0B02	; 0x800b02 <__brkval>
    2b4c:	f0 91 03 0b 	lds	r31, 0x0B03	; 0x800b03 <__brkval+0x1>
    2b50:	e2 17       	cp	r30, r18
    2b52:	f3 07       	cpc	r31, r19
    2b54:	a0 f4       	brcc	.+40     	; 0x2b7e <malloc+0x11e>
    2b56:	2e 1b       	sub	r18, r30
    2b58:	3f 0b       	sbc	r19, r31
    2b5a:	28 17       	cp	r18, r24
    2b5c:	39 07       	cpc	r19, r25
    2b5e:	78 f0       	brcs	.+30     	; 0x2b7e <malloc+0x11e>
    2b60:	ac 01       	movw	r20, r24
    2b62:	4e 5f       	subi	r20, 0xFE	; 254
    2b64:	5f 4f       	sbci	r21, 0xFF	; 255
    2b66:	24 17       	cp	r18, r20
    2b68:	35 07       	cpc	r19, r21
    2b6a:	48 f0       	brcs	.+18     	; 0x2b7e <malloc+0x11e>
    2b6c:	4e 0f       	add	r20, r30
    2b6e:	5f 1f       	adc	r21, r31
    2b70:	50 93 03 0b 	sts	0x0B03, r21	; 0x800b03 <__brkval+0x1>
    2b74:	40 93 02 0b 	sts	0x0B02, r20	; 0x800b02 <__brkval>
    2b78:	81 93       	st	Z+, r24
    2b7a:	91 93       	st	Z+, r25
    2b7c:	02 c0       	rjmp	.+4      	; 0x2b82 <malloc+0x122>
    2b7e:	e0 e0       	ldi	r30, 0x00	; 0
    2b80:	f0 e0       	ldi	r31, 0x00	; 0
    2b82:	cf 01       	movw	r24, r30
    2b84:	df 91       	pop	r29
    2b86:	cf 91       	pop	r28
    2b88:	08 95       	ret

00002b8a <free>:
    2b8a:	0f 93       	push	r16
    2b8c:	1f 93       	push	r17
    2b8e:	cf 93       	push	r28
    2b90:	df 93       	push	r29
    2b92:	00 97       	sbiw	r24, 0x00	; 0
    2b94:	09 f4       	brne	.+2      	; 0x2b98 <free+0xe>
    2b96:	8c c0       	rjmp	.+280    	; 0x2cb0 <free+0x126>
    2b98:	fc 01       	movw	r30, r24
    2b9a:	32 97       	sbiw	r30, 0x02	; 2
    2b9c:	13 82       	std	Z+3, r1	; 0x03
    2b9e:	12 82       	std	Z+2, r1	; 0x02
    2ba0:	00 91 04 0b 	lds	r16, 0x0B04	; 0x800b04 <__flp>
    2ba4:	10 91 05 0b 	lds	r17, 0x0B05	; 0x800b05 <__flp+0x1>
    2ba8:	01 15       	cp	r16, r1
    2baa:	11 05       	cpc	r17, r1
    2bac:	81 f4       	brne	.+32     	; 0x2bce <free+0x44>
    2bae:	20 81       	ld	r18, Z
    2bb0:	31 81       	ldd	r19, Z+1	; 0x01
    2bb2:	82 0f       	add	r24, r18
    2bb4:	93 1f       	adc	r25, r19
    2bb6:	20 91 02 0b 	lds	r18, 0x0B02	; 0x800b02 <__brkval>
    2bba:	30 91 03 0b 	lds	r19, 0x0B03	; 0x800b03 <__brkval+0x1>
    2bbe:	28 17       	cp	r18, r24
    2bc0:	39 07       	cpc	r19, r25
    2bc2:	79 f5       	brne	.+94     	; 0x2c22 <free+0x98>
    2bc4:	f0 93 03 0b 	sts	0x0B03, r31	; 0x800b03 <__brkval+0x1>
    2bc8:	e0 93 02 0b 	sts	0x0B02, r30	; 0x800b02 <__brkval>
    2bcc:	71 c0       	rjmp	.+226    	; 0x2cb0 <free+0x126>
    2bce:	d8 01       	movw	r26, r16
    2bd0:	40 e0       	ldi	r20, 0x00	; 0
    2bd2:	50 e0       	ldi	r21, 0x00	; 0
    2bd4:	ae 17       	cp	r26, r30
    2bd6:	bf 07       	cpc	r27, r31
    2bd8:	50 f4       	brcc	.+20     	; 0x2bee <free+0x64>
    2bda:	12 96       	adiw	r26, 0x02	; 2
    2bdc:	2d 91       	ld	r18, X+
    2bde:	3c 91       	ld	r19, X
    2be0:	13 97       	sbiw	r26, 0x03	; 3
    2be2:	ad 01       	movw	r20, r26
    2be4:	21 15       	cp	r18, r1
    2be6:	31 05       	cpc	r19, r1
    2be8:	09 f1       	breq	.+66     	; 0x2c2c <free+0xa2>
    2bea:	d9 01       	movw	r26, r18
    2bec:	f3 cf       	rjmp	.-26     	; 0x2bd4 <free+0x4a>
    2bee:	9d 01       	movw	r18, r26
    2bf0:	da 01       	movw	r26, r20
    2bf2:	33 83       	std	Z+3, r19	; 0x03
    2bf4:	22 83       	std	Z+2, r18	; 0x02
    2bf6:	60 81       	ld	r22, Z
    2bf8:	71 81       	ldd	r23, Z+1	; 0x01
    2bfa:	86 0f       	add	r24, r22
    2bfc:	97 1f       	adc	r25, r23
    2bfe:	82 17       	cp	r24, r18
    2c00:	93 07       	cpc	r25, r19
    2c02:	69 f4       	brne	.+26     	; 0x2c1e <free+0x94>
    2c04:	ec 01       	movw	r28, r24
    2c06:	28 81       	ld	r18, Y
    2c08:	39 81       	ldd	r19, Y+1	; 0x01
    2c0a:	26 0f       	add	r18, r22
    2c0c:	37 1f       	adc	r19, r23
    2c0e:	2e 5f       	subi	r18, 0xFE	; 254
    2c10:	3f 4f       	sbci	r19, 0xFF	; 255
    2c12:	31 83       	std	Z+1, r19	; 0x01
    2c14:	20 83       	st	Z, r18
    2c16:	8a 81       	ldd	r24, Y+2	; 0x02
    2c18:	9b 81       	ldd	r25, Y+3	; 0x03
    2c1a:	93 83       	std	Z+3, r25	; 0x03
    2c1c:	82 83       	std	Z+2, r24	; 0x02
    2c1e:	45 2b       	or	r20, r21
    2c20:	29 f4       	brne	.+10     	; 0x2c2c <free+0xa2>
    2c22:	f0 93 05 0b 	sts	0x0B05, r31	; 0x800b05 <__flp+0x1>
    2c26:	e0 93 04 0b 	sts	0x0B04, r30	; 0x800b04 <__flp>
    2c2a:	42 c0       	rjmp	.+132    	; 0x2cb0 <free+0x126>
    2c2c:	13 96       	adiw	r26, 0x03	; 3
    2c2e:	fc 93       	st	X, r31
    2c30:	ee 93       	st	-X, r30
    2c32:	12 97       	sbiw	r26, 0x02	; 2
    2c34:	ed 01       	movw	r28, r26
    2c36:	49 91       	ld	r20, Y+
    2c38:	59 91       	ld	r21, Y+
    2c3a:	9e 01       	movw	r18, r28
    2c3c:	24 0f       	add	r18, r20
    2c3e:	35 1f       	adc	r19, r21
    2c40:	e2 17       	cp	r30, r18
    2c42:	f3 07       	cpc	r31, r19
    2c44:	71 f4       	brne	.+28     	; 0x2c62 <free+0xd8>
    2c46:	80 81       	ld	r24, Z
    2c48:	91 81       	ldd	r25, Z+1	; 0x01
    2c4a:	84 0f       	add	r24, r20
    2c4c:	95 1f       	adc	r25, r21
    2c4e:	02 96       	adiw	r24, 0x02	; 2
    2c50:	11 96       	adiw	r26, 0x01	; 1
    2c52:	9c 93       	st	X, r25
    2c54:	8e 93       	st	-X, r24
    2c56:	82 81       	ldd	r24, Z+2	; 0x02
    2c58:	93 81       	ldd	r25, Z+3	; 0x03
    2c5a:	13 96       	adiw	r26, 0x03	; 3
    2c5c:	9c 93       	st	X, r25
    2c5e:	8e 93       	st	-X, r24
    2c60:	12 97       	sbiw	r26, 0x02	; 2
    2c62:	e0 e0       	ldi	r30, 0x00	; 0
    2c64:	f0 e0       	ldi	r31, 0x00	; 0
    2c66:	d8 01       	movw	r26, r16
    2c68:	12 96       	adiw	r26, 0x02	; 2
    2c6a:	8d 91       	ld	r24, X+
    2c6c:	9c 91       	ld	r25, X
    2c6e:	13 97       	sbiw	r26, 0x03	; 3
    2c70:	00 97       	sbiw	r24, 0x00	; 0
    2c72:	19 f0       	breq	.+6      	; 0x2c7a <free+0xf0>
    2c74:	f8 01       	movw	r30, r16
    2c76:	8c 01       	movw	r16, r24
    2c78:	f6 cf       	rjmp	.-20     	; 0x2c66 <free+0xdc>
    2c7a:	8d 91       	ld	r24, X+
    2c7c:	9c 91       	ld	r25, X
    2c7e:	98 01       	movw	r18, r16
    2c80:	2e 5f       	subi	r18, 0xFE	; 254
    2c82:	3f 4f       	sbci	r19, 0xFF	; 255
    2c84:	82 0f       	add	r24, r18
    2c86:	93 1f       	adc	r25, r19
    2c88:	20 91 02 0b 	lds	r18, 0x0B02	; 0x800b02 <__brkval>
    2c8c:	30 91 03 0b 	lds	r19, 0x0B03	; 0x800b03 <__brkval+0x1>
    2c90:	28 17       	cp	r18, r24
    2c92:	39 07       	cpc	r19, r25
    2c94:	69 f4       	brne	.+26     	; 0x2cb0 <free+0x126>
    2c96:	30 97       	sbiw	r30, 0x00	; 0
    2c98:	29 f4       	brne	.+10     	; 0x2ca4 <free+0x11a>
    2c9a:	10 92 05 0b 	sts	0x0B05, r1	; 0x800b05 <__flp+0x1>
    2c9e:	10 92 04 0b 	sts	0x0B04, r1	; 0x800b04 <__flp>
    2ca2:	02 c0       	rjmp	.+4      	; 0x2ca8 <free+0x11e>
    2ca4:	13 82       	std	Z+3, r1	; 0x03
    2ca6:	12 82       	std	Z+2, r1	; 0x02
    2ca8:	10 93 03 0b 	sts	0x0B03, r17	; 0x800b03 <__brkval+0x1>
    2cac:	00 93 02 0b 	sts	0x0B02, r16	; 0x800b02 <__brkval>
    2cb0:	df 91       	pop	r29
    2cb2:	cf 91       	pop	r28
    2cb4:	1f 91       	pop	r17
    2cb6:	0f 91       	pop	r16
    2cb8:	08 95       	ret

00002cba <atoi>:
    2cba:	fc 01       	movw	r30, r24
    2cbc:	88 27       	eor	r24, r24
    2cbe:	99 27       	eor	r25, r25
    2cc0:	e8 94       	clt
    2cc2:	21 91       	ld	r18, Z+
    2cc4:	20 32       	cpi	r18, 0x20	; 32
    2cc6:	e9 f3       	breq	.-6      	; 0x2cc2 <atoi+0x8>
    2cc8:	29 30       	cpi	r18, 0x09	; 9
    2cca:	10 f0       	brcs	.+4      	; 0x2cd0 <atoi+0x16>
    2ccc:	2e 30       	cpi	r18, 0x0E	; 14
    2cce:	c8 f3       	brcs	.-14     	; 0x2cc2 <atoi+0x8>
    2cd0:	2b 32       	cpi	r18, 0x2B	; 43
    2cd2:	39 f0       	breq	.+14     	; 0x2ce2 <atoi+0x28>
    2cd4:	2d 32       	cpi	r18, 0x2D	; 45
    2cd6:	31 f4       	brne	.+12     	; 0x2ce4 <atoi+0x2a>
    2cd8:	68 94       	set
    2cda:	03 c0       	rjmp	.+6      	; 0x2ce2 <atoi+0x28>
    2cdc:	91 d0       	rcall	.+290    	; 0x2e00 <__mulhi_const_10>
    2cde:	82 0f       	add	r24, r18
    2ce0:	91 1d       	adc	r25, r1
    2ce2:	21 91       	ld	r18, Z+
    2ce4:	20 53       	subi	r18, 0x30	; 48
    2ce6:	2a 30       	cpi	r18, 0x0A	; 10
    2ce8:	c8 f3       	brcs	.-14     	; 0x2cdc <atoi+0x22>
    2cea:	1e f4       	brtc	.+6      	; 0x2cf2 <atoi+0x38>
    2cec:	90 95       	com	r25
    2cee:	81 95       	neg	r24
    2cf0:	9f 4f       	sbci	r25, 0xFF	; 255
    2cf2:	08 95       	ret

00002cf4 <isalnum>:
    2cf4:	91 11       	cpse	r25, r1
    2cf6:	06 c0       	rjmp	.+12     	; 0x2d04 <__ctype_isfalse>
    2cf8:	80 53       	subi	r24, 0x30	; 48
    2cfa:	8a 50       	subi	r24, 0x0A	; 10
    2cfc:	10 f0       	brcs	.+4      	; 0x2d02 <isalnum+0xe>
    2cfe:	86 5c       	subi	r24, 0xC6	; 198
    2d00:	06 c0       	rjmp	.+12     	; 0x2d0e <isalpha>
    2d02:	08 95       	ret

00002d04 <__ctype_isfalse>:
    2d04:	99 27       	eor	r25, r25
    2d06:	88 27       	eor	r24, r24

00002d08 <__ctype_istrue>:
    2d08:	08 95       	ret

00002d0a <isupper>:
    2d0a:	85 fd       	sbrc	r24, 5
    2d0c:	fb cf       	rjmp	.-10     	; 0x2d04 <__ctype_isfalse>

00002d0e <isalpha>:
    2d0e:	80 62       	ori	r24, 0x20	; 32

00002d10 <islower>:
    2d10:	91 11       	cpse	r25, r1
    2d12:	f8 cf       	rjmp	.-16     	; 0x2d04 <__ctype_isfalse>
    2d14:	81 56       	subi	r24, 0x61	; 97
    2d16:	8a 51       	subi	r24, 0x1A	; 26
    2d18:	e0 f7       	brcc	.-8      	; 0x2d12 <islower+0x2>
    2d1a:	08 95       	ret

00002d1c <strtok>:
    2d1c:	42 e0       	ldi	r20, 0x02	; 2
    2d1e:	57 e0       	ldi	r21, 0x07	; 7
    2d20:	3e c0       	rjmp	.+124    	; 0x2d9e <strtok_r>

00002d22 <memset>:
    2d22:	dc 01       	movw	r26, r24
    2d24:	01 c0       	rjmp	.+2      	; 0x2d28 <memset+0x6>
    2d26:	6d 93       	st	X+, r22
    2d28:	41 50       	subi	r20, 0x01	; 1
    2d2a:	50 40       	sbci	r21, 0x00	; 0
    2d2c:	e0 f7       	brcc	.-8      	; 0x2d26 <memset+0x4>
    2d2e:	08 95       	ret

00002d30 <strcat>:
    2d30:	fb 01       	movw	r30, r22
    2d32:	dc 01       	movw	r26, r24
    2d34:	0d 90       	ld	r0, X+
    2d36:	00 20       	and	r0, r0
    2d38:	e9 f7       	brne	.-6      	; 0x2d34 <strcat+0x4>
    2d3a:	11 97       	sbiw	r26, 0x01	; 1
    2d3c:	01 90       	ld	r0, Z+
    2d3e:	0d 92       	st	X+, r0
    2d40:	00 20       	and	r0, r0
    2d42:	e1 f7       	brne	.-8      	; 0x2d3c <strcat+0xc>
    2d44:	08 95       	ret

00002d46 <strchr>:
    2d46:	fc 01       	movw	r30, r24
    2d48:	81 91       	ld	r24, Z+
    2d4a:	86 17       	cp	r24, r22
    2d4c:	21 f0       	breq	.+8      	; 0x2d56 <strchr+0x10>
    2d4e:	88 23       	and	r24, r24
    2d50:	d9 f7       	brne	.-10     	; 0x2d48 <strchr+0x2>
    2d52:	99 27       	eor	r25, r25
    2d54:	08 95       	ret
    2d56:	31 97       	sbiw	r30, 0x01	; 1
    2d58:	cf 01       	movw	r24, r30
    2d5a:	08 95       	ret

00002d5c <strcpy>:
    2d5c:	fb 01       	movw	r30, r22
    2d5e:	dc 01       	movw	r26, r24
    2d60:	01 90       	ld	r0, Z+
    2d62:	0d 92       	st	X+, r0
    2d64:	00 20       	and	r0, r0
    2d66:	e1 f7       	brne	.-8      	; 0x2d60 <strcpy+0x4>
    2d68:	08 95       	ret

00002d6a <strstr>:
    2d6a:	fb 01       	movw	r30, r22
    2d6c:	51 91       	ld	r21, Z+
    2d6e:	55 23       	and	r21, r21
    2d70:	a9 f0       	breq	.+42     	; 0x2d9c <strstr+0x32>
    2d72:	bf 01       	movw	r22, r30
    2d74:	dc 01       	movw	r26, r24
    2d76:	4d 91       	ld	r20, X+
    2d78:	45 17       	cp	r20, r21
    2d7a:	41 11       	cpse	r20, r1
    2d7c:	e1 f7       	brne	.-8      	; 0x2d76 <strstr+0xc>
    2d7e:	59 f4       	brne	.+22     	; 0x2d96 <strstr+0x2c>
    2d80:	cd 01       	movw	r24, r26
    2d82:	01 90       	ld	r0, Z+
    2d84:	00 20       	and	r0, r0
    2d86:	49 f0       	breq	.+18     	; 0x2d9a <strstr+0x30>
    2d88:	4d 91       	ld	r20, X+
    2d8a:	40 15       	cp	r20, r0
    2d8c:	41 11       	cpse	r20, r1
    2d8e:	c9 f3       	breq	.-14     	; 0x2d82 <strstr+0x18>
    2d90:	fb 01       	movw	r30, r22
    2d92:	41 11       	cpse	r20, r1
    2d94:	ef cf       	rjmp	.-34     	; 0x2d74 <strstr+0xa>
    2d96:	81 e0       	ldi	r24, 0x01	; 1
    2d98:	90 e0       	ldi	r25, 0x00	; 0
    2d9a:	01 97       	sbiw	r24, 0x01	; 1
    2d9c:	08 95       	ret

00002d9e <strtok_r>:
    2d9e:	fa 01       	movw	r30, r20
    2da0:	a1 91       	ld	r26, Z+
    2da2:	b0 81       	ld	r27, Z
    2da4:	00 97       	sbiw	r24, 0x00	; 0
    2da6:	19 f4       	brne	.+6      	; 0x2dae <strtok_r+0x10>
    2da8:	10 97       	sbiw	r26, 0x00	; 0
    2daa:	e1 f0       	breq	.+56     	; 0x2de4 <strtok_r+0x46>
    2dac:	cd 01       	movw	r24, r26
    2dae:	dc 01       	movw	r26, r24
    2db0:	cd 01       	movw	r24, r26
    2db2:	0d 90       	ld	r0, X+
    2db4:	00 20       	and	r0, r0
    2db6:	11 f4       	brne	.+4      	; 0x2dbc <strtok_r+0x1e>
    2db8:	c0 01       	movw	r24, r0
    2dba:	13 c0       	rjmp	.+38     	; 0x2de2 <strtok_r+0x44>
    2dbc:	fb 01       	movw	r30, r22
    2dbe:	21 91       	ld	r18, Z+
    2dc0:	22 23       	and	r18, r18
    2dc2:	19 f0       	breq	.+6      	; 0x2dca <strtok_r+0x2c>
    2dc4:	20 15       	cp	r18, r0
    2dc6:	d9 f7       	brne	.-10     	; 0x2dbe <strtok_r+0x20>
    2dc8:	f3 cf       	rjmp	.-26     	; 0x2db0 <strtok_r+0x12>
    2dca:	fb 01       	movw	r30, r22
    2dcc:	21 91       	ld	r18, Z+
    2dce:	20 15       	cp	r18, r0
    2dd0:	19 f4       	brne	.+6      	; 0x2dd8 <strtok_r+0x3a>
    2dd2:	1e 92       	st	-X, r1
    2dd4:	11 96       	adiw	r26, 0x01	; 1
    2dd6:	06 c0       	rjmp	.+12     	; 0x2de4 <strtok_r+0x46>
    2dd8:	22 23       	and	r18, r18
    2dda:	c1 f7       	brne	.-16     	; 0x2dcc <strtok_r+0x2e>
    2ddc:	0d 90       	ld	r0, X+
    2dde:	00 20       	and	r0, r0
    2de0:	a1 f7       	brne	.-24     	; 0x2dca <strtok_r+0x2c>
    2de2:	d0 01       	movw	r26, r0
    2de4:	fa 01       	movw	r30, r20
    2de6:	a1 93       	st	Z+, r26
    2de8:	b0 83       	st	Z, r27
    2dea:	08 95       	ret

00002dec <__itoa_ncheck>:
    2dec:	bb 27       	eor	r27, r27
    2dee:	4a 30       	cpi	r20, 0x0A	; 10
    2df0:	31 f4       	brne	.+12     	; 0x2dfe <__itoa_ncheck+0x12>
    2df2:	99 23       	and	r25, r25
    2df4:	22 f4       	brpl	.+8      	; 0x2dfe <__itoa_ncheck+0x12>
    2df6:	bd e2       	ldi	r27, 0x2D	; 45
    2df8:	90 95       	com	r25
    2dfa:	81 95       	neg	r24
    2dfc:	9f 4f       	sbci	r25, 0xFF	; 255
    2dfe:	09 c0       	rjmp	.+18     	; 0x2e12 <__utoa_common>

00002e00 <__mulhi_const_10>:
    2e00:	7a e0       	ldi	r23, 0x0A	; 10
    2e02:	97 9f       	mul	r25, r23
    2e04:	90 2d       	mov	r25, r0
    2e06:	87 9f       	mul	r24, r23
    2e08:	80 2d       	mov	r24, r0
    2e0a:	91 0d       	add	r25, r1
    2e0c:	11 24       	eor	r1, r1
    2e0e:	08 95       	ret

00002e10 <__utoa_ncheck>:
    2e10:	bb 27       	eor	r27, r27

00002e12 <__utoa_common>:
    2e12:	fb 01       	movw	r30, r22
    2e14:	55 27       	eor	r21, r21
    2e16:	aa 27       	eor	r26, r26
    2e18:	88 0f       	add	r24, r24
    2e1a:	99 1f       	adc	r25, r25
    2e1c:	aa 1f       	adc	r26, r26
    2e1e:	a4 17       	cp	r26, r20
    2e20:	10 f0       	brcs	.+4      	; 0x2e26 <__utoa_common+0x14>
    2e22:	a4 1b       	sub	r26, r20
    2e24:	83 95       	inc	r24
    2e26:	50 51       	subi	r21, 0x10	; 16
    2e28:	b9 f7       	brne	.-18     	; 0x2e18 <__utoa_common+0x6>
    2e2a:	a0 5d       	subi	r26, 0xD0	; 208
    2e2c:	aa 33       	cpi	r26, 0x3A	; 58
    2e2e:	08 f0       	brcs	.+2      	; 0x2e32 <__utoa_common+0x20>
    2e30:	a9 5d       	subi	r26, 0xD9	; 217
    2e32:	a1 93       	st	Z+, r26
    2e34:	00 97       	sbiw	r24, 0x00	; 0
    2e36:	79 f7       	brne	.-34     	; 0x2e16 <__utoa_common+0x4>
    2e38:	b1 11       	cpse	r27, r1
    2e3a:	b1 93       	st	Z+, r27
    2e3c:	11 92       	st	Z+, r1
    2e3e:	cb 01       	movw	r24, r22
    2e40:	00 c0       	rjmp	.+0      	; 0x2e42 <strrev>

00002e42 <strrev>:
    2e42:	dc 01       	movw	r26, r24
    2e44:	fc 01       	movw	r30, r24
    2e46:	67 2f       	mov	r22, r23
    2e48:	71 91       	ld	r23, Z+
    2e4a:	77 23       	and	r23, r23
    2e4c:	e1 f7       	brne	.-8      	; 0x2e46 <strrev+0x4>
    2e4e:	32 97       	sbiw	r30, 0x02	; 2
    2e50:	04 c0       	rjmp	.+8      	; 0x2e5a <strrev+0x18>
    2e52:	7c 91       	ld	r23, X
    2e54:	6d 93       	st	X+, r22
    2e56:	70 83       	st	Z, r23
    2e58:	62 91       	ld	r22, -Z
    2e5a:	ae 17       	cp	r26, r30
    2e5c:	bf 07       	cpc	r27, r31
    2e5e:	c8 f3       	brcs	.-14     	; 0x2e52 <strrev+0x10>
    2e60:	08 95       	ret

00002e62 <eeprom_read_byte>:
    2e62:	f9 99       	sbic	0x1f, 1	; 31
    2e64:	fe cf       	rjmp	.-4      	; 0x2e62 <eeprom_read_byte>
    2e66:	92 bd       	out	0x22, r25	; 34
    2e68:	81 bd       	out	0x21, r24	; 33
    2e6a:	f8 9a       	sbi	0x1f, 0	; 31
    2e6c:	99 27       	eor	r25, r25
    2e6e:	80 b5       	in	r24, 0x20	; 32
    2e70:	08 95       	ret

00002e72 <eeprom_write_byte>:
    2e72:	26 2f       	mov	r18, r22

00002e74 <eeprom_write_r18>:
    2e74:	f9 99       	sbic	0x1f, 1	; 31
    2e76:	fe cf       	rjmp	.-4      	; 0x2e74 <eeprom_write_r18>
    2e78:	1f ba       	out	0x1f, r1	; 31
    2e7a:	92 bd       	out	0x22, r25	; 34
    2e7c:	81 bd       	out	0x21, r24	; 33
    2e7e:	20 bd       	out	0x20, r18	; 32
    2e80:	0f b6       	in	r0, 0x3f	; 63
    2e82:	f8 94       	cli
    2e84:	fa 9a       	sbi	0x1f, 2	; 31
    2e86:	f9 9a       	sbi	0x1f, 1	; 31
    2e88:	0f be       	out	0x3f, r0	; 63
    2e8a:	01 96       	adiw	r24, 0x01	; 1
    2e8c:	08 95       	ret

00002e8e <_exit>:
    2e8e:	f8 94       	cli

00002e90 <__stop_program>:
    2e90:	ff cf       	rjmp	.-2      	; 0x2e90 <__stop_program>
