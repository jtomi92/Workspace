
home_control_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000006a6  00800100  00003562  000035f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003562  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000052a  008007a6  008007a6  00003c9c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00003c9c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003ccc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000318  00000000  00000000  00003d0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00008471  00000000  00000000  00004024  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000109d  00000000  00000000  0000c495  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002cf8  00000000  00000000  0000d532  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c7c  00000000  00000000  0001022c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001448  00000000  00000000  00010ea8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003bfd  00000000  00000000  000122f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004b0  00000000  00000000  00015eed  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	96 c0       	rjmp	.+300    	; 0x12e <__ctors_end>
       2:	00 00       	nop
       4:	b3 c0       	rjmp	.+358    	; 0x16c <__bad_interrupt>
       6:	00 00       	nop
       8:	b1 c0       	rjmp	.+354    	; 0x16c <__bad_interrupt>
       a:	00 00       	nop
       c:	af c0       	rjmp	.+350    	; 0x16c <__bad_interrupt>
       e:	00 00       	nop
      10:	ad c0       	rjmp	.+346    	; 0x16c <__bad_interrupt>
      12:	00 00       	nop
      14:	ab c0       	rjmp	.+342    	; 0x16c <__bad_interrupt>
      16:	00 00       	nop
      18:	a9 c0       	rjmp	.+338    	; 0x16c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	a7 c0       	rjmp	.+334    	; 0x16c <__bad_interrupt>
      1e:	00 00       	nop
      20:	a5 c0       	rjmp	.+330    	; 0x16c <__bad_interrupt>
      22:	00 00       	nop
      24:	a3 c0       	rjmp	.+326    	; 0x16c <__bad_interrupt>
      26:	00 00       	nop
      28:	a1 c0       	rjmp	.+322    	; 0x16c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	9f c0       	rjmp	.+318    	; 0x16c <__bad_interrupt>
      2e:	00 00       	nop
      30:	9d c0       	rjmp	.+314    	; 0x16c <__bad_interrupt>
      32:	00 00       	nop
      34:	9b c0       	rjmp	.+310    	; 0x16c <__bad_interrupt>
      36:	00 00       	nop
      38:	99 c0       	rjmp	.+306    	; 0x16c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	97 c0       	rjmp	.+302    	; 0x16c <__bad_interrupt>
      3e:	00 00       	nop
      40:	95 c0       	rjmp	.+298    	; 0x16c <__bad_interrupt>
      42:	00 00       	nop
      44:	93 c0       	rjmp	.+294    	; 0x16c <__bad_interrupt>
      46:	00 00       	nop
      48:	c0 c7       	rjmp	.+3968   	; 0xfca <__vector_18>
      4a:	00 00       	nop
      4c:	8f c0       	rjmp	.+286    	; 0x16c <__bad_interrupt>
      4e:	00 00       	nop
      50:	79 c7       	rjmp	.+3826   	; 0xf44 <__vector_20>
      52:	00 00       	nop
      54:	8b c0       	rjmp	.+278    	; 0x16c <__bad_interrupt>
      56:	00 00       	nop
      58:	89 c0       	rjmp	.+274    	; 0x16c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	87 c0       	rjmp	.+270    	; 0x16c <__bad_interrupt>
      5e:	00 00       	nop
      60:	85 c0       	rjmp	.+266    	; 0x16c <__bad_interrupt>
      62:	00 00       	nop
      64:	83 c0       	rjmp	.+262    	; 0x16c <__bad_interrupt>
      66:	00 00       	nop
      68:	81 c0       	rjmp	.+258    	; 0x16c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	7f c0       	rjmp	.+254    	; 0x16c <__bad_interrupt>
      6e:	00 00       	nop
      70:	26 c7       	rjmp	.+3660   	; 0xebe <__vector_28>
      72:	00 00       	nop
      74:	7b c0       	rjmp	.+246    	; 0x16c <__bad_interrupt>
      76:	00 00       	nop
      78:	79 c0       	rjmp	.+242    	; 0x16c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	77 c0       	rjmp	.+238    	; 0x16c <__bad_interrupt>
      7e:	00 00       	nop
      80:	75 c0       	rjmp	.+234    	; 0x16c <__bad_interrupt>
      82:	00 00       	nop
      84:	73 c0       	rjmp	.+230    	; 0x16c <__bad_interrupt>
      86:	00 00       	nop
      88:	71 c0       	rjmp	.+226    	; 0x16c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	bf 0a       	sbc	r11, r31
      8e:	c5 0a       	sbc	r12, r21
      90:	cb 0a       	sbc	r12, r27
      92:	d1 0a       	sbc	r13, r17
      94:	d7 0a       	sbc	r13, r23
      96:	dd 0a       	sbc	r13, r29
      98:	e3 0a       	sbc	r14, r19
      9a:	f1 15       	cp	r31, r1
      9c:	f7 15       	cp	r31, r7
      9e:	fd 15       	cp	r31, r13
      a0:	50 16       	cp	r5, r16
      a2:	50 16       	cp	r5, r16
      a4:	50 16       	cp	r5, r16
      a6:	50 16       	cp	r5, r16
      a8:	50 16       	cp	r5, r16
      aa:	50 16       	cp	r5, r16
      ac:	50 16       	cp	r5, r16
      ae:	50 16       	cp	r5, r16
      b0:	50 16       	cp	r5, r16
      b2:	03 16       	cp	r0, r19
      b4:	09 16       	cp	r0, r25
      b6:	0f 16       	cp	r0, r31
      b8:	15 16       	cp	r1, r21
      ba:	50 16       	cp	r5, r16
      bc:	50 16       	cp	r5, r16
      be:	50 16       	cp	r5, r16
      c0:	50 16       	cp	r5, r16
      c2:	1b 16       	cp	r1, r27
      c4:	21 16       	cp	r2, r17
      c6:	27 16       	cp	r2, r23
      c8:	2d 16       	cp	r2, r29
      ca:	50 16       	cp	r5, r16
      cc:	50 16       	cp	r5, r16
      ce:	50 16       	cp	r5, r16
      d0:	50 16       	cp	r5, r16
      d2:	50 16       	cp	r5, r16
      d4:	50 16       	cp	r5, r16
      d6:	50 16       	cp	r5, r16
      d8:	50 16       	cp	r5, r16
      da:	50 16       	cp	r5, r16
      dc:	50 16       	cp	r5, r16
      de:	50 16       	cp	r5, r16
      e0:	50 16       	cp	r5, r16
      e2:	50 16       	cp	r5, r16
      e4:	50 16       	cp	r5, r16
      e6:	50 16       	cp	r5, r16
      e8:	33 16       	cp	r3, r19
      ea:	39 16       	cp	r3, r25
      ec:	3f 16       	cp	r3, r31
      ee:	45 16       	cp	r4, r21
      f0:	4b 16       	cp	r4, r27
      f2:	59 16       	cp	r5, r25
      f4:	5f 16       	cp	r5, r31
      f6:	65 16       	cp	r6, r21
      f8:	6b 16       	cp	r6, r27
      fa:	82 16       	cp	r8, r18
      fc:	82 16       	cp	r8, r18
      fe:	82 16       	cp	r8, r18
     100:	82 16       	cp	r8, r18
     102:	82 16       	cp	r8, r18
     104:	82 16       	cp	r8, r18
     106:	82 16       	cp	r8, r18
     108:	82 16       	cp	r8, r18
     10a:	82 16       	cp	r8, r18
     10c:	82 16       	cp	r8, r18
     10e:	82 16       	cp	r8, r18
     110:	82 16       	cp	r8, r18
     112:	82 16       	cp	r8, r18
     114:	82 16       	cp	r8, r18
     116:	82 16       	cp	r8, r18
     118:	82 16       	cp	r8, r18
     11a:	82 16       	cp	r8, r18
     11c:	82 16       	cp	r8, r18
     11e:	82 16       	cp	r8, r18
     120:	82 16       	cp	r8, r18
     122:	82 16       	cp	r8, r18
     124:	82 16       	cp	r8, r18
     126:	82 16       	cp	r8, r18
     128:	71 16       	cp	r7, r17
     12a:	77 16       	cp	r7, r23
     12c:	7d 16       	cp	r7, r29

0000012e <__ctors_end>:
     12e:	11 24       	eor	r1, r1
     130:	1f be       	out	0x3f, r1	; 63
     132:	cf ef       	ldi	r28, 0xFF	; 255
     134:	d0 e4       	ldi	r29, 0x40	; 64
     136:	de bf       	out	0x3e, r29	; 62
     138:	cd bf       	out	0x3d, r28	; 61

0000013a <__do_copy_data>:
     13a:	17 e0       	ldi	r17, 0x07	; 7
     13c:	a0 e0       	ldi	r26, 0x00	; 0
     13e:	b1 e0       	ldi	r27, 0x01	; 1
     140:	e2 e6       	ldi	r30, 0x62	; 98
     142:	f5 e3       	ldi	r31, 0x35	; 53
     144:	00 e0       	ldi	r16, 0x00	; 0
     146:	0b bf       	out	0x3b, r16	; 59
     148:	02 c0       	rjmp	.+4      	; 0x14e <__do_copy_data+0x14>
     14a:	07 90       	elpm	r0, Z+
     14c:	0d 92       	st	X+, r0
     14e:	a6 3a       	cpi	r26, 0xA6	; 166
     150:	b1 07       	cpc	r27, r17
     152:	d9 f7       	brne	.-10     	; 0x14a <__do_copy_data+0x10>

00000154 <__do_clear_bss>:
     154:	2c e0       	ldi	r18, 0x0C	; 12
     156:	a6 ea       	ldi	r26, 0xA6	; 166
     158:	b7 e0       	ldi	r27, 0x07	; 7
     15a:	01 c0       	rjmp	.+2      	; 0x15e <.do_clear_bss_start>

0000015c <.do_clear_bss_loop>:
     15c:	1d 92       	st	X+, r1

0000015e <.do_clear_bss_start>:
     15e:	a0 3d       	cpi	r26, 0xD0	; 208
     160:	b2 07       	cpc	r27, r18
     162:	e1 f7       	brne	.-8      	; 0x15c <.do_clear_bss_loop>
     164:	0e 94 87 18 	call	0x310e	; 0x310e <main>
     168:	0c 94 af 1a 	jmp	0x355e	; 0x355e <_exit>

0000016c <__bad_interrupt>:
     16c:	49 cf       	rjmp	.-366    	; 0x0 <__vectors>

0000016e <_Z13eepromSaveCfgPKci>:
				return 1;
			}
		}
	}
	return 0;
}
     16e:	0f 93       	push	r16
     170:	1f 93       	push	r17
     172:	cf 93       	push	r28
     174:	df 93       	push	r29
     176:	eb 01       	movw	r28, r22
     178:	fc 01       	movw	r30, r24
     17a:	60 81       	ld	r22, Z
     17c:	66 23       	and	r22, r22
     17e:	79 f0       	breq	.+30     	; 0x19e <_Z13eepromSaveCfgPKci+0x30>
     180:	8c 01       	movw	r16, r24
     182:	0f 5f       	subi	r16, 0xFF	; 255
     184:	1f 4f       	sbci	r17, 0xFF	; 255
     186:	f9 99       	sbic	0x1f, 1	; 31
     188:	fe cf       	rjmp	.-4      	; 0x186 <_Z13eepromSaveCfgPKci+0x18>
     18a:	21 96       	adiw	r28, 0x01	; 1
     18c:	ce 01       	movw	r24, r28
     18e:	01 97       	sbiw	r24, 0x01	; 1
     190:	0e 94 a1 1a 	call	0x3542	; 0x3542 <eeprom_write_byte>
     194:	f8 01       	movw	r30, r16
     196:	61 91       	ld	r22, Z+
     198:	8f 01       	movw	r16, r30
     19a:	61 11       	cpse	r22, r1
     19c:	f4 cf       	rjmp	.-24     	; 0x186 <_Z13eepromSaveCfgPKci+0x18>
     19e:	ce 01       	movw	r24, r28
     1a0:	df 91       	pop	r29
     1a2:	cf 91       	pop	r28
     1a4:	1f 91       	pop	r17
     1a6:	0f 91       	pop	r16
     1a8:	08 95       	ret

000001aa <_Z11clearEEPROMii>:
     1aa:	ef 92       	push	r14
     1ac:	ff 92       	push	r15
     1ae:	0f 93       	push	r16
     1b0:	1f 93       	push	r17
     1b2:	cf 93       	push	r28
     1b4:	df 93       	push	r29
     1b6:	ec 01       	movw	r28, r24
     1b8:	7b 01       	movw	r14, r22
     1ba:	86 17       	cp	r24, r22
     1bc:	97 07       	cpc	r25, r23
     1be:	a4 f4       	brge	.+40     	; 0x1e8 <_Z11clearEEPROMii+0x3e>
     1c0:	f9 99       	sbic	0x1f, 1	; 31
     1c2:	fe cf       	rjmp	.-4      	; 0x1c0 <_Z11clearEEPROMii+0x16>
     1c4:	0c 2f       	mov	r16, r28
     1c6:	1d 2f       	mov	r17, r29
     1c8:	ce 01       	movw	r24, r28
     1ca:	0e 94 99 1a 	call	0x3532	; 0x3532 <eeprom_read_byte>
     1ce:	8f 3f       	cpi	r24, 0xFF	; 255
     1d0:	59 f0       	breq	.+22     	; 0x1e8 <_Z11clearEEPROMii+0x3e>
     1d2:	f9 99       	sbic	0x1f, 1	; 31
     1d4:	fe cf       	rjmp	.-4      	; 0x1d2 <_Z11clearEEPROMii+0x28>
     1d6:	6f ef       	ldi	r22, 0xFF	; 255
     1d8:	80 2f       	mov	r24, r16
     1da:	91 2f       	mov	r25, r17
     1dc:	0e 94 a1 1a 	call	0x3542	; 0x3542 <eeprom_write_byte>
     1e0:	21 96       	adiw	r28, 0x01	; 1
     1e2:	ce 15       	cp	r28, r14
     1e4:	df 05       	cpc	r29, r15
     1e6:	64 f3       	brlt	.-40     	; 0x1c0 <_Z11clearEEPROMii+0x16>
     1e8:	df 91       	pop	r29
     1ea:	cf 91       	pop	r28
     1ec:	1f 91       	pop	r17
     1ee:	0f 91       	pop	r16
     1f0:	ff 90       	pop	r15
     1f2:	ef 90       	pop	r14
     1f4:	08 95       	ret

000001f6 <_Z19eepromReadAttributePciS_i>:
     1f6:	2f 92       	push	r2
     1f8:	3f 92       	push	r3
     1fa:	4f 92       	push	r4
     1fc:	5f 92       	push	r5
     1fe:	6f 92       	push	r6
     200:	7f 92       	push	r7
     202:	8f 92       	push	r8
     204:	9f 92       	push	r9
     206:	af 92       	push	r10
     208:	bf 92       	push	r11
     20a:	cf 92       	push	r12
     20c:	df 92       	push	r13
     20e:	ef 92       	push	r14
     210:	ff 92       	push	r15
     212:	0f 93       	push	r16
     214:	1f 93       	push	r17
     216:	cf 93       	push	r28
     218:	df 93       	push	r29
     21a:	cd b7       	in	r28, 0x3d	; 61
     21c:	de b7       	in	r29, 0x3e	; 62
     21e:	cc 5c       	subi	r28, 0xCC	; 204
     220:	d1 09       	sbc	r29, r1
     222:	0f b6       	in	r0, 0x3f	; 63
     224:	f8 94       	cli
     226:	de bf       	out	0x3e, r29	; 62
     228:	0f be       	out	0x3f, r0	; 63
     22a:	cd bf       	out	0x3d, r28	; 61
     22c:	dc 01       	movw	r26, r24
     22e:	21 30       	cpi	r18, 0x01	; 1
     230:	31 05       	cpc	r19, r1
     232:	21 f4       	brne	.+8      	; 0x23c <_Z19eepromReadAttributePciS_i+0x46>
     234:	10 92 c8 0c 	sts	0x0CC8, r1	; 0x800cc8 <__system_var+0x42>
     238:	10 92 c7 0c 	sts	0x0CC7, r1	; 0x800cc7 <__system_var+0x41>
     23c:	9a 01       	movw	r18, r20
     23e:	2f 5f       	subi	r18, 0xFF	; 255
     240:	3f 4f       	sbci	r19, 0xFF	; 255
     242:	fa 01       	movw	r30, r20
     244:	80 81       	ld	r24, Z
     246:	88 23       	and	r24, r24
     248:	51 f0       	breq	.+20     	; 0x25e <_Z19eepromReadAttributePciS_i+0x68>
     24a:	f9 01       	movw	r30, r18
     24c:	81 2c       	mov	r8, r1
     24e:	91 2c       	mov	r9, r1
     250:	2f ef       	ldi	r18, 0xFF	; 255
     252:	82 1a       	sub	r8, r18
     254:	92 0a       	sbc	r9, r18
     256:	91 91       	ld	r25, Z+
     258:	91 11       	cpse	r25, r1
     25a:	fa cf       	rjmp	.-12     	; 0x250 <_Z19eepromReadAttributePciS_i+0x5a>
     25c:	02 c0       	rjmp	.+4      	; 0x262 <_Z19eepromReadAttributePciS_i+0x6c>
     25e:	81 2c       	mov	r8, r1
     260:	91 2c       	mov	r9, r1
     262:	e0 90 c7 0c 	lds	r14, 0x0CC7	; 0x800cc7 <__system_var+0x41>
     266:	f0 90 c8 0c 	lds	r15, 0x0CC8	; 0x800cc8 <__system_var+0x42>
     26a:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <EEPROM_SIZE>
     26e:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <EEPROM_SIZE+0x1>
     272:	e8 16       	cp	r14, r24
     274:	f9 06       	cpc	r15, r25
     276:	0c f0       	brlt	.+2      	; 0x27a <_Z19eepromReadAttributePciS_i+0x84>
     278:	90 c0       	rjmp	.+288    	; 0x39a <_Z19eepromReadAttributePciS_i+0x1a4>
     27a:	2a 01       	movw	r4, r20
     27c:	c5 53       	subi	r28, 0x35	; 53
     27e:	df 4f       	sbci	r29, 0xFF	; 255
     280:	79 83       	std	Y+1, r23	; 0x01
     282:	68 83       	st	Y, r22
     284:	cb 5c       	subi	r28, 0xCB	; 203
     286:	d0 40       	sbci	r29, 0x00	; 0
     288:	c7 53       	subi	r28, 0x37	; 55
     28a:	df 4f       	sbci	r29, 0xFF	; 255
     28c:	b9 83       	std	Y+1, r27	; 0x01
     28e:	a8 83       	st	Y, r26
     290:	c9 5c       	subi	r28, 0xC9	; 201
     292:	d0 40       	sbci	r29, 0x00	; 0
     294:	a1 2c       	mov	r10, r1
     296:	b1 2c       	mov	r11, r1
     298:	00 e0       	ldi	r16, 0x00	; 0
     29a:	10 e0       	ldi	r17, 0x00	; 0
     29c:	ce 01       	movw	r24, r28
     29e:	01 96       	adiw	r24, 0x01	; 1
     2a0:	6c 01       	movw	r12, r24
     2a2:	0f 2e       	mov	r0, r31
     2a4:	f7 ec       	ldi	r31, 0xC7	; 199
     2a6:	2f 2e       	mov	r2, r31
     2a8:	f0 2d       	mov	r31, r0
     2aa:	31 2c       	mov	r3, r1
     2ac:	60 90 a3 01 	lds	r6, 0x01A3	; 0x8001a3 <EEPROM_SIZE>
     2b0:	70 90 a4 01 	lds	r7, 0x01A4	; 0x8001a4 <EEPROM_SIZE+0x1>
     2b4:	f9 99       	sbic	0x1f, 1	; 31
     2b6:	fe cf       	rjmp	.-4      	; 0x2b4 <_Z19eepromReadAttributePciS_i+0xbe>
     2b8:	c7 01       	movw	r24, r14
     2ba:	0e 94 99 1a 	call	0x3532	; 0x3532 <eeprom_read_byte>
     2be:	83 32       	cpi	r24, 0x23	; 35
     2c0:	31 f4       	brne	.+12     	; 0x2ce <_Z19eepromReadAttributePciS_i+0xd8>
     2c2:	91 e0       	ldi	r25, 0x01	; 1
     2c4:	ab 28       	or	r10, r11
     2c6:	09 f0       	breq	.+2      	; 0x2ca <_Z19eepromReadAttributePciS_i+0xd4>
     2c8:	90 e0       	ldi	r25, 0x00	; 0
     2ca:	a9 2e       	mov	r10, r25
     2cc:	b1 2c       	mov	r11, r1
     2ce:	91 e0       	ldi	r25, 0x01	; 1
     2d0:	a9 16       	cp	r10, r25
     2d2:	b1 04       	cpc	r11, r1
     2d4:	59 f4       	brne	.+22     	; 0x2ec <_Z19eepromReadAttributePciS_i+0xf6>
     2d6:	07 3c       	cpi	r16, 0xC7	; 199
     2d8:	11 05       	cpc	r17, r1
     2da:	09 f4       	brne	.+2      	; 0x2de <_Z19eepromReadAttributePciS_i+0xe8>
     2dc:	60 c0       	rjmp	.+192    	; 0x39e <_Z19eepromReadAttributePciS_i+0x1a8>
     2de:	f6 01       	movw	r30, r12
     2e0:	e0 0f       	add	r30, r16
     2e2:	f1 1f       	adc	r31, r17
     2e4:	80 83       	st	Z, r24
     2e6:	0f 5f       	subi	r16, 0xFF	; 255
     2e8:	1f 4f       	sbci	r17, 0xFF	; 255
     2ea:	4e c0       	rjmp	.+156    	; 0x388 <_Z19eepromReadAttributePciS_i+0x192>
     2ec:	10 16       	cp	r1, r16
     2ee:	11 06       	cpc	r1, r17
     2f0:	0c f0       	brlt	.+2      	; 0x2f4 <_Z19eepromReadAttributePciS_i+0xfe>
     2f2:	4a c0       	rjmp	.+148    	; 0x388 <_Z19eepromReadAttributePciS_i+0x192>
     2f4:	f6 01       	movw	r30, r12
     2f6:	e0 0f       	add	r30, r16
     2f8:	f1 1f       	adc	r31, r17
     2fa:	10 82       	st	Z, r1
     2fc:	b2 01       	movw	r22, r4
     2fe:	c6 01       	movw	r24, r12
     300:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
     304:	00 97       	sbiw	r24, 0x00	; 0
     306:	c9 f1       	breq	.+114    	; 0x37a <_Z19eepromReadAttributePciS_i+0x184>
     308:	ef ef       	ldi	r30, 0xFF	; 255
     30a:	8e 1a       	sub	r8, r30
     30c:	9e 0a       	sbc	r9, r30
     30e:	fc 01       	movw	r30, r24
     310:	e8 0d       	add	r30, r8
     312:	f9 1d       	adc	r31, r9
     314:	20 81       	ld	r18, Z
     316:	22 23       	and	r18, r18
     318:	e1 f0       	breq	.+56     	; 0x352 <_Z19eepromReadAttributePciS_i+0x15c>
     31a:	c5 53       	subi	r28, 0x35	; 53
     31c:	df 4f       	sbci	r29, 0xFF	; 255
     31e:	48 81       	ld	r20, Y
     320:	59 81       	ldd	r21, Y+1	; 0x01
     322:	cb 5c       	subi	r28, 0xCB	; 203
     324:	d0 40       	sbci	r29, 0x00	; 0
     326:	41 50       	subi	r20, 0x01	; 1
     328:	51 09       	sbc	r21, r1
     32a:	d9 f1       	breq	.+118    	; 0x3a2 <_Z19eepromReadAttributePciS_i+0x1ac>
     32c:	c7 53       	subi	r28, 0x37	; 55
     32e:	df 4f       	sbci	r29, 0xFF	; 255
     330:	a8 81       	ld	r26, Y
     332:	b9 81       	ldd	r27, Y+1	; 0x01
     334:	c9 5c       	subi	r28, 0xC9	; 201
     336:	d0 40       	sbci	r29, 0x00	; 0
     338:	31 96       	adiw	r30, 0x01	; 1
     33a:	80 e0       	ldi	r24, 0x00	; 0
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	03 c0       	rjmp	.+6      	; 0x346 <_Z19eepromReadAttributePciS_i+0x150>
     340:	84 17       	cp	r24, r20
     342:	95 07       	cpc	r25, r21
     344:	81 f1       	breq	.+96     	; 0x3a6 <_Z19eepromReadAttributePciS_i+0x1b0>
     346:	01 96       	adiw	r24, 0x01	; 1
     348:	2d 93       	st	X+, r18
     34a:	21 91       	ld	r18, Z+
     34c:	21 11       	cpse	r18, r1
     34e:	f8 cf       	rjmp	.-16     	; 0x340 <_Z19eepromReadAttributePciS_i+0x14a>
     350:	02 c0       	rjmp	.+4      	; 0x356 <_Z19eepromReadAttributePciS_i+0x160>
     352:	80 e0       	ldi	r24, 0x00	; 0
     354:	90 e0       	ldi	r25, 0x00	; 0
     356:	c7 53       	subi	r28, 0x37	; 55
     358:	df 4f       	sbci	r29, 0xFF	; 255
     35a:	e8 81       	ld	r30, Y
     35c:	f9 81       	ldd	r31, Y+1	; 0x01
     35e:	c9 5c       	subi	r28, 0xC9	; 201
     360:	d0 40       	sbci	r29, 0x00	; 0
     362:	e8 0f       	add	r30, r24
     364:	f9 1f       	adc	r31, r25
     366:	10 82       	st	Z, r1
     368:	ff ef       	ldi	r31, 0xFF	; 255
     36a:	ef 1a       	sub	r14, r31
     36c:	ff 0a       	sbc	r15, r31
     36e:	f0 92 c8 0c 	sts	0x0CC8, r15	; 0x800cc8 <__system_var+0x42>
     372:	e0 92 c7 0c 	sts	0x0CC7, r14	; 0x800cc7 <__system_var+0x41>
     376:	81 e0       	ldi	r24, 0x01	; 1
     378:	17 c0       	rjmp	.+46     	; 0x3a8 <_Z19eepromReadAttributePciS_i+0x1b2>
     37a:	f6 01       	movw	r30, r12
     37c:	22 2d       	mov	r18, r2
     37e:	11 92       	st	Z+, r1
     380:	2a 95       	dec	r18
     382:	e9 f7       	brne	.-6      	; 0x37e <_Z19eepromReadAttributePciS_i+0x188>
     384:	03 2d       	mov	r16, r3
     386:	10 e0       	ldi	r17, 0x00	; 0
     388:	8f ef       	ldi	r24, 0xFF	; 255
     38a:	e8 1a       	sub	r14, r24
     38c:	f8 0a       	sbc	r15, r24
     38e:	e6 14       	cp	r14, r6
     390:	f7 04       	cpc	r15, r7
     392:	0c f4       	brge	.+2      	; 0x396 <_Z19eepromReadAttributePciS_i+0x1a0>
     394:	8f cf       	rjmp	.-226    	; 0x2b4 <_Z19eepromReadAttributePciS_i+0xbe>
     396:	80 e0       	ldi	r24, 0x00	; 0
     398:	07 c0       	rjmp	.+14     	; 0x3a8 <_Z19eepromReadAttributePciS_i+0x1b2>
     39a:	80 e0       	ldi	r24, 0x00	; 0
     39c:	05 c0       	rjmp	.+10     	; 0x3a8 <_Z19eepromReadAttributePciS_i+0x1b2>
     39e:	80 e0       	ldi	r24, 0x00	; 0
     3a0:	03 c0       	rjmp	.+6      	; 0x3a8 <_Z19eepromReadAttributePciS_i+0x1b2>
     3a2:	80 e0       	ldi	r24, 0x00	; 0
     3a4:	01 c0       	rjmp	.+2      	; 0x3a8 <_Z19eepromReadAttributePciS_i+0x1b2>
     3a6:	80 e0       	ldi	r24, 0x00	; 0
     3a8:	c4 53       	subi	r28, 0x34	; 52
     3aa:	df 4f       	sbci	r29, 0xFF	; 255
     3ac:	0f b6       	in	r0, 0x3f	; 63
     3ae:	f8 94       	cli
     3b0:	de bf       	out	0x3e, r29	; 62
     3b2:	0f be       	out	0x3f, r0	; 63
     3b4:	cd bf       	out	0x3d, r28	; 61
     3b6:	df 91       	pop	r29
     3b8:	cf 91       	pop	r28
     3ba:	1f 91       	pop	r17
     3bc:	0f 91       	pop	r16
     3be:	ff 90       	pop	r15
     3c0:	ef 90       	pop	r14
     3c2:	df 90       	pop	r13
     3c4:	cf 90       	pop	r12
     3c6:	bf 90       	pop	r11
     3c8:	af 90       	pop	r10
     3ca:	9f 90       	pop	r9
     3cc:	8f 90       	pop	r8
     3ce:	7f 90       	pop	r7
     3d0:	6f 90       	pop	r6
     3d2:	5f 90       	pop	r5
     3d4:	4f 90       	pop	r4
     3d6:	3f 90       	pop	r3
     3d8:	2f 90       	pop	r2
     3da:	08 95       	ret

000003dc <_Z15getRelaySettingii>:
     3dc:	4f 92       	push	r4
     3de:	5f 92       	push	r5
     3e0:	6f 92       	push	r6
     3e2:	7f 92       	push	r7
     3e4:	8f 92       	push	r8
     3e6:	9f 92       	push	r9
     3e8:	af 92       	push	r10
     3ea:	bf 92       	push	r11
     3ec:	cf 92       	push	r12
     3ee:	df 92       	push	r13
     3f0:	ef 92       	push	r14
     3f2:	ff 92       	push	r15
     3f4:	0f 93       	push	r16
     3f6:	1f 93       	push	r17
     3f8:	cf 93       	push	r28
     3fa:	df 93       	push	r29
     3fc:	cd b7       	in	r28, 0x3d	; 61
     3fe:	de b7       	in	r29, 0x3e	; 62
     400:	ce 5c       	subi	r28, 0xCE	; 206
     402:	d1 09       	sbc	r29, r1
     404:	0f b6       	in	r0, 0x3f	; 63
     406:	f8 94       	cli
     408:	de bf       	out	0x3e, r29	; 62
     40a:	0f be       	out	0x3f, r0	; 63
     40c:	cd bf       	out	0x3d, r28	; 61
     40e:	5c 01       	movw	r10, r24
     410:	4b 01       	movw	r8, r22
     412:	10 92 c8 0c 	sts	0x0CC8, r1	; 0x800cc8 <__system_var+0x42>
     416:	10 92 c7 0c 	sts	0x0CC7, r1	; 0x800cc7 <__system_var+0x41>
     41a:	0a ea       	ldi	r16, 0xAA	; 170
     41c:	18 e0       	ldi	r17, 0x08	; 8
     41e:	0f 2e       	mov	r0, r31
     420:	f8 ec       	ldi	r31, 0xC8	; 200
     422:	6f 2e       	mov	r6, r31
     424:	71 2c       	mov	r7, r1
     426:	f0 2d       	mov	r31, r0
     428:	0f 2e       	mov	r0, r31
     42a:	f2 eb       	ldi	r31, 0xB2	; 178
     42c:	4f 2e       	mov	r4, r31
     42e:	f8 e0       	ldi	r31, 0x08	; 8
     430:	5f 2e       	mov	r5, r31
     432:	f0 2d       	mov	r31, r0
     434:	bf c0       	rjmp	.+382    	; 0x5b4 <__FUSE_REGION_LENGTH__+0x1b4>
     436:	ae 01       	movw	r20, r28
     438:	43 53       	subi	r20, 0x33	; 51
     43a:	5f 4f       	sbci	r21, 0xFF	; 255
     43c:	60 ec       	ldi	r22, 0xC0	; 192
     43e:	73 e0       	ldi	r23, 0x03	; 3
     440:	ce 01       	movw	r24, r28
     442:	01 96       	adiw	r24, 0x01	; 1
     444:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
     448:	00 97       	sbiw	r24, 0x00	; 0
     44a:	09 f4       	brne	.+2      	; 0x44e <__FUSE_REGION_LENGTH__+0x4e>
     44c:	a5 c0       	rjmp	.+330    	; 0x598 <__FUSE_REGION_LENGTH__+0x198>
     44e:	ae 01       	movw	r20, r28
     450:	45 53       	subi	r20, 0x35	; 53
     452:	5f 4f       	sbci	r21, 0xFF	; 255
     454:	66 e3       	ldi	r22, 0x36	; 54
     456:	71 e0       	ldi	r23, 0x01	; 1
     458:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
     45c:	7c 01       	movw	r14, r24
     45e:	6b e3       	ldi	r22, 0x3B	; 59
     460:	71 e0       	ldi	r23, 0x01	; 1
     462:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
     466:	89 2b       	or	r24, r25
     468:	79 f0       	breq	.+30     	; 0x488 <__FUSE_REGION_LENGTH__+0x88>
     46a:	ae 01       	movw	r20, r28
     46c:	45 53       	subi	r20, 0x35	; 53
     46e:	5f 4f       	sbci	r21, 0xFF	; 255
     470:	66 e3       	ldi	r22, 0x36	; 54
     472:	71 e0       	ldi	r23, 0x01	; 1
     474:	80 e0       	ldi	r24, 0x00	; 0
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
     47c:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
     480:	f8 01       	movw	r30, r16
     482:	91 83       	std	Z+1, r25	; 0x01
     484:	80 83       	st	Z, r24
     486:	7c c0       	rjmp	.+248    	; 0x580 <__FUSE_REGION_LENGTH__+0x180>
     488:	6e e3       	ldi	r22, 0x3E	; 62
     48a:	71 e0       	ldi	r23, 0x01	; 1
     48c:	c7 01       	movw	r24, r14
     48e:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
     492:	89 2b       	or	r24, r25
     494:	79 f0       	breq	.+30     	; 0x4b4 <__FUSE_REGION_LENGTH__+0xb4>
     496:	ae 01       	movw	r20, r28
     498:	45 53       	subi	r20, 0x35	; 53
     49a:	5f 4f       	sbci	r21, 0xFF	; 255
     49c:	66 e3       	ldi	r22, 0x36	; 54
     49e:	71 e0       	ldi	r23, 0x01	; 1
     4a0:	80 e0       	ldi	r24, 0x00	; 0
     4a2:	90 e0       	ldi	r25, 0x00	; 0
     4a4:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
     4a8:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
     4ac:	f8 01       	movw	r30, r16
     4ae:	93 83       	std	Z+3, r25	; 0x03
     4b0:	82 83       	std	Z+2, r24	; 0x02
     4b2:	66 c0       	rjmp	.+204    	; 0x580 <__FUSE_REGION_LENGTH__+0x180>
     4b4:	64 e4       	ldi	r22, 0x44	; 68
     4b6:	70 e0       	ldi	r23, 0x00	; 0
     4b8:	c7 01       	movw	r24, r14
     4ba:	0e 94 08 1a 	call	0x3410	; 0x3410 <strchr>
     4be:	89 2b       	or	r24, r25
     4c0:	79 f0       	breq	.+30     	; 0x4e0 <__FUSE_REGION_LENGTH__+0xe0>
     4c2:	ae 01       	movw	r20, r28
     4c4:	45 53       	subi	r20, 0x35	; 53
     4c6:	5f 4f       	sbci	r21, 0xFF	; 255
     4c8:	66 e3       	ldi	r22, 0x36	; 54
     4ca:	71 e0       	ldi	r23, 0x01	; 1
     4cc:	80 e0       	ldi	r24, 0x00	; 0
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
     4d4:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
     4d8:	f8 01       	movw	r30, r16
     4da:	95 83       	std	Z+5, r25	; 0x05
     4dc:	84 83       	std	Z+4, r24	; 0x04
     4de:	50 c0       	rjmp	.+160    	; 0x580 <__FUSE_REGION_LENGTH__+0x180>
     4e0:	61 e4       	ldi	r22, 0x41	; 65
     4e2:	71 e0       	ldi	r23, 0x01	; 1
     4e4:	c7 01       	movw	r24, r14
     4e6:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
     4ea:	89 2b       	or	r24, r25
     4ec:	79 f0       	breq	.+30     	; 0x50c <__FUSE_REGION_LENGTH__+0x10c>
     4ee:	ae 01       	movw	r20, r28
     4f0:	45 53       	subi	r20, 0x35	; 53
     4f2:	5f 4f       	sbci	r21, 0xFF	; 255
     4f4:	66 e3       	ldi	r22, 0x36	; 54
     4f6:	71 e0       	ldi	r23, 0x01	; 1
     4f8:	80 e0       	ldi	r24, 0x00	; 0
     4fa:	90 e0       	ldi	r25, 0x00	; 0
     4fc:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
     500:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
     504:	f8 01       	movw	r30, r16
     506:	97 83       	std	Z+7, r25	; 0x07
     508:	86 83       	std	Z+6, r24	; 0x06
     50a:	3a c0       	rjmp	.+116    	; 0x580 <__FUSE_REGION_LENGTH__+0x180>
     50c:	64 e4       	ldi	r22, 0x44	; 68
     50e:	71 e0       	ldi	r23, 0x01	; 1
     510:	c7 01       	movw	r24, r14
     512:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
     516:	89 2b       	or	r24, r25
     518:	99 f1       	breq	.+102    	; 0x580 <__FUSE_REGION_LENGTH__+0x180>
     51a:	ae 01       	movw	r20, r28
     51c:	45 53       	subi	r20, 0x35	; 53
     51e:	5f 4f       	sbci	r21, 0xFF	; 255
     520:	66 e3       	ldi	r22, 0x36	; 54
     522:	71 e0       	ldi	r23, 0x01	; 1
     524:	80 e0       	ldi	r24, 0x00	; 0
     526:	90 e0       	ldi	r25, 0x00	; 0
     528:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
     52c:	ae 01       	movw	r20, r28
     52e:	47 53       	subi	r20, 0x37	; 55
     530:	5f 4f       	sbci	r21, 0xFF	; 255
     532:	6e e4       	ldi	r22, 0x4E	; 78
     534:	73 e0       	ldi	r23, 0x03	; 3
     536:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
     53a:	00 97       	sbiw	r24, 0x00	; 0
     53c:	c1 f0       	breq	.+48     	; 0x56e <__FUSE_REGION_LENGTH__+0x16e>
     53e:	62 01       	movw	r12, r4
     540:	e1 2c       	mov	r14, r1
     542:	f1 2c       	mov	r15, r1
     544:	ff ef       	ldi	r31, 0xFF	; 255
     546:	ef 1a       	sub	r14, r31
     548:	ff 0a       	sbc	r15, r31
     54a:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
     54e:	f6 01       	movw	r30, r12
     550:	81 93       	st	Z+, r24
     552:	91 93       	st	Z+, r25
     554:	6f 01       	movw	r12, r30
     556:	ae 01       	movw	r20, r28
     558:	47 53       	subi	r20, 0x37	; 55
     55a:	5f 4f       	sbci	r21, 0xFF	; 255
     55c:	6e e4       	ldi	r22, 0x4E	; 78
     55e:	73 e0       	ldi	r23, 0x03	; 3
     560:	80 e0       	ldi	r24, 0x00	; 0
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
     568:	00 97       	sbiw	r24, 0x00	; 0
     56a:	61 f7       	brne	.-40     	; 0x544 <__FUSE_REGION_LENGTH__+0x144>
     56c:	02 c0       	rjmp	.+4      	; 0x572 <__FUSE_REGION_LENGTH__+0x172>
     56e:	e1 2c       	mov	r14, r1
     570:	f1 2c       	mov	r15, r1
     572:	f7 01       	movw	r30, r14
     574:	ee 0f       	add	r30, r30
     576:	ff 1f       	adc	r31, r31
     578:	ee 54       	subi	r30, 0x4E	; 78
     57a:	f7 4f       	sbci	r31, 0xF7	; 247
     57c:	71 82       	std	Z+1, r7	; 0x01
     57e:	60 82       	st	Z, r6
     580:	ae 01       	movw	r20, r28
     582:	43 53       	subi	r20, 0x33	; 51
     584:	5f 4f       	sbci	r21, 0xFF	; 255
     586:	60 ec       	ldi	r22, 0xC0	; 192
     588:	73 e0       	ldi	r23, 0x03	; 3
     58a:	80 e0       	ldi	r24, 0x00	; 0
     58c:	90 e0       	ldi	r25, 0x00	; 0
     58e:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
     592:	00 97       	sbiw	r24, 0x00	; 0
     594:	09 f0       	breq	.+2      	; 0x598 <__FUSE_REGION_LENGTH__+0x198>
     596:	5b cf       	rjmp	.-330    	; 0x44e <__FUSE_REGION_LENGTH__+0x4e>
     598:	f8 01       	movw	r30, r16
     59a:	80 81       	ld	r24, Z
     59c:	91 81       	ldd	r25, Z+1	; 0x01
     59e:	8a 15       	cp	r24, r10
     5a0:	9b 05       	cpc	r25, r11
     5a2:	41 f4       	brne	.+16     	; 0x5b4 <__FUSE_REGION_LENGTH__+0x1b4>
     5a4:	82 81       	ldd	r24, Z+2	; 0x02
     5a6:	93 81       	ldd	r25, Z+3	; 0x03
     5a8:	88 15       	cp	r24, r8
     5aa:	99 05       	cpc	r25, r9
     5ac:	19 f4       	brne	.+6      	; 0x5b4 <__FUSE_REGION_LENGTH__+0x1b4>
     5ae:	81 e0       	ldi	r24, 0x01	; 1
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	0d c0       	rjmp	.+26     	; 0x5ce <__FUSE_REGION_LENGTH__+0x1ce>
     5b4:	20 e0       	ldi	r18, 0x00	; 0
     5b6:	30 e0       	ldi	r19, 0x00	; 0
     5b8:	47 e4       	ldi	r20, 0x47	; 71
     5ba:	51 e0       	ldi	r21, 0x01	; 1
     5bc:	67 ec       	ldi	r22, 0xC7	; 199
     5be:	70 e0       	ldi	r23, 0x00	; 0
     5c0:	ce 01       	movw	r24, r28
     5c2:	01 96       	adiw	r24, 0x01	; 1
     5c4:	18 de       	rcall	.-976    	; 0x1f6 <_Z19eepromReadAttributePciS_i>
     5c6:	81 11       	cpse	r24, r1
     5c8:	36 cf       	rjmp	.-404    	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
     5ca:	80 e0       	ldi	r24, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	c2 53       	subi	r28, 0x32	; 50
     5d0:	df 4f       	sbci	r29, 0xFF	; 255
     5d2:	0f b6       	in	r0, 0x3f	; 63
     5d4:	f8 94       	cli
     5d6:	de bf       	out	0x3e, r29	; 62
     5d8:	0f be       	out	0x3f, r0	; 63
     5da:	cd bf       	out	0x3d, r28	; 61
     5dc:	df 91       	pop	r29
     5de:	cf 91       	pop	r28
     5e0:	1f 91       	pop	r17
     5e2:	0f 91       	pop	r16
     5e4:	ff 90       	pop	r15
     5e6:	ef 90       	pop	r14
     5e8:	df 90       	pop	r13
     5ea:	cf 90       	pop	r12
     5ec:	bf 90       	pop	r11
     5ee:	af 90       	pop	r10
     5f0:	9f 90       	pop	r9
     5f2:	8f 90       	pop	r8
     5f4:	7f 90       	pop	r7
     5f6:	6f 90       	pop	r6
     5f8:	5f 90       	pop	r5
     5fa:	4f 90       	pop	r4
     5fc:	08 95       	ret

000005fe <_Z24getPrimaryNetworkSettingPcS_>:

int getPrimaryNetworkSetting(char host[], char port[]){
     5fe:	af 92       	push	r10
     600:	bf 92       	push	r11
     602:	cf 92       	push	r12
     604:	df 92       	push	r13
     606:	ff 92       	push	r15
     608:	0f 93       	push	r16
     60a:	1f 93       	push	r17
     60c:	cf 93       	push	r28
     60e:	df 93       	push	r29
     610:	cd b7       	in	r28, 0x3d	; 61
     612:	de b7       	in	r29, 0x3e	; 62
     614:	c6 56       	subi	r28, 0x66	; 102
     616:	d1 09       	sbc	r29, r1
     618:	0f b6       	in	r0, 0x3f	; 63
     61a:	f8 94       	cli
     61c:	de bf       	out	0x3e, r29	; 62
     61e:	0f be       	out	0x3f, r0	; 63
     620:	cd bf       	out	0x3d, r28	; 61
     622:	6c 01       	movw	r12, r24
     624:	5b 01       	movw	r10, r22
	char container[100], *p1, *save_ptr1, success = 0;
	__system_var.eeprom_position = 0;
     626:	10 92 c8 0c 	sts	0x0CC8, r1	; 0x800cc8 <__system_var+0x42>
     62a:	10 92 c7 0c 	sts	0x0CC7, r1	; 0x800cc7 <__system_var+0x41>
	if (eepromReadAttribute(container,sizeof(container),"NS",0) == 0) return 0;
     62e:	20 e0       	ldi	r18, 0x00	; 0
     630:	30 e0       	ldi	r19, 0x00	; 0
     632:	4a e4       	ldi	r20, 0x4A	; 74
     634:	51 e0       	ldi	r21, 0x01	; 1
     636:	64 e6       	ldi	r22, 0x64	; 100
     638:	70 e0       	ldi	r23, 0x00	; 0
     63a:	ce 01       	movw	r24, r28
     63c:	01 96       	adiw	r24, 0x01	; 1
     63e:	db dd       	rcall	.-1098   	; 0x1f6 <_Z19eepromReadAttributePciS_i>
     640:	88 23       	and	r24, r24
     642:	09 f4       	brne	.+2      	; 0x646 <_Z24getPrimaryNetworkSettingPcS_+0x48>
     644:	51 c0       	rjmp	.+162    	; 0x6e8 <_Z24getPrimaryNetworkSettingPcS_+0xea>

	p1 = strtok_r(container,";",&save_ptr1);
     646:	ae 01       	movw	r20, r28
     648:	4b 59       	subi	r20, 0x9B	; 155
     64a:	5f 4f       	sbci	r21, 0xFF	; 255
     64c:	60 ec       	ldi	r22, 0xC0	; 192
     64e:	73 e0       	ldi	r23, 0x03	; 3
     650:	ce 01       	movw	r24, r28
     652:	01 96       	adiw	r24, 0x01	; 1
     654:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
     658:	8c 01       	movw	r16, r24
	while (p1 != 0){
     65a:	89 2b       	or	r24, r25
     65c:	e9 f1       	breq	.+122    	; 0x6d8 <_Z24getPrimaryNetworkSettingPcS_+0xda>
     65e:	f1 2c       	mov	r15, r1
		if (strstr(p1,"HOST1") != 0){
     660:	6d e4       	ldi	r22, 0x4D	; 77
     662:	71 e0       	ldi	r23, 0x01	; 1
     664:	c8 01       	movw	r24, r16
     666:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
     66a:	89 2b       	or	r24, r25
     66c:	89 f0       	breq	.+34     	; 0x690 <_Z24getPrimaryNetworkSettingPcS_+0x92>
			char *p2;
			p2 = strtok(p1,":");
     66e:	66 e3       	ldi	r22, 0x36	; 54
     670:	71 e0       	ldi	r23, 0x01	; 1
     672:	c8 01       	movw	r24, r16
     674:	0e 94 f3 19 	call	0x33e6	; 0x33e6 <strtok>
			p2 = strtok(0,":");
     678:	66 e3       	ldi	r22, 0x36	; 54
     67a:	71 e0       	ldi	r23, 0x01	; 1
     67c:	80 e0       	ldi	r24, 0x00	; 0
     67e:	90 e0       	ldi	r25, 0x00	; 0
     680:	0e 94 f3 19 	call	0x33e6	; 0x33e6 <strtok>
     684:	bc 01       	movw	r22, r24
			strcpy(host,p2);
     686:	c6 01       	movw	r24, r12
     688:	0e 94 13 1a 	call	0x3426	; 0x3426 <strcpy>
			success += 1;
     68c:	f3 94       	inc	r15
     68e:	17 c0       	rjmp	.+46     	; 0x6be <_Z24getPrimaryNetworkSettingPcS_+0xc0>
			} else if (strstr(p1,"PORT1") != 0){
     690:	63 e5       	ldi	r22, 0x53	; 83
     692:	71 e0       	ldi	r23, 0x01	; 1
     694:	c8 01       	movw	r24, r16
     696:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
     69a:	89 2b       	or	r24, r25
     69c:	81 f0       	breq	.+32     	; 0x6be <_Z24getPrimaryNetworkSettingPcS_+0xc0>
			char *p2;
			p2 = strtok(p1,":");
     69e:	66 e3       	ldi	r22, 0x36	; 54
     6a0:	71 e0       	ldi	r23, 0x01	; 1
     6a2:	c8 01       	movw	r24, r16
     6a4:	0e 94 f3 19 	call	0x33e6	; 0x33e6 <strtok>
			p2 = strtok(0,":");
     6a8:	66 e3       	ldi	r22, 0x36	; 54
     6aa:	71 e0       	ldi	r23, 0x01	; 1
     6ac:	80 e0       	ldi	r24, 0x00	; 0
     6ae:	90 e0       	ldi	r25, 0x00	; 0
     6b0:	0e 94 f3 19 	call	0x33e6	; 0x33e6 <strtok>
			strcpy(port,p2);
     6b4:	bc 01       	movw	r22, r24
     6b6:	c5 01       	movw	r24, r10
     6b8:	0e 94 13 1a 	call	0x3426	; 0x3426 <strcpy>
			success += 1;
     6bc:	f3 94       	inc	r15
		}
		p1 = strtok_r(0,";",&save_ptr1);
     6be:	ae 01       	movw	r20, r28
     6c0:	4b 59       	subi	r20, 0x9B	; 155
     6c2:	5f 4f       	sbci	r21, 0xFF	; 255
     6c4:	60 ec       	ldi	r22, 0xC0	; 192
     6c6:	73 e0       	ldi	r23, 0x03	; 3
     6c8:	80 e0       	ldi	r24, 0x00	; 0
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
     6d0:	8c 01       	movw	r16, r24
	char container[100], *p1, *save_ptr1, success = 0;
	__system_var.eeprom_position = 0;
	if (eepromReadAttribute(container,sizeof(container),"NS",0) == 0) return 0;

	p1 = strtok_r(container,";",&save_ptr1);
	while (p1 != 0){
     6d2:	89 2b       	or	r24, r25
     6d4:	29 f6       	brne	.-118    	; 0x660 <_Z24getPrimaryNetworkSettingPcS_+0x62>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <_Z24getPrimaryNetworkSettingPcS_+0xdc>
	}
	return 0;
}

int getPrimaryNetworkSetting(char host[], char port[]){
	char container[100], *p1, *save_ptr1, success = 0;
     6d8:	f1 2c       	mov	r15, r1
			strcpy(port,p2);
			success += 1;
		}
		p1 = strtok_r(0,";",&save_ptr1);
	}
	if (success == 2){
     6da:	81 e0       	ldi	r24, 0x01	; 1
     6dc:	90 e0       	ldi	r25, 0x00	; 0
     6de:	22 e0       	ldi	r18, 0x02	; 2
     6e0:	f2 16       	cp	r15, r18
     6e2:	21 f0       	breq	.+8      	; 0x6ec <_Z24getPrimaryNetworkSettingPcS_+0xee>
     6e4:	80 e0       	ldi	r24, 0x00	; 0
     6e6:	02 c0       	rjmp	.+4      	; 0x6ec <_Z24getPrimaryNetworkSettingPcS_+0xee>
}

int getPrimaryNetworkSetting(char host[], char port[]){
	char container[100], *p1, *save_ptr1, success = 0;
	__system_var.eeprom_position = 0;
	if (eepromReadAttribute(container,sizeof(container),"NS",0) == 0) return 0;
     6e8:	80 e0       	ldi	r24, 0x00	; 0
     6ea:	90 e0       	ldi	r25, 0x00	; 0
	if (success == 2){
		return 1;
		} else {
		return 0;
	}
}
     6ec:	ca 59       	subi	r28, 0x9A	; 154
     6ee:	df 4f       	sbci	r29, 0xFF	; 255
     6f0:	0f b6       	in	r0, 0x3f	; 63
     6f2:	f8 94       	cli
     6f4:	de bf       	out	0x3e, r29	; 62
     6f6:	0f be       	out	0x3f, r0	; 63
     6f8:	cd bf       	out	0x3d, r28	; 61
     6fa:	df 91       	pop	r29
     6fc:	cf 91       	pop	r28
     6fe:	1f 91       	pop	r17
     700:	0f 91       	pop	r16
     702:	ff 90       	pop	r15
     704:	df 90       	pop	r13
     706:	cf 90       	pop	r12
     708:	bf 90       	pop	r11
     70a:	af 90       	pop	r10
     70c:	08 95       	ret

0000070e <_Z26getSecondaryNetworkSettingPcS_>:

int getSecondaryNetworkSetting(char host[], char port[]){
     70e:	af 92       	push	r10
     710:	bf 92       	push	r11
     712:	cf 92       	push	r12
     714:	df 92       	push	r13
     716:	ff 92       	push	r15
     718:	0f 93       	push	r16
     71a:	1f 93       	push	r17
     71c:	cf 93       	push	r28
     71e:	df 93       	push	r29
     720:	cd b7       	in	r28, 0x3d	; 61
     722:	de b7       	in	r29, 0x3e	; 62
     724:	c6 56       	subi	r28, 0x66	; 102
     726:	d1 09       	sbc	r29, r1
     728:	0f b6       	in	r0, 0x3f	; 63
     72a:	f8 94       	cli
     72c:	de bf       	out	0x3e, r29	; 62
     72e:	0f be       	out	0x3f, r0	; 63
     730:	cd bf       	out	0x3d, r28	; 61
     732:	6c 01       	movw	r12, r24
     734:	5b 01       	movw	r10, r22
	char container[100], *p1, *save_ptr1, success = 0;
	__system_var.eeprom_position = 0;
     736:	10 92 c8 0c 	sts	0x0CC8, r1	; 0x800cc8 <__system_var+0x42>
     73a:	10 92 c7 0c 	sts	0x0CC7, r1	; 0x800cc7 <__system_var+0x41>
	if (eepromReadAttribute(container,sizeof(container),"NS",0) == 0) return 0;
     73e:	20 e0       	ldi	r18, 0x00	; 0
     740:	30 e0       	ldi	r19, 0x00	; 0
     742:	4a e4       	ldi	r20, 0x4A	; 74
     744:	51 e0       	ldi	r21, 0x01	; 1
     746:	64 e6       	ldi	r22, 0x64	; 100
     748:	70 e0       	ldi	r23, 0x00	; 0
     74a:	ce 01       	movw	r24, r28
     74c:	01 96       	adiw	r24, 0x01	; 1
     74e:	53 dd       	rcall	.-1370   	; 0x1f6 <_Z19eepromReadAttributePciS_i>
     750:	88 23       	and	r24, r24
     752:	09 f4       	brne	.+2      	; 0x756 <_Z26getSecondaryNetworkSettingPcS_+0x48>
     754:	51 c0       	rjmp	.+162    	; 0x7f8 <_Z26getSecondaryNetworkSettingPcS_+0xea>

	p1 = strtok_r(container,";",&save_ptr1);
     756:	ae 01       	movw	r20, r28
     758:	4b 59       	subi	r20, 0x9B	; 155
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	60 ec       	ldi	r22, 0xC0	; 192
     75e:	73 e0       	ldi	r23, 0x03	; 3
     760:	ce 01       	movw	r24, r28
     762:	01 96       	adiw	r24, 0x01	; 1
     764:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
     768:	8c 01       	movw	r16, r24
	while (p1 != 0){
     76a:	89 2b       	or	r24, r25
     76c:	e9 f1       	breq	.+122    	; 0x7e8 <_Z26getSecondaryNetworkSettingPcS_+0xda>
     76e:	f1 2c       	mov	r15, r1
		if (strstr(p1,"HOST2") != 0){
     770:	69 e5       	ldi	r22, 0x59	; 89
     772:	71 e0       	ldi	r23, 0x01	; 1
     774:	c8 01       	movw	r24, r16
     776:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
     77a:	89 2b       	or	r24, r25
     77c:	89 f0       	breq	.+34     	; 0x7a0 <_Z26getSecondaryNetworkSettingPcS_+0x92>
			char *p2;
			p2 = strtok(p1,":");
     77e:	66 e3       	ldi	r22, 0x36	; 54
     780:	71 e0       	ldi	r23, 0x01	; 1
     782:	c8 01       	movw	r24, r16
     784:	0e 94 f3 19 	call	0x33e6	; 0x33e6 <strtok>
			p2 = strtok(0,":");
     788:	66 e3       	ldi	r22, 0x36	; 54
     78a:	71 e0       	ldi	r23, 0x01	; 1
     78c:	80 e0       	ldi	r24, 0x00	; 0
     78e:	90 e0       	ldi	r25, 0x00	; 0
     790:	0e 94 f3 19 	call	0x33e6	; 0x33e6 <strtok>
     794:	bc 01       	movw	r22, r24
			strcpy(host,p2);
     796:	c6 01       	movw	r24, r12
     798:	0e 94 13 1a 	call	0x3426	; 0x3426 <strcpy>
			success += 1;
     79c:	f3 94       	inc	r15
     79e:	17 c0       	rjmp	.+46     	; 0x7ce <_Z26getSecondaryNetworkSettingPcS_+0xc0>
			} else if (strstr(p1,"PORT2") != 0){
     7a0:	6f e5       	ldi	r22, 0x5F	; 95
     7a2:	71 e0       	ldi	r23, 0x01	; 1
     7a4:	c8 01       	movw	r24, r16
     7a6:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
     7aa:	89 2b       	or	r24, r25
     7ac:	81 f0       	breq	.+32     	; 0x7ce <_Z26getSecondaryNetworkSettingPcS_+0xc0>
			char *p2;
			p2 = strtok(p1,":");
     7ae:	66 e3       	ldi	r22, 0x36	; 54
     7b0:	71 e0       	ldi	r23, 0x01	; 1
     7b2:	c8 01       	movw	r24, r16
     7b4:	0e 94 f3 19 	call	0x33e6	; 0x33e6 <strtok>
			p2 = strtok(0,":");
     7b8:	66 e3       	ldi	r22, 0x36	; 54
     7ba:	71 e0       	ldi	r23, 0x01	; 1
     7bc:	80 e0       	ldi	r24, 0x00	; 0
     7be:	90 e0       	ldi	r25, 0x00	; 0
     7c0:	0e 94 f3 19 	call	0x33e6	; 0x33e6 <strtok>
			strcpy(port,p2);
     7c4:	bc 01       	movw	r22, r24
     7c6:	c5 01       	movw	r24, r10
     7c8:	0e 94 13 1a 	call	0x3426	; 0x3426 <strcpy>
			success += 1;
     7cc:	f3 94       	inc	r15
		}
		p1 = strtok_r(0,";",&save_ptr1);
     7ce:	ae 01       	movw	r20, r28
     7d0:	4b 59       	subi	r20, 0x9B	; 155
     7d2:	5f 4f       	sbci	r21, 0xFF	; 255
     7d4:	60 ec       	ldi	r22, 0xC0	; 192
     7d6:	73 e0       	ldi	r23, 0x03	; 3
     7d8:	80 e0       	ldi	r24, 0x00	; 0
     7da:	90 e0       	ldi	r25, 0x00	; 0
     7dc:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
     7e0:	8c 01       	movw	r16, r24
	char container[100], *p1, *save_ptr1, success = 0;
	__system_var.eeprom_position = 0;
	if (eepromReadAttribute(container,sizeof(container),"NS",0) == 0) return 0;

	p1 = strtok_r(container,";",&save_ptr1);
	while (p1 != 0){
     7e2:	89 2b       	or	r24, r25
     7e4:	29 f6       	brne	.-118    	; 0x770 <_Z26getSecondaryNetworkSettingPcS_+0x62>
     7e6:	01 c0       	rjmp	.+2      	; 0x7ea <_Z26getSecondaryNetworkSettingPcS_+0xdc>
		return 0;
	}
}

int getSecondaryNetworkSetting(char host[], char port[]){
	char container[100], *p1, *save_ptr1, success = 0;
     7e8:	f1 2c       	mov	r15, r1
			strcpy(port,p2);
			success += 1;
		}
		p1 = strtok_r(0,";",&save_ptr1);
	}
	if (success == 2){
     7ea:	81 e0       	ldi	r24, 0x01	; 1
     7ec:	90 e0       	ldi	r25, 0x00	; 0
     7ee:	22 e0       	ldi	r18, 0x02	; 2
     7f0:	f2 16       	cp	r15, r18
     7f2:	21 f0       	breq	.+8      	; 0x7fc <_Z26getSecondaryNetworkSettingPcS_+0xee>
     7f4:	80 e0       	ldi	r24, 0x00	; 0
     7f6:	02 c0       	rjmp	.+4      	; 0x7fc <_Z26getSecondaryNetworkSettingPcS_+0xee>
}

int getSecondaryNetworkSetting(char host[], char port[]){
	char container[100], *p1, *save_ptr1, success = 0;
	__system_var.eeprom_position = 0;
	if (eepromReadAttribute(container,sizeof(container),"NS",0) == 0) return 0;
     7f8:	80 e0       	ldi	r24, 0x00	; 0
     7fa:	90 e0       	ldi	r25, 0x00	; 0
	if (success == 2){
		return 1;
		} else {
		return 0;
	}
}
     7fc:	ca 59       	subi	r28, 0x9A	; 154
     7fe:	df 4f       	sbci	r29, 0xFF	; 255
     800:	0f b6       	in	r0, 0x3f	; 63
     802:	f8 94       	cli
     804:	de bf       	out	0x3e, r29	; 62
     806:	0f be       	out	0x3f, r0	; 63
     808:	cd bf       	out	0x3d, r28	; 61
     80a:	df 91       	pop	r29
     80c:	cf 91       	pop	r28
     80e:	1f 91       	pop	r17
     810:	0f 91       	pop	r16
     812:	ff 90       	pop	r15
     814:	df 90       	pop	r13
     816:	cf 90       	pop	r12
     818:	bf 90       	pop	r11
     81a:	af 90       	pop	r10
     81c:	08 95       	ret

0000081e <_Z24getDefaultNetworkSettingPcS_>:

int getDefaultNetworkSetting(char host[], char port[]){
     81e:	cf 93       	push	r28
     820:	df 93       	push	r29
     822:	eb 01       	movw	r28, r22
	strcpy(host,NETWORK_HOST);
     824:	69 eb       	ldi	r22, 0xB9	; 185
     826:	71 e0       	ldi	r23, 0x01	; 1
     828:	0e 94 13 1a 	call	0x3426	; 0x3426 <strcpy>
	strcpy(port,NETWORK_PORT);
     82c:	64 eb       	ldi	r22, 0xB4	; 180
     82e:	71 e0       	ldi	r23, 0x01	; 1
     830:	ce 01       	movw	r24, r28
     832:	0e 94 13 1a 	call	0x3426	; 0x3426 <strcpy>
	return 1;
}
     836:	81 e0       	ldi	r24, 0x01	; 1
     838:	90 e0       	ldi	r25, 0x00	; 0
     83a:	df 91       	pop	r29
     83c:	cf 91       	pop	r28
     83e:	08 95       	ret

00000840 <_Z21getAccessPointSettingv>:

void getAccessPointSetting(){
     840:	cf 93       	push	r28
     842:	df 93       	push	r29
     844:	cd b7       	in	r28, 0x3d	; 61
     846:	de b7       	in	r29, 0x3e	; 62
     848:	c4 56       	subi	r28, 0x64	; 100
     84a:	d1 09       	sbc	r29, r1
     84c:	0f b6       	in	r0, 0x3f	; 63
     84e:	f8 94       	cli
     850:	de bf       	out	0x3e, r29	; 62
     852:	0f be       	out	0x3f, r0	; 63
     854:	cd bf       	out	0x3d, r28	; 61
	char container[100];
	__system_var.eeprom_position = 0;
     856:	10 92 c8 0c 	sts	0x0CC8, r1	; 0x800cc8 <__system_var+0x42>
     85a:	10 92 c7 0c 	sts	0x0CC7, r1	; 0x800cc7 <__system_var+0x41>
	if (eepromReadAttribute(container,sizeof(container),"SSID",0) != 0){
     85e:	20 e0       	ldi	r18, 0x00	; 0
     860:	30 e0       	ldi	r19, 0x00	; 0
     862:	45 e6       	ldi	r20, 0x65	; 101
     864:	51 e0       	ldi	r21, 0x01	; 1
     866:	64 e6       	ldi	r22, 0x64	; 100
     868:	70 e0       	ldi	r23, 0x00	; 0
     86a:	ce 01       	movw	r24, r28
     86c:	01 96       	adiw	r24, 0x01	; 1
     86e:	c3 dc       	rcall	.-1658   	; 0x1f6 <_Z19eepromReadAttributePciS_i>
     870:	88 23       	and	r24, r24
     872:	89 f0       	breq	.+34     	; 0x896 <_Z21getAccessPointSettingv+0x56>
		if (strlen(container) <= sizeof(__network_data.ssid)) strcpy(__network_data.ssid,container);
     874:	de 01       	movw	r26, r28
     876:	11 96       	adiw	r26, 0x01	; 1
     878:	fd 01       	movw	r30, r26
     87a:	01 90       	ld	r0, Z+
     87c:	00 20       	and	r0, r0
     87e:	e9 f7       	brne	.-6      	; 0x87a <_Z21getAccessPointSettingv+0x3a>
     880:	31 97       	sbiw	r30, 0x01	; 1
     882:	ea 1b       	sub	r30, r26
     884:	fb 0b       	sbc	r31, r27
     886:	7f 97       	sbiw	r30, 0x1f	; 31
     888:	60 f4       	brcc	.+24     	; 0x8a2 <_Z21getAccessPointSettingv+0x62>
     88a:	bd 01       	movw	r22, r26
     88c:	8b e7       	ldi	r24, 0x7B	; 123
     88e:	99 e0       	ldi	r25, 0x09	; 9
     890:	0e 94 13 1a 	call	0x3426	; 0x3426 <strcpy>
     894:	06 c0       	rjmp	.+12     	; 0x8a2 <_Z21getAccessPointSettingv+0x62>
	} else {
		strcpy(__network_data.ssid,NETWORK_SSID);
     896:	61 ed       	ldi	r22, 0xD1	; 209
     898:	71 e0       	ldi	r23, 0x01	; 1
     89a:	8b e7       	ldi	r24, 0x7B	; 123
     89c:	99 e0       	ldi	r25, 0x09	; 9
     89e:	0e 94 13 1a 	call	0x3426	; 0x3426 <strcpy>
	}
	__system_var.eeprom_position = 0;
     8a2:	10 92 c8 0c 	sts	0x0CC8, r1	; 0x800cc8 <__system_var+0x42>
     8a6:	10 92 c7 0c 	sts	0x0CC7, r1	; 0x800cc7 <__system_var+0x41>
	if (eepromReadAttribute(container,sizeof(container),"PWD",0) != 0){
     8aa:	20 e0       	ldi	r18, 0x00	; 0
     8ac:	30 e0       	ldi	r19, 0x00	; 0
     8ae:	4a e6       	ldi	r20, 0x6A	; 106
     8b0:	51 e0       	ldi	r21, 0x01	; 1
     8b2:	64 e6       	ldi	r22, 0x64	; 100
     8b4:	70 e0       	ldi	r23, 0x00	; 0
     8b6:	ce 01       	movw	r24, r28
     8b8:	01 96       	adiw	r24, 0x01	; 1
     8ba:	9d dc       	rcall	.-1734   	; 0x1f6 <_Z19eepromReadAttributePciS_i>
     8bc:	88 23       	and	r24, r24
     8be:	89 f0       	breq	.+34     	; 0x8e2 <_Z21getAccessPointSettingv+0xa2>
		if (strlen(container) <= sizeof(__network_data.password)) strcpy(__network_data.password,container);
     8c0:	de 01       	movw	r26, r28
     8c2:	11 96       	adiw	r26, 0x01	; 1
     8c4:	fd 01       	movw	r30, r26
     8c6:	01 90       	ld	r0, Z+
     8c8:	00 20       	and	r0, r0
     8ca:	e9 f7       	brne	.-6      	; 0x8c6 <_Z21getAccessPointSettingv+0x86>
     8cc:	31 97       	sbiw	r30, 0x01	; 1
     8ce:	ea 1b       	sub	r30, r26
     8d0:	fb 0b       	sbc	r31, r27
     8d2:	7f 97       	sbiw	r30, 0x1f	; 31
     8d4:	60 f4       	brcc	.+24     	; 0x8ee <_Z21getAccessPointSettingv+0xae>
     8d6:	bd 01       	movw	r22, r26
     8d8:	89 e9       	ldi	r24, 0x99	; 153
     8da:	99 e0       	ldi	r25, 0x09	; 9
     8dc:	0e 94 13 1a 	call	0x3426	; 0x3426 <strcpy>
     8e0:	06 c0       	rjmp	.+12     	; 0x8ee <_Z21getAccessPointSettingv+0xae>
	} else {
		strcpy(__network_data.password,NETWORK_PASSW);
     8e2:	66 ec       	ldi	r22, 0xC6	; 198
     8e4:	71 e0       	ldi	r23, 0x01	; 1
     8e6:	89 e9       	ldi	r24, 0x99	; 153
     8e8:	99 e0       	ldi	r25, 0x09	; 9
     8ea:	0e 94 13 1a 	call	0x3426	; 0x3426 <strcpy>
	}
	__system_var.eeprom_position = 0;
     8ee:	10 92 c8 0c 	sts	0x0CC8, r1	; 0x800cc8 <__system_var+0x42>
     8f2:	10 92 c7 0c 	sts	0x0CC7, r1	; 0x800cc7 <__system_var+0x41>
	if (eepromReadAttribute(container,sizeof(container),"APN",0) != 0){
     8f6:	20 e0       	ldi	r18, 0x00	; 0
     8f8:	30 e0       	ldi	r19, 0x00	; 0
     8fa:	4e e6       	ldi	r20, 0x6E	; 110
     8fc:	51 e0       	ldi	r21, 0x01	; 1
     8fe:	64 e6       	ldi	r22, 0x64	; 100
     900:	70 e0       	ldi	r23, 0x00	; 0
     902:	ce 01       	movw	r24, r28
     904:	01 96       	adiw	r24, 0x01	; 1
     906:	77 dc       	rcall	.-1810   	; 0x1f6 <_Z19eepromReadAttributePciS_i>
     908:	88 23       	and	r24, r24
     90a:	89 f0       	breq	.+34     	; 0x92e <_Z21getAccessPointSettingv+0xee>
		if (strlen(container) <= sizeof(__network_data.apn)) strcpy(__network_data.apn,container);
     90c:	de 01       	movw	r26, r28
     90e:	11 96       	adiw	r26, 0x01	; 1
     910:	fd 01       	movw	r30, r26
     912:	01 90       	ld	r0, Z+
     914:	00 20       	and	r0, r0
     916:	e9 f7       	brne	.-6      	; 0x912 <_Z21getAccessPointSettingv+0xd2>
     918:	31 97       	sbiw	r30, 0x01	; 1
     91a:	ea 1b       	sub	r30, r26
     91c:	fb 0b       	sbc	r31, r27
     91e:	3b 97       	sbiw	r30, 0x0b	; 11
     920:	60 f4       	brcc	.+24     	; 0x93a <_Z21getAccessPointSettingv+0xfa>
     922:	bd 01       	movw	r22, r26
     924:	87 eb       	ldi	r24, 0xB7	; 183
     926:	99 e0       	ldi	r25, 0x09	; 9
     928:	0e 94 13 1a 	call	0x3426	; 0x3426 <strcpy>
     92c:	06 c0       	rjmp	.+12     	; 0x93a <_Z21getAccessPointSettingv+0xfa>
	} else {
		strcpy(__network_data.apn,NETWORK_APN);
     92e:	6d ea       	ldi	r22, 0xAD	; 173
     930:	71 e0       	ldi	r23, 0x01	; 1
     932:	87 eb       	ldi	r24, 0xB7	; 183
     934:	99 e0       	ldi	r25, 0x09	; 9
     936:	0e 94 13 1a 	call	0x3426	; 0x3426 <strcpy>
	}

}
     93a:	cc 59       	subi	r28, 0x9C	; 156
     93c:	df 4f       	sbci	r29, 0xFF	; 255
     93e:	0f b6       	in	r0, 0x3f	; 63
     940:	f8 94       	cli
     942:	de bf       	out	0x3e, r29	; 62
     944:	0f be       	out	0x3f, r0	; 63
     946:	cd bf       	out	0x3d, r28	; 61
     948:	df 91       	pop	r29
     94a:	cf 91       	pop	r28
     94c:	08 95       	ret

0000094e <_Z25initializeTimerSettingIdsv>:

void initializeTimerSettingIds(){
     94e:	5f 92       	push	r5
     950:	6f 92       	push	r6
     952:	7f 92       	push	r7
     954:	8f 92       	push	r8
     956:	9f 92       	push	r9
     958:	af 92       	push	r10
     95a:	bf 92       	push	r11
     95c:	cf 92       	push	r12
     95e:	df 92       	push	r13
     960:	ef 92       	push	r14
     962:	ff 92       	push	r15
     964:	0f 93       	push	r16
     966:	1f 93       	push	r17
     968:	cf 93       	push	r28
     96a:	df 93       	push	r29
     96c:	cd b7       	in	r28, 0x3d	; 61
     96e:	de b7       	in	r29, 0x3e	; 62
     970:	cc 5c       	subi	r28, 0xCC	; 204
     972:	d1 09       	sbc	r29, r1
     974:	0f b6       	in	r0, 0x3f	; 63
     976:	f8 94       	cli
     978:	de bf       	out	0x3e, r29	; 62
     97a:	0f be       	out	0x3f, r0	; 63
     97c:	cd bf       	out	0x3d, r28	; 61
     97e:	42 e1       	ldi	r20, 0x12	; 18
     980:	58 e0       	ldi	r21, 0x08	; 8
     982:	62 e8       	ldi	r22, 0x82	; 130
     984:	78 e0       	ldi	r23, 0x08	; 8
	int index = 0;

	for (index=0;index<MAX_MODULE_COUNT;index++){
		int j;
		for (j=0;j<MAX_RELAY_COUNT;j++){
			__timer_records[index].relays[j] = 254;
     986:	2e ef       	ldi	r18, 0xFE	; 254
     988:	30 e0       	ldi	r19, 0x00	; 0
     98a:	0a c0       	rjmp	.+20     	; 0x9a0 <_Z25initializeTimerSettingIdsv+0x52>
     98c:	21 93       	st	Z+, r18
     98e:	31 93       	st	Z+, r19
	int moduleId=0,relayId=0;
	int index = 0;

	for (index=0;index<MAX_MODULE_COUNT;index++){
		int j;
		for (j=0;j<MAX_RELAY_COUNT;j++){
     990:	e8 17       	cp	r30, r24
     992:	f9 07       	cpc	r31, r25
     994:	d9 f7       	brne	.-10     	; 0x98c <_Z25initializeTimerSettingIdsv+0x3e>
     996:	44 5e       	subi	r20, 0xE4	; 228
     998:	5f 4f       	sbci	r21, 0xFF	; 255
void initializeTimerSettingIds(){
	char container[200];
	int moduleId=0,relayId=0;
	int index = 0;

	for (index=0;index<MAX_MODULE_COUNT;index++){
     99a:	46 17       	cp	r20, r22
     99c:	57 07       	cpc	r21, r23
     99e:	21 f0       	breq	.+8      	; 0x9a8 <_Z25initializeTimerSettingIdsv+0x5a>
     9a0:	ca 01       	movw	r24, r20
     9a2:	4a 96       	adiw	r24, 0x1a	; 26
		strcpy(__network_data.apn,NETWORK_APN);
	}

}

void initializeTimerSettingIds(){
     9a4:	fa 01       	movw	r30, r20
     9a6:	f2 cf       	rjmp	.-28     	; 0x98c <_Z25initializeTimerSettingIdsv+0x3e>
		for (j=0;j<MAX_RELAY_COUNT;j++){
			__timer_records[index].relays[j] = 254;
		}
	}

	__system_var.eeprom_position = 0;
     9a8:	10 92 c8 0c 	sts	0x0CC8, r1	; 0x800cc8 <__system_var+0x42>
     9ac:	10 92 c7 0c 	sts	0x0CC7, r1	; 0x800cc7 <__system_var+0x41>
void initializeTimerSettingIds(){
	char container[200];
	int moduleId=0,relayId=0;
	int index = 0;

	for (index=0;index<MAX_MODULE_COUNT;index++){
     9b0:	68 94       	set
     9b2:	aa 24       	eor	r10, r10
     9b4:	a2 f8       	bld	r10, 2
     9b6:	b1 2c       	mov	r11, r1

}

void initializeTimerSettingIds(){
	char container[200];
	int moduleId=0,relayId=0;
     9b8:	81 2c       	mov	r8, r1
     9ba:	91 2c       	mov	r9, r1
     9bc:	c1 2c       	mov	r12, r1
     9be:	d1 2c       	mov	r13, r1
     9c0:	0f 2e       	mov	r0, r31
     9c2:	fc e1       	ldi	r31, 0x1C	; 28
     9c4:	6f 2e       	mov	r6, r31
     9c6:	f0 2d       	mov	r31, r0
				found += 1;
			}
			p1 = strtok_r(0,";",&save_ptr1);
		}

		if (found == 2){
     9c8:	55 24       	eor	r5, r5
     9ca:	53 94       	inc	r5
			flag = 1;
			for (i=0;i<MAX_RELAY_COUNT;i++){
				if (__timer_records[moduleId].relays[i] == relayId){
					flag = 0;
     9cc:	71 2c       	mov	r7, r1
			__timer_records[index].relays[j] = 254;
		}
	}

	__system_var.eeprom_position = 0;
	while (eepromReadAttribute(container,sizeof(container),"TS",0) != 0){
     9ce:	78 c0       	rjmp	.+240    	; 0xac0 <_Z25initializeTimerSettingIdsv+0x172>
		char *save_ptr1,*p1,flag;
		int i,found = 0;

		p1 = strtok_r(container,";",&save_ptr1);
     9d0:	ae 01       	movw	r20, r28
     9d2:	45 53       	subi	r20, 0x35	; 53
     9d4:	5f 4f       	sbci	r21, 0xFF	; 255
     9d6:	60 ec       	ldi	r22, 0xC0	; 192
     9d8:	73 e0       	ldi	r23, 0x03	; 3
     9da:	ce 01       	movw	r24, r28
     9dc:	01 96       	adiw	r24, 0x01	; 1
     9de:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
		while (p1!= 0){
     9e2:	00 97       	sbiw	r24, 0x00	; 0
     9e4:	09 f4       	brne	.+2      	; 0x9e8 <_Z25initializeTimerSettingIdsv+0x9a>
     9e6:	6c c0       	rjmp	.+216    	; 0xac0 <_Z25initializeTimerSettingIdsv+0x172>
     9e8:	e1 2c       	mov	r14, r1
     9ea:	f1 2c       	mov	r15, r1
			char *p2,*save_ptr2;

			p2 = strtok_r(p1,":",&save_ptr2);
     9ec:	ae 01       	movw	r20, r28
     9ee:	47 53       	subi	r20, 0x37	; 55
     9f0:	5f 4f       	sbci	r21, 0xFF	; 255
     9f2:	66 e3       	ldi	r22, 0x36	; 54
     9f4:	71 e0       	ldi	r23, 0x01	; 1
     9f6:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
     9fa:	8c 01       	movw	r16, r24
			if (strstr(p2,"MI")){
     9fc:	6b e3       	ldi	r22, 0x3B	; 59
     9fe:	71 e0       	ldi	r23, 0x01	; 1
     a00:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
     a04:	89 2b       	or	r24, r25
     a06:	81 f0       	breq	.+32     	; 0xa28 <_Z25initializeTimerSettingIdsv+0xda>
				p2 = strtok_r(0,":",&save_ptr2);
     a08:	ae 01       	movw	r20, r28
     a0a:	47 53       	subi	r20, 0x37	; 55
     a0c:	5f 4f       	sbci	r21, 0xFF	; 255
     a0e:	66 e3       	ldi	r22, 0x36	; 54
     a10:	71 e0       	ldi	r23, 0x01	; 1
     a12:	80 e0       	ldi	r24, 0x00	; 0
     a14:	90 e0       	ldi	r25, 0x00	; 0
     a16:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
				moduleId = atoi(p2);
     a1a:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
     a1e:	6c 01       	movw	r12, r24
				found += 1;
     a20:	2f ef       	ldi	r18, 0xFF	; 255
     a22:	e2 1a       	sub	r14, r18
     a24:	f2 0a       	sbc	r15, r18
     a26:	17 c0       	rjmp	.+46     	; 0xa56 <_Z25initializeTimerSettingIdsv+0x108>
				} else if (strstr(p2,"RI")){
     a28:	6e e3       	ldi	r22, 0x3E	; 62
     a2a:	71 e0       	ldi	r23, 0x01	; 1
     a2c:	c8 01       	movw	r24, r16
     a2e:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
     a32:	89 2b       	or	r24, r25
     a34:	81 f0       	breq	.+32     	; 0xa56 <_Z25initializeTimerSettingIdsv+0x108>
				p2 = strtok_r(0,":",&save_ptr2);
     a36:	ae 01       	movw	r20, r28
     a38:	47 53       	subi	r20, 0x37	; 55
     a3a:	5f 4f       	sbci	r21, 0xFF	; 255
     a3c:	66 e3       	ldi	r22, 0x36	; 54
     a3e:	71 e0       	ldi	r23, 0x01	; 1
     a40:	80 e0       	ldi	r24, 0x00	; 0
     a42:	90 e0       	ldi	r25, 0x00	; 0
     a44:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
				relayId = atoi(p2);
     a48:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
     a4c:	88 2e       	mov	r8, r24
     a4e:	99 2e       	mov	r9, r25
				found += 1;
     a50:	8f ef       	ldi	r24, 0xFF	; 255
     a52:	e8 1a       	sub	r14, r24
     a54:	f8 0a       	sbc	r15, r24
			}
			p1 = strtok_r(0,";",&save_ptr1);
     a56:	ae 01       	movw	r20, r28
     a58:	45 53       	subi	r20, 0x35	; 53
     a5a:	5f 4f       	sbci	r21, 0xFF	; 255
     a5c:	60 ec       	ldi	r22, 0xC0	; 192
     a5e:	73 e0       	ldi	r23, 0x03	; 3
     a60:	80 e0       	ldi	r24, 0x00	; 0
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
	while (eepromReadAttribute(container,sizeof(container),"TS",0) != 0){
		char *save_ptr1,*p1,flag;
		int i,found = 0;

		p1 = strtok_r(container,";",&save_ptr1);
		while (p1!= 0){
     a68:	00 97       	sbiw	r24, 0x00	; 0
     a6a:	09 f0       	breq	.+2      	; 0xa6e <_Z25initializeTimerSettingIdsv+0x120>
     a6c:	bf cf       	rjmp	.-130    	; 0x9ec <_Z25initializeTimerSettingIdsv+0x9e>
     a6e:	88 2d       	mov	r24, r8
     a70:	99 2d       	mov	r25, r9
     a72:	a6 01       	movw	r20, r12
				found += 1;
			}
			p1 = strtok_r(0,";",&save_ptr1);
		}

		if (found == 2){
     a74:	22 e0       	ldi	r18, 0x02	; 2
     a76:	e2 16       	cp	r14, r18
     a78:	f1 04       	cpc	r15, r1
     a7a:	11 f5       	brne	.+68     	; 0xac0 <_Z25initializeTimerSettingIdsv+0x172>
     a7c:	2d c0       	rjmp	.+90     	; 0xad8 <_Z25initializeTimerSettingIdsv+0x18a>
			flag = 1;
			for (i=0;i<MAX_RELAY_COUNT;i++){
				if (__timer_records[moduleId].relays[i] == relayId){
     a7e:	21 91       	ld	r18, Z+
     a80:	31 91       	ld	r19, Z+
     a82:	28 17       	cp	r18, r24
     a84:	39 07       	cpc	r19, r25
     a86:	09 f4       	brne	.+2      	; 0xa8a <_Z25initializeTimerSettingIdsv+0x13c>
					flag = 0;
     a88:	a7 2d       	mov	r26, r7
			p1 = strtok_r(0,";",&save_ptr1);
		}

		if (found == 2){
			flag = 1;
			for (i=0;i<MAX_RELAY_COUNT;i++){
     a8a:	e6 17       	cp	r30, r22
     a8c:	f7 07       	cpc	r31, r23
     a8e:	b9 f7       	brne	.-18     	; 0xa7e <_Z25initializeTimerSettingIdsv+0x130>
				if (__timer_records[moduleId].relays[i] == relayId){
					flag = 0;
				}
			}
			if (flag == 1){
     a90:	a1 30       	cpi	r26, 0x01	; 1
     a92:	b1 f4       	brne	.+44     	; 0xac0 <_Z25initializeTimerSettingIdsv+0x172>
				__timer_records[moduleId].relays[index++] = relayId;
     a94:	44 0f       	add	r20, r20
     a96:	55 1f       	adc	r21, r21
     a98:	fa 01       	movw	r30, r20
     a9a:	ee 0f       	add	r30, r30
     a9c:	ff 1f       	adc	r31, r31
     a9e:	ee 0f       	add	r30, r30
     aa0:	ff 1f       	adc	r31, r31
     aa2:	ee 0f       	add	r30, r30
     aa4:	ff 1f       	adc	r31, r31
     aa6:	e4 1b       	sub	r30, r20
     aa8:	f5 0b       	sbc	r31, r21
     aaa:	ea 0d       	add	r30, r10
     aac:	fb 1d       	adc	r31, r11
     aae:	ee 0f       	add	r30, r30
     ab0:	ff 1f       	adc	r31, r31
     ab2:	ee 5e       	subi	r30, 0xEE	; 238
     ab4:	f7 4f       	sbci	r31, 0xF7	; 247
     ab6:	91 83       	std	Z+1, r25	; 0x01
     ab8:	80 83       	st	Z, r24
     aba:	c5 01       	movw	r24, r10
     abc:	01 96       	adiw	r24, 0x01	; 1
     abe:	5c 01       	movw	r10, r24
			__timer_records[index].relays[j] = 254;
		}
	}

	__system_var.eeprom_position = 0;
	while (eepromReadAttribute(container,sizeof(container),"TS",0) != 0){
     ac0:	20 e0       	ldi	r18, 0x00	; 0
     ac2:	30 e0       	ldi	r19, 0x00	; 0
     ac4:	42 e7       	ldi	r20, 0x72	; 114
     ac6:	51 e0       	ldi	r21, 0x01	; 1
     ac8:	68 ec       	ldi	r22, 0xC8	; 200
     aca:	70 e0       	ldi	r23, 0x00	; 0
     acc:	ce 01       	movw	r24, r28
     ace:	01 96       	adiw	r24, 0x01	; 1
     ad0:	92 db       	rcall	.-2268   	; 0x1f6 <_Z19eepromReadAttributePciS_i>
     ad2:	81 11       	cpse	r24, r1
     ad4:	7d cf       	rjmp	.-262    	; 0x9d0 <_Z25initializeTimerSettingIdsv+0x82>
     ad6:	0c c0       	rjmp	.+24     	; 0xaf0 <_Z25initializeTimerSettingIdsv+0x1a2>
     ad8:	6c 9c       	mul	r6, r12
     ada:	b0 01       	movw	r22, r0
     adc:	6d 9c       	mul	r6, r13
     ade:	70 0d       	add	r23, r0
     ae0:	11 24       	eor	r1, r1
     ae2:	fb 01       	movw	r30, r22
     ae4:	ee 5e       	subi	r30, 0xEE	; 238
     ae6:	f7 4f       	sbci	r31, 0xF7	; 247
     ae8:	64 5d       	subi	r22, 0xD4	; 212
     aea:	77 4f       	sbci	r23, 0xF7	; 247
				found += 1;
			}
			p1 = strtok_r(0,";",&save_ptr1);
		}

		if (found == 2){
     aec:	a5 2d       	mov	r26, r5
     aee:	c7 cf       	rjmp	.-114    	; 0xa7e <_Z25initializeTimerSettingIdsv+0x130>
			if (flag == 1){
				__timer_records[moduleId].relays[index++] = relayId;
			}
		}
	}
}
     af0:	c4 53       	subi	r28, 0x34	; 52
     af2:	df 4f       	sbci	r29, 0xFF	; 255
     af4:	0f b6       	in	r0, 0x3f	; 63
     af6:	f8 94       	cli
     af8:	de bf       	out	0x3e, r29	; 62
     afa:	0f be       	out	0x3f, r0	; 63
     afc:	cd bf       	out	0x3d, r28	; 61
     afe:	df 91       	pop	r29
     b00:	cf 91       	pop	r28
     b02:	1f 91       	pop	r17
     b04:	0f 91       	pop	r16
     b06:	ff 90       	pop	r15
     b08:	ef 90       	pop	r14
     b0a:	df 90       	pop	r13
     b0c:	cf 90       	pop	r12
     b0e:	bf 90       	pop	r11
     b10:	af 90       	pop	r10
     b12:	9f 90       	pop	r9
     b14:	8f 90       	pop	r8
     b16:	7f 90       	pop	r7
     b18:	6f 90       	pop	r6
     b1a:	5f 90       	pop	r5
     b1c:	08 95       	ret

00000b1e <_Z15getTimerSettingii>:

int getTimerSetting(int moduleId, int relayId){
     b1e:	2f 92       	push	r2
     b20:	3f 92       	push	r3
     b22:	4f 92       	push	r4
     b24:	5f 92       	push	r5
     b26:	6f 92       	push	r6
     b28:	7f 92       	push	r7
     b2a:	8f 92       	push	r8
     b2c:	9f 92       	push	r9
     b2e:	af 92       	push	r10
     b30:	bf 92       	push	r11
     b32:	cf 92       	push	r12
     b34:	df 92       	push	r13
     b36:	ef 92       	push	r14
     b38:	ff 92       	push	r15
     b3a:	0f 93       	push	r16
     b3c:	1f 93       	push	r17
     b3e:	cf 93       	push	r28
     b40:	df 93       	push	r29
     b42:	cd b7       	in	r28, 0x3d	; 61
     b44:	de b7       	in	r29, 0x3e	; 62
     b46:	cc 56       	subi	r28, 0x6C	; 108
     b48:	d1 09       	sbc	r29, r1
     b4a:	0f b6       	in	r0, 0x3f	; 63
     b4c:	f8 94       	cli
     b4e:	de bf       	out	0x3e, r29	; 62
     b50:	0f be       	out	0x3f, r0	; 63
     b52:	cd bf       	out	0x3d, r28	; 61
     b54:	5c 01       	movw	r10, r24
     b56:	4b 01       	movw	r8, r22
     b58:	0f 2e       	mov	r0, r31
     b5a:	f8 e8       	ldi	r31, 0x88	; 136
     b5c:	6f 2e       	mov	r6, r31
     b5e:	f8 e0       	ldi	r31, 0x08	; 8
     b60:	7f 2e       	mov	r7, r31
     b62:	f0 2d       	mov	r31, r0
		char *save_ptr1;
		unsigned int i;
		
		p1 = strtok_r(container,";",&save_ptr1);
		for (i=0;i<sizeof(__timer_setting.start_week);i++){
			__timer_setting.start_week[i] = 254;
     b64:	0e ef       	ldi	r16, 0xFE	; 254
     b66:	10 e0       	ldi	r17, 0x00	; 0
     b68:	0f 2e       	mov	r0, r31
     b6a:	fa e9       	ldi	r31, 0x9A	; 154
     b6c:	4f 2e       	mov	r4, r31
     b6e:	f8 e0       	ldi	r31, 0x08	; 8
     b70:	5f 2e       	mov	r5, r31
     b72:	f0 2d       	mov	r31, r0
				} else if (strstr(p2,"EW")){
				char *p3, *save_ptr3; int i=0;
				p2 = strtok_r(0,":",&save_ptr2);
				p3 = strtok_r(p2,",",&save_ptr3);

				while (p3 != 0){
     b74:	ac 96       	adiw	r28, 0x2c	; 44
     b76:	4f ae       	std	Y+63, r4	; 0x3f
     b78:	ac 97       	sbiw	r28, 0x2c	; 44
     b7a:	ad 96       	adiw	r28, 0x2d	; 45
     b7c:	5f ae       	std	Y+63, r5	; 0x3f
     b7e:	ad 97       	sbiw	r28, 0x2d	; 45

				} else if (strstr(p2,"SW")){
				char *p3, *save_ptr3; int i=0;
				p2 = strtok_r(0,":",&save_ptr2);
				p3 = strtok_r(p2,",",&save_ptr3);
				while (p3 != 0){
     b80:	36 2c       	mov	r3, r6
     b82:	27 2c       	mov	r2, r7
}

int getTimerSetting(int moduleId, int relayId){
	char container[100]; char *p1;

	while (eepromReadAttribute(container,sizeof(container),"TS",0) != 0){
     b84:	12 c1       	rjmp	.+548    	; 0xdaa <_Z15getTimerSettingii+0x28c>

		char *save_ptr1;
		unsigned int i;
		
		p1 = strtok_r(container,";",&save_ptr1);
     b86:	ae 01       	movw	r20, r28
     b88:	47 59       	subi	r20, 0x97	; 151
     b8a:	5f 4f       	sbci	r21, 0xFF	; 255
     b8c:	60 ec       	ldi	r22, 0xC0	; 192
     b8e:	73 e0       	ldi	r23, 0x03	; 3
     b90:	ce 01       	movw	r24, r28
     b92:	01 96       	adiw	r24, 0x01	; 1
     b94:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
     b98:	28 ea       	ldi	r18, 0xA8	; 168
     b9a:	38 e0       	ldi	r19, 0x08	; 8
     b9c:	f3 01       	movw	r30, r6
		for (i=0;i<sizeof(__timer_setting.start_week);i++){
			__timer_setting.start_week[i] = 254;
     b9e:	01 93       	st	Z+, r16
     ba0:	11 93       	st	Z+, r17

		char *save_ptr1;
		unsigned int i;
		
		p1 = strtok_r(container,";",&save_ptr1);
		for (i=0;i<sizeof(__timer_setting.start_week);i++){
     ba2:	e2 17       	cp	r30, r18
     ba4:	f3 07       	cpc	r31, r19
     ba6:	d9 f7       	brne	.-10     	; 0xb9e <_Z15getTimerSettingii+0x80>
     ba8:	2a eb       	ldi	r18, 0xBA	; 186
     baa:	38 e0       	ldi	r19, 0x08	; 8
     bac:	f2 01       	movw	r30, r4
			__timer_setting.start_week[i] = 254;
		}
		for (i=0;i<sizeof(__timer_setting.end_week);i++){
			__timer_setting.end_week[i] = 254;
     bae:	01 93       	st	Z+, r16
     bb0:	11 93       	st	Z+, r17
		
		p1 = strtok_r(container,";",&save_ptr1);
		for (i=0;i<sizeof(__timer_setting.start_week);i++){
			__timer_setting.start_week[i] = 254;
		}
		for (i=0;i<sizeof(__timer_setting.end_week);i++){
     bb2:	e2 17       	cp	r30, r18
     bb4:	f3 07       	cpc	r31, r19
     bb6:	d9 f7       	brne	.-10     	; 0xbae <_Z15getTimerSettingii+0x90>
			__timer_setting.end_week[i] = 254;
		}

		while (p1!= 0){
     bb8:	00 97       	sbiw	r24, 0x00	; 0
     bba:	09 f4       	brne	.+2      	; 0xbbe <_Z15getTimerSettingii+0xa0>
     bbc:	e5 c0       	rjmp	.+458    	; 0xd88 <_Z15getTimerSettingii+0x26a>
			char *p2,*save_ptr2;

			p2 = strtok_r(p1,":",&save_ptr2);
			if (strstr(p2,"MI")){
				p2 = strtok_r(0,":",&save_ptr2);
				__timer_setting.module_id = atoi(p2);
     bbe:	0f 2e       	mov	r0, r31
     bc0:	f0 e8       	ldi	r31, 0x80	; 128
     bc2:	cf 2e       	mov	r12, r31
     bc4:	f8 e0       	ldi	r31, 0x08	; 8
     bc6:	df 2e       	mov	r13, r31
     bc8:	f0 2d       	mov	r31, r0
		}

		while (p1!= 0){
			char *p2,*save_ptr2;

			p2 = strtok_r(p1,":",&save_ptr2);
     bca:	ae 01       	movw	r20, r28
     bcc:	49 59       	subi	r20, 0x99	; 153
     bce:	5f 4f       	sbci	r21, 0xFF	; 255
     bd0:	66 e3       	ldi	r22, 0x36	; 54
     bd2:	71 e0       	ldi	r23, 0x01	; 1
     bd4:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
     bd8:	7c 01       	movw	r14, r24
			if (strstr(p2,"MI")){
     bda:	6b e3       	ldi	r22, 0x3B	; 59
     bdc:	71 e0       	ldi	r23, 0x01	; 1
     bde:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
     be2:	89 2b       	or	r24, r25
     be4:	79 f0       	breq	.+30     	; 0xc04 <_Z15getTimerSettingii+0xe6>
				p2 = strtok_r(0,":",&save_ptr2);
     be6:	ae 01       	movw	r20, r28
     be8:	49 59       	subi	r20, 0x99	; 153
     bea:	5f 4f       	sbci	r21, 0xFF	; 255
     bec:	66 e3       	ldi	r22, 0x36	; 54
     bee:	71 e0       	ldi	r23, 0x01	; 1
     bf0:	80 e0       	ldi	r24, 0x00	; 0
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
				__timer_setting.module_id = atoi(p2);
     bf8:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
     bfc:	f6 01       	movw	r30, r12
     bfe:	91 83       	std	Z+1, r25	; 0x01
     c00:	80 83       	st	Z, r24
     c02:	b6 c0       	rjmp	.+364    	; 0xd70 <_Z15getTimerSettingii+0x252>

				} else if (strstr(p2,"RI")){
     c04:	6e e3       	ldi	r22, 0x3E	; 62
     c06:	71 e0       	ldi	r23, 0x01	; 1
     c08:	c7 01       	movw	r24, r14
     c0a:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
     c0e:	89 2b       	or	r24, r25
     c10:	79 f0       	breq	.+30     	; 0xc30 <_Z15getTimerSettingii+0x112>
				p2 = strtok_r(0,":",&save_ptr2);
     c12:	ae 01       	movw	r20, r28
     c14:	49 59       	subi	r20, 0x99	; 153
     c16:	5f 4f       	sbci	r21, 0xFF	; 255
     c18:	66 e3       	ldi	r22, 0x36	; 54
     c1a:	71 e0       	ldi	r23, 0x01	; 1
     c1c:	80 e0       	ldi	r24, 0x00	; 0
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
				__timer_setting.relay_id = atoi(p2);
     c24:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
     c28:	f6 01       	movw	r30, r12
     c2a:	93 83       	std	Z+3, r25	; 0x03
     c2c:	82 83       	std	Z+2, r24	; 0x02
     c2e:	a0 c0       	rjmp	.+320    	; 0xd70 <_Z15getTimerSettingii+0x252>

				} else if (strstr(p2,"TI")){
     c30:	65 e7       	ldi	r22, 0x75	; 117
     c32:	71 e0       	ldi	r23, 0x01	; 1
     c34:	c7 01       	movw	r24, r14
     c36:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
     c3a:	89 2b       	or	r24, r25
     c3c:	79 f0       	breq	.+30     	; 0xc5c <_Z15getTimerSettingii+0x13e>
				p2 = strtok_r(0,":",&save_ptr2);
     c3e:	ae 01       	movw	r20, r28
     c40:	49 59       	subi	r20, 0x99	; 153
     c42:	5f 4f       	sbci	r21, 0xFF	; 255
     c44:	66 e3       	ldi	r22, 0x36	; 54
     c46:	71 e0       	ldi	r23, 0x01	; 1
     c48:	80 e0       	ldi	r24, 0x00	; 0
     c4a:	90 e0       	ldi	r25, 0x00	; 0
     c4c:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
				__timer_setting.timer_id = atoi(p2);
     c50:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
     c54:	f6 01       	movw	r30, r12
     c56:	95 83       	std	Z+5, r25	; 0x05
     c58:	84 83       	std	Z+4, r24	; 0x04
     c5a:	8a c0       	rjmp	.+276    	; 0xd70 <_Z15getTimerSettingii+0x252>

				} else if (strstr(p2,"ST")){
     c5c:	66 e6       	ldi	r22, 0x66	; 102
     c5e:	73 e0       	ldi	r23, 0x03	; 3
     c60:	c7 01       	movw	r24, r14
     c62:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
     c66:	89 2b       	or	r24, r25
     c68:	79 f0       	breq	.+30     	; 0xc88 <_Z15getTimerSettingii+0x16a>
				p2 = strtok_r(0,":",&save_ptr2);
     c6a:	ae 01       	movw	r20, r28
     c6c:	49 59       	subi	r20, 0x99	; 153
     c6e:	5f 4f       	sbci	r21, 0xFF	; 255
     c70:	66 e3       	ldi	r22, 0x36	; 54
     c72:	71 e0       	ldi	r23, 0x01	; 1
     c74:	80 e0       	ldi	r24, 0x00	; 0
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
				__timer_setting.start_timer = atoi(p2);
     c7c:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
     c80:	f6 01       	movw	r30, r12
     c82:	97 83       	std	Z+7, r25	; 0x07
     c84:	86 83       	std	Z+6, r24	; 0x06
     c86:	74 c0       	rjmp	.+232    	; 0xd70 <_Z15getTimerSettingii+0x252>

				} else if (strstr(p2,"SW")){
     c88:	68 e7       	ldi	r22, 0x78	; 120
     c8a:	71 e0       	ldi	r23, 0x01	; 1
     c8c:	c7 01       	movw	r24, r14
     c8e:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
     c92:	89 2b       	or	r24, r25
     c94:	39 f1       	breq	.+78     	; 0xce4 <_Z15getTimerSettingii+0x1c6>
				char *p3, *save_ptr3; int i=0;
				p2 = strtok_r(0,":",&save_ptr2);
     c96:	ae 01       	movw	r20, r28
     c98:	49 59       	subi	r20, 0x99	; 153
     c9a:	5f 4f       	sbci	r21, 0xFF	; 255
     c9c:	66 e3       	ldi	r22, 0x36	; 54
     c9e:	71 e0       	ldi	r23, 0x01	; 1
     ca0:	80 e0       	ldi	r24, 0x00	; 0
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
				p3 = strtok_r(p2,",",&save_ptr3);
     ca8:	ae 01       	movw	r20, r28
     caa:	4b 59       	subi	r20, 0x9B	; 155
     cac:	5f 4f       	sbci	r21, 0xFF	; 255
     cae:	6e e4       	ldi	r22, 0x4E	; 78
     cb0:	73 e0       	ldi	r23, 0x03	; 3
     cb2:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
				while (p3 != 0){
     cb6:	00 97       	sbiw	r24, 0x00	; 0
     cb8:	09 f4       	brne	.+2      	; 0xcbc <_Z15getTimerSettingii+0x19e>
     cba:	5a c0       	rjmp	.+180    	; 0xd70 <_Z15getTimerSettingii+0x252>
     cbc:	e3 2c       	mov	r14, r3
     cbe:	f2 2c       	mov	r15, r2
					__timer_setting.start_week[i++] = atoi(p3);
     cc0:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
     cc4:	f7 01       	movw	r30, r14
     cc6:	81 93       	st	Z+, r24
     cc8:	91 93       	st	Z+, r25
     cca:	7f 01       	movw	r14, r30
					p3 = strtok_r(0,",",&save_ptr3);
     ccc:	ae 01       	movw	r20, r28
     cce:	4b 59       	subi	r20, 0x9B	; 155
     cd0:	5f 4f       	sbci	r21, 0xFF	; 255
     cd2:	6e e4       	ldi	r22, 0x4E	; 78
     cd4:	73 e0       	ldi	r23, 0x03	; 3
     cd6:	80 e0       	ldi	r24, 0x00	; 0
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>

				} else if (strstr(p2,"SW")){
				char *p3, *save_ptr3; int i=0;
				p2 = strtok_r(0,":",&save_ptr2);
				p3 = strtok_r(p2,",",&save_ptr3);
				while (p3 != 0){
     cde:	00 97       	sbiw	r24, 0x00	; 0
     ce0:	79 f7       	brne	.-34     	; 0xcc0 <_Z15getTimerSettingii+0x1a2>
     ce2:	46 c0       	rjmp	.+140    	; 0xd70 <_Z15getTimerSettingii+0x252>
					__timer_setting.start_week[i++] = atoi(p3);
					p3 = strtok_r(0,",",&save_ptr3);
				}
				} else if (strstr(p2,"ET")){
     ce4:	6b e7       	ldi	r22, 0x7B	; 123
     ce6:	71 e0       	ldi	r23, 0x01	; 1
     ce8:	c7 01       	movw	r24, r14
     cea:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
     cee:	89 2b       	or	r24, r25
     cf0:	79 f0       	breq	.+30     	; 0xd10 <_Z15getTimerSettingii+0x1f2>
				p2 = strtok_r(0,":",&save_ptr2);
     cf2:	ae 01       	movw	r20, r28
     cf4:	49 59       	subi	r20, 0x99	; 153
     cf6:	5f 4f       	sbci	r21, 0xFF	; 255
     cf8:	66 e3       	ldi	r22, 0x36	; 54
     cfa:	71 e0       	ldi	r23, 0x01	; 1
     cfc:	80 e0       	ldi	r24, 0x00	; 0
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
				__timer_setting.end_timer = atoi(p2);
     d04:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
     d08:	f6 01       	movw	r30, r12
     d0a:	91 8f       	std	Z+25, r25	; 0x19
     d0c:	80 8f       	std	Z+24, r24	; 0x18
     d0e:	30 c0       	rjmp	.+96     	; 0xd70 <_Z15getTimerSettingii+0x252>

				} else if (strstr(p2,"EW")){
     d10:	6e e7       	ldi	r22, 0x7E	; 126
     d12:	71 e0       	ldi	r23, 0x01	; 1
     d14:	c7 01       	movw	r24, r14
     d16:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
     d1a:	89 2b       	or	r24, r25
     d1c:	49 f1       	breq	.+82     	; 0xd70 <_Z15getTimerSettingii+0x252>
				char *p3, *save_ptr3; int i=0;
				p2 = strtok_r(0,":",&save_ptr2);
     d1e:	ae 01       	movw	r20, r28
     d20:	49 59       	subi	r20, 0x99	; 153
     d22:	5f 4f       	sbci	r21, 0xFF	; 255
     d24:	66 e3       	ldi	r22, 0x36	; 54
     d26:	71 e0       	ldi	r23, 0x01	; 1
     d28:	80 e0       	ldi	r24, 0x00	; 0
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
				p3 = strtok_r(p2,",",&save_ptr3);
     d30:	ae 01       	movw	r20, r28
     d32:	4b 59       	subi	r20, 0x9B	; 155
     d34:	5f 4f       	sbci	r21, 0xFF	; 255
     d36:	6e e4       	ldi	r22, 0x4E	; 78
     d38:	73 e0       	ldi	r23, 0x03	; 3
     d3a:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>

				while (p3 != 0){
     d3e:	00 97       	sbiw	r24, 0x00	; 0
     d40:	b9 f0       	breq	.+46     	; 0xd70 <_Z15getTimerSettingii+0x252>
     d42:	ac 96       	adiw	r28, 0x2c	; 44
     d44:	ef ac       	ldd	r14, Y+63	; 0x3f
     d46:	ac 97       	sbiw	r28, 0x2c	; 44
     d48:	ad 96       	adiw	r28, 0x2d	; 45
     d4a:	ff ac       	ldd	r15, Y+63	; 0x3f
     d4c:	ad 97       	sbiw	r28, 0x2d	; 45
					__timer_setting.end_week[i++] = atoi(p3);
     d4e:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
     d52:	f7 01       	movw	r30, r14
     d54:	81 93       	st	Z+, r24
     d56:	91 93       	st	Z+, r25
     d58:	7f 01       	movw	r14, r30
					p3 = strtok_r(0,",",&save_ptr3);
     d5a:	ae 01       	movw	r20, r28
     d5c:	4b 59       	subi	r20, 0x9B	; 155
     d5e:	5f 4f       	sbci	r21, 0xFF	; 255
     d60:	6e e4       	ldi	r22, 0x4E	; 78
     d62:	73 e0       	ldi	r23, 0x03	; 3
     d64:	80 e0       	ldi	r24, 0x00	; 0
     d66:	90 e0       	ldi	r25, 0x00	; 0
     d68:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
				} else if (strstr(p2,"EW")){
				char *p3, *save_ptr3; int i=0;
				p2 = strtok_r(0,":",&save_ptr2);
				p3 = strtok_r(p2,",",&save_ptr3);

				while (p3 != 0){
     d6c:	00 97       	sbiw	r24, 0x00	; 0
     d6e:	79 f7       	brne	.-34     	; 0xd4e <_Z15getTimerSettingii+0x230>
					__timer_setting.end_week[i++] = atoi(p3);
					p3 = strtok_r(0,",",&save_ptr3);
				}
			}
			p1 = strtok_r(0,";",&save_ptr1);
     d70:	ae 01       	movw	r20, r28
     d72:	47 59       	subi	r20, 0x97	; 151
     d74:	5f 4f       	sbci	r21, 0xFF	; 255
     d76:	60 ec       	ldi	r22, 0xC0	; 192
     d78:	73 e0       	ldi	r23, 0x03	; 3
     d7a:	80 e0       	ldi	r24, 0x00	; 0
     d7c:	90 e0       	ldi	r25, 0x00	; 0
     d7e:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
		}
		for (i=0;i<sizeof(__timer_setting.end_week);i++){
			__timer_setting.end_week[i] = 254;
		}

		while (p1!= 0){
     d82:	00 97       	sbiw	r24, 0x00	; 0
     d84:	09 f0       	breq	.+2      	; 0xd88 <_Z15getTimerSettingii+0x26a>
     d86:	21 cf       	rjmp	.-446    	; 0xbca <_Z15getTimerSettingii+0xac>
				}
			}
			p1 = strtok_r(0,";",&save_ptr1);
		}	

		if (__timer_setting.module_id == moduleId && __timer_setting.relay_id == relayId){
     d88:	80 91 80 08 	lds	r24, 0x0880	; 0x800880 <__timer_setting>
     d8c:	90 91 81 08 	lds	r25, 0x0881	; 0x800881 <__timer_setting+0x1>
     d90:	8a 15       	cp	r24, r10
     d92:	9b 05       	cpc	r25, r11
     d94:	51 f4       	brne	.+20     	; 0xdaa <_Z15getTimerSettingii+0x28c>
     d96:	80 91 82 08 	lds	r24, 0x0882	; 0x800882 <__timer_setting+0x2>
     d9a:	90 91 83 08 	lds	r25, 0x0883	; 0x800883 <__timer_setting+0x3>
     d9e:	88 15       	cp	r24, r8
     da0:	99 05       	cpc	r25, r9
     da2:	19 f4       	brne	.+6      	; 0xdaa <_Z15getTimerSettingii+0x28c>
			return 1;
     da4:	81 e0       	ldi	r24, 0x01	; 1
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	0d c0       	rjmp	.+26     	; 0xdc4 <_Z15getTimerSettingii+0x2a6>
}

int getTimerSetting(int moduleId, int relayId){
	char container[100]; char *p1;

	while (eepromReadAttribute(container,sizeof(container),"TS",0) != 0){
     daa:	20 e0       	ldi	r18, 0x00	; 0
     dac:	30 e0       	ldi	r19, 0x00	; 0
     dae:	42 e7       	ldi	r20, 0x72	; 114
     db0:	51 e0       	ldi	r21, 0x01	; 1
     db2:	64 e6       	ldi	r22, 0x64	; 100
     db4:	70 e0       	ldi	r23, 0x00	; 0
     db6:	ce 01       	movw	r24, r28
     db8:	01 96       	adiw	r24, 0x01	; 1
     dba:	1d da       	rcall	.-3014   	; 0x1f6 <_Z19eepromReadAttributePciS_i>
     dbc:	81 11       	cpse	r24, r1
     dbe:	e3 ce       	rjmp	.-570    	; 0xb86 <_Z15getTimerSettingii+0x68>
		if (__timer_setting.module_id == moduleId && __timer_setting.relay_id == relayId){
			return 1;
		}
	}

	return 0;
     dc0:	80 e0       	ldi	r24, 0x00	; 0
     dc2:	90 e0       	ldi	r25, 0x00	; 0
}
     dc4:	c4 59       	subi	r28, 0x94	; 148
     dc6:	df 4f       	sbci	r29, 0xFF	; 255
     dc8:	0f b6       	in	r0, 0x3f	; 63
     dca:	f8 94       	cli
     dcc:	de bf       	out	0x3e, r29	; 62
     dce:	0f be       	out	0x3f, r0	; 63
     dd0:	cd bf       	out	0x3d, r28	; 61
     dd2:	df 91       	pop	r29
     dd4:	cf 91       	pop	r28
     dd6:	1f 91       	pop	r17
     dd8:	0f 91       	pop	r16
     dda:	ff 90       	pop	r15
     ddc:	ef 90       	pop	r14
     dde:	df 90       	pop	r13
     de0:	cf 90       	pop	r12
     de2:	bf 90       	pop	r11
     de4:	af 90       	pop	r10
     de6:	9f 90       	pop	r9
     de8:	8f 90       	pop	r8
     dea:	7f 90       	pop	r7
     dec:	6f 90       	pop	r6
     dee:	5f 90       	pop	r5
     df0:	4f 90       	pop	r4
     df2:	3f 90       	pop	r3
     df4:	2f 90       	pop	r2
     df6:	08 95       	ret

00000df8 <_Z20isCurrentTimerActivev>:

int isCurrentTimerActive(){
     df8:	ef 92       	push	r14
     dfa:	ff 92       	push	r15
     dfc:	0f 93       	push	r16
     dfe:	1f 93       	push	r17
     e00:	cf 93       	push	r28
     e02:	df 93       	push	r29
	int currentMin = __system_time._hour * 60 + __system_time._min + (__system_time._day_of_week * 24 * 60);
     e04:	ee ee       	ldi	r30, 0xEE	; 238
     e06:	f8 e0       	ldi	r31, 0x08	; 8
     e08:	80 85       	ldd	r24, Z+8	; 0x08
     e0a:	91 85       	ldd	r25, Z+9	; 0x09
     e0c:	2c e3       	ldi	r18, 0x3C	; 60
     e0e:	28 9f       	mul	r18, r24
     e10:	b0 01       	movw	r22, r0
     e12:	29 9f       	mul	r18, r25
     e14:	70 0d       	add	r23, r0
     e16:	11 24       	eor	r1, r1
     e18:	82 85       	ldd	r24, Z+10	; 0x0a
     e1a:	93 85       	ldd	r25, Z+11	; 0x0b
     e1c:	68 0f       	add	r22, r24
     e1e:	79 1f       	adc	r23, r25
     e20:	46 81       	ldd	r20, Z+6	; 0x06
     e22:	57 81       	ldd	r21, Z+7	; 0x07
     e24:	20 ea       	ldi	r18, 0xA0	; 160
     e26:	35 e0       	ldi	r19, 0x05	; 5
     e28:	42 9f       	mul	r20, r18
     e2a:	c0 01       	movw	r24, r0
     e2c:	43 9f       	mul	r20, r19
     e2e:	90 0d       	add	r25, r0
     e30:	52 9f       	mul	r21, r18
     e32:	90 0d       	add	r25, r0
     e34:	11 24       	eor	r1, r1
     e36:	68 0f       	add	r22, r24
     e38:	79 1f       	adc	r23, r25
	USART0_SendString("\n");
	USART0_SendString("\n");*/
	
	for (i=0;i<7;i++){
		if (__timer_setting.start_week[i] != 254 && __timer_setting.end_week[i] != 254){
			int startTimer = (__timer_setting.start_week[i] * 24 * 60) + __timer_setting.start_timer;
     e3a:	e0 e8       	ldi	r30, 0x80	; 128
     e3c:	f8 e0       	ldi	r31, 0x08	; 8
     e3e:	06 81       	ldd	r16, Z+6	; 0x06
     e40:	17 81       	ldd	r17, Z+7	; 0x07
			int endTimer = (__timer_setting.end_week[i] * 24 * 60) + __timer_setting.end_timer;
     e42:	e0 8c       	ldd	r14, Z+24	; 0x18
     e44:	f1 8c       	ldd	r15, Z+25	; 0x19
     e46:	e8 e8       	ldi	r30, 0x88	; 136
     e48:	f8 e0       	ldi	r31, 0x08	; 8
     e4a:	a6 e9       	ldi	r26, 0x96	; 150
     e4c:	b8 e0       	ldi	r27, 0x08	; 8
	USART0_SendString("\n");
	USART0_SendString("\n");*/
	
	for (i=0;i<7;i++){
		if (__timer_setting.start_week[i] != 254 && __timer_setting.end_week[i] != 254){
			int startTimer = (__timer_setting.start_week[i] * 24 * 60) + __timer_setting.start_timer;
     e4e:	c0 ea       	ldi	r28, 0xA0	; 160
     e50:	d5 e0       	ldi	r29, 0x05	; 5
	USART0_SendString(conv);
	USART0_SendString("\n");
	USART0_SendString("\n");*/
	
	for (i=0;i<7;i++){
		if (__timer_setting.start_week[i] != 254 && __timer_setting.end_week[i] != 254){
     e52:	81 91       	ld	r24, Z+
     e54:	91 91       	ld	r25, Z+
     e56:	8e 3f       	cpi	r24, 0xFE	; 254
     e58:	91 05       	cpc	r25, r1
     e5a:	19 f1       	breq	.+70     	; 0xea2 <_Z20isCurrentTimerActivev+0xaa>
     e5c:	40 89       	ldd	r20, Z+16	; 0x10
     e5e:	51 89       	ldd	r21, Z+17	; 0x11
     e60:	4e 3f       	cpi	r20, 0xFE	; 254
     e62:	51 05       	cpc	r21, r1
     e64:	f1 f0       	breq	.+60     	; 0xea2 <_Z20isCurrentTimerActivev+0xaa>
			int startTimer = (__timer_setting.start_week[i] * 24 * 60) + __timer_setting.start_timer;
     e66:	8c 9f       	mul	r24, r28
     e68:	90 01       	movw	r18, r0
     e6a:	8d 9f       	mul	r24, r29
     e6c:	30 0d       	add	r19, r0
     e6e:	9c 9f       	mul	r25, r28
     e70:	30 0d       	add	r19, r0
     e72:	11 24       	eor	r1, r1
     e74:	c9 01       	movw	r24, r18
     e76:	80 0f       	add	r24, r16
     e78:	91 1f       	adc	r25, r17
			int endTimer = (__timer_setting.end_week[i] * 24 * 60) + __timer_setting.end_timer;

			if (currentMin >= startTimer && currentMin < endTimer){
     e7a:	68 17       	cp	r22, r24
     e7c:	79 07       	cpc	r23, r25
     e7e:	8c f0       	brlt	.+34     	; 0xea2 <_Z20isCurrentTimerActivev+0xaa>
	USART0_SendString("\n");*/
	
	for (i=0;i<7;i++){
		if (__timer_setting.start_week[i] != 254 && __timer_setting.end_week[i] != 254){
			int startTimer = (__timer_setting.start_week[i] * 24 * 60) + __timer_setting.start_timer;
			int endTimer = (__timer_setting.end_week[i] * 24 * 60) + __timer_setting.end_timer;
     e80:	4c 9f       	mul	r20, r28
     e82:	c0 01       	movw	r24, r0
     e84:	4d 9f       	mul	r20, r29
     e86:	90 0d       	add	r25, r0
     e88:	5c 9f       	mul	r21, r28
     e8a:	90 0d       	add	r25, r0
     e8c:	11 24       	eor	r1, r1
     e8e:	8e 0d       	add	r24, r14
     e90:	9f 1d       	adc	r25, r15

			if (currentMin >= startTimer && currentMin < endTimer){
     e92:	68 17       	cp	r22, r24
     e94:	79 07       	cpc	r23, r25
     e96:	2c f4       	brge	.+10     	; 0xea2 <_Z20isCurrentTimerActivev+0xaa>
				return TRUE;
     e98:	80 91 b3 03 	lds	r24, 0x03B3	; 0x8003b3 <TRUE>
     e9c:	90 91 b4 03 	lds	r25, 0x03B4	; 0x8003b4 <TRUE+0x1>
     ea0:	07 c0       	rjmp	.+14     	; 0xeb0 <_Z20isCurrentTimerActivev+0xb8>
	itoa(__timer_setting.end_timer,conv,10);
	USART0_SendString(conv);
	USART0_SendString("\n");
	USART0_SendString("\n");*/
	
	for (i=0;i<7;i++){
     ea2:	ea 17       	cp	r30, r26
     ea4:	fb 07       	cpc	r31, r27
     ea6:	a9 f6       	brne	.-86     	; 0xe52 <_Z20isCurrentTimerActivev+0x5a>
			if (currentMin >= startTimer && currentMin < endTimer){
				return TRUE;
			}
		}
	}
	return FALSE;
     ea8:	80 91 b1 03 	lds	r24, 0x03B1	; 0x8003b1 <FALSE>
     eac:	90 91 b2 03 	lds	r25, 0x03B2	; 0x8003b2 <FALSE+0x1>
}
     eb0:	df 91       	pop	r29
     eb2:	cf 91       	pop	r28
     eb4:	1f 91       	pop	r17
     eb6:	0f 91       	pop	r16
     eb8:	ff 90       	pop	r15
     eba:	ef 90       	pop	r14
     ebc:	08 95       	ret

00000ebe <__vector_28>:
		return FALSE;
	}

	//UART2_Write_Text("AT+CIFSR\r");
	//readUntil("OK",10,GPRS);
}
     ebe:	1f 92       	push	r1
     ec0:	0f 92       	push	r0
     ec2:	0f b6       	in	r0, 0x3f	; 63
     ec4:	0f 92       	push	r0
     ec6:	11 24       	eor	r1, r1
     ec8:	0b b6       	in	r0, 0x3b	; 59
     eca:	0f 92       	push	r0
     ecc:	2f 93       	push	r18
     ece:	3f 93       	push	r19
     ed0:	4f 93       	push	r20
     ed2:	8f 93       	push	r24
     ed4:	9f 93       	push	r25
     ed6:	ef 93       	push	r30
     ed8:	ff 93       	push	r31
     eda:	40 91 ce 00 	lds	r20, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     ede:	80 91 84 0c 	lds	r24, 0x0C84	; 0x800c84 <__network_data+0x372>
     ee2:	90 91 85 0c 	lds	r25, 0x0C85	; 0x800c85 <__network_data+0x373>
     ee6:	85 3c       	cpi	r24, 0xC5	; 197
     ee8:	91 05       	cpc	r25, r1
     eea:	20 f0       	brcs	.+8      	; 0xef4 <__vector_28+0x36>
     eec:	10 92 85 0c 	sts	0x0C85, r1	; 0x800c85 <__network_data+0x373>
     ef0:	10 92 84 0c 	sts	0x0C84, r1	; 0x800c84 <__network_data+0x372>
     ef4:	e4 e8       	ldi	r30, 0x84	; 132
     ef6:	fc e0       	ldi	r31, 0x0C	; 12
     ef8:	80 81       	ld	r24, Z
     efa:	91 81       	ldd	r25, Z+1	; 0x01
     efc:	9c 01       	movw	r18, r24
     efe:	2f 5f       	subi	r18, 0xFF	; 255
     f00:	3f 4f       	sbci	r19, 0xFF	; 255
     f02:	31 83       	std	Z+1, r19	; 0x01
     f04:	20 83       	st	Z, r18
     f06:	fc 01       	movw	r30, r24
     f08:	e8 54       	subi	r30, 0x48	; 72
     f0a:	f4 4f       	sbci	r31, 0xF4	; 244
     f0c:	40 83       	st	Z, r20
     f0e:	4d 30       	cpi	r20, 0x0D	; 13
     f10:	21 f0       	breq	.+8      	; 0xf1a <__vector_28+0x5c>
     f12:	4a 30       	cpi	r20, 0x0A	; 10
     f14:	11 f0       	breq	.+4      	; 0xf1a <__vector_28+0x5c>
     f16:	41 11       	cpse	r20, r1
     f18:	07 c0       	rjmp	.+14     	; 0xf28 <__vector_28+0x6a>
     f1a:	81 e0       	ldi	r24, 0x01	; 1
     f1c:	80 93 81 0c 	sts	0x0C81, r24	; 0x800c81 <__network_data+0x36f>
     f20:	f9 01       	movw	r30, r18
     f22:	ec 53       	subi	r30, 0x3C	; 60
     f24:	f6 4f       	sbci	r31, 0xF6	; 246
     f26:	10 82       	st	Z, r1
     f28:	ff 91       	pop	r31
     f2a:	ef 91       	pop	r30
     f2c:	9f 91       	pop	r25
     f2e:	8f 91       	pop	r24
     f30:	4f 91       	pop	r20
     f32:	3f 91       	pop	r19
     f34:	2f 91       	pop	r18
     f36:	0f 90       	pop	r0
     f38:	0b be       	out	0x3b, r0	; 59
     f3a:	0f 90       	pop	r0
     f3c:	0f be       	out	0x3f, r0	; 63
     f3e:	0f 90       	pop	r0
     f40:	1f 90       	pop	r1
     f42:	18 95       	reti

00000f44 <__vector_20>:
     f44:	1f 92       	push	r1
     f46:	0f 92       	push	r0
     f48:	0f b6       	in	r0, 0x3f	; 63
     f4a:	0f 92       	push	r0
     f4c:	11 24       	eor	r1, r1
     f4e:	0b b6       	in	r0, 0x3b	; 59
     f50:	0f 92       	push	r0
     f52:	2f 93       	push	r18
     f54:	3f 93       	push	r19
     f56:	4f 93       	push	r20
     f58:	8f 93       	push	r24
     f5a:	9f 93       	push	r25
     f5c:	ef 93       	push	r30
     f5e:	ff 93       	push	r31
     f60:	40 91 c6 00 	lds	r20, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     f64:	80 91 82 0c 	lds	r24, 0x0C82	; 0x800c82 <__network_data+0x370>
     f68:	90 91 83 0c 	lds	r25, 0x0C83	; 0x800c83 <__network_data+0x371>
     f6c:	81 3f       	cpi	r24, 0xF1	; 241
     f6e:	91 40       	sbci	r25, 0x01	; 1
     f70:	20 f0       	brcs	.+8      	; 0xf7a <__vector_20+0x36>
     f72:	10 92 83 0c 	sts	0x0C83, r1	; 0x800c83 <__network_data+0x371>
     f76:	10 92 82 0c 	sts	0x0C82, r1	; 0x800c82 <__network_data+0x370>
     f7a:	e2 e8       	ldi	r30, 0x82	; 130
     f7c:	fc e0       	ldi	r31, 0x0C	; 12
     f7e:	80 81       	ld	r24, Z
     f80:	91 81       	ldd	r25, Z+1	; 0x01
     f82:	9c 01       	movw	r18, r24
     f84:	2f 5f       	subi	r18, 0xFF	; 255
     f86:	3f 4f       	sbci	r19, 0xFF	; 255
     f88:	31 83       	std	Z+1, r19	; 0x01
     f8a:	20 83       	st	Z, r18
     f8c:	fc 01       	movw	r30, r24
     f8e:	ec 53       	subi	r30, 0x3C	; 60
     f90:	f6 4f       	sbci	r31, 0xF6	; 246
     f92:	40 83       	st	Z, r20
     f94:	4d 30       	cpi	r20, 0x0D	; 13
     f96:	21 f0       	breq	.+8      	; 0xfa0 <__vector_20+0x5c>
     f98:	4a 30       	cpi	r20, 0x0A	; 10
     f9a:	11 f0       	breq	.+4      	; 0xfa0 <__vector_20+0x5c>
     f9c:	41 11       	cpse	r20, r1
     f9e:	07 c0       	rjmp	.+14     	; 0xfae <__vector_20+0x6a>
     fa0:	81 e0       	ldi	r24, 0x01	; 1
     fa2:	80 93 80 0c 	sts	0x0C80, r24	; 0x800c80 <__network_data+0x36e>
     fa6:	f9 01       	movw	r30, r18
     fa8:	ec 53       	subi	r30, 0x3C	; 60
     faa:	f6 4f       	sbci	r31, 0xF6	; 246
     fac:	10 82       	st	Z, r1
     fae:	ff 91       	pop	r31
     fb0:	ef 91       	pop	r30
     fb2:	9f 91       	pop	r25
     fb4:	8f 91       	pop	r24
     fb6:	4f 91       	pop	r20
     fb8:	3f 91       	pop	r19
     fba:	2f 91       	pop	r18
     fbc:	0f 90       	pop	r0
     fbe:	0b be       	out	0x3b, r0	; 59
     fc0:	0f 90       	pop	r0
     fc2:	0f be       	out	0x3f, r0	; 63
     fc4:	0f 90       	pop	r0
     fc6:	1f 90       	pop	r1
     fc8:	18 95       	reti

00000fca <__vector_18>:
     fca:	1f 92       	push	r1
     fcc:	0f 92       	push	r0
     fce:	0f b6       	in	r0, 0x3f	; 63
     fd0:	0f 92       	push	r0
     fd2:	11 24       	eor	r1, r1
     fd4:	0b b6       	in	r0, 0x3b	; 59
     fd6:	0f 92       	push	r0
     fd8:	2f 93       	push	r18
     fda:	3f 93       	push	r19
     fdc:	4f 93       	push	r20
     fde:	5f 93       	push	r21
     fe0:	8f 93       	push	r24
     fe2:	9f 93       	push	r25
     fe4:	af 93       	push	r26
     fe6:	bf 93       	push	r27
     fe8:	ef 93       	push	r30
     fea:	ff 93       	push	r31
     fec:	80 91 c5 0c 	lds	r24, 0x0CC5	; 0x800cc5 <__system_var+0x3f>
     ff0:	90 91 c6 0c 	lds	r25, 0x0CC6	; 0x800cc6 <__system_var+0x40>
     ff4:	01 96       	adiw	r24, 0x01	; 1
     ff6:	87 32       	cpi	r24, 0x27	; 39
     ff8:	91 05       	cpc	r25, r1
     ffa:	29 f0       	breq	.+10     	; 0x1006 <__vector_18+0x3c>
     ffc:	90 93 c6 0c 	sts	0x0CC6, r25	; 0x800cc6 <__system_var+0x40>
    1000:	80 93 c5 0c 	sts	0x0CC5, r24	; 0x800cc5 <__system_var+0x3f>
    1004:	b0 c0       	rjmp	.+352    	; 0x1166 <__vector_18+0x19c>
    1006:	10 92 c6 0c 	sts	0x0CC6, r1	; 0x800cc6 <__system_var+0x40>
    100a:	10 92 c5 0c 	sts	0x0CC5, r1	; 0x800cc5 <__system_var+0x3f>
    100e:	ee ee       	ldi	r30, 0xEE	; 238
    1010:	f8 e0       	ldi	r31, 0x08	; 8
    1012:	86 85       	ldd	r24, Z+14	; 0x0e
    1014:	97 85       	ldd	r25, Z+15	; 0x0f
    1016:	01 96       	adiw	r24, 0x01	; 1
    1018:	97 87       	std	Z+15, r25	; 0x0f
    101a:	86 87       	std	Z+14, r24	; 0x0e
    101c:	88 3e       	cpi	r24, 0xE8	; 232
    101e:	93 40       	sbci	r25, 0x03	; 3
    1020:	09 f0       	breq	.+2      	; 0x1024 <__vector_18+0x5a>
    1022:	4b c0       	rjmp	.+150    	; 0x10ba <__vector_18+0xf0>
    1024:	84 85       	ldd	r24, Z+12	; 0x0c
    1026:	95 85       	ldd	r25, Z+13	; 0x0d
    1028:	01 96       	adiw	r24, 0x01	; 1
    102a:	95 87       	std	Z+13, r25	; 0x0d
    102c:	84 87       	std	Z+12, r24	; 0x0c
    102e:	17 86       	std	Z+15, r1	; 0x0f
    1030:	16 86       	std	Z+14, r1	; 0x0e
    1032:	82 89       	ldd	r24, Z+18	; 0x12
    1034:	93 89       	ldd	r25, Z+19	; 0x13
    1036:	20 89       	ldd	r18, Z+16	; 0x10
    1038:	31 89       	ldd	r19, Z+17	; 0x11
    103a:	28 17       	cp	r18, r24
    103c:	39 07       	cpc	r19, r25
    103e:	2c f0       	brlt	.+10     	; 0x104a <__vector_18+0x80>
    1040:	01 96       	adiw	r24, 0x01	; 1
    1042:	90 93 01 09 	sts	0x0901, r25	; 0x800901 <__system_time+0x13>
    1046:	80 93 00 09 	sts	0x0900, r24	; 0x800900 <__system_time+0x12>
    104a:	ee ee       	ldi	r30, 0xEE	; 238
    104c:	f8 e0       	ldi	r31, 0x08	; 8
    104e:	86 89       	ldd	r24, Z+22	; 0x16
    1050:	97 89       	ldd	r25, Z+23	; 0x17
    1052:	24 89       	ldd	r18, Z+20	; 0x14
    1054:	35 89       	ldd	r19, Z+21	; 0x15
    1056:	28 17       	cp	r18, r24
    1058:	39 07       	cpc	r19, r25
    105a:	2c f0       	brlt	.+10     	; 0x1066 <__vector_18+0x9c>
    105c:	01 96       	adiw	r24, 0x01	; 1
    105e:	90 93 05 09 	sts	0x0905, r25	; 0x800905 <__system_time+0x17>
    1062:	80 93 04 09 	sts	0x0904, r24	; 0x800904 <__system_time+0x16>
    1066:	ee ee       	ldi	r30, 0xEE	; 238
    1068:	f8 e0       	ldi	r31, 0x08	; 8
    106a:	82 8d       	ldd	r24, Z+26	; 0x1a
    106c:	93 8d       	ldd	r25, Z+27	; 0x1b
    106e:	20 8d       	ldd	r18, Z+24	; 0x18
    1070:	31 8d       	ldd	r19, Z+25	; 0x19
    1072:	28 17       	cp	r18, r24
    1074:	39 07       	cpc	r19, r25
    1076:	2c f0       	brlt	.+10     	; 0x1082 <__vector_18+0xb8>
    1078:	01 96       	adiw	r24, 0x01	; 1
    107a:	90 93 09 09 	sts	0x0909, r25	; 0x800909 <__system_time+0x1b>
    107e:	80 93 08 09 	sts	0x0908, r24	; 0x800908 <__system_time+0x1a>
    1082:	ee ee       	ldi	r30, 0xEE	; 238
    1084:	f8 e0       	ldi	r31, 0x08	; 8
    1086:	86 8d       	ldd	r24, Z+30	; 0x1e
    1088:	97 8d       	ldd	r25, Z+31	; 0x1f
    108a:	24 8d       	ldd	r18, Z+28	; 0x1c
    108c:	35 8d       	ldd	r19, Z+29	; 0x1d
    108e:	28 17       	cp	r18, r24
    1090:	39 07       	cpc	r19, r25
    1092:	2c f0       	brlt	.+10     	; 0x109e <__vector_18+0xd4>
    1094:	01 96       	adiw	r24, 0x01	; 1
    1096:	90 93 0d 09 	sts	0x090D, r25	; 0x80090d <__system_time+0x1f>
    109a:	80 93 0c 09 	sts	0x090C, r24	; 0x80090c <__system_time+0x1e>
    109e:	ee ee       	ldi	r30, 0xEE	; 238
    10a0:	f8 e0       	ldi	r31, 0x08	; 8
    10a2:	82 a1       	ldd	r24, Z+34	; 0x22
    10a4:	93 a1       	ldd	r25, Z+35	; 0x23
    10a6:	20 a1       	ldd	r18, Z+32	; 0x20
    10a8:	31 a1       	ldd	r19, Z+33	; 0x21
    10aa:	28 17       	cp	r18, r24
    10ac:	39 07       	cpc	r19, r25
    10ae:	2c f0       	brlt	.+10     	; 0x10ba <__vector_18+0xf0>
    10b0:	01 96       	adiw	r24, 0x01	; 1
    10b2:	90 93 11 09 	sts	0x0911, r25	; 0x800911 <__system_time+0x23>
    10b6:	80 93 10 09 	sts	0x0910, r24	; 0x800910 <__system_time+0x22>
    10ba:	80 91 fa 08 	lds	r24, 0x08FA	; 0x8008fa <__system_time+0xc>
    10be:	90 91 fb 08 	lds	r25, 0x08FB	; 0x8008fb <__system_time+0xd>
    10c2:	cc 97       	sbiw	r24, 0x3c	; 60
    10c4:	49 f4       	brne	.+18     	; 0x10d8 <__vector_18+0x10e>
    10c6:	ee ee       	ldi	r30, 0xEE	; 238
    10c8:	f8 e0       	ldi	r31, 0x08	; 8
    10ca:	82 85       	ldd	r24, Z+10	; 0x0a
    10cc:	93 85       	ldd	r25, Z+11	; 0x0b
    10ce:	01 96       	adiw	r24, 0x01	; 1
    10d0:	93 87       	std	Z+11, r25	; 0x0b
    10d2:	82 87       	std	Z+10, r24	; 0x0a
    10d4:	15 86       	std	Z+13, r1	; 0x0d
    10d6:	14 86       	std	Z+12, r1	; 0x0c
    10d8:	80 91 f8 08 	lds	r24, 0x08F8	; 0x8008f8 <__system_time+0xa>
    10dc:	90 91 f9 08 	lds	r25, 0x08F9	; 0x8008f9 <__system_time+0xb>
    10e0:	cc 97       	sbiw	r24, 0x3c	; 60
    10e2:	49 f4       	brne	.+18     	; 0x10f6 <__vector_18+0x12c>
    10e4:	ee ee       	ldi	r30, 0xEE	; 238
    10e6:	f8 e0       	ldi	r31, 0x08	; 8
    10e8:	80 85       	ldd	r24, Z+8	; 0x08
    10ea:	91 85       	ldd	r25, Z+9	; 0x09
    10ec:	01 96       	adiw	r24, 0x01	; 1
    10ee:	91 87       	std	Z+9, r25	; 0x09
    10f0:	80 87       	std	Z+8, r24	; 0x08
    10f2:	13 86       	std	Z+11, r1	; 0x0b
    10f4:	12 86       	std	Z+10, r1	; 0x0a
    10f6:	80 91 f6 08 	lds	r24, 0x08F6	; 0x8008f6 <__system_time+0x8>
    10fa:	90 91 f7 08 	lds	r25, 0x08F7	; 0x8008f7 <__system_time+0x9>
    10fe:	48 97       	sbiw	r24, 0x18	; 24
    1100:	49 f4       	brne	.+18     	; 0x1114 <__vector_18+0x14a>
    1102:	ee ee       	ldi	r30, 0xEE	; 238
    1104:	f8 e0       	ldi	r31, 0x08	; 8
    1106:	84 81       	ldd	r24, Z+4	; 0x04
    1108:	95 81       	ldd	r25, Z+5	; 0x05
    110a:	01 96       	adiw	r24, 0x01	; 1
    110c:	95 83       	std	Z+5, r25	; 0x05
    110e:	84 83       	std	Z+4, r24	; 0x04
    1110:	11 86       	std	Z+9, r1	; 0x09
    1112:	10 86       	std	Z+8, r1	; 0x08
    1114:	ae ee       	ldi	r26, 0xEE	; 238
    1116:	b8 e0       	ldi	r27, 0x08	; 8
    1118:	12 96       	adiw	r26, 0x02	; 2
    111a:	8d 91       	ld	r24, X+
    111c:	9c 91       	ld	r25, X
    111e:	13 97       	sbiw	r26, 0x03	; 3
    1120:	fc 01       	movw	r30, r24
    1122:	ee 0f       	add	r30, r30
    1124:	ff 1f       	adc	r31, r31
    1126:	e7 56       	subi	r30, 0x67	; 103
    1128:	fc 4f       	sbci	r31, 0xFC	; 252
    112a:	14 96       	adiw	r26, 0x04	; 4
    112c:	4d 91       	ld	r20, X+
    112e:	5c 91       	ld	r21, X
    1130:	15 97       	sbiw	r26, 0x05	; 5
    1132:	20 81       	ld	r18, Z
    1134:	31 81       	ldd	r19, Z+1	; 0x01
    1136:	42 17       	cp	r20, r18
    1138:	53 07       	cpc	r21, r19
    113a:	31 f4       	brne	.+12     	; 0x1148 <__vector_18+0x17e>
    113c:	fd 01       	movw	r30, r26
    113e:	01 96       	adiw	r24, 0x01	; 1
    1140:	93 83       	std	Z+3, r25	; 0x03
    1142:	82 83       	std	Z+2, r24	; 0x02
    1144:	15 82       	std	Z+5, r1	; 0x05
    1146:	14 82       	std	Z+4, r1	; 0x04
    1148:	80 91 f0 08 	lds	r24, 0x08F0	; 0x8008f0 <__system_time+0x2>
    114c:	90 91 f1 08 	lds	r25, 0x08F1	; 0x8008f1 <__system_time+0x3>
    1150:	0c 97       	sbiw	r24, 0x0c	; 12
    1152:	49 f4       	brne	.+18     	; 0x1166 <__vector_18+0x19c>
    1154:	ee ee       	ldi	r30, 0xEE	; 238
    1156:	f8 e0       	ldi	r31, 0x08	; 8
    1158:	80 81       	ld	r24, Z
    115a:	91 81       	ldd	r25, Z+1	; 0x01
    115c:	01 96       	adiw	r24, 0x01	; 1
    115e:	91 83       	std	Z+1, r25	; 0x01
    1160:	80 83       	st	Z, r24
    1162:	13 82       	std	Z+3, r1	; 0x03
    1164:	12 82       	std	Z+2, r1	; 0x02
    1166:	ff 91       	pop	r31
    1168:	ef 91       	pop	r30
    116a:	bf 91       	pop	r27
    116c:	af 91       	pop	r26
    116e:	9f 91       	pop	r25
    1170:	8f 91       	pop	r24
    1172:	5f 91       	pop	r21
    1174:	4f 91       	pop	r20
    1176:	3f 91       	pop	r19
    1178:	2f 91       	pop	r18
    117a:	0f 90       	pop	r0
    117c:	0b be       	out	0x3b, r0	; 59
    117e:	0f 90       	pop	r0
    1180:	0f be       	out	0x3f, r0	; 63
    1182:	0f 90       	pop	r0
    1184:	1f 90       	pop	r1
    1186:	18 95       	reti

00001188 <_Z9readUntilPKci>:
    1188:	6f 92       	push	r6
    118a:	7f 92       	push	r7
    118c:	8f 92       	push	r8
    118e:	9f 92       	push	r9
    1190:	af 92       	push	r10
    1192:	bf 92       	push	r11
    1194:	cf 92       	push	r12
    1196:	df 92       	push	r13
    1198:	ef 92       	push	r14
    119a:	ff 92       	push	r15
    119c:	0f 93       	push	r16
    119e:	1f 93       	push	r17
    11a0:	cf 93       	push	r28
    11a2:	df 93       	push	r29
    11a4:	4c 01       	movw	r8, r24
    11a6:	eb 01       	movw	r28, r22
    11a8:	0e 94 94 17 	call	0x2f28	; 0x2f28 <_Z13clearReadLinev>
    11ac:	88 ee       	ldi	r24, 0xE8	; 232
    11ae:	93 e0       	ldi	r25, 0x03	; 3
    11b0:	c8 9f       	mul	r28, r24
    11b2:	80 01       	movw	r16, r0
    11b4:	c9 9f       	mul	r28, r25
    11b6:	10 0d       	add	r17, r0
    11b8:	d8 9f       	mul	r29, r24
    11ba:	10 0d       	add	r17, r0
    11bc:	11 24       	eor	r1, r1
    11be:	11 23       	and	r17, r17
    11c0:	0c f4       	brge	.+2      	; 0x11c4 <_Z9readUntilPKci+0x3c>
    11c2:	55 c0       	rjmp	.+170    	; 0x126e <_Z9readUntilPKci+0xe6>
    11c4:	c0 e0       	ldi	r28, 0x00	; 0
    11c6:	d0 e0       	ldi	r29, 0x00	; 0
    11c8:	0f 2e       	mov	r0, r31
    11ca:	f6 e8       	ldi	r31, 0x86	; 134
    11cc:	cf 2e       	mov	r12, r31
    11ce:	fc e0       	ldi	r31, 0x0C	; 12
    11d0:	df 2e       	mov	r13, r31
    11d2:	f0 2d       	mov	r31, r0
    11d4:	e0 90 b7 03 	lds	r14, 0x03B7	; 0x8003b7 <ESP>
    11d8:	f0 90 b8 03 	lds	r15, 0x03B8	; 0x8003b8 <ESP+0x1>
    11dc:	a0 90 b5 03 	lds	r10, 0x03B5	; 0x8003b5 <SIM>
    11e0:	b0 90 b6 03 	lds	r11, 0x03B6	; 0x8003b6 <SIM+0x1>
    11e4:	f6 01       	movw	r30, r12
    11e6:	66 ac       	ldd	r6, Z+62	; 0x3e
    11e8:	71 2c       	mov	r7, r1
    11ea:	6e 14       	cp	r6, r14
    11ec:	7f 04       	cpc	r7, r15
    11ee:	b9 f4       	brne	.+46     	; 0x121e <_Z9readUntilPKci+0x96>
    11f0:	b4 01       	movw	r22, r8
    11f2:	84 ec       	ldi	r24, 0xC4	; 196
    11f4:	99 e0       	ldi	r25, 0x09	; 9
    11f6:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
    11fa:	89 2b       	or	r24, r25
    11fc:	d9 f5       	brne	.+118    	; 0x1274 <_Z9readUntilPKci+0xec>
    11fe:	67 ee       	ldi	r22, 0xE7	; 231
    1200:	71 e0       	ldi	r23, 0x01	; 1
    1202:	84 ec       	ldi	r24, 0xC4	; 196
    1204:	99 e0       	ldi	r25, 0x09	; 9
    1206:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
    120a:	89 2b       	or	r24, r25
    120c:	b1 f5       	brne	.+108    	; 0x127a <_Z9readUntilPKci+0xf2>
    120e:	6d ee       	ldi	r22, 0xED	; 237
    1210:	71 e0       	ldi	r23, 0x01	; 1
    1212:	84 ec       	ldi	r24, 0xC4	; 196
    1214:	99 e0       	ldi	r25, 0x09	; 9
    1216:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
    121a:	89 2b       	or	r24, r25
    121c:	89 f5       	brne	.+98     	; 0x1280 <_Z9readUntilPKci+0xf8>
    121e:	6a 14       	cp	r6, r10
    1220:	7b 04       	cpc	r7, r11
    1222:	b9 f4       	brne	.+46     	; 0x1252 <_Z9readUntilPKci+0xca>
    1224:	b4 01       	movw	r22, r8
    1226:	88 eb       	ldi	r24, 0xB8	; 184
    1228:	9b e0       	ldi	r25, 0x0B	; 11
    122a:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
    122e:	89 2b       	or	r24, r25
    1230:	51 f5       	brne	.+84     	; 0x1286 <_Z9readUntilPKci+0xfe>
    1232:	67 ee       	ldi	r22, 0xE7	; 231
    1234:	71 e0       	ldi	r23, 0x01	; 1
    1236:	88 eb       	ldi	r24, 0xB8	; 184
    1238:	9b e0       	ldi	r25, 0x0B	; 11
    123a:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
    123e:	89 2b       	or	r24, r25
    1240:	29 f5       	brne	.+74     	; 0x128c <_Z9readUntilPKci+0x104>
    1242:	6d ee       	ldi	r22, 0xED	; 237
    1244:	71 e0       	ldi	r23, 0x01	; 1
    1246:	88 eb       	ldi	r24, 0xB8	; 184
    1248:	9b e0       	ldi	r25, 0x0B	; 11
    124a:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
    124e:	89 2b       	or	r24, r25
    1250:	01 f5       	brne	.+64     	; 0x1292 <_Z9readUntilPKci+0x10a>
    1252:	21 96       	adiw	r28, 0x01	; 1
    1254:	83 ec       	ldi	r24, 0xC3	; 195
    1256:	99 e0       	ldi	r25, 0x09	; 9
    1258:	01 97       	sbiw	r24, 0x01	; 1
    125a:	f1 f7       	brne	.-4      	; 0x1258 <_Z9readUntilPKci+0xd0>
    125c:	00 c0       	rjmp	.+0      	; 0x125e <_Z9readUntilPKci+0xd6>
    125e:	00 00       	nop
    1260:	0c 17       	cp	r16, r28
    1262:	1d 07       	cpc	r17, r29
    1264:	0c f0       	brlt	.+2      	; 0x1268 <_Z9readUntilPKci+0xe0>
    1266:	be cf       	rjmp	.-132    	; 0x11e4 <_Z9readUntilPKci+0x5c>
    1268:	80 e0       	ldi	r24, 0x00	; 0
    126a:	90 e0       	ldi	r25, 0x00	; 0
    126c:	14 c0       	rjmp	.+40     	; 0x1296 <_Z9readUntilPKci+0x10e>
    126e:	80 e0       	ldi	r24, 0x00	; 0
    1270:	90 e0       	ldi	r25, 0x00	; 0
    1272:	11 c0       	rjmp	.+34     	; 0x1296 <_Z9readUntilPKci+0x10e>
    1274:	81 e0       	ldi	r24, 0x01	; 1
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	0e c0       	rjmp	.+28     	; 0x1296 <_Z9readUntilPKci+0x10e>
    127a:	80 e0       	ldi	r24, 0x00	; 0
    127c:	90 e0       	ldi	r25, 0x00	; 0
    127e:	0b c0       	rjmp	.+22     	; 0x1296 <_Z9readUntilPKci+0x10e>
    1280:	80 e0       	ldi	r24, 0x00	; 0
    1282:	90 e0       	ldi	r25, 0x00	; 0
    1284:	08 c0       	rjmp	.+16     	; 0x1296 <_Z9readUntilPKci+0x10e>
    1286:	81 e0       	ldi	r24, 0x01	; 1
    1288:	90 e0       	ldi	r25, 0x00	; 0
    128a:	05 c0       	rjmp	.+10     	; 0x1296 <_Z9readUntilPKci+0x10e>
    128c:	80 e0       	ldi	r24, 0x00	; 0
    128e:	90 e0       	ldi	r25, 0x00	; 0
    1290:	02 c0       	rjmp	.+4      	; 0x1296 <_Z9readUntilPKci+0x10e>
    1292:	80 e0       	ldi	r24, 0x00	; 0
    1294:	90 e0       	ldi	r25, 0x00	; 0
    1296:	df 91       	pop	r29
    1298:	cf 91       	pop	r28
    129a:	1f 91       	pop	r17
    129c:	0f 91       	pop	r16
    129e:	ff 90       	pop	r15
    12a0:	ef 90       	pop	r14
    12a2:	df 90       	pop	r13
    12a4:	cf 90       	pop	r12
    12a6:	bf 90       	pop	r11
    12a8:	af 90       	pop	r10
    12aa:	9f 90       	pop	r9
    12ac:	8f 90       	pop	r8
    12ae:	7f 90       	pop	r7
    12b0:	6f 90       	pop	r6
    12b2:	08 95       	ret

000012b4 <_Z7cipsendPcS_>:
    12b4:	cf 92       	push	r12
    12b6:	df 92       	push	r13
    12b8:	ef 92       	push	r14
    12ba:	ff 92       	push	r15
    12bc:	0f 93       	push	r16
    12be:	1f 93       	push	r17
    12c0:	cf 93       	push	r28
    12c2:	df 93       	push	r29
    12c4:	00 d0       	rcall	.+0      	; 0x12c6 <_Z7cipsendPcS_+0x12>
    12c6:	00 d0       	rcall	.+0      	; 0x12c8 <_Z7cipsendPcS_+0x14>
    12c8:	1f 92       	push	r1
    12ca:	cd b7       	in	r28, 0x3d	; 61
    12cc:	de b7       	in	r29, 0x3e	; 62
    12ce:	7c 01       	movw	r14, r24
    12d0:	6b 01       	movw	r12, r22
    12d2:	80 91 c4 0c 	lds	r24, 0x0CC4	; 0x800cc4 <__system_var+0x3e>
    12d6:	90 e0       	ldi	r25, 0x00	; 0
    12d8:	20 91 b7 03 	lds	r18, 0x03B7	; 0x8003b7 <ESP>
    12dc:	30 91 b8 03 	lds	r19, 0x03B8	; 0x8003b8 <ESP+0x1>
    12e0:	82 17       	cp	r24, r18
    12e2:	93 07       	cpc	r25, r19
    12e4:	49 f5       	brne	.+82     	; 0x1338 <_Z7cipsendPcS_+0x84>
    12e6:	f7 01       	movw	r30, r14
    12e8:	31 96       	adiw	r30, 0x01	; 1
    12ea:	d7 01       	movw	r26, r14
    12ec:	8c 91       	ld	r24, X
    12ee:	88 23       	and	r24, r24
    12f0:	41 f0       	breq	.+16     	; 0x1302 <_Z7cipsendPcS_+0x4e>
    12f2:	00 e0       	ldi	r16, 0x00	; 0
    12f4:	10 e0       	ldi	r17, 0x00	; 0
    12f6:	0f 5f       	subi	r16, 0xFF	; 255
    12f8:	1f 4f       	sbci	r17, 0xFF	; 255
    12fa:	81 91       	ld	r24, Z+
    12fc:	81 11       	cpse	r24, r1
    12fe:	fb cf       	rjmp	.-10     	; 0x12f6 <_Z7cipsendPcS_+0x42>
    1300:	02 c0       	rjmp	.+4      	; 0x1306 <_Z7cipsendPcS_+0x52>
    1302:	00 e0       	ldi	r16, 0x00	; 0
    1304:	10 e0       	ldi	r17, 0x00	; 0
    1306:	82 ef       	ldi	r24, 0xF2	; 242
    1308:	91 e0       	ldi	r25, 0x01	; 1
    130a:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    130e:	c6 01       	movw	r24, r12
    1310:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    1314:	8e e4       	ldi	r24, 0x4E	; 78
    1316:	93 e0       	ldi	r25, 0x03	; 3
    1318:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    131c:	4a e0       	ldi	r20, 0x0A	; 10
    131e:	be 01       	movw	r22, r28
    1320:	6f 5f       	subi	r22, 0xFF	; 255
    1322:	7f 4f       	sbci	r23, 0xFF	; 255
    1324:	c8 01       	movw	r24, r16
    1326:	0e 94 5b 1a 	call	0x34b6	; 0x34b6 <__itoa_ncheck>
    132a:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    132e:	8b ea       	ldi	r24, 0xAB	; 171
    1330:	96 e0       	ldi	r25, 0x06	; 6
    1332:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    1336:	04 c0       	rjmp	.+8      	; 0x1340 <_Z7cipsendPcS_+0x8c>
    1338:	8e ef       	ldi	r24, 0xFE	; 254
    133a:	91 e0       	ldi	r25, 0x01	; 1
    133c:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    1340:	62 e0       	ldi	r22, 0x02	; 2
    1342:	70 e0       	ldi	r23, 0x00	; 0
    1344:	81 ec       	ldi	r24, 0xC1	; 193
    1346:	94 e0       	ldi	r25, 0x04	; 4
    1348:	1f df       	rcall	.-450    	; 0x1188 <_Z9readUntilPKci>
    134a:	89 2b       	or	r24, r25
    134c:	41 f4       	brne	.+16     	; 0x135e <_Z7cipsendPcS_+0xaa>
    134e:	80 91 b1 03 	lds	r24, 0x03B1	; 0x8003b1 <FALSE>
    1352:	80 93 c3 09 	sts	0x09C3, r24	; 0x8009c3 <__network_data+0xb1>
    1356:	80 93 c1 09 	sts	0x09C1, r24	; 0x8009c1 <__network_data+0xaf>
    135a:	80 93 c2 09 	sts	0x09C2, r24	; 0x8009c2 <__network_data+0xb0>
    135e:	80 91 c4 0c 	lds	r24, 0x0CC4	; 0x800cc4 <__system_var+0x3e>
    1362:	90 e0       	ldi	r25, 0x00	; 0
    1364:	20 91 b7 03 	lds	r18, 0x03B7	; 0x8003b7 <ESP>
    1368:	30 91 b8 03 	lds	r19, 0x03B8	; 0x8003b8 <ESP+0x1>
    136c:	82 17       	cp	r24, r18
    136e:	93 07       	cpc	r25, r19
    1370:	21 f4       	brne	.+8      	; 0x137a <_Z7cipsendPcS_+0xc6>
    1372:	c7 01       	movw	r24, r14
    1374:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    1378:	09 c0       	rjmp	.+18     	; 0x138c <_Z7cipsendPcS_+0xd8>
    137a:	c7 01       	movw	r24, r14
    137c:	0e 94 aa 15 	call	0x2b54	; 0x2b54 <_Z17USART1_SendStringPKc>
    1380:	8a e1       	ldi	r24, 0x1A	; 26
    1382:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <_Z15USART1_SendBytec>
    1386:	8d e0       	ldi	r24, 0x0D	; 13
    1388:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <_Z15USART1_SendBytec>
    138c:	0f 90       	pop	r0
    138e:	0f 90       	pop	r0
    1390:	0f 90       	pop	r0
    1392:	0f 90       	pop	r0
    1394:	0f 90       	pop	r0
    1396:	df 91       	pop	r29
    1398:	cf 91       	pop	r28
    139a:	1f 91       	pop	r17
    139c:	0f 91       	pop	r16
    139e:	ff 90       	pop	r15
    13a0:	ef 90       	pop	r14
    13a2:	df 90       	pop	r13
    13a4:	cf 90       	pop	r12
    13a6:	08 95       	ret

000013a8 <_Z12sendToServerPci>:
    13a8:	af 92       	push	r10
    13aa:	bf 92       	push	r11
    13ac:	cf 92       	push	r12
    13ae:	df 92       	push	r13
    13b0:	ef 92       	push	r14
    13b2:	ff 92       	push	r15
    13b4:	0f 93       	push	r16
    13b6:	1f 93       	push	r17
    13b8:	cf 93       	push	r28
    13ba:	df 93       	push	r29
    13bc:	00 d0       	rcall	.+0      	; 0x13be <_Z12sendToServerPci+0x16>
    13be:	00 d0       	rcall	.+0      	; 0x13c0 <_Z12sendToServerPci+0x18>
    13c0:	1f 92       	push	r1
    13c2:	cd b7       	in	r28, 0x3d	; 61
    13c4:	de b7       	in	r29, 0x3e	; 62
    13c6:	7c 01       	movw	r14, r24
    13c8:	90 91 c3 09 	lds	r25, 0x09C3	; 0x8009c3 <__network_data+0xb1>
    13cc:	99 23       	and	r25, r25
    13ce:	09 f4       	brne	.+2      	; 0x13d2 <_Z12sendToServerPci+0x2a>
    13d0:	42 c0       	rjmp	.+132    	; 0x1456 <_Z12sendToServerPci+0xae>
    13d2:	6b 01       	movw	r12, r22
    13d4:	f7 01       	movw	r30, r14
    13d6:	31 96       	adiw	r30, 0x01	; 1
    13d8:	d7 01       	movw	r26, r14
    13da:	8c 91       	ld	r24, X
    13dc:	88 23       	and	r24, r24
    13de:	71 f1       	breq	.+92     	; 0x143c <_Z12sendToServerPci+0x94>
    13e0:	00 e0       	ldi	r16, 0x00	; 0
    13e2:	10 e0       	ldi	r17, 0x00	; 0
    13e4:	0f 5f       	subi	r16, 0xFF	; 255
    13e6:	1f 4f       	sbci	r17, 0xFF	; 255
    13e8:	81 91       	ld	r24, Z+
    13ea:	81 11       	cpse	r24, r1
    13ec:	fb cf       	rjmp	.-10     	; 0x13e4 <_Z12sendToServerPci+0x3c>
    13ee:	c8 01       	movw	r24, r16
    13f0:	01 96       	adiw	r24, 0x01	; 1
    13f2:	0e 94 a0 18 	call	0x3140	; 0x3140 <malloc>
    13f6:	a8 2e       	mov	r10, r24
    13f8:	b9 2e       	mov	r11, r25
    13fa:	e8 2f       	mov	r30, r24
    13fc:	f9 2f       	mov	r31, r25
    13fe:	83 e2       	ldi	r24, 0x23	; 35
    1400:	81 93       	st	Z+, r24
    1402:	11 23       	and	r17, r17
    1404:	54 f0       	brlt	.+20     	; 0x141a <_Z12sendToServerPci+0x72>
    1406:	d7 01       	movw	r26, r14
    1408:	20 e0       	ldi	r18, 0x00	; 0
    140a:	30 e0       	ldi	r19, 0x00	; 0
    140c:	8d 91       	ld	r24, X+
    140e:	81 93       	st	Z+, r24
    1410:	2f 5f       	subi	r18, 0xFF	; 255
    1412:	3f 4f       	sbci	r19, 0xFF	; 255
    1414:	02 17       	cp	r16, r18
    1416:	13 07       	cpc	r17, r19
    1418:	cc f7       	brge	.-14     	; 0x140c <_Z12sendToServerPci+0x64>
    141a:	4a e0       	ldi	r20, 0x0A	; 10
    141c:	be 01       	movw	r22, r28
    141e:	6f 5f       	subi	r22, 0xFF	; 255
    1420:	7f 4f       	sbci	r23, 0xFF	; 255
    1422:	c6 01       	movw	r24, r12
    1424:	0e 94 5b 1a 	call	0x34b6	; 0x34b6 <__itoa_ncheck>
    1428:	bc 01       	movw	r22, r24
    142a:	8a 2d       	mov	r24, r10
    142c:	9b 2d       	mov	r25, r11
    142e:	42 df       	rcall	.-380    	; 0x12b4 <_Z7cipsendPcS_>
    1430:	63 e0       	ldi	r22, 0x03	; 3
    1432:	70 e0       	ldi	r23, 0x00	; 0
    1434:	8a e0       	ldi	r24, 0x0A	; 10
    1436:	92 e0       	ldi	r25, 0x02	; 2
    1438:	a7 de       	rcall	.-690    	; 0x1188 <_Z9readUntilPKci>
    143a:	0d c0       	rjmp	.+26     	; 0x1456 <_Z12sendToServerPci+0xae>
    143c:	81 e0       	ldi	r24, 0x01	; 1
    143e:	90 e0       	ldi	r25, 0x00	; 0
    1440:	0e 94 a0 18 	call	0x3140	; 0x3140 <malloc>
    1444:	a8 2e       	mov	r10, r24
    1446:	b9 2e       	mov	r11, r25
    1448:	e8 2f       	mov	r30, r24
    144a:	f9 2f       	mov	r31, r25
    144c:	83 e2       	ldi	r24, 0x23	; 35
    144e:	81 93       	st	Z+, r24
    1450:	00 e0       	ldi	r16, 0x00	; 0
    1452:	10 e0       	ldi	r17, 0x00	; 0
    1454:	d8 cf       	rjmp	.-80     	; 0x1406 <_Z12sendToServerPci+0x5e>
    1456:	0f 90       	pop	r0
    1458:	0f 90       	pop	r0
    145a:	0f 90       	pop	r0
    145c:	0f 90       	pop	r0
    145e:	0f 90       	pop	r0
    1460:	df 91       	pop	r29
    1462:	cf 91       	pop	r28
    1464:	1f 91       	pop	r17
    1466:	0f 91       	pop	r16
    1468:	ff 90       	pop	r15
    146a:	ef 90       	pop	r14
    146c:	df 90       	pop	r13
    146e:	cf 90       	pop	r12
    1470:	bf 90       	pop	r11
    1472:	af 90       	pop	r10
    1474:	08 95       	ret

00001476 <_Z8sendToAPPcS_>:
    1476:	cf 92       	push	r12
    1478:	df 92       	push	r13
    147a:	ef 92       	push	r14
    147c:	ff 92       	push	r15
    147e:	0f 93       	push	r16
    1480:	1f 93       	push	r17
    1482:	cf 93       	push	r28
    1484:	df 93       	push	r29
    1486:	00 d0       	rcall	.+0      	; 0x1488 <_Z8sendToAPPcS_+0x12>
    1488:	00 d0       	rcall	.+0      	; 0x148a <_Z8sendToAPPcS_+0x14>
    148a:	1f 92       	push	r1
    148c:	cd b7       	in	r28, 0x3d	; 61
    148e:	de b7       	in	r29, 0x3e	; 62
    1490:	7c 01       	movw	r14, r24
    1492:	6b 01       	movw	r12, r22
    1494:	fc 01       	movw	r30, r24
    1496:	31 96       	adiw	r30, 0x01	; 1
    1498:	dc 01       	movw	r26, r24
    149a:	8c 91       	ld	r24, X
    149c:	88 23       	and	r24, r24
    149e:	41 f0       	breq	.+16     	; 0x14b0 <_Z8sendToAPPcS_+0x3a>
    14a0:	00 e0       	ldi	r16, 0x00	; 0
    14a2:	10 e0       	ldi	r17, 0x00	; 0
    14a4:	0f 5f       	subi	r16, 0xFF	; 255
    14a6:	1f 4f       	sbci	r17, 0xFF	; 255
    14a8:	81 91       	ld	r24, Z+
    14aa:	81 11       	cpse	r24, r1
    14ac:	fb cf       	rjmp	.-10     	; 0x14a4 <_Z8sendToAPPcS_+0x2e>
    14ae:	02 c0       	rjmp	.+4      	; 0x14b4 <_Z8sendToAPPcS_+0x3e>
    14b0:	00 e0       	ldi	r16, 0x00	; 0
    14b2:	10 e0       	ldi	r17, 0x00	; 0
    14b4:	82 ef       	ldi	r24, 0xF2	; 242
    14b6:	91 e0       	ldi	r25, 0x01	; 1
    14b8:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    14bc:	c6 01       	movw	r24, r12
    14be:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    14c2:	8e e4       	ldi	r24, 0x4E	; 78
    14c4:	93 e0       	ldi	r25, 0x03	; 3
    14c6:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    14ca:	4a e0       	ldi	r20, 0x0A	; 10
    14cc:	be 01       	movw	r22, r28
    14ce:	6f 5f       	subi	r22, 0xFF	; 255
    14d0:	7f 4f       	sbci	r23, 0xFF	; 255
    14d2:	c8 01       	movw	r24, r16
    14d4:	0e 94 5b 1a 	call	0x34b6	; 0x34b6 <__itoa_ncheck>
    14d8:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    14dc:	8b ea       	ldi	r24, 0xAB	; 171
    14de:	96 e0       	ldi	r25, 0x06	; 6
    14e0:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    14e4:	62 e0       	ldi	r22, 0x02	; 2
    14e6:	70 e0       	ldi	r23, 0x00	; 0
    14e8:	81 ec       	ldi	r24, 0xC1	; 193
    14ea:	94 e0       	ldi	r25, 0x04	; 4
    14ec:	4d de       	rcall	.-870    	; 0x1188 <_Z9readUntilPKci>
    14ee:	89 2b       	or	r24, r25
    14f0:	41 f4       	brne	.+16     	; 0x1502 <_Z8sendToAPPcS_+0x8c>
    14f2:	80 91 b1 03 	lds	r24, 0x03B1	; 0x8003b1 <FALSE>
    14f6:	80 93 c3 09 	sts	0x09C3, r24	; 0x8009c3 <__network_data+0xb1>
    14fa:	80 93 c1 09 	sts	0x09C1, r24	; 0x8009c1 <__network_data+0xaf>
    14fe:	80 93 c2 09 	sts	0x09C2, r24	; 0x8009c2 <__network_data+0xb0>
    1502:	c7 01       	movw	r24, r14
    1504:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    1508:	63 e0       	ldi	r22, 0x03	; 3
    150a:	70 e0       	ldi	r23, 0x00	; 0
    150c:	8a e0       	ldi	r24, 0x0A	; 10
    150e:	92 e0       	ldi	r25, 0x02	; 2
    1510:	3b de       	rcall	.-906    	; 0x1188 <_Z9readUntilPKci>
    1512:	0f 90       	pop	r0
    1514:	0f 90       	pop	r0
    1516:	0f 90       	pop	r0
    1518:	0f 90       	pop	r0
    151a:	0f 90       	pop	r0
    151c:	df 91       	pop	r29
    151e:	cf 91       	pop	r28
    1520:	1f 91       	pop	r17
    1522:	0f 91       	pop	r16
    1524:	ff 90       	pop	r15
    1526:	ef 90       	pop	r14
    1528:	df 90       	pop	r13
    152a:	cf 90       	pop	r12
    152c:	08 95       	ret

0000152e <_Z13getSystemTimev>:
    152e:	ef 92       	push	r14
    1530:	ff 92       	push	r15
    1532:	0f 93       	push	r16
    1534:	1f 93       	push	r17
    1536:	cf 93       	push	r28
    1538:	df 93       	push	r29
    153a:	6f e0       	ldi	r22, 0x0F	; 15
    153c:	70 e0       	ldi	r23, 0x00	; 0
    153e:	8d e0       	ldi	r24, 0x0D	; 13
    1540:	92 e0       	ldi	r25, 0x02	; 2
    1542:	22 de       	rcall	.-956    	; 0x1188 <_Z9readUntilPKci>
    1544:	89 2b       	or	r24, r25
    1546:	09 f4       	brne	.+2      	; 0x154a <_Z13getSystemTimev+0x1c>
    1548:	63 c0       	rjmp	.+198    	; 0x1610 <_Z13getSystemTimev+0xe2>
    154a:	84 e6       	ldi	r24, 0x64	; 100
    154c:	90 e0       	ldi	r25, 0x00	; 0
    154e:	0e 94 dc 15 	call	0x2bb8	; 0x2bb8 <_Z5delayi>
    1552:	6d e0       	ldi	r22, 0x0D	; 13
    1554:	72 e0       	ldi	r23, 0x02	; 2
    1556:	84 ec       	ldi	r24, 0xC4	; 196
    1558:	99 e0       	ldi	r25, 0x09	; 9
    155a:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
    155e:	60 ec       	ldi	r22, 0xC0	; 192
    1560:	73 e0       	ldi	r23, 0x03	; 3
    1562:	0e 94 f3 19 	call	0x33e6	; 0x33e6 <strtok>
    1566:	89 2b       	or	r24, r25
    1568:	a1 f5       	brne	.+104    	; 0x15d2 <_Z13getSystemTimev+0xa4>
    156a:	47 c0       	rjmp	.+142    	; 0x15fa <_Z13getSystemTimev+0xcc>
    156c:	fe 01       	movw	r30, r28
    156e:	31 97       	sbiw	r30, 0x01	; 1
    1570:	e7 30       	cpi	r30, 0x07	; 7
    1572:	f1 05       	cpc	r31, r1
    1574:	b0 f5       	brcc	.+108    	; 0x15e2 <_Z13getSystemTimev+0xb4>
    1576:	ea 5b       	subi	r30, 0xBA	; 186
    1578:	ff 4f       	sbci	r31, 0xFF	; 255
    157a:	0c 94 97 18 	jmp	0x312e	; 0x312e <__tablejump2__>
    157e:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
    1582:	f7 01       	movw	r30, r14
    1584:	91 83       	std	Z+1, r25	; 0x01
    1586:	80 83       	st	Z, r24
    1588:	2c c0       	rjmp	.+88     	; 0x15e2 <_Z13getSystemTimev+0xb4>
    158a:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
    158e:	f7 01       	movw	r30, r14
    1590:	93 83       	std	Z+3, r25	; 0x03
    1592:	82 83       	std	Z+2, r24	; 0x02
    1594:	26 c0       	rjmp	.+76     	; 0x15e2 <_Z13getSystemTimev+0xb4>
    1596:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
    159a:	f7 01       	movw	r30, r14
    159c:	95 83       	std	Z+5, r25	; 0x05
    159e:	84 83       	std	Z+4, r24	; 0x04
    15a0:	20 c0       	rjmp	.+64     	; 0x15e2 <_Z13getSystemTimev+0xb4>
    15a2:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
    15a6:	f7 01       	movw	r30, r14
    15a8:	91 87       	std	Z+9, r25	; 0x09
    15aa:	80 87       	std	Z+8, r24	; 0x08
    15ac:	1a c0       	rjmp	.+52     	; 0x15e2 <_Z13getSystemTimev+0xb4>
    15ae:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
    15b2:	f7 01       	movw	r30, r14
    15b4:	93 87       	std	Z+11, r25	; 0x0b
    15b6:	82 87       	std	Z+10, r24	; 0x0a
    15b8:	14 c0       	rjmp	.+40     	; 0x15e2 <_Z13getSystemTimev+0xb4>
    15ba:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
    15be:	f7 01       	movw	r30, r14
    15c0:	95 87       	std	Z+13, r25	; 0x0d
    15c2:	84 87       	std	Z+12, r24	; 0x0c
    15c4:	0e c0       	rjmp	.+28     	; 0x15e2 <_Z13getSystemTimev+0xb4>
    15c6:	0e 94 cd 19 	call	0x339a	; 0x339a <atoi>
    15ca:	f7 01       	movw	r30, r14
    15cc:	97 83       	std	Z+7, r25	; 0x07
    15ce:	86 83       	std	Z+6, r24	; 0x06
    15d0:	08 c0       	rjmp	.+16     	; 0x15e2 <_Z13getSystemTimev+0xb4>
    15d2:	00 e0       	ldi	r16, 0x00	; 0
    15d4:	10 e0       	ldi	r17, 0x00	; 0
    15d6:	0f 2e       	mov	r0, r31
    15d8:	fe ee       	ldi	r31, 0xEE	; 238
    15da:	ef 2e       	mov	r14, r31
    15dc:	f8 e0       	ldi	r31, 0x08	; 8
    15de:	ff 2e       	mov	r15, r31
    15e0:	f0 2d       	mov	r31, r0
    15e2:	e8 01       	movw	r28, r16
    15e4:	21 96       	adiw	r28, 0x01	; 1
    15e6:	8e 01       	movw	r16, r28
    15e8:	60 ec       	ldi	r22, 0xC0	; 192
    15ea:	73 e0       	ldi	r23, 0x03	; 3
    15ec:	80 e0       	ldi	r24, 0x00	; 0
    15ee:	90 e0       	ldi	r25, 0x00	; 0
    15f0:	0e 94 f3 19 	call	0x33e6	; 0x33e6 <strtok>
    15f4:	00 97       	sbiw	r24, 0x00	; 0
    15f6:	09 f0       	breq	.+2      	; 0x15fa <_Z13getSystemTimev+0xcc>
    15f8:	b9 cf       	rjmp	.-142    	; 0x156c <_Z13getSystemTimev+0x3e>
    15fa:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    15fe:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    1602:	82 e1       	ldi	r24, 0x12	; 18
    1604:	92 e0       	ldi	r25, 0x02	; 2
    1606:	d0 de       	rcall	.-608    	; 0x13a8 <_Z12sendToServerPci>
    1608:	0e 94 94 17 	call	0x2f28	; 0x2f28 <_Z13clearReadLinev>
    160c:	81 e0       	ldi	r24, 0x01	; 1
    160e:	01 c0       	rjmp	.+2      	; 0x1612 <_Z13getSystemTimev+0xe4>
    1610:	80 e0       	ldi	r24, 0x00	; 0
    1612:	df 91       	pop	r29
    1614:	cf 91       	pop	r28
    1616:	1f 91       	pop	r17
    1618:	0f 91       	pop	r16
    161a:	ff 90       	pop	r15
    161c:	ef 90       	pop	r14
    161e:	08 95       	ret

00001620 <_Z15setSerialNumberv>:
    1620:	0f 93       	push	r16
    1622:	1f 93       	push	r17
    1624:	cf 93       	push	r28
    1626:	df 93       	push	r29
    1628:	cd b7       	in	r28, 0x3d	; 61
    162a:	de b7       	in	r29, 0x3e	; 62
    162c:	e2 97       	sbiw	r28, 0x32	; 50
    162e:	0f b6       	in	r0, 0x3f	; 63
    1630:	f8 94       	cli
    1632:	de bf       	out	0x3e, r29	; 62
    1634:	0f be       	out	0x3f, r0	; 63
    1636:	cd bf       	out	0x3d, r28	; 61
    1638:	6b e1       	ldi	r22, 0x1B	; 27
    163a:	72 e0       	ldi	r23, 0x02	; 2
    163c:	84 ec       	ldi	r24, 0xC4	; 196
    163e:	99 e0       	ldi	r25, 0x09	; 9
    1640:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
    1644:	89 2b       	or	r24, r25
    1646:	a9 f1       	breq	.+106    	; 0x16b2 <_Z15setSerialNumberv+0x92>
    1648:	69 e2       	ldi	r22, 0x29	; 41
    164a:	72 e0       	ldi	r23, 0x02	; 2
    164c:	84 ec       	ldi	r24, 0xC4	; 196
    164e:	99 e0       	ldi	r25, 0x09	; 9
    1650:	0e 94 f3 19 	call	0x33e6	; 0x33e6 <strtok>
    1654:	69 e2       	ldi	r22, 0x29	; 41
    1656:	72 e0       	ldi	r23, 0x02	; 2
    1658:	80 e0       	ldi	r24, 0x00	; 0
    165a:	90 e0       	ldi	r25, 0x00	; 0
    165c:	0e 94 f3 19 	call	0x33e6	; 0x33e6 <strtok>
    1660:	bc 01       	movw	r22, r24
    1662:	86 e8       	ldi	r24, 0x86	; 134
    1664:	9c e0       	ldi	r25, 0x0C	; 12
    1666:	0e 94 13 1a 	call	0x3426	; 0x3426 <strcpy>
    166a:	89 e0       	ldi	r24, 0x09	; 9
    166c:	eb e2       	ldi	r30, 0x2B	; 43
    166e:	f2 e0       	ldi	r31, 0x02	; 2
    1670:	8e 01       	movw	r16, r28
    1672:	0f 5f       	subi	r16, 0xFF	; 255
    1674:	1f 4f       	sbci	r17, 0xFF	; 255
    1676:	d8 01       	movw	r26, r16
    1678:	01 90       	ld	r0, Z+
    167a:	0d 92       	st	X+, r0
    167c:	8a 95       	dec	r24
    167e:	e1 f7       	brne	.-8      	; 0x1678 <_Z15setSerialNumberv+0x58>
    1680:	66 e8       	ldi	r22, 0x86	; 134
    1682:	7c e0       	ldi	r23, 0x0C	; 12
    1684:	c8 01       	movw	r24, r16
    1686:	0e 94 fd 19 	call	0x33fa	; 0x33fa <strcat>
    168a:	f8 01       	movw	r30, r16
    168c:	01 90       	ld	r0, Z+
    168e:	00 20       	and	r0, r0
    1690:	e9 f7       	brne	.-6      	; 0x168c <_Z15setSerialNumberv+0x6c>
    1692:	31 97       	sbiw	r30, 0x01	; 1
    1694:	83 e2       	ldi	r24, 0x23	; 35
    1696:	90 e0       	ldi	r25, 0x00	; 0
    1698:	91 83       	std	Z+1, r25	; 0x01
    169a:	80 83       	st	Z, r24
    169c:	60 91 9d 01 	lds	r22, 0x019D	; 0x80019d <EEPROM_SERIAL_START>
    16a0:	70 91 9e 01 	lds	r23, 0x019E	; 0x80019e <EEPROM_SERIAL_START+0x1>
    16a4:	c8 01       	movw	r24, r16
    16a6:	0e 94 b7 00 	call	0x16e	; 0x16e <_Z13eepromSaveCfgPKci>
    16aa:	0e 94 94 17 	call	0x2f28	; 0x2f28 <_Z13clearReadLinev>
    16ae:	81 e0       	ldi	r24, 0x01	; 1
    16b0:	01 c0       	rjmp	.+2      	; 0x16b4 <_Z15setSerialNumberv+0x94>
    16b2:	80 e0       	ldi	r24, 0x00	; 0
    16b4:	e2 96       	adiw	r28, 0x32	; 50
    16b6:	0f b6       	in	r0, 0x3f	; 63
    16b8:	f8 94       	cli
    16ba:	de bf       	out	0x3e, r29	; 62
    16bc:	0f be       	out	0x3f, r0	; 63
    16be:	cd bf       	out	0x3d, r28	; 61
    16c0:	df 91       	pop	r29
    16c2:	cf 91       	pop	r28
    16c4:	1f 91       	pop	r17
    16c6:	0f 91       	pop	r16
    16c8:	08 95       	ret

000016ca <_Z17checkSerialNumberv>:
    16ca:	0f 93       	push	r16
    16cc:	1f 93       	push	r17
    16ce:	cf 93       	push	r28
    16d0:	df 93       	push	r29
    16d2:	cd b7       	in	r28, 0x3d	; 61
    16d4:	de b7       	in	r29, 0x3e	; 62
    16d6:	c4 56       	subi	r28, 0x64	; 100
    16d8:	d1 09       	sbc	r29, r1
    16da:	0f b6       	in	r0, 0x3f	; 63
    16dc:	f8 94       	cli
    16de:	de bf       	out	0x3e, r29	; 62
    16e0:	0f be       	out	0x3f, r0	; 63
    16e2:	cd bf       	out	0x3d, r28	; 61
    16e4:	21 e0       	ldi	r18, 0x01	; 1
    16e6:	30 e0       	ldi	r19, 0x00	; 0
    16e8:	44 e3       	ldi	r20, 0x34	; 52
    16ea:	52 e0       	ldi	r21, 0x02	; 2
    16ec:	6f e0       	ldi	r22, 0x0F	; 15
    16ee:	70 e0       	ldi	r23, 0x00	; 0
    16f0:	86 e8       	ldi	r24, 0x86	; 134
    16f2:	9c e0       	ldi	r25, 0x0C	; 12
    16f4:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <_Z19eepromReadAttributePciS_i>
    16f8:	81 11       	cpse	r24, r1
    16fa:	32 c0       	rjmp	.+100    	; 0x1760 <_Z17checkSerialNumberv+0x96>
    16fc:	0e 94 94 17 	call	0x2f28	; 0x2f28 <_Z13clearReadLinev>
    1700:	87 e1       	ldi	r24, 0x17	; 23
    1702:	eb e3       	ldi	r30, 0x3B	; 59
    1704:	f2 e0       	ldi	r31, 0x02	; 2
    1706:	8e 01       	movw	r16, r28
    1708:	0f 5f       	subi	r16, 0xFF	; 255
    170a:	1f 4f       	sbci	r17, 0xFF	; 255
    170c:	d8 01       	movw	r26, r16
    170e:	01 90       	ld	r0, Z+
    1710:	0d 92       	st	X+, r0
    1712:	8a 95       	dec	r24
    1714:	e1 f7       	brne	.-8      	; 0x170e <_Z17checkSerialNumberv+0x44>
    1716:	68 ed       	ldi	r22, 0xD8	; 216
    1718:	71 e0       	ldi	r23, 0x01	; 1
    171a:	c8 01       	movw	r24, r16
    171c:	0e 94 fd 19 	call	0x33fa	; 0x33fa <strcat>
    1720:	f8 01       	movw	r30, r16
    1722:	01 90       	ld	r0, Z+
    1724:	00 20       	and	r0, r0
    1726:	e9 f7       	brne	.-6      	; 0x1722 <_Z17checkSerialNumberv+0x58>
    1728:	31 97       	sbiw	r30, 0x01	; 1
    172a:	8a e0       	ldi	r24, 0x0A	; 10
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	91 83       	std	Z+1, r25	; 0x01
    1730:	80 83       	st	Z, r24
    1732:	88 ee       	ldi	r24, 0xE8	; 232
    1734:	93 e0       	ldi	r25, 0x03	; 3
    1736:	0e 94 dc 15 	call	0x2bb8	; 0x2bb8 <_Z5delayi>
    173a:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    173e:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    1742:	c8 01       	movw	r24, r16
    1744:	31 de       	rcall	.-926    	; 0x13a8 <_Z12sendToServerPci>
    1746:	6f e0       	ldi	r22, 0x0F	; 15
    1748:	70 e0       	ldi	r23, 0x00	; 0
    174a:	8b e1       	ldi	r24, 0x1B	; 27
    174c:	92 e0       	ldi	r25, 0x02	; 2
    174e:	1c dd       	rcall	.-1480   	; 0x1188 <_Z9readUntilPKci>
    1750:	84 e6       	ldi	r24, 0x64	; 100
    1752:	90 e0       	ldi	r25, 0x00	; 0
    1754:	0e 94 dc 15 	call	0x2bb8	; 0x2bb8 <_Z5delayi>
    1758:	63 df       	rcall	.-314    	; 0x1620 <_Z15setSerialNumberv>
    175a:	81 11       	cpse	r24, r1
    175c:	22 c0       	rjmp	.+68     	; 0x17a2 <_Z17checkSerialNumberv+0xd8>
    175e:	26 c0       	rjmp	.+76     	; 0x17ac <_Z17checkSerialNumberv+0xe2>
    1760:	8f e0       	ldi	r24, 0x0F	; 15
    1762:	e3 e4       	ldi	r30, 0x43	; 67
    1764:	f2 e0       	ldi	r31, 0x02	; 2
    1766:	8e 01       	movw	r16, r28
    1768:	0f 5f       	subi	r16, 0xFF	; 255
    176a:	1f 4f       	sbci	r17, 0xFF	; 255
    176c:	d8 01       	movw	r26, r16
    176e:	01 90       	ld	r0, Z+
    1770:	0d 92       	st	X+, r0
    1772:	8a 95       	dec	r24
    1774:	e1 f7       	brne	.-8      	; 0x176e <_Z17checkSerialNumberv+0xa4>
    1776:	66 e8       	ldi	r22, 0x86	; 134
    1778:	7c e0       	ldi	r23, 0x0C	; 12
    177a:	c8 01       	movw	r24, r16
    177c:	0e 94 fd 19 	call	0x33fa	; 0x33fa <strcat>
    1780:	f8 01       	movw	r30, r16
    1782:	01 90       	ld	r0, Z+
    1784:	00 20       	and	r0, r0
    1786:	e9 f7       	brne	.-6      	; 0x1782 <_Z17checkSerialNumberv+0xb8>
    1788:	31 97       	sbiw	r30, 0x01	; 1
    178a:	8b e3       	ldi	r24, 0x3B	; 59
    178c:	9a e0       	ldi	r25, 0x0A	; 10
    178e:	a0 e0       	ldi	r26, 0x00	; 0
    1790:	80 83       	st	Z, r24
    1792:	91 83       	std	Z+1, r25	; 0x01
    1794:	a2 83       	std	Z+2, r26	; 0x02
    1796:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    179a:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    179e:	c8 01       	movw	r24, r16
    17a0:	03 de       	rcall	.-1018   	; 0x13a8 <_Z12sendToServerPci>
    17a2:	84 e6       	ldi	r24, 0x64	; 100
    17a4:	90 e0       	ldi	r25, 0x00	; 0
    17a6:	0e 94 dc 15 	call	0x2bb8	; 0x2bb8 <_Z5delayi>
    17aa:	81 e0       	ldi	r24, 0x01	; 1
    17ac:	cc 59       	subi	r28, 0x9C	; 156
    17ae:	df 4f       	sbci	r29, 0xFF	; 255
    17b0:	0f b6       	in	r0, 0x3f	; 63
    17b2:	f8 94       	cli
    17b4:	de bf       	out	0x3e, r29	; 62
    17b6:	0f be       	out	0x3f, r0	; 63
    17b8:	cd bf       	out	0x3d, r28	; 61
    17ba:	df 91       	pop	r29
    17bc:	cf 91       	pop	r28
    17be:	1f 91       	pop	r17
    17c0:	0f 91       	pop	r16
    17c2:	08 95       	ret

000017c4 <_Z13connectToWifiPKcS0_>:
    17c4:	0f 93       	push	r16
    17c6:	1f 93       	push	r17
    17c8:	cf 93       	push	r28
    17ca:	df 93       	push	r29
    17cc:	8c 01       	movw	r16, r24
    17ce:	eb 01       	movw	r28, r22
    17d0:	82 e5       	ldi	r24, 0x52	; 82
    17d2:	92 e0       	ldi	r25, 0x02	; 2
    17d4:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    17d8:	63 e0       	ldi	r22, 0x03	; 3
    17da:	70 e0       	ldi	r23, 0x00	; 0
    17dc:	8a e0       	ldi	r24, 0x0A	; 10
    17de:	92 e0       	ldi	r25, 0x02	; 2
    17e0:	d3 dc       	rcall	.-1626   	; 0x1188 <_Z9readUntilPKci>
    17e2:	8f e5       	ldi	r24, 0x5F	; 95
    17e4:	92 e0       	ldi	r25, 0x02	; 2
    17e6:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    17ea:	63 e0       	ldi	r22, 0x03	; 3
    17ec:	70 e0       	ldi	r23, 0x00	; 0
    17ee:	8a e0       	ldi	r24, 0x0A	; 10
    17f0:	92 e0       	ldi	r25, 0x02	; 2
    17f2:	ca dc       	rcall	.-1644   	; 0x1188 <_Z9readUntilPKci>
    17f4:	8d e6       	ldi	r24, 0x6D	; 109
    17f6:	92 e0       	ldi	r25, 0x02	; 2
    17f8:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    17fc:	63 e0       	ldi	r22, 0x03	; 3
    17fe:	70 e0       	ldi	r23, 0x00	; 0
    1800:	8a e0       	ldi	r24, 0x0A	; 10
    1802:	92 e0       	ldi	r25, 0x02	; 2
    1804:	c1 dc       	rcall	.-1662   	; 0x1188 <_Z9readUntilPKci>
    1806:	8b e7       	ldi	r24, 0x7B	; 123
    1808:	92 e0       	ldi	r25, 0x02	; 2
    180a:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    180e:	63 e0       	ldi	r22, 0x03	; 3
    1810:	70 e0       	ldi	r23, 0x00	; 0
    1812:	8a e0       	ldi	r24, 0x0A	; 10
    1814:	92 e0       	ldi	r25, 0x02	; 2
    1816:	b8 dc       	rcall	.-1680   	; 0x1188 <_Z9readUntilPKci>
    1818:	84 ea       	ldi	r24, 0xA4	; 164
    181a:	92 e0       	ldi	r25, 0x02	; 2
    181c:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    1820:	63 e0       	ldi	r22, 0x03	; 3
    1822:	70 e0       	ldi	r23, 0x00	; 0
    1824:	8a e0       	ldi	r24, 0x0A	; 10
    1826:	92 e0       	ldi	r25, 0x02	; 2
    1828:	af dc       	rcall	.-1698   	; 0x1188 <_Z9readUntilPKci>
    182a:	88 eb       	ldi	r24, 0xB8	; 184
    182c:	92 e0       	ldi	r25, 0x02	; 2
    182e:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    1832:	63 e0       	ldi	r22, 0x03	; 3
    1834:	70 e0       	ldi	r23, 0x00	; 0
    1836:	8a e0       	ldi	r24, 0x0A	; 10
    1838:	92 e0       	ldi	r25, 0x02	; 2
    183a:	a6 dc       	rcall	.-1716   	; 0x1188 <_Z9readUntilPKci>
    183c:	87 ed       	ldi	r24, 0xD7	; 215
    183e:	92 e0       	ldi	r25, 0x02	; 2
    1840:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    1844:	63 e0       	ldi	r22, 0x03	; 3
    1846:	70 e0       	ldi	r23, 0x00	; 0
    1848:	8a e0       	ldi	r24, 0x0A	; 10
    184a:	92 e0       	ldi	r25, 0x02	; 2
    184c:	9d dc       	rcall	.-1734   	; 0x1188 <_Z9readUntilPKci>
    184e:	82 ee       	ldi	r24, 0xE2	; 226
    1850:	92 e0       	ldi	r25, 0x02	; 2
    1852:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    1856:	c8 01       	movw	r24, r16
    1858:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    185c:	89 e4       	ldi	r24, 0x49	; 73
    185e:	93 e0       	ldi	r25, 0x03	; 3
    1860:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    1864:	ce 01       	movw	r24, r28
    1866:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    186a:	83 ed       	ldi	r24, 0xD3	; 211
    186c:	92 e0       	ldi	r25, 0x02	; 2
    186e:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
    1872:	6a e0       	ldi	r22, 0x0A	; 10
    1874:	70 e0       	ldi	r23, 0x00	; 0
    1876:	8a e0       	ldi	r24, 0x0A	; 10
    1878:	92 e0       	ldi	r25, 0x02	; 2
    187a:	86 dc       	rcall	.-1780   	; 0x1188 <_Z9readUntilPKci>
    187c:	89 2b       	or	r24, r25
    187e:	19 f0       	breq	.+6      	; 0x1886 <_Z13connectToWifiPKcS0_+0xc2>
    1880:	80 91 b3 03 	lds	r24, 0x03B3	; 0x8003b3 <TRUE>
    1884:	02 c0       	rjmp	.+4      	; 0x188a <_Z13connectToWifiPKcS0_+0xc6>
    1886:	80 91 b1 03 	lds	r24, 0x03B1	; 0x8003b1 <FALSE>
    188a:	df 91       	pop	r29
    188c:	cf 91       	pop	r28
    188e:	1f 91       	pop	r17
    1890:	0f 91       	pop	r16
    1892:	08 95       	ret

00001894 <_Z21exchangeMandatoryInfov>:




char exchangeMandatoryInfo(){
    1894:	cf 93       	push	r28
	// Send HELLO to SERVER
	__network_data.is_server_connected = TRUE;
    1896:	c0 91 b3 03 	lds	r28, 0x03B3	; 0x8003b3 <TRUE>
    189a:	c0 93 c3 09 	sts	0x09C3, r28	; 0x8009c3 <__network_data+0xb1>
	if (getSystemTime() == 0){
    189e:	47 de       	rcall	.-882    	; 0x152e <_Z13getSystemTimev>
    18a0:	81 11       	cpse	r24, r1
    18a2:	05 c0       	rjmp	.+10     	; 0x18ae <_Z21exchangeMandatoryInfov+0x1a>
		__network_data.is_server_connected = FALSE;
    18a4:	80 91 b1 03 	lds	r24, 0x03B1	; 0x8003b1 <FALSE>
    18a8:	80 93 c3 09 	sts	0x09C3, r24	; 0x8009c3 <__network_data+0xb1>
		return 0;
    18ac:	0d c0       	rjmp	.+26     	; 0x18c8 <_Z21exchangeMandatoryInfov+0x34>
	}
	if (checkSerialNumber() == 0){
    18ae:	0d df       	rcall	.-486    	; 0x16ca <_Z17checkSerialNumberv>
    18b0:	81 11       	cpse	r24, r1
    18b2:	05 c0       	rjmp	.+10     	; 0x18be <_Z21exchangeMandatoryInfov+0x2a>
		__network_data.is_server_connected = FALSE;
    18b4:	80 91 b1 03 	lds	r24, 0x03B1	; 0x8003b1 <FALSE>
    18b8:	80 93 c3 09 	sts	0x09C3, r24	; 0x8009c3 <__network_data+0xb1>
		return 0;
    18bc:	05 c0       	rjmp	.+10     	; 0x18c8 <_Z21exchangeMandatoryInfov+0x34>
	}
	__network_data.is_server_connected = TRUE;
    18be:	c0 93 c3 09 	sts	0x09C3, r28	; 0x8009c3 <__network_data+0xb1>
	clearReadLine();
    18c2:	0e 94 94 17 	call	0x2f28	; 0x2f28 <_Z13clearReadLinev>
    18c6:	01 c0       	rjmp	.+2      	; 0x18ca <_Z21exchangeMandatoryInfov+0x36>
    18c8:	80 e0       	ldi	r24, 0x00	; 0
}
    18ca:	cf 91       	pop	r28
    18cc:	08 95       	ret

000018ce <_Z15connectToServerPKcS0_>:

char connectToServer(const char *host, const char *port) {
    18ce:	0f 93       	push	r16
    18d0:	1f 93       	push	r17
    18d2:	cf 93       	push	r28
    18d4:	df 93       	push	r29
    18d6:	8c 01       	movw	r16, r24
    18d8:	eb 01       	movw	r28, r22
		//USART0_SendString("AT+CIPMUX=1\r\n");
		//if (readUntil("OK", 2) == 0) return 0;
	}

	// AT+CIPSTART    Connect to server , replace variables
	clearReadLine();
    18da:	0e 94 94 17 	call	0x2f28	; 0x2f28 <_Z13clearReadLinev>

	if (__system_var.interface_ == ESP) {
    18de:	20 91 c4 0c 	lds	r18, 0x0CC4	; 0x800cc4 <__system_var+0x3e>
    18e2:	30 e0       	ldi	r19, 0x00	; 0
    18e4:	80 91 b7 03 	lds	r24, 0x03B7	; 0x8003b7 <ESP>
    18e8:	90 91 b8 03 	lds	r25, 0x03B8	; 0x8003b8 <ESP+0x1>
    18ec:	28 17       	cp	r18, r24
    18ee:	39 07       	cpc	r19, r25
    18f0:	91 f4       	brne	.+36     	; 0x1916 <_Z15connectToServerPKcS0_+0x48>
		USART0_SendString("AT+CIPSTART=0,\"TCP\",\"");
    18f2:	87 e3       	ldi	r24, 0x37	; 55
    18f4:	93 e0       	ldi	r25, 0x03	; 3
    18f6:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
		USART0_SendString(host);
    18fa:	c8 01       	movw	r24, r16
    18fc:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
		USART0_SendString("\",");
    1900:	8d e4       	ldi	r24, 0x4D	; 77
    1902:	93 e0       	ldi	r25, 0x03	; 3
    1904:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
		USART0_SendString(port);
    1908:	ce 01       	movw	r24, r28
    190a:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
		USART0_SendString("\r\n");
    190e:	8b ea       	ldi	r24, 0xAB	; 171
    1910:	96 e0       	ldi	r25, 0x06	; 6
    1912:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
	}
	if (__system_var.interface_ == SIM) {
    1916:	20 91 c4 0c 	lds	r18, 0x0CC4	; 0x800cc4 <__system_var+0x3e>
    191a:	30 e0       	ldi	r19, 0x00	; 0
    191c:	80 91 b5 03 	lds	r24, 0x03B5	; 0x8003b5 <SIM>
    1920:	90 91 b6 03 	lds	r25, 0x03B6	; 0x8003b6 <SIM+0x1>
    1924:	28 17       	cp	r18, r24
    1926:	39 07       	cpc	r19, r25
    1928:	91 f4       	brne	.+36     	; 0x194e <_Z15connectToServerPKcS0_+0x80>
		USART0_SendString("AT+CIPSTART=\"TCP\",\"");
    192a:	80 e5       	ldi	r24, 0x50	; 80
    192c:	93 e0       	ldi	r25, 0x03	; 3
    192e:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
		USART0_SendString(host);
    1932:	c8 01       	movw	r24, r16
    1934:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
		USART0_SendString("\",\"");
    1938:	89 e4       	ldi	r24, 0x49	; 73
    193a:	93 e0       	ldi	r25, 0x03	; 3
    193c:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
		USART0_SendString(port);
    1940:	ce 01       	movw	r24, r28
    1942:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
		USART0_SendString("\"\r");
    1946:	89 e2       	ldi	r24, 0x29	; 41
    1948:	93 e0       	ldi	r25, 0x03	; 3
    194a:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
	}
	
	if (readUntil("OK",10) == 1){
    194e:	6a e0       	ldi	r22, 0x0A	; 10
    1950:	70 e0       	ldi	r23, 0x00	; 0
    1952:	8a e0       	ldi	r24, 0x0A	; 10
    1954:	92 e0       	ldi	r25, 0x02	; 2
    1956:	18 dc       	rcall	.-2000   	; 0x1188 <_Z9readUntilPKci>
    1958:	21 e0       	ldi	r18, 0x01	; 1
    195a:	01 97       	sbiw	r24, 0x01	; 1
    195c:	09 f0       	breq	.+2      	; 0x1960 <_Z15connectToServerPKcS0_+0x92>
    195e:	20 e0       	ldi	r18, 0x00	; 0
		return 1;
	}
	return 0;

}
    1960:	82 2f       	mov	r24, r18
    1962:	df 91       	pop	r29
    1964:	cf 91       	pop	r28
    1966:	1f 91       	pop	r17
    1968:	0f 91       	pop	r16
    196a:	08 95       	ret

0000196c <_Z31getDefaultDevicePoolInformationv>:

char getDefaultDevicePoolInformation(){
    196c:	ef 92       	push	r14
    196e:	ff 92       	push	r15
    1970:	0f 93       	push	r16
    1972:	1f 93       	push	r17
    1974:	cf 93       	push	r28
    1976:	df 93       	push	r29
    1978:	cd b7       	in	r28, 0x3d	; 61
    197a:	de b7       	in	r29, 0x3e	; 62
    197c:	68 97       	sbiw	r28, 0x18	; 24
    197e:	0f b6       	in	r0, 0x3f	; 63
    1980:	f8 94       	cli
    1982:	de bf       	out	0x3e, r29	; 62
    1984:	0f be       	out	0x3f, r0	; 63
    1986:	cd bf       	out	0x3d, r28	; 61
	getDefaultNetworkSetting(__network_data.host, __network_data.port);
    1988:	66 e7       	ldi	r22, 0x76	; 118
    198a:	79 e0       	ldi	r23, 0x09	; 9
    198c:	82 e1       	ldi	r24, 0x12	; 18
    198e:	99 e0       	ldi	r25, 0x09	; 9
    1990:	0e 94 0f 04 	call	0x81e	; 0x81e <_Z24getDefaultNetworkSettingPcS_>
	if (connectToServer(__network_data.host, __network_data.port) == 1){
    1994:	66 e7       	ldi	r22, 0x76	; 118
    1996:	79 e0       	ldi	r23, 0x09	; 9
    1998:	82 e1       	ldi	r24, 0x12	; 18
    199a:	99 e0       	ldi	r25, 0x09	; 9
    199c:	98 df       	rcall	.-208    	; 0x18ce <_Z15connectToServerPKcS0_>
    199e:	18 2f       	mov	r17, r24
    19a0:	81 30       	cpi	r24, 0x01	; 1
    19a2:	09 f0       	breq	.+2      	; 0x19a6 <_Z31getDefaultDevicePoolInformationv+0x3a>
    19a4:	8b c0       	rjmp	.+278    	; 0x1abc <_Z31getDefaultDevicePoolInformationv+0x150>
		char productName[20];
		char success = 0;
		strcpy(productName,PRODUCT_NAME);
    19a6:	68 ed       	ldi	r22, 0xD8	; 216
    19a8:	71 e0       	ldi	r23, 0x01	; 1
    19aa:	ce 01       	movw	r24, r28
    19ac:	01 96       	adiw	r24, 0x01	; 1
    19ae:	7c 01       	movw	r14, r24
    19b0:	0e 94 13 1a 	call	0x3426	; 0x3426 <strcpy>
		strcat(productName,"\n");
    19b4:	f7 01       	movw	r30, r14
    19b6:	01 90       	ld	r0, Z+
    19b8:	00 20       	and	r0, r0
    19ba:	e9 f7       	brne	.-6      	; 0x19b6 <_Z31getDefaultDevicePoolInformationv+0x4a>
    19bc:	31 97       	sbiw	r30, 0x01	; 1
    19be:	8a e0       	ldi	r24, 0x0A	; 10
    19c0:	90 e0       	ldi	r25, 0x00	; 0
    19c2:	91 83       	std	Z+1, r25	; 0x01
    19c4:	80 83       	st	Z, r24
		__network_data.is_server_connected = TRUE;
    19c6:	80 91 b3 03 	lds	r24, 0x03B3	; 0x8003b3 <TRUE>
    19ca:	80 93 c3 09 	sts	0x09C3, r24	; 0x8009c3 <__network_data+0xb1>
		delay(500);
    19ce:	84 ef       	ldi	r24, 0xF4	; 244
    19d0:	91 e0       	ldi	r25, 0x01	; 1
    19d2:	0e 94 dc 15 	call	0x2bb8	; 0x2bb8 <_Z5delayi>
		sendToServer(productName,CONNECTION);
    19d6:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    19da:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    19de:	c7 01       	movw	r24, r14
    19e0:	e3 dc       	rcall	.-1594   	; 0x13a8 <_Z12sendToServerPci>
		if (readUntil("HOST", 10) == 1) {
    19e2:	6a e0       	ldi	r22, 0x0A	; 10
    19e4:	70 e0       	ldi	r23, 0x00	; 0
    19e6:	84 e6       	ldi	r24, 0x64	; 100
    19e8:	93 e0       	ldi	r25, 0x03	; 3
    19ea:	ce db       	rcall	.-2148   	; 0x1188 <_Z9readUntilPKci>
    19ec:	01 97       	sbiw	r24, 0x01	; 1
    19ee:	09 f0       	breq	.+2      	; 0x19f2 <_Z31getDefaultDevicePoolInformationv+0x86>
    19f0:	63 c0       	rjmp	.+198    	; 0x1ab8 <_Z31getDefaultDevicePoolInformationv+0x14c>
			char *p1,*p2,*p3,*save_ptr1,*save_ptr2;
			delay(100);
    19f2:	84 e6       	ldi	r24, 0x64	; 100
    19f4:	90 e0       	ldi	r25, 0x00	; 0
    19f6:	0e 94 dc 15 	call	0x2bb8	; 0x2bb8 <_Z5delayi>
			p3 = strstr(__network_data.esp_buffer,"HOST");
    19fa:	64 e6       	ldi	r22, 0x64	; 100
    19fc:	73 e0       	ldi	r23, 0x03	; 3
    19fe:	84 ec       	ldi	r24, 0xC4	; 196
    1a00:	99 e0       	ldi	r25, 0x09	; 9
    1a02:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
			p2 = strstr(p3,"HOST");
    1a06:	64 e6       	ldi	r22, 0x64	; 100
    1a08:	73 e0       	ldi	r23, 0x03	; 3
    1a0a:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
			p1 = strtok_r(p2,";",&save_ptr1);
    1a0e:	ae 01       	movw	r20, r28
    1a10:	49 5e       	subi	r20, 0xE9	; 233
    1a12:	5f 4f       	sbci	r21, 0xFF	; 255
    1a14:	60 ec       	ldi	r22, 0xC0	; 192
    1a16:	73 e0       	ldi	r23, 0x03	; 3
    1a18:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
			while (p1 != 0){
    1a1c:	00 97       	sbiw	r24, 0x00	; 0
    1a1e:	09 f4       	brne	.+2      	; 0x1a22 <_Z31getDefaultDevicePoolInformationv+0xb6>
    1a20:	4b c0       	rjmp	.+150    	; 0x1ab8 <_Z31getDefaultDevicePoolInformationv+0x14c>
    1a22:	00 e0       	ldi	r16, 0x00	; 0
				
				p2 = strtok_r(p1,"=",&save_ptr2);
    1a24:	ae 01       	movw	r20, r28
    1a26:	4b 5e       	subi	r20, 0xEB	; 235
    1a28:	5f 4f       	sbci	r21, 0xFF	; 255
    1a2a:	6c ef       	ldi	r22, 0xFC	; 252
    1a2c:	71 e0       	ldi	r23, 0x01	; 1
    1a2e:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
    1a32:	7c 01       	movw	r14, r24
				
				if (strstr(p2,"HOST") !=0 ){
    1a34:	64 e6       	ldi	r22, 0x64	; 100
    1a36:	73 e0       	ldi	r23, 0x03	; 3
    1a38:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
    1a3c:	89 2b       	or	r24, r25
    1a3e:	81 f0       	breq	.+32     	; 0x1a60 <_Z31getDefaultDevicePoolInformationv+0xf4>
					p2 = strtok_r(0,"=",&save_ptr2);
    1a40:	ae 01       	movw	r20, r28
    1a42:	4b 5e       	subi	r20, 0xEB	; 235
    1a44:	5f 4f       	sbci	r21, 0xFF	; 255
    1a46:	6c ef       	ldi	r22, 0xFC	; 252
    1a48:	71 e0       	ldi	r23, 0x01	; 1
    1a4a:	80 e0       	ldi	r24, 0x00	; 0
    1a4c:	90 e0       	ldi	r25, 0x00	; 0
    1a4e:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
    1a52:	7c 01       	movw	r14, r24
					strcpy(__network_data.host,p2);
    1a54:	bc 01       	movw	r22, r24
    1a56:	82 e1       	ldi	r24, 0x12	; 18
    1a58:	99 e0       	ldi	r25, 0x09	; 9
    1a5a:	0e 94 13 1a 	call	0x3426	; 0x3426 <strcpy>
					success++;
    1a5e:	0f 5f       	subi	r16, 0xFF	; 255
				}
				if (strstr(p2,"PORT") !=0 ){
    1a60:	69 e6       	ldi	r22, 0x69	; 105
    1a62:	73 e0       	ldi	r23, 0x03	; 3
    1a64:	c7 01       	movw	r24, r14
    1a66:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
    1a6a:	89 2b       	or	r24, r25
    1a6c:	79 f0       	breq	.+30     	; 0x1a8c <_Z31getDefaultDevicePoolInformationv+0x120>
					p2 = strtok_r(0,"=",&save_ptr2);
    1a6e:	ae 01       	movw	r20, r28
    1a70:	4b 5e       	subi	r20, 0xEB	; 235
    1a72:	5f 4f       	sbci	r21, 0xFF	; 255
    1a74:	6c ef       	ldi	r22, 0xFC	; 252
    1a76:	71 e0       	ldi	r23, 0x01	; 1
    1a78:	80 e0       	ldi	r24, 0x00	; 0
    1a7a:	90 e0       	ldi	r25, 0x00	; 0
    1a7c:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
					strcpy(__network_data.port,p2);
    1a80:	bc 01       	movw	r22, r24
    1a82:	86 e7       	ldi	r24, 0x76	; 118
    1a84:	99 e0       	ldi	r25, 0x09	; 9
    1a86:	0e 94 13 1a 	call	0x3426	; 0x3426 <strcpy>
					success++;
    1a8a:	0f 5f       	subi	r16, 0xFF	; 255
				}
				
				p1 = strtok_r(0,";",&save_ptr1);
    1a8c:	ae 01       	movw	r20, r28
    1a8e:	49 5e       	subi	r20, 0xE9	; 233
    1a90:	5f 4f       	sbci	r21, 0xFF	; 255
    1a92:	60 ec       	ldi	r22, 0xC0	; 192
    1a94:	73 e0       	ldi	r23, 0x03	; 3
    1a96:	80 e0       	ldi	r24, 0x00	; 0
    1a98:	90 e0       	ldi	r25, 0x00	; 0
    1a9a:	0e 94 34 1a 	call	0x3468	; 0x3468 <strtok_r>
			char *p1,*p2,*p3,*save_ptr1,*save_ptr2;
			delay(100);
			p3 = strstr(__network_data.esp_buffer,"HOST");
			p2 = strstr(p3,"HOST");
			p1 = strtok_r(p2,";",&save_ptr1);
			while (p1 != 0){
    1a9e:	00 97       	sbiw	r24, 0x00	; 0
    1aa0:	09 f6       	brne	.-126    	; 0x1a24 <_Z31getDefaultDevicePoolInformationv+0xb8>
					success++;
				}
				
				p1 = strtok_r(0,";",&save_ptr1);
			}
			if (success == 2){
    1aa2:	02 30       	cpi	r16, 0x02	; 2
    1aa4:	49 f4       	brne	.+18     	; 0x1ab8 <_Z31getDefaultDevicePoolInformationv+0x14c>
				USART0_SendString("AT+CIPCLOSE=0\r\n");
    1aa6:	8e e6       	ldi	r24, 0x6E	; 110
    1aa8:	93 e0       	ldi	r25, 0x03	; 3
    1aaa:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <_Z17USART0_SendStringPKc>
				delay(500);
    1aae:	84 ef       	ldi	r24, 0xF4	; 244
    1ab0:	91 e0       	ldi	r25, 0x01	; 1
    1ab2:	0e 94 dc 15 	call	0x2bb8	; 0x2bb8 <_Z5delayi>
    1ab6:	03 c0       	rjmp	.+6      	; 0x1abe <_Z31getDefaultDevicePoolInformationv+0x152>
				return 1;
			}
			
		}
	}
	return 0;
    1ab8:	10 e0       	ldi	r17, 0x00	; 0
    1aba:	01 c0       	rjmp	.+2      	; 0x1abe <_Z31getDefaultDevicePoolInformationv+0x152>
    1abc:	10 e0       	ldi	r17, 0x00	; 0
}
    1abe:	81 2f       	mov	r24, r17
    1ac0:	68 96       	adiw	r28, 0x18	; 24
    1ac2:	0f b6       	in	r0, 0x3f	; 63
    1ac4:	f8 94       	cli
    1ac6:	de bf       	out	0x3e, r29	; 62
    1ac8:	0f be       	out	0x3f, r0	; 63
    1aca:	cd bf       	out	0x3d, r28	; 61
    1acc:	df 91       	pop	r29
    1ace:	cf 91       	pop	r28
    1ad0:	1f 91       	pop	r17
    1ad2:	0f 91       	pop	r16
    1ad4:	ff 90       	pop	r15
    1ad6:	ef 90       	pop	r14
    1ad8:	08 95       	ret

00001ada <_Z10networkingv>:

void networking() {
    1ada:	1f 93       	push	r17
    1adc:	cf 93       	push	r28
    1ade:	df 93       	push	r29
	

	if (__system_time.connection_timer_buffer >= __system_time.connection_timer) {
    1ae0:	ee ee       	ldi	r30, 0xEE	; 238
    1ae2:	f8 e0       	ldi	r31, 0x08	; 8
    1ae4:	22 89       	ldd	r18, Z+18	; 0x12
    1ae6:	33 89       	ldd	r19, Z+19	; 0x13
    1ae8:	80 89       	ldd	r24, Z+16	; 0x10
    1aea:	91 89       	ldd	r25, Z+17	; 0x11
    1aec:	28 17       	cp	r18, r24
    1aee:	39 07       	cpc	r19, r25
    1af0:	0c f4       	brge	.+2      	; 0x1af4 <_Z10networkingv+0x1a>
    1af2:	97 c0       	rjmp	.+302    	; 0x1c22 <_Z10networkingv+0x148>
		
		if ( __network_data.is_server_connected != TRUE ) {
    1af4:	80 91 c3 09 	lds	r24, 0x09C3	; 0x8009c3 <__network_data+0xb1>
    1af8:	90 e0       	ldi	r25, 0x00	; 0
    1afa:	20 91 b3 03 	lds	r18, 0x03B3	; 0x8003b3 <TRUE>
    1afe:	30 91 b4 03 	lds	r19, 0x03B4	; 0x8003b4 <TRUE+0x1>
    1b02:	82 17       	cp	r24, r18
    1b04:	93 07       	cpc	r25, r19
    1b06:	09 f4       	brne	.+2      	; 0x1b0a <_Z10networkingv+0x30>
    1b08:	88 c0       	rjmp	.+272    	; 0x1c1a <_Z10networkingv+0x140>
			char connected = FALSE;
    1b0a:	c0 91 b1 03 	lds	r28, 0x03B1	; 0x8003b1 <FALSE>
    1b0e:	d0 91 b2 03 	lds	r29, 0x03B2	; 0x8003b2 <FALSE+0x1>
			setSource(ESP);
    1b12:	80 91 b7 03 	lds	r24, 0x03B7	; 0x8003b7 <ESP>
    1b16:	90 91 b8 03 	lds	r25, 0x03B8	; 0x8003b8 <ESP+0x1>
    1b1a:	0e 94 a4 16 	call	0x2d48	; 0x2d48 <_Z9setSourcei>
			__network_data.is_esp_connected = connectToWifi(__network_data.ssid, __network_data.password);
    1b1e:	69 e9       	ldi	r22, 0x99	; 153
    1b20:	79 e0       	ldi	r23, 0x09	; 9
    1b22:	8b e7       	ldi	r24, 0x7B	; 123
    1b24:	99 e0       	ldi	r25, 0x09	; 9
    1b26:	4e de       	rcall	.-868    	; 0x17c4 <_Z13connectToWifiPKcS0_>
    1b28:	80 93 c1 09 	sts	0x09C1, r24	; 0x8009c1 <__network_data+0xaf>

			if (!__network_data.is_esp_connected) {
    1b2c:	81 11       	cpse	r24, r1
    1b2e:	0f c0       	rjmp	.+30     	; 0x1b4e <_Z10networkingv+0x74>
				setSource(SIM);
    1b30:	80 91 b5 03 	lds	r24, 0x03B5	; 0x8003b5 <SIM>
    1b34:	90 91 b6 03 	lds	r25, 0x03B6	; 0x8003b6 <SIM+0x1>
    1b38:	0e 94 a4 16 	call	0x2d48	; 0x2d48 <_Z9setSourcei>
				//__network_data.is_sim_connected = connectToGprs(__network_data.apn);
			}
			
			if (__network_data.is_esp_connected || __network_data.is_sim_connected){
    1b3c:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <__network_data+0xaf>
    1b40:	81 11       	cpse	r24, r1
    1b42:	05 c0       	rjmp	.+10     	; 0x1b4e <_Z10networkingv+0x74>
    1b44:	80 91 c2 09 	lds	r24, 0x09C2	; 0x8009c2 <__network_data+0xb0>
    1b48:	88 23       	and	r24, r24
    1b4a:	09 f4       	brne	.+2      	; 0x1b4e <_Z10networkingv+0x74>
    1b4c:	53 c0       	rjmp	.+166    	; 0x1bf4 <_Z10networkingv+0x11a>
	

	if (__system_time.connection_timer_buffer >= __system_time.connection_timer) {
		
		if ( __network_data.is_server_connected != TRUE ) {
			char connected = FALSE;
    1b4e:	1c 2f       	mov	r17, r28
				//__network_data.is_sim_connected = connectToGprs(__network_data.apn);
			}
			
			if (__network_data.is_esp_connected || __network_data.is_sim_connected){
				
				if (getPrimaryNetworkSetting(__network_data.host, __network_data.port) != 0){
    1b50:	66 e7       	ldi	r22, 0x76	; 118
    1b52:	79 e0       	ldi	r23, 0x09	; 9
    1b54:	82 e1       	ldi	r24, 0x12	; 18
    1b56:	99 e0       	ldi	r25, 0x09	; 9
    1b58:	0e 94 ff 02 	call	0x5fe	; 0x5fe <_Z24getPrimaryNetworkSettingPcS_>
    1b5c:	89 2b       	or	r24, r25
    1b5e:	49 f0       	breq	.+18     	; 0x1b72 <_Z10networkingv+0x98>
					
					if (connectToServer(__network_data.host, __network_data.port) != 0){
    1b60:	66 e7       	ldi	r22, 0x76	; 118
    1b62:	79 e0       	ldi	r23, 0x09	; 9
    1b64:	82 e1       	ldi	r24, 0x12	; 18
    1b66:	99 e0       	ldi	r25, 0x09	; 9
    1b68:	b2 de       	rcall	.-668    	; 0x18ce <_Z15connectToServerPKcS0_>
    1b6a:	88 23       	and	r24, r24
    1b6c:	21 f0       	breq	.+8      	; 0x1b76 <_Z10networkingv+0x9c>
						connected = exchangeMandatoryInfo();
    1b6e:	92 de       	rcall	.-732    	; 0x1894 <_Z21exchangeMandatoryInfov>
    1b70:	03 c0       	rjmp	.+6      	; 0x1b78 <_Z10networkingv+0x9e>
	

	if (__system_time.connection_timer_buffer >= __system_time.connection_timer) {
		
		if ( __network_data.is_server_connected != TRUE ) {
			char connected = FALSE;
    1b72:	8c 2f       	mov	r24, r28
    1b74:	01 c0       	rjmp	.+2      	; 0x1b78 <_Z10networkingv+0x9e>
				if (getPrimaryNetworkSetting(__network_data.host, __network_data.port) != 0){
					
					if (connectToServer(__network_data.host, __network_data.port) != 0){
						connected = exchangeMandatoryInfo();
					} else {
						connected = FALSE;
    1b76:	8c 2f       	mov	r24, r28
					}				
				}
				if (connected == FALSE && getSecondaryNetworkSetting(__network_data.host, __network_data.port) != 0){
    1b78:	28 2f       	mov	r18, r24
    1b7a:	30 e0       	ldi	r19, 0x00	; 0
    1b7c:	c2 17       	cp	r28, r18
    1b7e:	d3 07       	cpc	r29, r19
    1b80:	69 f5       	brne	.+90     	; 0x1bdc <_Z10networkingv+0x102>
    1b82:	66 e7       	ldi	r22, 0x76	; 118
    1b84:	79 e0       	ldi	r23, 0x09	; 9
    1b86:	82 e1       	ldi	r24, 0x12	; 18
    1b88:	99 e0       	ldi	r25, 0x09	; 9
    1b8a:	0e 94 87 03 	call	0x70e	; 0x70e <_Z26getSecondaryNetworkSettingPcS_>
    1b8e:	89 2b       	or	r24, r25
    1b90:	a9 f0       	breq	.+42     	; 0x1bbc <_Z10networkingv+0xe2>
					USART0_SendString("secondary\n");
    1b92:	8e e7       	ldi	r24, 0x7E	; 126
    1b94:	93 e0       	ldi	r25, 0x03	; 3
    1b96:	f4 d7       	rcall	.+4072   	; 0x2b80 <_Z17USART0_SendStringPKc>
					delay(500);
    1b98:	84 ef       	ldi	r24, 0xF4	; 244
    1b9a:	91 e0       	ldi	r25, 0x01	; 1
    1b9c:	0e 94 dc 15 	call	0x2bb8	; 0x2bb8 <_Z5delayi>
					if (connectToServer(__network_data.host, __network_data.port) != 0){
    1ba0:	66 e7       	ldi	r22, 0x76	; 118
    1ba2:	79 e0       	ldi	r23, 0x09	; 9
    1ba4:	82 e1       	ldi	r24, 0x12	; 18
    1ba6:	99 e0       	ldi	r25, 0x09	; 9
    1ba8:	92 de       	rcall	.-732    	; 0x18ce <_Z15connectToServerPKcS0_>
    1baa:	88 23       	and	r24, r24
    1bac:	11 f0       	breq	.+4      	; 0x1bb2 <_Z10networkingv+0xd8>
						connected = exchangeMandatoryInfo();
    1bae:	72 de       	rcall	.-796    	; 0x1894 <_Z21exchangeMandatoryInfov>
    1bb0:	18 2f       	mov	r17, r24
					} else {
						connected = FALSE;
					}
				}
				if (connected == FALSE && getDefaultDevicePoolInformation() != 0){
    1bb2:	81 2f       	mov	r24, r17
    1bb4:	90 e0       	ldi	r25, 0x00	; 0
    1bb6:	c8 17       	cp	r28, r24
    1bb8:	d9 07       	cpc	r29, r25
    1bba:	81 f4       	brne	.+32     	; 0x1bdc <_Z10networkingv+0x102>
    1bbc:	d7 de       	rcall	.-594    	; 0x196c <_Z31getDefaultDevicePoolInformationv>
    1bbe:	88 23       	and	r24, r24
    1bc0:	69 f0       	breq	.+26     	; 0x1bdc <_Z10networkingv+0x102>
					USART0_SendString("default\n");
    1bc2:	89 e8       	ldi	r24, 0x89	; 137
    1bc4:	93 e0       	ldi	r25, 0x03	; 3
    1bc6:	dc d7       	rcall	.+4024   	; 0x2b80 <_Z17USART0_SendStringPKc>
					delay(500);
    1bc8:	84 ef       	ldi	r24, 0xF4	; 244
    1bca:	91 e0       	ldi	r25, 0x01	; 1
    1bcc:	f5 d7       	rcall	.+4074   	; 0x2bb8 <_Z5delayi>
					if (connectToServer(__network_data.host, __network_data.port) != 0){
    1bce:	66 e7       	ldi	r22, 0x76	; 118
    1bd0:	79 e0       	ldi	r23, 0x09	; 9
    1bd2:	82 e1       	ldi	r24, 0x12	; 18
    1bd4:	99 e0       	ldi	r25, 0x09	; 9
    1bd6:	7b de       	rcall	.-778    	; 0x18ce <_Z15connectToServerPKcS0_>
    1bd8:	81 11       	cpse	r24, r1
						connected = exchangeMandatoryInfo();
    1bda:	5c de       	rcall	.-840    	; 0x1894 <_Z21exchangeMandatoryInfov>
						connected = FALSE;
					}
				}
			}

			if (!(__network_data.is_sim_connected || __network_data.is_esp_connected ) || !__network_data.is_server_connected) {
    1bdc:	80 91 c2 09 	lds	r24, 0x09C2	; 0x8009c2 <__network_data+0xb0>
    1be0:	81 11       	cpse	r24, r1
    1be2:	04 c0       	rjmp	.+8      	; 0x1bec <_Z10networkingv+0x112>
    1be4:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <__network_data+0xaf>
    1be8:	88 23       	and	r24, r24
    1bea:	21 f0       	breq	.+8      	; 0x1bf4 <_Z10networkingv+0x11a>
    1bec:	80 91 c3 09 	lds	r24, 0x09C3	; 0x8009c3 <__network_data+0xb1>
    1bf0:	81 11       	cpse	r24, r1
    1bf2:	0d c0       	rjmp	.+26     	; 0x1c0e <_Z10networkingv+0x134>
				if (__system_time.connection_timer <= 600) __system_time.connection_timer += 20;
    1bf4:	80 91 fe 08 	lds	r24, 0x08FE	; 0x8008fe <__system_time+0x10>
    1bf8:	90 91 ff 08 	lds	r25, 0x08FF	; 0x8008ff <__system_time+0x11>
    1bfc:	89 35       	cpi	r24, 0x59	; 89
    1bfe:	22 e0       	ldi	r18, 0x02	; 2
    1c00:	92 07       	cpc	r25, r18
    1c02:	2c f4       	brge	.+10     	; 0x1c0e <_Z10networkingv+0x134>
    1c04:	44 96       	adiw	r24, 0x14	; 20
    1c06:	90 93 ff 08 	sts	0x08FF, r25	; 0x8008ff <__system_time+0x11>
    1c0a:	80 93 fe 08 	sts	0x08FE, r24	; 0x8008fe <__system_time+0x10>
			}
			__system_time.check_timer_buffer = 0;
    1c0e:	ee ee       	ldi	r30, 0xEE	; 238
    1c10:	f8 e0       	ldi	r31, 0x08	; 8
    1c12:	17 8a       	std	Z+23, r1	; 0x17
    1c14:	16 8a       	std	Z+22, r1	; 0x16
			__system_time.relay_module_check_timer_buffer = 0;
    1c16:	13 8e       	std	Z+27, r1	; 0x1b
    1c18:	12 8e       	std	Z+26, r1	; 0x1a

		}
		__system_time.connection_timer_buffer = 0;
    1c1a:	10 92 01 09 	sts	0x0901, r1	; 0x800901 <__system_time+0x13>
    1c1e:	10 92 00 09 	sts	0x0900, r1	; 0x800900 <__system_time+0x12>
		
	}
}
    1c22:	df 91       	pop	r29
    1c24:	cf 91       	pop	r28
    1c26:	1f 91       	pop	r17
    1c28:	08 95       	ret

00001c2a <_Z12saveUserDatav>:
*  Author: tjozsa
*/
#include <Processes.h>
#include <HCM.h>

void saveUserData(){
    1c2a:	ef 92       	push	r14
    1c2c:	ff 92       	push	r15
    1c2e:	0f 93       	push	r16
    1c30:	1f 93       	push	r17
    1c32:	cf 93       	push	r28
    1c34:	df 93       	push	r29
    1c36:	cd b7       	in	r28, 0x3d	; 61
    1c38:	de b7       	in	r29, 0x3e	; 62
    1c3a:	c0 5a       	subi	r28, 0xA0	; 160
    1c3c:	d1 09       	sbc	r29, r1
    1c3e:	0f b6       	in	r0, 0x3f	; 63
    1c40:	f8 94       	cli
    1c42:	de bf       	out	0x3e, r29	; 62
    1c44:	0f be       	out	0x3f, r0	; 63
    1c46:	cd bf       	out	0x3d, r28	; 61
	char buffer[160];
	clearEEPROM(EEPROM_DATA_START,EEPROM_CFG_START);
    1c48:	e0 90 9f 01 	lds	r14, 0x019F	; 0x80019f <EEPROM_DATA_START>
    1c4c:	f0 90 a0 01 	lds	r15, 0x01A0	; 0x8001a0 <EEPROM_DATA_START+0x1>
    1c50:	60 91 a1 01 	lds	r22, 0x01A1	; 0x8001a1 <EEPROM_CFG_START>
    1c54:	70 91 a2 01 	lds	r23, 0x01A2	; 0x8001a2 <EEPROM_CFG_START+0x1>
    1c58:	c7 01       	movw	r24, r14
    1c5a:	0e 94 d5 00 	call	0x1aa	; 0x1aa <_Z11clearEEPROMii>
	strcpy(buffer,"#SSID;");
    1c5e:	87 e0       	ldi	r24, 0x07	; 7
    1c60:	eb eb       	ldi	r30, 0xBB	; 187
    1c62:	f3 e0       	ldi	r31, 0x03	; 3
    1c64:	8e 01       	movw	r16, r28
    1c66:	0f 5f       	subi	r16, 0xFF	; 255
    1c68:	1f 4f       	sbci	r17, 0xFF	; 255
    1c6a:	d8 01       	movw	r26, r16
    1c6c:	01 90       	ld	r0, Z+
    1c6e:	0d 92       	st	X+, r0
    1c70:	8a 95       	dec	r24
    1c72:	e1 f7       	brne	.-8      	; 0x1c6c <_Z12saveUserDatav+0x42>
	strcat(buffer,__network_data.ssid);
    1c74:	6b e7       	ldi	r22, 0x7B	; 123
    1c76:	79 e0       	ldi	r23, 0x09	; 9
    1c78:	c8 01       	movw	r24, r16
    1c7a:	0e 94 fd 19 	call	0x33fa	; 0x33fa <strcat>
	strcat(buffer,"##PWD;");
    1c7e:	d8 01       	movw	r26, r16
    1c80:	0d 90       	ld	r0, X+
    1c82:	00 20       	and	r0, r0
    1c84:	e9 f7       	brne	.-6      	; 0x1c80 <_Z12saveUserDatav+0x56>
    1c86:	11 97       	sbiw	r26, 0x01	; 1
    1c88:	87 e0       	ldi	r24, 0x07	; 7
    1c8a:	e2 ec       	ldi	r30, 0xC2	; 194
    1c8c:	f3 e0       	ldi	r31, 0x03	; 3
    1c8e:	01 90       	ld	r0, Z+
    1c90:	0d 92       	st	X+, r0
    1c92:	8a 95       	dec	r24
    1c94:	e1 f7       	brne	.-8      	; 0x1c8e <_Z12saveUserDatav+0x64>
	strcat(buffer,__network_data.password);
    1c96:	69 e9       	ldi	r22, 0x99	; 153
    1c98:	79 e0       	ldi	r23, 0x09	; 9
    1c9a:	c8 01       	movw	r24, r16
    1c9c:	0e 94 fd 19 	call	0x33fa	; 0x33fa <strcat>
	strcat(buffer,"##APN;");
    1ca0:	d8 01       	movw	r26, r16
    1ca2:	0d 90       	ld	r0, X+
    1ca4:	00 20       	and	r0, r0
    1ca6:	e9 f7       	brne	.-6      	; 0x1ca2 <_Z12saveUserDatav+0x78>
    1ca8:	11 97       	sbiw	r26, 0x01	; 1
    1caa:	87 e0       	ldi	r24, 0x07	; 7
    1cac:	e9 ec       	ldi	r30, 0xC9	; 201
    1cae:	f3 e0       	ldi	r31, 0x03	; 3
    1cb0:	01 90       	ld	r0, Z+
    1cb2:	0d 92       	st	X+, r0
    1cb4:	8a 95       	dec	r24
    1cb6:	e1 f7       	brne	.-8      	; 0x1cb0 <_Z12saveUserDatav+0x86>
	strcat(buffer,__network_data.apn);
    1cb8:	67 eb       	ldi	r22, 0xB7	; 183
    1cba:	79 e0       	ldi	r23, 0x09	; 9
    1cbc:	c8 01       	movw	r24, r16
    1cbe:	0e 94 fd 19 	call	0x33fa	; 0x33fa <strcat>
	strcat(buffer,"#");
    1cc2:	f8 01       	movw	r30, r16
    1cc4:	01 90       	ld	r0, Z+
    1cc6:	00 20       	and	r0, r0
    1cc8:	e9 f7       	brne	.-6      	; 0x1cc4 <_Z12saveUserDatav+0x9a>
    1cca:	31 97       	sbiw	r30, 0x01	; 1
    1ccc:	83 e2       	ldi	r24, 0x23	; 35
    1cce:	90 e0       	ldi	r25, 0x00	; 0
    1cd0:	91 83       	std	Z+1, r25	; 0x01
    1cd2:	80 83       	st	Z, r24
	USART0_SendString(buffer);
    1cd4:	c8 01       	movw	r24, r16
    1cd6:	54 d7       	rcall	.+3752   	; 0x2b80 <_Z17USART0_SendStringPKc>
	delay(500);
    1cd8:	84 ef       	ldi	r24, 0xF4	; 244
    1cda:	91 e0       	ldi	r25, 0x01	; 1
    1cdc:	6d d7       	rcall	.+3802   	; 0x2bb8 <_Z5delayi>
	__system_var.eeprom_position = EEPROM_DATA_START;
    1cde:	f0 92 c8 0c 	sts	0x0CC8, r15	; 0x800cc8 <__system_var+0x42>
    1ce2:	e0 92 c7 0c 	sts	0x0CC7, r14	; 0x800cc7 <__system_var+0x41>
	eepromSaveCfg(buffer,__system_var.eeprom_position);
    1ce6:	b7 01       	movw	r22, r14
    1ce8:	c8 01       	movw	r24, r16
    1cea:	0e 94 b7 00 	call	0x16e	; 0x16e <_Z13eepromSaveCfgPKci>
}
    1cee:	c0 56       	subi	r28, 0x60	; 96
    1cf0:	df 4f       	sbci	r29, 0xFF	; 255
    1cf2:	0f b6       	in	r0, 0x3f	; 63
    1cf4:	f8 94       	cli
    1cf6:	de bf       	out	0x3e, r29	; 62
    1cf8:	0f be       	out	0x3f, r0	; 63
    1cfa:	cd bf       	out	0x3d, r28	; 61
    1cfc:	df 91       	pop	r29
    1cfe:	cf 91       	pop	r28
    1d00:	1f 91       	pop	r17
    1d02:	0f 91       	pop	r16
    1d04:	ff 90       	pop	r15
    1d06:	ef 90       	pop	r14
    1d08:	08 95       	ret

00001d0a <_Z6WebAppv>:

void WebApp(){
    1d0a:	8f 92       	push	r8
    1d0c:	9f 92       	push	r9
    1d0e:	af 92       	push	r10
    1d10:	bf 92       	push	r11
    1d12:	cf 92       	push	r12
    1d14:	df 92       	push	r13
    1d16:	ef 92       	push	r14
    1d18:	ff 92       	push	r15
    1d1a:	0f 93       	push	r16
    1d1c:	1f 93       	push	r17
    1d1e:	cf 93       	push	r28
    1d20:	df 93       	push	r29
    1d22:	cd b7       	in	r28, 0x3d	; 61
    1d24:	de b7       	in	r29, 0x3e	; 62
    1d26:	c1 54       	subi	r28, 0x41	; 65
    1d28:	d7 40       	sbci	r29, 0x07	; 7
    1d2a:	0f b6       	in	r0, 0x3f	; 63
    1d2c:	f8 94       	cli
    1d2e:	de bf       	out	0x3e, r29	; 62
    1d30:	0f be       	out	0x3f, r0	; 63
    1d32:	cd bf       	out	0x3d, r28	; 61
	
	if (strstr(__network_data.esp_buffer, "GET / HTTP/") != 0){
    1d34:	60 ed       	ldi	r22, 0xD0	; 208
    1d36:	73 e0       	ldi	r23, 0x03	; 3
    1d38:	84 ec       	ldi	r24, 0xC4	; 196
    1d3a:	99 e0       	ldi	r25, 0x09	; 9
    1d3c:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
    1d40:	89 2b       	or	r24, r25
    1d42:	09 f4       	brne	.+2      	; 0x1d46 <_Z6WebAppv+0x3c>
    1d44:	24 c1       	rjmp	.+584    	; 0x1f8e <_Z6WebAppv+0x284>
		char content[850];
		char page[1000];
		int contentLength;
		char converter[5];
		char connection[2];
		char *p = strstr(__network_data.esp_buffer,",CONNECT");
    1d46:	6c ed       	ldi	r22, 0xDC	; 220
    1d48:	73 e0       	ldi	r23, 0x03	; 3
    1d4a:	84 ec       	ldi	r24, 0xC4	; 196
    1d4c:	99 e0       	ldi	r25, 0x09	; 9
    1d4e:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
		connection[0] = *(p-1);
    1d52:	01 97       	sbiw	r24, 0x01	; 1
    1d54:	fc 01       	movw	r30, r24
    1d56:	80 81       	ld	r24, Z
    1d58:	c0 5c       	subi	r28, 0xC0	; 192
    1d5a:	d8 4f       	sbci	r29, 0xF8	; 248
    1d5c:	88 83       	st	Y, r24
    1d5e:	c0 54       	subi	r28, 0x40	; 64
    1d60:	d7 40       	sbci	r29, 0x07	; 7
		connection[1] = '\0';
    1d62:	cf 5b       	subi	r28, 0xBF	; 191
    1d64:	d8 4f       	sbci	r29, 0xF8	; 248
    1d66:	18 82       	st	Y, r1
    1d68:	c1 54       	subi	r28, 0x41	; 65
    1d6a:	d7 40       	sbci	r29, 0x07	; 7
		delay(500);
    1d6c:	84 ef       	ldi	r24, 0xF4	; 244
    1d6e:	91 e0       	ldi	r25, 0x01	; 1
    1d70:	23 d7       	rcall	.+3654   	; 0x2bb8 <_Z5delayi>
		strcpy(content,"<html><head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0\"></head><body>");
    1d72:	7e 01       	movw	r14, r28
    1d74:	f7 e1       	ldi	r31, 0x17	; 23
    1d76:	ef 1a       	sub	r14, r31
    1d78:	fc ef       	ldi	r31, 0xFC	; 252
    1d7a:	ff 0a       	sbc	r15, r31
    1d7c:	83 e7       	ldi	r24, 0x73	; 115
    1d7e:	e5 ee       	ldi	r30, 0xE5	; 229
    1d80:	f3 e0       	ldi	r31, 0x03	; 3
    1d82:	d7 01       	movw	r26, r14
    1d84:	01 90       	ld	r0, Z+
    1d86:	0d 92       	st	X+, r0
    1d88:	8a 95       	dec	r24
    1d8a:	e1 f7       	brne	.-8      	; 0x1d84 <_Z6WebAppv+0x7a>
		strcat(content,"<title>HCM Console</title>");
    1d8c:	d7 01       	movw	r26, r14
    1d8e:	0d 90       	ld	r0, X+
    1d90:	00 20       	and	r0, r0
    1d92:	e9 f7       	brne	.-6      	; 0x1d8e <_Z6WebAppv+0x84>
    1d94:	11 97       	sbiw	r26, 0x01	; 1
    1d96:	8b e1       	ldi	r24, 0x1B	; 27
    1d98:	e8 e5       	ldi	r30, 0x58	; 88
    1d9a:	f4 e0       	ldi	r31, 0x04	; 4
    1d9c:	01 90       	ld	r0, Z+
    1d9e:	0d 92       	st	X+, r0
    1da0:	8a 95       	dec	r24
    1da2:	e1 f7       	brne	.-8      	; 0x1d9c <_Z6WebAppv+0x92>
		strcat(content,"<div style=\"font-size: medium; text-align: center;\"><span>");
    1da4:	d7 01       	movw	r26, r14
    1da6:	0d 90       	ld	r0, X+
    1da8:	00 20       	and	r0, r0
    1daa:	e9 f7       	brne	.-6      	; 0x1da6 <_Z6WebAppv+0x9c>
    1dac:	11 97       	sbiw	r26, 0x01	; 1
    1dae:	8b e3       	ldi	r24, 0x3B	; 59
    1db0:	e3 e7       	ldi	r30, 0x73	; 115
    1db2:	f4 e0       	ldi	r31, 0x04	; 4
    1db4:	01 90       	ld	r0, Z+
    1db6:	0d 92       	st	X+, r0
    1db8:	8a 95       	dec	r24
    1dba:	e1 f7       	brne	.-8      	; 0x1db4 <_Z6WebAppv+0xaa>
		strcat(content,"<form method=\"POST\">");
    1dbc:	d7 01       	movw	r26, r14
    1dbe:	0d 90       	ld	r0, X+
    1dc0:	00 20       	and	r0, r0
    1dc2:	e9 f7       	brne	.-6      	; 0x1dbe <_Z6WebAppv+0xb4>
    1dc4:	11 97       	sbiw	r26, 0x01	; 1
    1dc6:	85 e1       	ldi	r24, 0x15	; 21
    1dc8:	ee ea       	ldi	r30, 0xAE	; 174
    1dca:	f4 e0       	ldi	r31, 0x04	; 4
    1dcc:	01 90       	ld	r0, Z+
    1dce:	0d 92       	st	X+, r0
    1dd0:	8a 95       	dec	r24
    1dd2:	e1 f7       	brne	.-8      	; 0x1dcc <_Z6WebAppv+0xc2>
		strcat(content,"<p><strong>SERIAL: ");
    1dd4:	d7 01       	movw	r26, r14
    1dd6:	0d 90       	ld	r0, X+
    1dd8:	00 20       	and	r0, r0
    1dda:	e9 f7       	brne	.-6      	; 0x1dd6 <_Z6WebAppv+0xcc>
    1ddc:	11 97       	sbiw	r26, 0x01	; 1
    1dde:	84 e1       	ldi	r24, 0x14	; 20
    1de0:	e3 ec       	ldi	r30, 0xC3	; 195
    1de2:	f4 e0       	ldi	r31, 0x04	; 4
    1de4:	01 90       	ld	r0, Z+
    1de6:	0d 92       	st	X+, r0
    1de8:	8a 95       	dec	r24
    1dea:	e1 f7       	brne	.-8      	; 0x1de4 <_Z6WebAppv+0xda>
		strcat(content,__system_var.serial_number);
    1dec:	66 e8       	ldi	r22, 0x86	; 134
    1dee:	7c e0       	ldi	r23, 0x0C	; 12
    1df0:	c7 01       	movw	r24, r14
    1df2:	0e 94 fd 19 	call	0x33fa	; 0x33fa <strcat>
		strcat(content,"</strong></p><p><strong>SSID</strong><br><input type=\"text\" name=\"ssid\" value=\"");
    1df6:	d7 01       	movw	r26, r14
    1df8:	0d 90       	ld	r0, X+
    1dfa:	00 20       	and	r0, r0
    1dfc:	e9 f7       	brne	.-6      	; 0x1df8 <_Z6WebAppv+0xee>
    1dfe:	11 97       	sbiw	r26, 0x01	; 1
    1e00:	80 e5       	ldi	r24, 0x50	; 80
    1e02:	e7 ed       	ldi	r30, 0xD7	; 215
    1e04:	f4 e0       	ldi	r31, 0x04	; 4
    1e06:	01 90       	ld	r0, Z+
    1e08:	0d 92       	st	X+, r0
    1e0a:	8a 95       	dec	r24
    1e0c:	e1 f7       	brne	.-8      	; 0x1e06 <_Z6WebAppv+0xfc>
		strcat(content,__network_data.ssid);
    1e0e:	6b e7       	ldi	r22, 0x7B	; 123
    1e10:	79 e0       	ldi	r23, 0x09	; 9
    1e12:	c7 01       	movw	r24, r14
    1e14:	0e 94 fd 19 	call	0x33fa	; 0x33fa <strcat>
		strcat(content,"\"></p>");
    1e18:	d7 01       	movw	r26, r14
    1e1a:	0d 90       	ld	r0, X+
    1e1c:	00 20       	and	r0, r0
    1e1e:	e9 f7       	brne	.-6      	; 0x1e1a <_Z6WebAppv+0x110>
    1e20:	11 97       	sbiw	r26, 0x01	; 1
    1e22:	87 e0       	ldi	r24, 0x07	; 7
    1e24:	e7 e2       	ldi	r30, 0x27	; 39
    1e26:	f5 e0       	ldi	r31, 0x05	; 5
    1e28:	01 90       	ld	r0, Z+
    1e2a:	0d 92       	st	X+, r0
    1e2c:	8a 95       	dec	r24
    1e2e:	e1 f7       	brne	.-8      	; 0x1e28 <_Z6WebAppv+0x11e>
		strcat(content,"<p><strong>PASSWORD</strong><br><input type=\"password\" name=\"password\" value=\"");
    1e30:	d7 01       	movw	r26, r14
    1e32:	0d 90       	ld	r0, X+
    1e34:	00 20       	and	r0, r0
    1e36:	e9 f7       	brne	.-6      	; 0x1e32 <_Z6WebAppv+0x128>
    1e38:	11 97       	sbiw	r26, 0x01	; 1
    1e3a:	8f e4       	ldi	r24, 0x4F	; 79
    1e3c:	ee e2       	ldi	r30, 0x2E	; 46
    1e3e:	f5 e0       	ldi	r31, 0x05	; 5
    1e40:	01 90       	ld	r0, Z+
    1e42:	0d 92       	st	X+, r0
    1e44:	8a 95       	dec	r24
    1e46:	e1 f7       	brne	.-8      	; 0x1e40 <_Z6WebAppv+0x136>
		strcat(content,__network_data.password);
    1e48:	69 e9       	ldi	r22, 0x99	; 153
    1e4a:	79 e0       	ldi	r23, 0x09	; 9
    1e4c:	c7 01       	movw	r24, r14
    1e4e:	0e 94 fd 19 	call	0x33fa	; 0x33fa <strcat>
		strcat(content,"\"></p>");
    1e52:	d7 01       	movw	r26, r14
    1e54:	0d 90       	ld	r0, X+
    1e56:	00 20       	and	r0, r0
    1e58:	e9 f7       	brne	.-6      	; 0x1e54 <_Z6WebAppv+0x14a>
    1e5a:	11 97       	sbiw	r26, 0x01	; 1
    1e5c:	87 e0       	ldi	r24, 0x07	; 7
    1e5e:	e7 e2       	ldi	r30, 0x27	; 39
    1e60:	f5 e0       	ldi	r31, 0x05	; 5
    1e62:	01 90       	ld	r0, Z+
    1e64:	0d 92       	st	X+, r0
    1e66:	8a 95       	dec	r24
    1e68:	e1 f7       	brne	.-8      	; 0x1e62 <_Z6WebAppv+0x158>
		strcat(content,"<p><strong>APN</strong><br><input type=\"text\" name=\"apn\" value=\"");
    1e6a:	d7 01       	movw	r26, r14
    1e6c:	0d 90       	ld	r0, X+
    1e6e:	00 20       	and	r0, r0
    1e70:	e9 f7       	brne	.-6      	; 0x1e6c <_Z6WebAppv+0x162>
    1e72:	11 97       	sbiw	r26, 0x01	; 1
    1e74:	81 e4       	ldi	r24, 0x41	; 65
    1e76:	ed e7       	ldi	r30, 0x7D	; 125
    1e78:	f5 e0       	ldi	r31, 0x05	; 5
    1e7a:	01 90       	ld	r0, Z+
    1e7c:	0d 92       	st	X+, r0
    1e7e:	8a 95       	dec	r24
    1e80:	e1 f7       	brne	.-8      	; 0x1e7a <_Z6WebAppv+0x170>
		strcat(content,__network_data.apn);
    1e82:	67 eb       	ldi	r22, 0xB7	; 183
    1e84:	79 e0       	ldi	r23, 0x09	; 9
    1e86:	c7 01       	movw	r24, r14
    1e88:	0e 94 fd 19 	call	0x33fa	; 0x33fa <strcat>
		strcat(content,"\"></p>");
    1e8c:	d7 01       	movw	r26, r14
    1e8e:	0d 90       	ld	r0, X+
    1e90:	00 20       	and	r0, r0
    1e92:	e9 f7       	brne	.-6      	; 0x1e8e <_Z6WebAppv+0x184>
    1e94:	11 97       	sbiw	r26, 0x01	; 1
    1e96:	87 e0       	ldi	r24, 0x07	; 7
    1e98:	e7 e2       	ldi	r30, 0x27	; 39
    1e9a:	f5 e0       	ldi	r31, 0x05	; 5
    1e9c:	01 90       	ld	r0, Z+
    1e9e:	0d 92       	st	X+, r0
    1ea0:	8a 95       	dec	r24
    1ea2:	e1 f7       	brne	.-8      	; 0x1e9c <_Z6WebAppv+0x192>
		strcat(content,"<p><strong>HOST</strong><br><input type=\"text\" name=\"host\" value=\"");
    1ea4:	d7 01       	movw	r26, r14
    1ea6:	0d 90       	ld	r0, X+
    1ea8:	00 20       	and	r0, r0
    1eaa:	e9 f7       	brne	.-6      	; 0x1ea6 <_Z6WebAppv+0x19c>
    1eac:	11 97       	sbiw	r26, 0x01	; 1
    1eae:	83 e4       	ldi	r24, 0x43	; 67
    1eb0:	ee eb       	ldi	r30, 0xBE	; 190
    1eb2:	f5 e0       	ldi	r31, 0x05	; 5
    1eb4:	01 90       	ld	r0, Z+
    1eb6:	0d 92       	st	X+, r0
    1eb8:	8a 95       	dec	r24
    1eba:	e1 f7       	brne	.-8      	; 0x1eb4 <_Z6WebAppv+0x1aa>
		strcat(content,__network_data.host);
    1ebc:	62 e1       	ldi	r22, 0x12	; 18
    1ebe:	79 e0       	ldi	r23, 0x09	; 9
    1ec0:	c7 01       	movw	r24, r14
    1ec2:	0e 94 fd 19 	call	0x33fa	; 0x33fa <strcat>
		strcat(content,"\"></p>");
    1ec6:	d7 01       	movw	r26, r14
    1ec8:	0d 90       	ld	r0, X+
    1eca:	00 20       	and	r0, r0
    1ecc:	e9 f7       	brne	.-6      	; 0x1ec8 <_Z6WebAppv+0x1be>
    1ece:	11 97       	sbiw	r26, 0x01	; 1
    1ed0:	87 e0       	ldi	r24, 0x07	; 7
    1ed2:	e7 e2       	ldi	r30, 0x27	; 39
    1ed4:	f5 e0       	ldi	r31, 0x05	; 5
    1ed6:	01 90       	ld	r0, Z+
    1ed8:	0d 92       	st	X+, r0
    1eda:	8a 95       	dec	r24
    1edc:	e1 f7       	brne	.-8      	; 0x1ed6 <_Z6WebAppv+0x1cc>
		strcat(content,"<input type=\"submit\"></form></span></div>");
    1ede:	d7 01       	movw	r26, r14
    1ee0:	0d 90       	ld	r0, X+
    1ee2:	00 20       	and	r0, r0
    1ee4:	e9 f7       	brne	.-6      	; 0x1ee0 <_Z6WebAppv+0x1d6>
    1ee6:	11 97       	sbiw	r26, 0x01	; 1
    1ee8:	8a e2       	ldi	r24, 0x2A	; 42
    1eea:	e1 e0       	ldi	r30, 0x01	; 1
    1eec:	f6 e0       	ldi	r31, 0x06	; 6
    1eee:	01 90       	ld	r0, Z+
    1ef0:	0d 92       	st	X+, r0
    1ef2:	8a 95       	dec	r24
    1ef4:	e1 f7       	brne	.-8      	; 0x1eee <_Z6WebAppv+0x1e4>
		strcat(content,"</body></html>");
    1ef6:	d7 01       	movw	r26, r14
    1ef8:	0d 90       	ld	r0, X+
    1efa:	00 20       	and	r0, r0
    1efc:	e9 f7       	brne	.-6      	; 0x1ef8 <_Z6WebAppv+0x1ee>
    1efe:	11 97       	sbiw	r26, 0x01	; 1
    1f00:	8f e0       	ldi	r24, 0x0F	; 15
    1f02:	eb e2       	ldi	r30, 0x2B	; 43
    1f04:	f6 e0       	ldi	r31, 0x06	; 6
    1f06:	01 90       	ld	r0, Z+
    1f08:	0d 92       	st	X+, r0
    1f0a:	8a 95       	dec	r24
    1f0c:	e1 f7       	brne	.-8      	; 0x1f06 <_Z6WebAppv+0x1fc>

		contentLength = strlen(content);
    1f0e:	f7 01       	movw	r30, r14
    1f10:	01 90       	ld	r0, Z+
    1f12:	00 20       	and	r0, r0
    1f14:	e9 f7       	brne	.-6      	; 0x1f10 <_Z6WebAppv+0x206>
    1f16:	cf 01       	movw	r24, r30
    1f18:	01 97       	sbiw	r24, 0x01	; 1

		strcpy(page,"HTTP/1.0 200 OK\r\nContent-Type: text/html; charset=UTF-8\r\nPragma: no-cache\r\nContent-Length: ");
    1f1a:	2c e5       	ldi	r18, 0x5C	; 92
    1f1c:	ea e3       	ldi	r30, 0x3A	; 58
    1f1e:	f6 e0       	ldi	r31, 0x06	; 6
    1f20:	8e 01       	movw	r16, r28
    1f22:	0f 5f       	subi	r16, 0xFF	; 255
    1f24:	1f 4f       	sbci	r17, 0xFF	; 255
    1f26:	d8 01       	movw	r26, r16
    1f28:	01 90       	ld	r0, Z+
    1f2a:	0d 92       	st	X+, r0
    1f2c:	2a 95       	dec	r18
    1f2e:	e1 f7       	brne	.-8      	; 0x1f28 <_Z6WebAppv+0x21e>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    1f30:	4a e0       	ldi	r20, 0x0A	; 10
    1f32:	be 01       	movw	r22, r28
    1f34:	65 5c       	subi	r22, 0xC5	; 197
    1f36:	78 4f       	sbci	r23, 0xF8	; 248
    1f38:	8e 19       	sub	r24, r14
    1f3a:	9f 09       	sbc	r25, r15
    1f3c:	0e 94 5b 1a 	call	0x34b6	; 0x34b6 <__itoa_ncheck>
		strcat(page,itoa(contentLength,converter,10));
    1f40:	bc 01       	movw	r22, r24
    1f42:	c8 01       	movw	r24, r16
    1f44:	0e 94 fd 19 	call	0x33fa	; 0x33fa <strcat>
		strcat(page,"\r\nConnection: close\r\n\r\n");
    1f48:	d8 01       	movw	r26, r16
    1f4a:	0d 90       	ld	r0, X+
    1f4c:	00 20       	and	r0, r0
    1f4e:	e9 f7       	brne	.-6      	; 0x1f4a <_Z6WebAppv+0x240>
    1f50:	11 97       	sbiw	r26, 0x01	; 1
    1f52:	88 e1       	ldi	r24, 0x18	; 24
    1f54:	e6 e9       	ldi	r30, 0x96	; 150
    1f56:	f6 e0       	ldi	r31, 0x06	; 6
    1f58:	01 90       	ld	r0, Z+
    1f5a:	0d 92       	st	X+, r0
    1f5c:	8a 95       	dec	r24
    1f5e:	e1 f7       	brne	.-8      	; 0x1f58 <_Z6WebAppv+0x24e>
		strcat(page,content);
    1f60:	b7 01       	movw	r22, r14
    1f62:	c8 01       	movw	r24, r16
    1f64:	0e 94 fd 19 	call	0x33fa	; 0x33fa <strcat>
		
		sendToAP(page, connection);
    1f68:	be 01       	movw	r22, r28
    1f6a:	60 5c       	subi	r22, 0xC0	; 192
    1f6c:	78 4f       	sbci	r23, 0xF8	; 248
    1f6e:	c8 01       	movw	r24, r16
    1f70:	82 da       	rcall	.-2812   	; 0x1476 <_Z8sendToAPPcS_>
		readUntil("OK",3);
    1f72:	63 e0       	ldi	r22, 0x03	; 3
    1f74:	70 e0       	ldi	r23, 0x00	; 0
    1f76:	8a e0       	ldi	r24, 0x0A	; 10
    1f78:	92 e0       	ldi	r25, 0x02	; 2
    1f7a:	06 d9       	rcall	.-3572   	; 0x1188 <_Z9readUntilPKci>
		clearReadLine();
    1f7c:	d5 d7       	rcall	.+4010   	; 0x2f28 <_Z13clearReadLinev>
		__system_time.connection_timer_buffer = 0;
    1f7e:	ee ee       	ldi	r30, 0xEE	; 238
    1f80:	f8 e0       	ldi	r31, 0x08	; 8
    1f82:	13 8a       	std	Z+19, r1	; 0x13
    1f84:	12 8a       	std	Z+18, r1	; 0x12
		__system_time.connection_timer = 180;
    1f86:	84 eb       	ldi	r24, 0xB4	; 180
    1f88:	90 e0       	ldi	r25, 0x00	; 0
    1f8a:	91 8b       	std	Z+17, r25	; 0x11
    1f8c:	80 8b       	std	Z+16, r24	; 0x10
	}
	
	if (strstr(__network_data.esp_buffer, "host") != 0 && strstr(__network_data.esp_buffer, "password") != 0){
    1f8e:	6e ea       	ldi	r22, 0xAE	; 174
    1f90:	76 e0       	ldi	r23, 0x06	; 6
    1f92:	84 ec       	ldi	r24, 0xC4	; 196
    1f94:	99 e0       	ldi	r25, 0x09	; 9
    1f96:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
    1f9a:	89 2b       	or	r24, r25
    1f9c:	09 f4       	brne	.+2      	; 0x1fa0 <_Z6WebAppv+0x296>
    1f9e:	3a c1       	rjmp	.+628    	; 0x2214 <_Z6WebAppv+0x50a>
    1fa0:	63 eb       	ldi	r22, 0xB3	; 179
    1fa2:	76 e0       	ldi	r23, 0x06	; 6
    1fa4:	84 ec       	ldi	r24, 0xC4	; 196
    1fa6:	99 e0       	ldi	r25, 0x09	; 9
    1fa8:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
    1fac:	89 2b       	or	r24, r25
    1fae:	09 f4       	brne	.+2      	; 0x1fb2 <_Z6WebAppv+0x2a8>
    1fb0:	31 c1       	rjmp	.+610    	; 0x2214 <_Z6WebAppv+0x50a>
		int timeout=0;
		int flag = 0;
		delay(50);
    1fb2:	82 e3       	ldi	r24, 0x32	; 50
    1fb4:	90 e0       	ldi	r25, 0x00	; 0
    1fb6:	00 d6       	rcall	.+3072   	; 0x2bb8 <_Z5delayi>
				memset(__network_data.esp_buffer,' ',sizeof(__network_data.esp_buffer)-1);
				__network_data.index_esp = 0;
			}
		}
		delay(200);*/
		if (strstr(__network_data.esp_buffer,"ssid") != 0){
    1fb8:	6c eb       	ldi	r22, 0xBC	; 188
    1fba:	76 e0       	ldi	r23, 0x06	; 6
    1fbc:	84 ec       	ldi	r24, 0xC4	; 196
    1fbe:	99 e0       	ldi	r25, 0x09	; 9
    1fc0:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
    1fc4:	7c 01       	movw	r14, r24
    1fc6:	89 2b       	or	r24, r25
    1fc8:	81 f1       	breq	.+96     	; 0x202a <_Z6WebAppv+0x320>
			int pos=0;
			char *p1 = strstr(__network_data.esp_buffer,"ssid");
			p1+=5;
			memset(__network_data.ssid,' ',sizeof(__network_data.ssid)-1);
    1fca:	4d e1       	ldi	r20, 0x1D	; 29
    1fcc:	50 e0       	ldi	r21, 0x00	; 0
    1fce:	60 e2       	ldi	r22, 0x20	; 32
    1fd0:	70 e0       	ldi	r23, 0x00	; 0
    1fd2:	8b e7       	ldi	r24, 0x7B	; 123
    1fd4:	99 e0       	ldi	r25, 0x09	; 9
    1fd6:	0e 94 f6 19 	call	0x33ec	; 0x33ec <memset>
			while (1){
				if (pos == sizeof(__network_data.ssid))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
    1fda:	f7 01       	movw	r30, r14
    1fdc:	85 81       	ldd	r24, Z+5	; 0x05
    1fde:	86 32       	cpi	r24, 0x26	; 38
    1fe0:	a1 f0       	breq	.+40     	; 0x200a <_Z6WebAppv+0x300>
    1fe2:	8d 30       	cpi	r24, 0x0D	; 13
    1fe4:	a9 f0       	breq	.+42     	; 0x2010 <_Z6WebAppv+0x306>
    1fe6:	8a 30       	cpi	r24, 0x0A	; 10
    1fe8:	09 f0       	breq	.+2      	; 0x1fec <_Z6WebAppv+0x2e2>
    1fea:	0b c1       	rjmp	.+534    	; 0x2202 <_Z6WebAppv+0x4f8>
    1fec:	14 c0       	rjmp	.+40     	; 0x2016 <_Z6WebAppv+0x30c>
    1fee:	91 91       	ld	r25, Z+
    1ff0:	96 32       	cpi	r25, 0x26	; 38
    1ff2:	99 f0       	breq	.+38     	; 0x201a <_Z6WebAppv+0x310>
    1ff4:	9d 30       	cpi	r25, 0x0D	; 13
    1ff6:	89 f0       	breq	.+34     	; 0x201a <_Z6WebAppv+0x310>
    1ff8:	9a 30       	cpi	r25, 0x0A	; 10
    1ffa:	79 f0       	breq	.+30     	; 0x201a <_Z6WebAppv+0x310>
				__network_data.ssid[pos++] = *p1++;
    1ffc:	2f 5f       	subi	r18, 0xFF	; 255
    1ffe:	3f 4f       	sbci	r19, 0xFF	; 255
    2000:	9d 93       	st	X+, r25
			int pos=0;
			char *p1 = strstr(__network_data.esp_buffer,"ssid");
			p1+=5;
			memset(__network_data.ssid,' ',sizeof(__network_data.ssid)-1);
			while (1){
				if (pos == sizeof(__network_data.ssid))break;
    2002:	2e 31       	cpi	r18, 0x1E	; 30
    2004:	31 05       	cpc	r19, r1
    2006:	99 f7       	brne	.-26     	; 0x1fee <_Z6WebAppv+0x2e4>
    2008:	08 c0       	rjmp	.+16     	; 0x201a <_Z6WebAppv+0x310>
				__network_data.index_esp = 0;
			}
		}
		delay(200);*/
		if (strstr(__network_data.esp_buffer,"ssid") != 0){
			int pos=0;
    200a:	20 e0       	ldi	r18, 0x00	; 0
    200c:	30 e0       	ldi	r19, 0x00	; 0
    200e:	05 c0       	rjmp	.+10     	; 0x201a <_Z6WebAppv+0x310>
    2010:	20 e0       	ldi	r18, 0x00	; 0
    2012:	30 e0       	ldi	r19, 0x00	; 0
    2014:	02 c0       	rjmp	.+4      	; 0x201a <_Z6WebAppv+0x310>
    2016:	20 e0       	ldi	r18, 0x00	; 0
    2018:	30 e0       	ldi	r19, 0x00	; 0
			while (1){
				if (pos == sizeof(__network_data.ssid))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
				__network_data.ssid[pos++] = *p1++;
			}
			__network_data.ssid[pos] = '\0';
    201a:	f9 01       	movw	r30, r18
    201c:	e5 58       	subi	r30, 0x85	; 133
    201e:	f6 4f       	sbci	r31, 0xF6	; 246
    2020:	10 82       	st	Z, r1
			flag++;
    2022:	aa 24       	eor	r10, r10
    2024:	a3 94       	inc	r10
    2026:	b1 2c       	mov	r11, r1
    2028:	02 c0       	rjmp	.+4      	; 0x202e <_Z6WebAppv+0x324>
		__system_time.connection_timer = 180;
	}
	
	if (strstr(__network_data.esp_buffer, "host") != 0 && strstr(__network_data.esp_buffer, "password") != 0){
		int timeout=0;
		int flag = 0;
    202a:	a1 2c       	mov	r10, r1
    202c:	b1 2c       	mov	r11, r1
				__network_data.ssid[pos++] = *p1++;
			}
			__network_data.ssid[pos] = '\0';
			flag++;
		}
		if (strstr(__network_data.esp_buffer,"password") != 0){
    202e:	63 eb       	ldi	r22, 0xB3	; 179
    2030:	76 e0       	ldi	r23, 0x06	; 6
    2032:	84 ec       	ldi	r24, 0xC4	; 196
    2034:	99 e0       	ldi	r25, 0x09	; 9
    2036:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
    203a:	7c 01       	movw	r14, r24
    203c:	89 2b       	or	r24, r25
    203e:	79 f1       	breq	.+94     	; 0x209e <_Z6WebAppv+0x394>
			int pos=0;
			char *p1 = strstr(__network_data.esp_buffer,"password");
			p1+=9;
			memset(__network_data.password,' ',sizeof(__network_data.password)-1);
    2040:	4d e1       	ldi	r20, 0x1D	; 29
    2042:	50 e0       	ldi	r21, 0x00	; 0
    2044:	60 e2       	ldi	r22, 0x20	; 32
    2046:	70 e0       	ldi	r23, 0x00	; 0
    2048:	89 e9       	ldi	r24, 0x99	; 153
    204a:	99 e0       	ldi	r25, 0x09	; 9
    204c:	0e 94 f6 19 	call	0x33ec	; 0x33ec <memset>
			while (1){
				if (pos == sizeof(__network_data.password))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
    2050:	f7 01       	movw	r30, r14
    2052:	81 85       	ldd	r24, Z+9	; 0x09
    2054:	86 32       	cpi	r24, 0x26	; 38
    2056:	a1 f0       	breq	.+40     	; 0x2080 <_Z6WebAppv+0x376>
    2058:	8d 30       	cpi	r24, 0x0D	; 13
    205a:	a9 f0       	breq	.+42     	; 0x2086 <_Z6WebAppv+0x37c>
    205c:	8a 30       	cpi	r24, 0x0A	; 10
    205e:	09 f0       	breq	.+2      	; 0x2062 <_Z6WebAppv+0x358>
    2060:	c7 c0       	rjmp	.+398    	; 0x21f0 <_Z6WebAppv+0x4e6>
    2062:	14 c0       	rjmp	.+40     	; 0x208c <_Z6WebAppv+0x382>
    2064:	91 91       	ld	r25, Z+
    2066:	96 32       	cpi	r25, 0x26	; 38
    2068:	99 f0       	breq	.+38     	; 0x2090 <_Z6WebAppv+0x386>
    206a:	9d 30       	cpi	r25, 0x0D	; 13
    206c:	89 f0       	breq	.+34     	; 0x2090 <_Z6WebAppv+0x386>
    206e:	9a 30       	cpi	r25, 0x0A	; 10
    2070:	79 f0       	breq	.+30     	; 0x2090 <_Z6WebAppv+0x386>
				__network_data.password[pos++] = *p1++;
    2072:	2f 5f       	subi	r18, 0xFF	; 255
    2074:	3f 4f       	sbci	r19, 0xFF	; 255
    2076:	9d 93       	st	X+, r25
			int pos=0;
			char *p1 = strstr(__network_data.esp_buffer,"password");
			p1+=9;
			memset(__network_data.password,' ',sizeof(__network_data.password)-1);
			while (1){
				if (pos == sizeof(__network_data.password))break;
    2078:	2e 31       	cpi	r18, 0x1E	; 30
    207a:	31 05       	cpc	r19, r1
    207c:	99 f7       	brne	.-26     	; 0x2064 <_Z6WebAppv+0x35a>
    207e:	08 c0       	rjmp	.+16     	; 0x2090 <_Z6WebAppv+0x386>
			}
			__network_data.ssid[pos] = '\0';
			flag++;
		}
		if (strstr(__network_data.esp_buffer,"password") != 0){
			int pos=0;
    2080:	20 e0       	ldi	r18, 0x00	; 0
    2082:	30 e0       	ldi	r19, 0x00	; 0
    2084:	05 c0       	rjmp	.+10     	; 0x2090 <_Z6WebAppv+0x386>
    2086:	20 e0       	ldi	r18, 0x00	; 0
    2088:	30 e0       	ldi	r19, 0x00	; 0
    208a:	02 c0       	rjmp	.+4      	; 0x2090 <_Z6WebAppv+0x386>
    208c:	20 e0       	ldi	r18, 0x00	; 0
    208e:	30 e0       	ldi	r19, 0x00	; 0
			while (1){
				if (pos == sizeof(__network_data.password))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
				__network_data.password[pos++] = *p1++;
			}
			__network_data.password[pos] = '\0';
    2090:	f9 01       	movw	r30, r18
    2092:	e7 56       	subi	r30, 0x67	; 103
    2094:	f6 4f       	sbci	r31, 0xF6	; 246
    2096:	10 82       	st	Z, r1
			flag++;
    2098:	ff ef       	ldi	r31, 0xFF	; 255
    209a:	af 1a       	sub	r10, r31
    209c:	bf 0a       	sbc	r11, r31
		}
		
		if (strstr(__network_data.esp_buffer,"apn") != 0){
    209e:	61 ec       	ldi	r22, 0xC1	; 193
    20a0:	76 e0       	ldi	r23, 0x06	; 6
    20a2:	84 ec       	ldi	r24, 0xC4	; 196
    20a4:	99 e0       	ldi	r25, 0x09	; 9
    20a6:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
    20aa:	7c 01       	movw	r14, r24
    20ac:	89 2b       	or	r24, r25
    20ae:	79 f1       	breq	.+94     	; 0x210e <_Z6WebAppv+0x404>
			int pos=0;
			char *p1 = strstr(__network_data.esp_buffer,"apn");
			p1+=4;
			memset(__network_data.apn,' ',sizeof(__network_data.apn)-1);
    20b0:	49 e0       	ldi	r20, 0x09	; 9
    20b2:	50 e0       	ldi	r21, 0x00	; 0
    20b4:	60 e2       	ldi	r22, 0x20	; 32
    20b6:	70 e0       	ldi	r23, 0x00	; 0
    20b8:	87 eb       	ldi	r24, 0xB7	; 183
    20ba:	99 e0       	ldi	r25, 0x09	; 9
    20bc:	0e 94 f6 19 	call	0x33ec	; 0x33ec <memset>
			while (1){
				if (pos == sizeof(__network_data.apn))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
    20c0:	f7 01       	movw	r30, r14
    20c2:	84 81       	ldd	r24, Z+4	; 0x04
    20c4:	86 32       	cpi	r24, 0x26	; 38
    20c6:	a1 f0       	breq	.+40     	; 0x20f0 <_Z6WebAppv+0x3e6>
    20c8:	8d 30       	cpi	r24, 0x0D	; 13
    20ca:	a9 f0       	breq	.+42     	; 0x20f6 <_Z6WebAppv+0x3ec>
    20cc:	8a 30       	cpi	r24, 0x0A	; 10
    20ce:	09 f0       	breq	.+2      	; 0x20d2 <_Z6WebAppv+0x3c8>
    20d0:	86 c0       	rjmp	.+268    	; 0x21de <_Z6WebAppv+0x4d4>
    20d2:	14 c0       	rjmp	.+40     	; 0x20fc <_Z6WebAppv+0x3f2>
    20d4:	91 91       	ld	r25, Z+
    20d6:	96 32       	cpi	r25, 0x26	; 38
    20d8:	99 f0       	breq	.+38     	; 0x2100 <_Z6WebAppv+0x3f6>
    20da:	9d 30       	cpi	r25, 0x0D	; 13
    20dc:	89 f0       	breq	.+34     	; 0x2100 <_Z6WebAppv+0x3f6>
    20de:	9a 30       	cpi	r25, 0x0A	; 10
    20e0:	79 f0       	breq	.+30     	; 0x2100 <_Z6WebAppv+0x3f6>
				__network_data.apn[pos++] = *p1++;
    20e2:	2f 5f       	subi	r18, 0xFF	; 255
    20e4:	3f 4f       	sbci	r19, 0xFF	; 255
    20e6:	9d 93       	st	X+, r25
			int pos=0;
			char *p1 = strstr(__network_data.esp_buffer,"apn");
			p1+=4;
			memset(__network_data.apn,' ',sizeof(__network_data.apn)-1);
			while (1){
				if (pos == sizeof(__network_data.apn))break;
    20e8:	2a 30       	cpi	r18, 0x0A	; 10
    20ea:	31 05       	cpc	r19, r1
    20ec:	99 f7       	brne	.-26     	; 0x20d4 <_Z6WebAppv+0x3ca>
    20ee:	08 c0       	rjmp	.+16     	; 0x2100 <_Z6WebAppv+0x3f6>
			__network_data.password[pos] = '\0';
			flag++;
		}
		
		if (strstr(__network_data.esp_buffer,"apn") != 0){
			int pos=0;
    20f0:	20 e0       	ldi	r18, 0x00	; 0
    20f2:	30 e0       	ldi	r19, 0x00	; 0
    20f4:	05 c0       	rjmp	.+10     	; 0x2100 <_Z6WebAppv+0x3f6>
    20f6:	20 e0       	ldi	r18, 0x00	; 0
    20f8:	30 e0       	ldi	r19, 0x00	; 0
    20fa:	02 c0       	rjmp	.+4      	; 0x2100 <_Z6WebAppv+0x3f6>
    20fc:	20 e0       	ldi	r18, 0x00	; 0
    20fe:	30 e0       	ldi	r19, 0x00	; 0
			while (1){
				if (pos == sizeof(__network_data.apn))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
				__network_data.apn[pos++] = *p1++;
			}
			__network_data.apn[pos] = '\0';
    2100:	f9 01       	movw	r30, r18
    2102:	e9 54       	subi	r30, 0x49	; 73
    2104:	f6 4f       	sbci	r31, 0xF6	; 246
    2106:	10 82       	st	Z, r1
			flag++;
    2108:	ff ef       	ldi	r31, 0xFF	; 255
    210a:	af 1a       	sub	r10, r31
    210c:	bf 0a       	sbc	r11, r31
		}
		
		if (strstr(__network_data.esp_buffer,"host") != 0){
    210e:	6e ea       	ldi	r22, 0xAE	; 174
    2110:	76 e0       	ldi	r23, 0x06	; 6
    2112:	84 ec       	ldi	r24, 0xC4	; 196
    2114:	99 e0       	ldi	r25, 0x09	; 9
    2116:	0e 94 1a 1a 	call	0x3434	; 0x3434 <strstr>
    211a:	6c 01       	movw	r12, r24
    211c:	89 2b       	or	r24, r25
    211e:	09 f4       	brne	.+2      	; 0x2122 <_Z6WebAppv+0x418>
    2120:	45 c0       	rjmp	.+138    	; 0x21ac <_Z6WebAppv+0x4a2>
			int pos=0;
			char *p1 = strstr(__network_data.esp_buffer,"host");
			p1+=5;
			memset(__network_data.host,' ',sizeof(__network_data.host)-1);
    2122:	43 e6       	ldi	r20, 0x63	; 99
    2124:	50 e0       	ldi	r21, 0x00	; 0
    2126:	60 e2       	ldi	r22, 0x20	; 32
    2128:	70 e0       	ldi	r23, 0x00	; 0
    212a:	82 e1       	ldi	r24, 0x12	; 18
    212c:	99 e0       	ldi	r25, 0x09	; 9
    212e:	0e 94 f6 19 	call	0x33ec	; 0x33ec <memset>
			while (1){
				if (pos == sizeof(__network_data.host))break;
				if (*p1 == '\r' || *p1 == '\n') break;
    2132:	f6 01       	movw	r30, r12
    2134:	15 81       	ldd	r17, Z+5	; 0x05
    2136:	1d 30       	cpi	r17, 0x0D	; 13
    2138:	69 f1       	breq	.+90     	; 0x2194 <_Z6WebAppv+0x48a>
    213a:	1a 30       	cpi	r17, 0x0A	; 10
    213c:	71 f1       	breq	.+92     	; 0x219a <_Z6WebAppv+0x490>
    213e:	f6 e0       	ldi	r31, 0x06	; 6
    2140:	cf 0e       	add	r12, r31
    2142:	d1 1c       	adc	r13, r1
    2144:	0f 2e       	mov	r0, r31
    2146:	f2 e1       	ldi	r31, 0x12	; 18
    2148:	8f 2e       	mov	r8, r31
    214a:	f9 e0       	ldi	r31, 0x09	; 9
    214c:	9f 2e       	mov	r9, r31
    214e:	f0 2d       	mov	r31, r0
    2150:	e1 2c       	mov	r14, r1
    2152:	f1 2c       	mov	r15, r1
    2154:	07 c0       	rjmp	.+14     	; 0x2164 <_Z6WebAppv+0x45a>
    2156:	f6 01       	movw	r30, r12
    2158:	11 91       	ld	r17, Z+
    215a:	6f 01       	movw	r12, r30
    215c:	1d 30       	cpi	r17, 0x0D	; 13
    215e:	f9 f0       	breq	.+62     	; 0x219e <_Z6WebAppv+0x494>
    2160:	1a 30       	cpi	r17, 0x0A	; 10
    2162:	e9 f0       	breq	.+58     	; 0x219e <_Z6WebAppv+0x494>
				if (!isalpha(*p1) && !isdigit(*p1) && *p1 != '.') break;
    2164:	81 2f       	mov	r24, r17
    2166:	90 e0       	ldi	r25, 0x00	; 0
    2168:	0e 94 ec 19 	call	0x33d8	; 0x33d8 <isalpha>
    216c:	89 2b       	or	r24, r25
    216e:	39 f4       	brne	.+14     	; 0x217e <_Z6WebAppv+0x474>
    2170:	81 2f       	mov	r24, r17
    2172:	90 e0       	ldi	r25, 0x00	; 0
    2174:	c0 97       	sbiw	r24, 0x30	; 48
    2176:	0a 97       	sbiw	r24, 0x0a	; 10
    2178:	10 f0       	brcs	.+4      	; 0x217e <_Z6WebAppv+0x474>
    217a:	1e 32       	cpi	r17, 0x2E	; 46
    217c:	81 f4       	brne	.+32     	; 0x219e <_Z6WebAppv+0x494>
				__network_data.host[pos++] = *p1++;
    217e:	ff ef       	ldi	r31, 0xFF	; 255
    2180:	ef 1a       	sub	r14, r31
    2182:	ff 0a       	sbc	r15, r31
    2184:	f4 01       	movw	r30, r8
    2186:	11 93       	st	Z+, r17
    2188:	4f 01       	movw	r8, r30
			int pos=0;
			char *p1 = strstr(__network_data.esp_buffer,"host");
			p1+=5;
			memset(__network_data.host,' ',sizeof(__network_data.host)-1);
			while (1){
				if (pos == sizeof(__network_data.host))break;
    218a:	f4 e6       	ldi	r31, 0x64	; 100
    218c:	ef 16       	cp	r14, r31
    218e:	f1 04       	cpc	r15, r1
    2190:	11 f7       	brne	.-60     	; 0x2156 <_Z6WebAppv+0x44c>
    2192:	05 c0       	rjmp	.+10     	; 0x219e <_Z6WebAppv+0x494>
			__network_data.apn[pos] = '\0';
			flag++;
		}
		
		if (strstr(__network_data.esp_buffer,"host") != 0){
			int pos=0;
    2194:	e1 2c       	mov	r14, r1
    2196:	f1 2c       	mov	r15, r1
    2198:	02 c0       	rjmp	.+4      	; 0x219e <_Z6WebAppv+0x494>
    219a:	e1 2c       	mov	r14, r1
    219c:	f1 2c       	mov	r15, r1
				if (pos == sizeof(__network_data.host))break;
				if (*p1 == '\r' || *p1 == '\n') break;
				if (!isalpha(*p1) && !isdigit(*p1) && *p1 != '.') break;
				__network_data.host[pos++] = *p1++;
			}
			__network_data.host[pos] = '\0';
    219e:	f7 01       	movw	r30, r14
    21a0:	ee 5e       	subi	r30, 0xEE	; 238
    21a2:	f6 4f       	sbci	r31, 0xF6	; 246
    21a4:	10 82       	st	Z, r1
			flag++;
    21a6:	8f ef       	ldi	r24, 0xFF	; 255
    21a8:	a8 1a       	sub	r10, r24
    21aa:	b8 0a       	sbc	r11, r24
		}
		
		if (flag == 4){
    21ac:	e4 e0       	ldi	r30, 0x04	; 4
    21ae:	ae 16       	cp	r10, r30
    21b0:	b1 04       	cpc	r11, r1
    21b2:	99 f4       	brne	.+38     	; 0x21da <_Z6WebAppv+0x4d0>
			saveUserData();
    21b4:	3a dd       	rcall	.-1420   	; 0x1c2a <_Z12saveUserDatav>
			__system_time.connection_timer_buffer = 0;
    21b6:	ee ee       	ldi	r30, 0xEE	; 238
    21b8:	f8 e0       	ldi	r31, 0x08	; 8
    21ba:	13 8a       	std	Z+19, r1	; 0x13
    21bc:	12 8a       	std	Z+18, r1	; 0x12
			__system_time.connection_timer = 0;
    21be:	11 8a       	std	Z+17, r1	; 0x11
    21c0:	10 8a       	std	Z+16, r1	; 0x10
			__network_data.is_server_connected = false;
    21c2:	10 92 c3 09 	sts	0x09C3, r1	; 0x8009c3 <__network_data+0xb1>
			__network_data.is_esp_connected = false;
    21c6:	10 92 c1 09 	sts	0x09C1, r1	; 0x8009c1 <__network_data+0xaf>
			USART0_SendString("AT+CIPCLOSE=5\r\n");
    21ca:	85 ec       	ldi	r24, 0xC5	; 197
    21cc:	96 e0       	ldi	r25, 0x06	; 6
    21ce:	d8 d4       	rcall	.+2480   	; 0x2b80 <_Z17USART0_SendStringPKc>
			setSource(ESP);
    21d0:	80 91 b7 03 	lds	r24, 0x03B7	; 0x8003b7 <ESP>
    21d4:	90 91 b8 03 	lds	r25, 0x03B8	; 0x8003b8 <ESP+0x1>
    21d8:	b7 d5       	rcall	.+2926   	; 0x2d48 <_Z9setSourcei>
		}
		clearReadLine();
    21da:	a6 d6       	rcall	.+3404   	; 0x2f28 <_Z13clearReadLinev>
    21dc:	1b c0       	rjmp	.+54     	; 0x2214 <_Z6WebAppv+0x50a>
			p1+=4;
			memset(__network_data.apn,' ',sizeof(__network_data.apn)-1);
			while (1){
				if (pos == sizeof(__network_data.apn))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
				__network_data.apn[pos++] = *p1++;
    21de:	80 93 b7 09 	sts	0x09B7, r24	; 0x8009b7 <__network_data+0xa5>
    21e2:	f7 01       	movw	r30, r14
    21e4:	35 96       	adiw	r30, 0x05	; 5
    21e6:	a8 eb       	ldi	r26, 0xB8	; 184
    21e8:	b9 e0       	ldi	r27, 0x09	; 9
    21ea:	21 e0       	ldi	r18, 0x01	; 1
    21ec:	30 e0       	ldi	r19, 0x00	; 0
    21ee:	72 cf       	rjmp	.-284    	; 0x20d4 <_Z6WebAppv+0x3ca>
			p1+=9;
			memset(__network_data.password,' ',sizeof(__network_data.password)-1);
			while (1){
				if (pos == sizeof(__network_data.password))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
				__network_data.password[pos++] = *p1++;
    21f0:	80 93 99 09 	sts	0x0999, r24	; 0x800999 <__network_data+0x87>
    21f4:	f7 01       	movw	r30, r14
    21f6:	3a 96       	adiw	r30, 0x0a	; 10
    21f8:	aa e9       	ldi	r26, 0x9A	; 154
    21fa:	b9 e0       	ldi	r27, 0x09	; 9
    21fc:	21 e0       	ldi	r18, 0x01	; 1
    21fe:	30 e0       	ldi	r19, 0x00	; 0
    2200:	31 cf       	rjmp	.-414    	; 0x2064 <_Z6WebAppv+0x35a>
			p1+=5;
			memset(__network_data.ssid,' ',sizeof(__network_data.ssid)-1);
			while (1){
				if (pos == sizeof(__network_data.ssid))break;
				if (*p1=='&'||*p1=='\r'||*p1=='\n')break;
				__network_data.ssid[pos++] = *p1++;
    2202:	80 93 7b 09 	sts	0x097B, r24	; 0x80097b <__network_data+0x69>
    2206:	f7 01       	movw	r30, r14
    2208:	36 96       	adiw	r30, 0x06	; 6
    220a:	ac e7       	ldi	r26, 0x7C	; 124
    220c:	b9 e0       	ldi	r27, 0x09	; 9
    220e:	21 e0       	ldi	r18, 0x01	; 1
    2210:	30 e0       	ldi	r19, 0x00	; 0
    2212:	ed ce       	rjmp	.-550    	; 0x1fee <_Z6WebAppv+0x2e4>
			setSource(ESP);
		}
		clearReadLine();
	}
	
}
    2214:	cf 5b       	subi	r28, 0xBF	; 191
    2216:	d8 4f       	sbci	r29, 0xF8	; 248
    2218:	0f b6       	in	r0, 0x3f	; 63
    221a:	f8 94       	cli
    221c:	de bf       	out	0x3e, r29	; 62
    221e:	0f be       	out	0x3f, r0	; 63
    2220:	cd bf       	out	0x3d, r28	; 61
    2222:	df 91       	pop	r29
    2224:	cf 91       	pop	r28
    2226:	1f 91       	pop	r17
    2228:	0f 91       	pop	r16
    222a:	ff 90       	pop	r15
    222c:	ef 90       	pop	r14
    222e:	df 90       	pop	r13
    2230:	cf 90       	pop	r12
    2232:	bf 90       	pop	r11
    2234:	af 90       	pop	r10
    2236:	9f 90       	pop	r9
    2238:	8f 90       	pop	r8
    223a:	08 95       	ret

0000223c <_Z11switchRelayccc>:

void switchRelay(char moduleId, char relayId, char state){
    223c:	3f 92       	push	r3
    223e:	4f 92       	push	r4
    2240:	5f 92       	push	r5
    2242:	6f 92       	push	r6
    2244:	7f 92       	push	r7
    2246:	8f 92       	push	r8
    2248:	9f 92       	push	r9
    224a:	af 92       	push	r10
    224c:	bf 92       	push	r11
    224e:	cf 92       	push	r12
    2250:	df 92       	push	r13
    2252:	ef 92       	push	r14
    2254:	ff 92       	push	r15
    2256:	0f 93       	push	r16
    2258:	1f 93       	push	r17
    225a:	cf 93       	push	r28
    225c:	df 93       	push	r29
    225e:	cd b7       	in	r28, 0x3d	; 61
    2260:	de b7       	in	r29, 0x3e	; 62
    2262:	ad 97       	sbiw	r28, 0x2d	; 45
    2264:	0f b6       	in	r0, 0x3f	; 63
    2266:	f8 94       	cli
    2268:	de bf       	out	0x3e, r29	; 62
    226a:	0f be       	out	0x3f, r0	; 63
    226c:	cd bf       	out	0x3d, r28	; 61
    226e:	76 2e       	mov	r7, r22
    2270:	54 2e       	mov	r5, r20
	int impulse = 0;
	int _delay = 0;
	char conv[5];
	char response[40];
	
	if (getRelaySetting(moduleId,relayId) == 1){
    2272:	a6 2e       	mov	r10, r22
    2274:	b1 2c       	mov	r11, r1
    2276:	e8 2e       	mov	r14, r24
    2278:	f1 2c       	mov	r15, r1
    227a:	b5 01       	movw	r22, r10
    227c:	c7 01       	movw	r24, r14
    227e:	0e 94 ee 01 	call	0x3dc	; 0x3dc <_Z15getRelaySettingii>
    2282:	01 97       	sbiw	r24, 0x01	; 1
    2284:	39 f4       	brne	.+14     	; 0x2294 <_Z11switchRelayccc+0x58>
		impulse = __relay_setting.impulse;
    2286:	ea ea       	ldi	r30, 0xAA	; 170
    2288:	f8 e0       	ldi	r31, 0x08	; 8
    228a:	c6 80       	ldd	r12, Z+6	; 0x06
    228c:	d7 80       	ldd	r13, Z+7	; 0x07
		_delay = __relay_setting._delay;
    228e:	84 80       	ldd	r8, Z+4	; 0x04
    2290:	95 80       	ldd	r9, Z+5	; 0x05
    2292:	04 c0       	rjmp	.+8      	; 0x229c <_Z11switchRelayccc+0x60>
void switchRelay(char moduleId, char relayId, char state){
	
	char r1,r2;
	int i;
	int impulse = 0;
	int _delay = 0;
    2294:	81 2c       	mov	r8, r1
    2296:	91 2c       	mov	r9, r1

void switchRelay(char moduleId, char relayId, char state){
	
	char r1,r2;
	int i;
	int impulse = 0;
    2298:	c1 2c       	mov	r12, r1
    229a:	d1 2c       	mov	r13, r1
    229c:	0a e0       	ldi	r16, 0x0A	; 10
    229e:	10 e0       	ldi	r17, 0x00	; 0
		_delay = __relay_setting._delay;
	}

	for (i=0;i<10;i++){
		chipSelect(moduleId,0);
		SPI_WriteRead(SWITCH_RELAY);
    22a0:	60 90 92 03 	lds	r6, 0x0392	; 0x800392 <SWITCH_RELAY>
		impulse = __relay_setting.impulse;
		_delay = __relay_setting._delay;
	}

	for (i=0;i<10;i++){
		chipSelect(moduleId,0);
    22a4:	60 e0       	ldi	r22, 0x00	; 0
    22a6:	70 e0       	ldi	r23, 0x00	; 0
    22a8:	c7 01       	movw	r24, r14
    22aa:	f8 d3       	rcall	.+2032   	; 0x2a9c <_Z10chipSelectii>
		SPI_WriteRead(SWITCH_RELAY);
    22ac:	86 2d       	mov	r24, r6
    22ae:	31 d4       	rcall	.+2146   	; 0x2b12 <_Z13SPI_WriteReadh>
		r1 = SPI_WriteRead(relayId);
    22b0:	87 2d       	mov	r24, r7
    22b2:	2f d4       	rcall	.+2142   	; 0x2b12 <_Z13SPI_WriteReadh>
    22b4:	48 2e       	mov	r4, r24
		if (impulse == 1){
    22b6:	21 e0       	ldi	r18, 0x01	; 1
    22b8:	c2 16       	cp	r12, r18
    22ba:	d1 04       	cpc	r13, r1
    22bc:	21 f4       	brne	.+8      	; 0x22c6 <_Z11switchRelayccc+0x8a>
			r2 = SPI_WriteRead(1);
    22be:	81 e0       	ldi	r24, 0x01	; 1
    22c0:	28 d4       	rcall	.+2128   	; 0x2b12 <_Z13SPI_WriteReadh>
    22c2:	38 2e       	mov	r3, r24
    22c4:	03 c0       	rjmp	.+6      	; 0x22cc <_Z11switchRelayccc+0x90>
		} else {
			r2 = SPI_WriteRead(state);
    22c6:	85 2d       	mov	r24, r5
    22c8:	24 d4       	rcall	.+2120   	; 0x2b12 <_Z13SPI_WriteReadh>
    22ca:	38 2e       	mov	r3, r24
		}
		chipSelect(moduleId,1);
    22cc:	61 e0       	ldi	r22, 0x01	; 1
    22ce:	70 e0       	ldi	r23, 0x00	; 0
    22d0:	c7 01       	movw	r24, r14
    22d2:	e4 d3       	rcall	.+1992   	; 0x2a9c <_Z10chipSelectii>
		
		if (r1 + r2 == 14){
    22d4:	23 2d       	mov	r18, r3
    22d6:	30 e0       	ldi	r19, 0x00	; 0
    22d8:	24 0d       	add	r18, r4
    22da:	31 1d       	adc	r19, r1
    22dc:	2e 30       	cpi	r18, 0x0E	; 14
    22de:	31 05       	cpc	r19, r1
    22e0:	09 f4       	brne	.+2      	; 0x22e4 <_Z11switchRelayccc+0xa8>
    22e2:	87 c0       	rjmp	.+270    	; 0x23f2 <_Z11switchRelayccc+0x1b6>
			break;
		} else {
			delay(50);
    22e4:	82 e3       	ldi	r24, 0x32	; 50
    22e6:	90 e0       	ldi	r25, 0x00	; 0
    22e8:	67 d4       	rcall	.+2254   	; 0x2bb8 <_Z5delayi>
    22ea:	01 50       	subi	r16, 0x01	; 1
    22ec:	11 09       	sbc	r17, r1
	if (getRelaySetting(moduleId,relayId) == 1){
		impulse = __relay_setting.impulse;
		_delay = __relay_setting._delay;
	}

	for (i=0;i<10;i++){
    22ee:	d1 f6       	brne	.-76     	; 0x22a4 <_Z11switchRelayccc+0x68>
    22f0:	85 c0       	rjmp	.+266    	; 0x23fc <_Z11switchRelayccc+0x1c0>
		} else {
			delay(50);
		}
	}
	if (impulse == 1){
		delay(_delay*1000);
    22f2:	88 ee       	ldi	r24, 0xE8	; 232
    22f4:	93 e0       	ldi	r25, 0x03	; 3
    22f6:	9c 01       	movw	r18, r24
    22f8:	82 9e       	mul	r8, r18
    22fa:	c0 01       	movw	r24, r0
    22fc:	83 9e       	mul	r8, r19
    22fe:	90 0d       	add	r25, r0
    2300:	92 9e       	mul	r9, r18
    2302:	90 0d       	add	r25, r0
    2304:	11 24       	eor	r1, r1
    2306:	58 d4       	rcall	.+2224   	; 0x2bb8 <_Z5delayi>
    2308:	0a e0       	ldi	r16, 0x0A	; 10
    230a:	10 e0       	ldi	r17, 0x00	; 0
		for (i=0;i<10;i++){
			chipSelect(moduleId,0);
			SPI_WriteRead(SWITCH_RELAY);
    230c:	90 90 92 03 	lds	r9, 0x0392	; 0x800392 <SWITCH_RELAY>
		}
	}
	if (impulse == 1){
		delay(_delay*1000);
		for (i=0;i<10;i++){
			chipSelect(moduleId,0);
    2310:	60 e0       	ldi	r22, 0x00	; 0
    2312:	70 e0       	ldi	r23, 0x00	; 0
    2314:	c7 01       	movw	r24, r14
    2316:	c2 d3       	rcall	.+1924   	; 0x2a9c <_Z10chipSelectii>
			SPI_WriteRead(SWITCH_RELAY);
    2318:	89 2d       	mov	r24, r9
    231a:	fb d3       	rcall	.+2038   	; 0x2b12 <_Z13SPI_WriteReadh>
			r1 = SPI_WriteRead(relayId);
    231c:	87 2d       	mov	r24, r7
    231e:	f9 d3       	rcall	.+2034   	; 0x2b12 <_Z13SPI_WriteReadh>
    2320:	c8 2e       	mov	r12, r24
			r2 = SPI_WriteRead(0);
    2322:	80 e0       	ldi	r24, 0x00	; 0
    2324:	f6 d3       	rcall	.+2028   	; 0x2b12 <_Z13SPI_WriteReadh>
    2326:	d8 2e       	mov	r13, r24
			chipSelect(moduleId,1);
    2328:	61 e0       	ldi	r22, 0x01	; 1
    232a:	70 e0       	ldi	r23, 0x00	; 0
    232c:	c7 01       	movw	r24, r14
    232e:	b6 d3       	rcall	.+1900   	; 0x2a9c <_Z10chipSelectii>
			
			if (r1 + r2 == 14){
    2330:	2d 2d       	mov	r18, r13
    2332:	30 e0       	ldi	r19, 0x00	; 0
    2334:	2c 0d       	add	r18, r12
    2336:	31 1d       	adc	r19, r1
    2338:	2e 30       	cpi	r18, 0x0E	; 14
    233a:	31 05       	cpc	r19, r1
    233c:	39 f0       	breq	.+14     	; 0x234c <_Z11switchRelayccc+0x110>
				break;
				} else {
				delay(50);
    233e:	82 e3       	ldi	r24, 0x32	; 50
    2340:	90 e0       	ldi	r25, 0x00	; 0
    2342:	3a d4       	rcall	.+2164   	; 0x2bb8 <_Z5delayi>
    2344:	01 50       	subi	r16, 0x01	; 1
    2346:	11 09       	sbc	r17, r1
			delay(50);
		}
	}
	if (impulse == 1){
		delay(_delay*1000);
		for (i=0;i<10;i++){
    2348:	19 f7       	brne	.-58     	; 0x2310 <_Z11switchRelayccc+0xd4>
    234a:	5c c0       	rjmp	.+184    	; 0x2404 <_Z11switchRelayccc+0x1c8>
			}
		}
	}
	
	if (r1 + r2 == 14){
		strcpy(response,"NOTIFICATION;SWITCH;");
    234c:	85 e1       	ldi	r24, 0x15	; 21
    234e:	e5 ed       	ldi	r30, 0xD5	; 213
    2350:	f6 e0       	ldi	r31, 0x06	; 6
    2352:	8e 01       	movw	r16, r28
    2354:	0f 5f       	subi	r16, 0xFF	; 255
    2356:	1f 4f       	sbci	r17, 0xFF	; 255
    2358:	d8 01       	movw	r26, r16
    235a:	01 90       	ld	r0, Z+
    235c:	0d 92       	st	X+, r0
    235e:	8a 95       	dec	r24
    2360:	e1 f7       	brne	.-8      	; 0x235a <_Z11switchRelayccc+0x11e>
    2362:	4a e0       	ldi	r20, 0x0A	; 10
    2364:	be 01       	movw	r22, r28
    2366:	67 5d       	subi	r22, 0xD7	; 215
    2368:	7f 4f       	sbci	r23, 0xFF	; 255
    236a:	c7 01       	movw	r24, r14
    236c:	0e 94 5b 1a 	call	0x34b6	; 0x34b6 <__itoa_ncheck>
		strcat(response,itoa(moduleId,conv,10));
    2370:	bc 01       	movw	r22, r24
    2372:	c8 01       	movw	r24, r16
    2374:	0e 94 fd 19 	call	0x33fa	; 0x33fa <strcat>
		strcat(response,";");
    2378:	f8 01       	movw	r30, r16
    237a:	01 90       	ld	r0, Z+
    237c:	00 20       	and	r0, r0
    237e:	e9 f7       	brne	.-6      	; 0x237a <_Z11switchRelayccc+0x13e>
    2380:	31 97       	sbiw	r30, 0x01	; 1
    2382:	0f 2e       	mov	r0, r31
    2384:	fb e3       	ldi	r31, 0x3B	; 59
    2386:	ef 2e       	mov	r14, r31
    2388:	f1 2c       	mov	r15, r1
    238a:	f0 2d       	mov	r31, r0
    238c:	f1 82       	std	Z+1, r15	; 0x01
    238e:	e0 82       	st	Z, r14
    2390:	4a e0       	ldi	r20, 0x0A	; 10
    2392:	be 01       	movw	r22, r28
    2394:	67 5d       	subi	r22, 0xD7	; 215
    2396:	7f 4f       	sbci	r23, 0xFF	; 255
    2398:	c5 01       	movw	r24, r10
    239a:	0e 94 5b 1a 	call	0x34b6	; 0x34b6 <__itoa_ncheck>
		strcat(response,itoa(relayId,conv,10));
    239e:	bc 01       	movw	r22, r24
    23a0:	c8 01       	movw	r24, r16
    23a2:	0e 94 fd 19 	call	0x33fa	; 0x33fa <strcat>
		strcat(response,";");
    23a6:	f8 01       	movw	r30, r16
    23a8:	01 90       	ld	r0, Z+
    23aa:	00 20       	and	r0, r0
    23ac:	e9 f7       	brne	.-6      	; 0x23a8 <_Z11switchRelayccc+0x16c>
    23ae:	31 97       	sbiw	r30, 0x01	; 1
    23b0:	f1 82       	std	Z+1, r15	; 0x01
    23b2:	e0 82       	st	Z, r14
    23b4:	4a e0       	ldi	r20, 0x0A	; 10
    23b6:	be 01       	movw	r22, r28
    23b8:	67 5d       	subi	r22, 0xD7	; 215
    23ba:	7f 4f       	sbci	r23, 0xFF	; 255
    23bc:	85 2d       	mov	r24, r5
    23be:	90 e0       	ldi	r25, 0x00	; 0
    23c0:	0e 94 5b 1a 	call	0x34b6	; 0x34b6 <__itoa_ncheck>
		strcat(response,itoa(state,conv,10));
    23c4:	bc 01       	movw	r22, r24
    23c6:	c8 01       	movw	r24, r16
    23c8:	0e 94 fd 19 	call	0x33fa	; 0x33fa <strcat>
		strcat(response,";\n");
    23cc:	f8 01       	movw	r30, r16
    23ce:	01 90       	ld	r0, Z+
    23d0:	00 20       	and	r0, r0
    23d2:	e9 f7       	brne	.-6      	; 0x23ce <_Z11switchRelayccc+0x192>
    23d4:	31 97       	sbiw	r30, 0x01	; 1
    23d6:	8b e3       	ldi	r24, 0x3B	; 59
    23d8:	9a e0       	ldi	r25, 0x0A	; 10
    23da:	a0 e0       	ldi	r26, 0x00	; 0
    23dc:	80 83       	st	Z, r24
    23de:	91 83       	std	Z+1, r25	; 0x01
    23e0:	a2 83       	std	Z+2, r26	; 0x02

		sendToServer(response,CONNECTION);
    23e2:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    23e6:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    23ea:	c8 01       	movw	r24, r16
    23ec:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <_Z12sendToServerPci>
    23f0:	09 c0       	rjmp	.+18     	; 0x2404 <_Z11switchRelayccc+0x1c8>
			break;
		} else {
			delay(50);
		}
	}
	if (impulse == 1){
    23f2:	ca 94       	dec	r12
    23f4:	cd 28       	or	r12, r13
    23f6:	09 f0       	breq	.+2      	; 0x23fa <_Z11switchRelayccc+0x1be>
    23f8:	a9 cf       	rjmp	.-174    	; 0x234c <_Z11switchRelayccc+0x110>
    23fa:	7b cf       	rjmp	.-266    	; 0x22f2 <_Z11switchRelayccc+0xb6>
    23fc:	ca 94       	dec	r12
    23fe:	cd 28       	or	r12, r13
    2400:	09 f4       	brne	.+2      	; 0x2404 <_Z11switchRelayccc+0x1c8>
    2402:	77 cf       	rjmp	.-274    	; 0x22f2 <_Z11switchRelayccc+0xb6>
		strcat(response,";\n");

		sendToServer(response,CONNECTION);
	}
	
}
    2404:	ad 96       	adiw	r28, 0x2d	; 45
    2406:	0f b6       	in	r0, 0x3f	; 63
    2408:	f8 94       	cli
    240a:	de bf       	out	0x3e, r29	; 62
    240c:	0f be       	out	0x3f, r0	; 63
    240e:	cd bf       	out	0x3d, r28	; 61
    2410:	df 91       	pop	r29
    2412:	cf 91       	pop	r28
    2414:	1f 91       	pop	r17
    2416:	0f 91       	pop	r16
    2418:	ff 90       	pop	r15
    241a:	ef 90       	pop	r14
    241c:	df 90       	pop	r13
    241e:	cf 90       	pop	r12
    2420:	bf 90       	pop	r11
    2422:	af 90       	pop	r10
    2424:	9f 90       	pop	r9
    2426:	8f 90       	pop	r8
    2428:	7f 90       	pop	r7
    242a:	6f 90       	pop	r6
    242c:	5f 90       	pop	r5
    242e:	4f 90       	pop	r4
    2430:	3f 90       	pop	r3
    2432:	08 95       	ret

00002434 <_Z12RelayControlv>:

void RelayControl(){
    2434:	ef 92       	push	r14
    2436:	ff 92       	push	r15
    2438:	0f 93       	push	r16
    243a:	1f 93       	push	r17
    243c:	cf 93       	push	r28
    243e:	df 93       	push	r29
	//&& __system_var.enabled_flag == 1
	if (strstr(__network_data.esp_buffer, "SWITCHRELAY") != 0){
    2440:	6a ee       	ldi	r22, 0xEA	; 234
    2442:	76 e0       	ldi	r23, 0x06	; 6
    2444:	84 ec       	ldi	r24, 0xC4	; 196
    2446:	99 e0       	ldi	r25, 0x09	; 9
    2448:	f5 d7       	rcall	.+4074   	; 0x3434 <strstr>
    244a:	00 97       	sbiw	r24, 0x00	; 0
    244c:	09 f4       	brne	.+2      	; 0x2450 <_Z12RelayControlv+0x1c>
    244e:	45 c0       	rjmp	.+138    	; 0x24da <_Z12RelayControlv+0xa6>
		int relayId, moduleId, state, index, i;

		
		
		p1 = strstr(__network_data.esp_buffer, "SWITCHRELAY");
		strtok(p1,";");
    2450:	60 ec       	ldi	r22, 0xC0	; 192
    2452:	73 e0       	ldi	r23, 0x03	; 3
    2454:	c8 d7       	rcall	.+3984   	; 0x33e6 <strtok>
		moduleId = atoi(strtok(0,";"));
    2456:	60 ec       	ldi	r22, 0xC0	; 192
    2458:	73 e0       	ldi	r23, 0x03	; 3
    245a:	80 e0       	ldi	r24, 0x00	; 0
    245c:	90 e0       	ldi	r25, 0x00	; 0
    245e:	c3 d7       	rcall	.+3974   	; 0x33e6 <strtok>
    2460:	9c d7       	rcall	.+3896   	; 0x339a <atoi>
    2462:	8c 01       	movw	r16, r24
		relayId = atoi(strtok(0,";"));
    2464:	60 ec       	ldi	r22, 0xC0	; 192
    2466:	73 e0       	ldi	r23, 0x03	; 3
    2468:	80 e0       	ldi	r24, 0x00	; 0
    246a:	90 e0       	ldi	r25, 0x00	; 0
    246c:	bc d7       	rcall	.+3960   	; 0x33e6 <strtok>
    246e:	95 d7       	rcall	.+3882   	; 0x339a <atoi>
    2470:	ec 01       	movw	r28, r24
		state = atoi(strtok(0,";"));
    2472:	60 ec       	ldi	r22, 0xC0	; 192
    2474:	73 e0       	ldi	r23, 0x03	; 3
    2476:	80 e0       	ldi	r24, 0x00	; 0
    2478:	90 e0       	ldi	r25, 0x00	; 0
    247a:	b5 d7       	rcall	.+3946   	; 0x33e6 <strtok>
    247c:	8e d7       	rcall	.+3868   	; 0x339a <atoi>
    247e:	7c 01       	movw	r14, r24
			
		switchRelay(moduleId,relayId,state);	
    2480:	48 2f       	mov	r20, r24
    2482:	6c 2f       	mov	r22, r28
    2484:	80 2f       	mov	r24, r16
    2486:	da de       	rcall	.-588    	; 0x223c <_Z11switchRelayccc>
		
		if (moduleId < MAX_MODULE_COUNT && relayId < MAX_RELAY_COUNT){
    2488:	04 30       	cpi	r16, 0x04	; 4
    248a:	11 05       	cpc	r17, r1
    248c:	2c f5       	brge	.+74     	; 0x24d8 <_Z12RelayControlv+0xa4>
    248e:	cd 30       	cpi	r28, 0x0D	; 13
    2490:	d1 05       	cpc	r29, r1
    2492:	14 f5       	brge	.+68     	; 0x24d8 <_Z12RelayControlv+0xa4>
			char conv[5];
			if (state == 1){
    2494:	ea 94       	dec	r14
    2496:	ef 28       	or	r14, r15
    2498:	89 f4       	brne	.+34     	; 0x24bc <_Z12RelayControlv+0x88>
				__relay_states[moduleId].states[relayId] = 1;	
    249a:	2d e0       	ldi	r18, 0x0D	; 13
    249c:	20 9f       	mul	r18, r16
    249e:	c0 01       	movw	r24, r0
    24a0:	21 9f       	mul	r18, r17
    24a2:	90 0d       	add	r25, r0
    24a4:	11 24       	eor	r1, r1
    24a6:	c8 0f       	add	r28, r24
    24a8:	d9 1f       	adc	r29, r25
    24aa:	cc 0f       	add	r28, r28
    24ac:	dd 1f       	adc	r29, r29
    24ae:	c8 55       	subi	r28, 0x58	; 88
    24b0:	d8 4f       	sbci	r29, 0xF8	; 248
    24b2:	81 e0       	ldi	r24, 0x01	; 1
    24b4:	90 e0       	ldi	r25, 0x00	; 0
    24b6:	99 83       	std	Y+1, r25	; 0x01
    24b8:	88 83       	st	Y, r24
    24ba:	0e c0       	rjmp	.+28     	; 0x24d8 <_Z12RelayControlv+0xa4>
			} else {
				__relay_states[moduleId].states[relayId] = 0;
    24bc:	2d e0       	ldi	r18, 0x0D	; 13
    24be:	20 9f       	mul	r18, r16
    24c0:	c0 01       	movw	r24, r0
    24c2:	21 9f       	mul	r18, r17
    24c4:	90 0d       	add	r25, r0
    24c6:	11 24       	eor	r1, r1
    24c8:	c8 0f       	add	r28, r24
    24ca:	d9 1f       	adc	r29, r25
    24cc:	cc 0f       	add	r28, r28
    24ce:	dd 1f       	adc	r29, r29
    24d0:	c8 55       	subi	r28, 0x58	; 88
    24d2:	d8 4f       	sbci	r29, 0xF8	; 248
    24d4:	19 82       	std	Y+1, r1	; 0x01
    24d6:	18 82       	st	Y, r1
			}
		}

		clearReadLine();
    24d8:	27 d5       	rcall	.+2638   	; 0x2f28 <_Z13clearReadLinev>
	}
}
    24da:	df 91       	pop	r29
    24dc:	cf 91       	pop	r28
    24de:	1f 91       	pop	r17
    24e0:	0f 91       	pop	r16
    24e2:	ff 90       	pop	r15
    24e4:	ef 90       	pop	r14
    24e6:	08 95       	ret

000024e8 <_Z15ReceiveSettingsv>:

void ReceiveSettings(){
    24e8:	cf 93       	push	r28
    24ea:	df 93       	push	r29
	
	if (strstr(__network_data.esp_buffer, "CFG") != 0){
    24ec:	66 ef       	ldi	r22, 0xF6	; 246
    24ee:	76 e0       	ldi	r23, 0x06	; 6
    24f0:	84 ec       	ldi	r24, 0xC4	; 196
    24f2:	99 e0       	ldi	r25, 0x09	; 9
    24f4:	9f d7       	rcall	.+3902   	; 0x3434 <strstr>
    24f6:	89 2b       	or	r24, r25
    24f8:	09 f4       	brne	.+2      	; 0x24fc <_Z15ReceiveSettingsv+0x14>
    24fa:	6a c0       	rjmp	.+212    	; 0x25d0 <_Z15ReceiveSettingsv+0xe8>
		
		__system_time.check_timer_buffer = 0;
    24fc:	10 92 05 09 	sts	0x0905, r1	; 0x800905 <__system_time+0x17>
    2500:	10 92 04 09 	sts	0x0904, r1	; 0x800904 <__system_time+0x16>
		
		if (strstr(__network_data.esp_buffer, "[CLEAR_EEPROM]") != 0){
    2504:	6a ef       	ldi	r22, 0xFA	; 250
    2506:	76 e0       	ldi	r23, 0x06	; 6
    2508:	84 ec       	ldi	r24, 0xC4	; 196
    250a:	99 e0       	ldi	r25, 0x09	; 9
    250c:	93 d7       	rcall	.+3878   	; 0x3434 <strstr>
    250e:	89 2b       	or	r24, r25
    2510:	e9 f0       	breq	.+58     	; 0x254c <_Z15ReceiveSettingsv+0x64>
			__system_var.enabled_flag = 0;
    2512:	10 92 cb 0c 	sts	0x0CCB, r1	; 0x800ccb <__system_var+0x45>
			USART0_SendString("CLEARING...");
    2516:	89 e0       	ldi	r24, 0x09	; 9
    2518:	97 e0       	ldi	r25, 0x07	; 7
    251a:	32 d3       	rcall	.+1636   	; 0x2b80 <_Z17USART0_SendStringPKc>
			clearEEPROM(EEPROM_CFG_START,EEPROM_SIZE);
    251c:	c0 91 a1 01 	lds	r28, 0x01A1	; 0x8001a1 <EEPROM_CFG_START>
    2520:	d0 91 a2 01 	lds	r29, 0x01A2	; 0x8001a2 <EEPROM_CFG_START+0x1>
    2524:	60 91 a3 01 	lds	r22, 0x01A3	; 0x8001a3 <EEPROM_SIZE>
    2528:	70 91 a4 01 	lds	r23, 0x01A4	; 0x8001a4 <EEPROM_SIZE+0x1>
    252c:	ce 01       	movw	r24, r28
    252e:	0e 94 d5 00 	call	0x1aa	; 0x1aa <_Z11clearEEPROMii>
			__system_var.eeprom_position = EEPROM_CFG_START;
    2532:	d0 93 c8 0c 	sts	0x0CC8, r29	; 0x800cc8 <__system_var+0x42>
    2536:	c0 93 c7 0c 	sts	0x0CC7, r28	; 0x800cc7 <__system_var+0x41>
			sendToServer("OK\n",CONNECTION);
    253a:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    253e:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    2542:	87 e1       	ldi	r24, 0x17	; 23
    2544:	92 e0       	ldi	r25, 0x02	; 2
    2546:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <_Z12sendToServerPci>
			return;
    254a:	52 c0       	rjmp	.+164    	; 0x25f0 <_Z15ReceiveSettingsv+0x108>
		}
		if (strstr(__network_data.esp_buffer, "[END]") != 0){
    254c:	65 e1       	ldi	r22, 0x15	; 21
    254e:	77 e0       	ldi	r23, 0x07	; 7
    2550:	84 ec       	ldi	r24, 0xC4	; 196
    2552:	99 e0       	ldi	r25, 0x09	; 9
    2554:	6f d7       	rcall	.+3806   	; 0x3434 <strstr>
    2556:	89 2b       	or	r24, r25
    2558:	e9 f0       	breq	.+58     	; 0x2594 <_Z15ReceiveSettingsv+0xac>
			__system_var.eeprom_position = EEPROM_CFG_START;
    255a:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <EEPROM_CFG_START>
    255e:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <EEPROM_CFG_START+0x1>
    2562:	90 93 c8 0c 	sts	0x0CC8, r25	; 0x800cc8 <__system_var+0x42>
    2566:	80 93 c7 0c 	sts	0x0CC7, r24	; 0x800cc7 <__system_var+0x41>
			__system_var.enabled_flag = 1;
    256a:	81 e0       	ldi	r24, 0x01	; 1
    256c:	80 93 cb 0c 	sts	0x0CCB, r24	; 0x800ccb <__system_var+0x45>
			sendToServer("OK\n",CONNECTION);
    2570:	c0 91 ab 01 	lds	r28, 0x01AB	; 0x8001ab <CONNECTION>
    2574:	d0 91 ac 01 	lds	r29, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    2578:	be 01       	movw	r22, r28
    257a:	87 e1       	ldi	r24, 0x17	; 23
    257c:	92 e0       	ldi	r25, 0x02	; 2
    257e:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <_Z12sendToServerPci>
			delay(500);
    2582:	84 ef       	ldi	r24, 0xF4	; 244
    2584:	91 e0       	ldi	r25, 0x01	; 1
    2586:	18 d3       	rcall	.+1584   	; 0x2bb8 <_Z5delayi>
			sendToServer("NOTIFICATION;UPDATED;\n",CONNECTION);
    2588:	be 01       	movw	r22, r28
    258a:	8b e1       	ldi	r24, 0x1B	; 27
    258c:	97 e0       	ldi	r25, 0x07	; 7
    258e:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <_Z12sendToServerPci>
			return;
    2592:	2e c0       	rjmp	.+92     	; 0x25f0 <_Z15ReceiveSettingsv+0x108>
		}
		char *p1;
		p1 = strtok(__network_data.esp_buffer,"$");
    2594:	62 e3       	ldi	r22, 0x32	; 50
    2596:	77 e0       	ldi	r23, 0x07	; 7
    2598:	84 ec       	ldi	r24, 0xC4	; 196
    259a:	99 e0       	ldi	r25, 0x09	; 9
    259c:	24 d7       	rcall	.+3656   	; 0x33e6 <strtok>
		p1 = strtok(0,"$");
    259e:	62 e3       	ldi	r22, 0x32	; 50
    25a0:	77 e0       	ldi	r23, 0x07	; 7
    25a2:	80 e0       	ldi	r24, 0x00	; 0
    25a4:	90 e0       	ldi	r25, 0x00	; 0
    25a6:	1f d7       	rcall	.+3646   	; 0x33e6 <strtok>
		__system_var.eeprom_position = eepromSaveCfg(p1,__system_var.eeprom_position);
    25a8:	c7 ec       	ldi	r28, 0xC7	; 199
    25aa:	dc e0       	ldi	r29, 0x0C	; 12
    25ac:	68 81       	ld	r22, Y
    25ae:	79 81       	ldd	r23, Y+1	; 0x01
    25b0:	0e 94 b7 00 	call	0x16e	; 0x16e <_Z13eepromSaveCfgPKci>
    25b4:	99 83       	std	Y+1, r25	; 0x01
    25b6:	88 83       	st	Y, r24
		delay(10);
    25b8:	8a e0       	ldi	r24, 0x0A	; 10
    25ba:	90 e0       	ldi	r25, 0x00	; 0
    25bc:	fd d2       	rcall	.+1530   	; 0x2bb8 <_Z5delayi>
		sendToServer("OK\n",CONNECTION);
    25be:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    25c2:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    25c6:	87 e1       	ldi	r24, 0x17	; 23
    25c8:	92 e0       	ldi	r25, 0x02	; 2
    25ca:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <_Z12sendToServerPci>
		clearReadLine();
    25ce:	ac d4       	rcall	.+2392   	; 0x2f28 <_Z13clearReadLinev>
	}
	
	if (strstr(__network_data.esp_buffer, "UPDATE") != 0){
    25d0:	64 e3       	ldi	r22, 0x34	; 52
    25d2:	77 e0       	ldi	r23, 0x07	; 7
    25d4:	84 ec       	ldi	r24, 0xC4	; 196
    25d6:	99 e0       	ldi	r25, 0x09	; 9
    25d8:	2d d7       	rcall	.+3674   	; 0x3434 <strstr>
    25da:	89 2b       	or	r24, r25
    25dc:	49 f0       	breq	.+18     	; 0x25f0 <_Z15ReceiveSettingsv+0x108>
		sendToServer("REQUEST_UPDATE\n",CONNECTION);
    25de:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    25e2:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    25e6:	8b e3       	ldi	r24, 0x3B	; 59
    25e8:	97 e0       	ldi	r25, 0x07	; 7
    25ea:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <_Z12sendToServerPci>
		clearReadLine();
    25ee:	9c d4       	rcall	.+2360   	; 0x2f28 <_Z13clearReadLinev>
	}
}
    25f0:	df 91       	pop	r29
    25f2:	cf 91       	pop	r28
    25f4:	08 95       	ret

000025f6 <_Z22CheckModuleConnectionsv>:

void CheckModuleConnections(){
    25f6:	2f 92       	push	r2
    25f8:	3f 92       	push	r3
    25fa:	4f 92       	push	r4
    25fc:	5f 92       	push	r5
    25fe:	6f 92       	push	r6
    2600:	7f 92       	push	r7
    2602:	8f 92       	push	r8
    2604:	9f 92       	push	r9
    2606:	af 92       	push	r10
    2608:	bf 92       	push	r11
    260a:	cf 92       	push	r12
    260c:	df 92       	push	r13
    260e:	ef 92       	push	r14
    2610:	ff 92       	push	r15
    2612:	0f 93       	push	r16
    2614:	1f 93       	push	r17
    2616:	cf 93       	push	r28
    2618:	df 93       	push	r29
    261a:	cd b7       	in	r28, 0x3d	; 61
    261c:	de b7       	in	r29, 0x3e	; 62
    261e:	a3 97       	sbiw	r28, 0x23	; 35
    2620:	0f b6       	in	r0, 0x3f	; 63
    2622:	f8 94       	cli
    2624:	de bf       	out	0x3e, r29	; 62
    2626:	0f be       	out	0x3f, r0	; 63
    2628:	cd bf       	out	0x3d, r28	; 61
	
	if (__system_time.relay_module_check_timer_buffer >= __system_time.relay_module_check_timer){
    262a:	ee ee       	ldi	r30, 0xEE	; 238
    262c:	f8 e0       	ldi	r31, 0x08	; 8
    262e:	22 8d       	ldd	r18, Z+26	; 0x1a
    2630:	33 8d       	ldd	r19, Z+27	; 0x1b
    2632:	80 8d       	ldd	r24, Z+24	; 0x18
    2634:	91 8d       	ldd	r25, Z+25	; 0x19
    2636:	28 17       	cp	r18, r24
    2638:	39 07       	cpc	r19, r25
    263a:	0c f4       	brge	.+2      	; 0x263e <_Z22CheckModuleConnectionsv+0x48>
    263c:	f9 c0       	rjmp	.+498    	; 0x2830 <_Z22CheckModuleConnectionsv+0x23a>
    263e:	4a e0       	ldi	r20, 0x0A	; 10
    2640:	be 01       	movw	r22, r28
    2642:	61 5e       	subi	r22, 0xE1	; 225
    2644:	7f 4f       	sbci	r23, 0xFF	; 255
    2646:	80 91 04 09 	lds	r24, 0x0904	; 0x800904 <__system_time+0x16>
    264a:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__system_time+0x17>
    264e:	33 d7       	rcall	.+3686   	; 0x34b6 <__itoa_ncheck>
    2650:	0f 2e       	mov	r0, r31
    2652:	f4 ea       	ldi	r31, 0xA4	; 164
    2654:	ef 2e       	mov	r14, r31
    2656:	fc e0       	ldi	r31, 0x0C	; 12
    2658:	ff 2e       	mov	r15, r31
    265a:	f0 2d       	mov	r31, r0
		int i,j;

		itoa(__system_time.check_timer_buffer,conv,10);
	
		// CHECK RELAY MODULE CONNECTIONS
		for (i=0;i<4;i++){
    265c:	00 e0       	ldi	r16, 0x00	; 0
    265e:	10 e0       	ldi	r17, 0x00	; 0
			if (digitalRead(__system_var.detect_pins[i]) == 0 && __system_var.module_flags[i] == 0){
				delay(500);
				__system_var.module_connected[i] = 1;
    2660:	88 24       	eor	r8, r8
    2662:	83 94       	inc	r8
    2664:	91 2c       	mov	r9, r1
				__system_var.module_flags[i] = 1;
    2666:	21 2c       	mov	r2, r1
				for (j=0;j<5;j++){
					chipSelect(i, 0);
					relay_count = SPI_WriteRead(REQUEST_RELAY_COUNT);
    2668:	30 90 94 03 	lds	r3, 0x0394	; 0x800394 <REQUEST_RELAY_COUNT>
					relay_count = SPI_WriteRead(RECIEVE);
    266c:	40 90 93 03 	lds	r4, 0x0393	; 0x800393 <RECIEVE>
				}
				if (relay_count == 0 || relay_count == 1 || relay_count == 255 || relay_count == 254){
					relay_count = 0;
				}
				__system_var.relay_modules[i] = relay_count;
				__system_var.update_flag = 1;
    2670:	0f 2e       	mov	r0, r31
    2672:	f9 ec       	ldi	r31, 0xC9	; 201
    2674:	6f 2e       	mov	r6, r31
    2676:	fc e0       	ldi	r31, 0x0C	; 12
    2678:	7f 2e       	mov	r7, r31
    267a:	f0 2d       	mov	r31, r0
    267c:	57 01       	movw	r10, r14

		itoa(__system_time.check_timer_buffer,conv,10);
	
		// CHECK RELAY MODULE CONNECTIONS
		for (i=0;i<4;i++){
			if (digitalRead(__system_var.detect_pins[i]) == 0 && __system_var.module_flags[i] == 0){
    267e:	d7 01       	movw	r26, r14
    2680:	58 96       	adiw	r26, 0x18	; 24
    2682:	8d 91       	ld	r24, X+
    2684:	9c 91       	ld	r25, X
    2686:	59 97       	sbiw	r26, 0x19	; 25
    2688:	3e d3       	rcall	.+1660   	; 0x2d06 <_Z11digitalReadi>
    268a:	81 11       	cpse	r24, r1
    268c:	24 c0       	rjmp	.+72     	; 0x26d6 <_Z22CheckModuleConnectionsv+0xe0>
    268e:	f7 01       	movw	r30, r14
    2690:	80 89       	ldd	r24, Z+16	; 0x10
    2692:	91 89       	ldd	r25, Z+17	; 0x11
    2694:	89 2b       	or	r24, r25
    2696:	09 f4       	brne	.+2      	; 0x269a <_Z22CheckModuleConnectionsv+0xa4>
    2698:	ad c0       	rjmp	.+346    	; 0x27f4 <_Z22CheckModuleConnectionsv+0x1fe>
    269a:	1d c0       	rjmp	.+58     	; 0x26d6 <_Z22CheckModuleConnectionsv+0xe0>
				delay(500);
				__system_var.module_connected[i] = 1;
				__system_var.module_flags[i] = 1;
				for (j=0;j<5;j++){
					chipSelect(i, 0);
    269c:	60 e0       	ldi	r22, 0x00	; 0
    269e:	70 e0       	ldi	r23, 0x00	; 0
    26a0:	c8 01       	movw	r24, r16
    26a2:	fc d1       	rcall	.+1016   	; 0x2a9c <_Z10chipSelectii>
					relay_count = SPI_WriteRead(REQUEST_RELAY_COUNT);
    26a4:	83 2d       	mov	r24, r3
    26a6:	35 d2       	rcall	.+1130   	; 0x2b12 <_Z13SPI_WriteReadh>
					relay_count = SPI_WriteRead(RECIEVE);
    26a8:	84 2d       	mov	r24, r4
    26aa:	33 d2       	rcall	.+1126   	; 0x2b12 <_Z13SPI_WriteReadh>
    26ac:	58 2e       	mov	r5, r24
					chipSelect(i, 1);
    26ae:	b4 01       	movw	r22, r8
    26b0:	c8 01       	movw	r24, r16
    26b2:	f4 d1       	rcall	.+1000   	; 0x2a9c <_Z10chipSelectii>
					if (!(relay_count == 0 || relay_count == 1 || relay_count == 255 || relay_count == 254)){
    26b4:	8e ef       	ldi	r24, 0xFE	; 254
    26b6:	85 0d       	add	r24, r5
    26b8:	8c 3f       	cpi	r24, 0xFC	; 252
    26ba:	28 f0       	brcs	.+10     	; 0x26c6 <_Z22CheckModuleConnectionsv+0xd0>
    26bc:	f1 e0       	ldi	r31, 0x01	; 1
    26be:	cf 1a       	sub	r12, r31
    26c0:	d1 08       	sbc	r13, r1
		for (i=0;i<4;i++){
			if (digitalRead(__system_var.detect_pins[i]) == 0 && __system_var.module_flags[i] == 0){
				delay(500);
				__system_var.module_connected[i] = 1;
				__system_var.module_flags[i] = 1;
				for (j=0;j<5;j++){
    26c2:	61 f7       	brne	.-40     	; 0x269c <_Z22CheckModuleConnectionsv+0xa6>
					if (!(relay_count == 0 || relay_count == 1 || relay_count == 255 || relay_count == 254)){
						break;
					}
				}
				if (relay_count == 0 || relay_count == 1 || relay_count == 255 || relay_count == 254){
					relay_count = 0;
    26c4:	51 2c       	mov	r5, r1
				}
				__system_var.relay_modules[i] = relay_count;
    26c6:	85 2d       	mov	r24, r5
    26c8:	90 e0       	ldi	r25, 0x00	; 0
    26ca:	d5 01       	movw	r26, r10
    26cc:	8d 93       	st	X+, r24
    26ce:	9c 93       	st	X, r25
				__system_var.update_flag = 1;
    26d0:	f3 01       	movw	r30, r6
    26d2:	91 82       	std	Z+1, r9	; 0x01
    26d4:	80 82       	st	Z, r8
			
				//delay(500);
			}
			if (digitalRead(__system_var.detect_pins[i]) != 0 && __system_var.module_flags[i] == 1){
    26d6:	d5 01       	movw	r26, r10
    26d8:	58 96       	adiw	r26, 0x18	; 24
    26da:	8d 91       	ld	r24, X+
    26dc:	9c 91       	ld	r25, X
    26de:	59 97       	sbiw	r26, 0x19	; 25
    26e0:	12 d3       	rcall	.+1572   	; 0x2d06 <_Z11digitalReadi>
    26e2:	88 23       	and	r24, r24
    26e4:	31 f0       	breq	.+12     	; 0x26f2 <_Z22CheckModuleConnectionsv+0xfc>
    26e6:	f5 01       	movw	r30, r10
    26e8:	80 89       	ldd	r24, Z+16	; 0x10
    26ea:	91 89       	ldd	r25, Z+17	; 0x11
    26ec:	01 97       	sbiw	r24, 0x01	; 1
    26ee:	09 f4       	brne	.+2      	; 0x26f2 <_Z22CheckModuleConnectionsv+0xfc>
    26f0:	8f c0       	rjmp	.+286    	; 0x2810 <_Z22CheckModuleConnectionsv+0x21a>
		int i,j;

		itoa(__system_time.check_timer_buffer,conv,10);
	
		// CHECK RELAY MODULE CONNECTIONS
		for (i=0;i<4;i++){
    26f2:	0f 5f       	subi	r16, 0xFF	; 255
    26f4:	1f 4f       	sbci	r17, 0xFF	; 255
    26f6:	f2 e0       	ldi	r31, 0x02	; 2
    26f8:	ef 0e       	add	r14, r31
    26fa:	f1 1c       	adc	r15, r1
    26fc:	04 30       	cpi	r16, 0x04	; 4
    26fe:	11 05       	cpc	r17, r1
    2700:	09 f0       	breq	.+2      	; 0x2704 <_Z22CheckModuleConnectionsv+0x10e>
    2702:	bc cf       	rjmp	.-136    	; 0x267c <_Z22CheckModuleConnectionsv+0x86>
				__system_var.update_flag = 1;
				//delay(500);
			}
		}
	
		if (__system_var.update_flag == 1){
    2704:	80 91 c9 0c 	lds	r24, 0x0CC9	; 0x800cc9 <__system_var+0x43>
    2708:	90 91 ca 0c 	lds	r25, 0x0CCA	; 0x800cca <__system_var+0x44>
    270c:	01 97       	sbiw	r24, 0x01	; 1
    270e:	09 f0       	breq	.+2      	; 0x2712 <_Z22CheckModuleConnectionsv+0x11c>
    2710:	6c c0       	rjmp	.+216    	; 0x27ea <_Z22CheckModuleConnectionsv+0x1f4>
			__system_var.update_flag = 0;
    2712:	10 92 ca 0c 	sts	0x0CCA, r1	; 0x800cca <__system_var+0x44>
    2716:	10 92 c9 0c 	sts	0x0CC9, r1	; 0x800cc9 <__system_var+0x43>
			if (__network_data.is_server_connected){
    271a:	80 91 c3 09 	lds	r24, 0x09C3	; 0x8009c3 <__network_data+0xb1>
    271e:	88 23       	and	r24, r24
    2720:	09 f4       	brne	.+2      	; 0x2724 <_Z22CheckModuleConnectionsv+0x12e>
    2722:	63 c0       	rjmp	.+198    	; 0x27ea <_Z22CheckModuleConnectionsv+0x1f4>
				char toSend[30] = "RELAYCONNECTIONS;";
    2724:	82 e1       	ldi	r24, 0x12	; 18
    2726:	e6 e0       	ldi	r30, 0x06	; 6
    2728:	f1 e0       	ldi	r31, 0x01	; 1
    272a:	de 01       	movw	r26, r28
    272c:	11 96       	adiw	r26, 0x01	; 1
    272e:	01 90       	ld	r0, Z+
    2730:	0d 92       	st	X+, r0
    2732:	8a 95       	dec	r24
    2734:	e1 f7       	brne	.-8      	; 0x272e <_Z22CheckModuleConnectionsv+0x138>
    2736:	fe 01       	movw	r30, r28
    2738:	73 96       	adiw	r30, 0x13	; 19
    273a:	8c e0       	ldi	r24, 0x0C	; 12
    273c:	df 01       	movw	r26, r30
    273e:	1d 92       	st	X+, r1
    2740:	8a 95       	dec	r24
    2742:	e9 f7       	brne	.-6      	; 0x273e <_Z22CheckModuleConnectionsv+0x148>
    2744:	0f 2e       	mov	r0, r31
    2746:	fc ea       	ldi	r31, 0xAC	; 172
    2748:	ef 2e       	mov	r14, r31
    274a:	fc e0       	ldi	r31, 0x0C	; 12
    274c:	ff 2e       	mov	r15, r31
    274e:	f0 2d       	mov	r31, r0
				int i;
				for (i=0;i<4;i++){
    2750:	00 e0       	ldi	r16, 0x00	; 0
    2752:	10 e0       	ldi	r17, 0x00	; 0
					if (__system_var.module_connected[i] == 1) {
						strcat(toSend,itoa(i,conv,10));
    2754:	72 97       	sbiw	r30, 0x12	; 18
    2756:	6f 01       	movw	r12, r30
						strcat(toSend,":");
    2758:	0f 2e       	mov	r0, r31
    275a:	fa e3       	ldi	r31, 0x3A	; 58
    275c:	8f 2e       	mov	r8, r31
    275e:	91 2c       	mov	r9, r1
    2760:	f0 2d       	mov	r31, r0
						strcat(toSend,itoa(__system_var.relay_modules[i],conv,10));
						strcat(toSend,";");
    2762:	0f 2e       	mov	r0, r31
    2764:	fb e3       	ldi	r31, 0x3B	; 59
    2766:	af 2e       	mov	r10, r31
    2768:	b1 2c       	mov	r11, r1
    276a:	f0 2d       	mov	r31, r0
			__system_var.update_flag = 0;
			if (__network_data.is_server_connected){
				char toSend[30] = "RELAYCONNECTIONS;";
				int i;
				for (i=0;i<4;i++){
					if (__system_var.module_connected[i] == 1) {
    276c:	d7 01       	movw	r26, r14
    276e:	8d 91       	ld	r24, X+
    2770:	9d 91       	ld	r25, X+
    2772:	7d 01       	movw	r14, r26
    2774:	01 97       	sbiw	r24, 0x01	; 1
    2776:	19 f5       	brne	.+70     	; 0x27be <_Z22CheckModuleConnectionsv+0x1c8>
    2778:	4a e0       	ldi	r20, 0x0A	; 10
    277a:	be 01       	movw	r22, r28
    277c:	61 5e       	subi	r22, 0xE1	; 225
    277e:	7f 4f       	sbci	r23, 0xFF	; 255
    2780:	c8 01       	movw	r24, r16
    2782:	99 d6       	rcall	.+3378   	; 0x34b6 <__itoa_ncheck>
						strcat(toSend,itoa(i,conv,10));
    2784:	bc 01       	movw	r22, r24
    2786:	c6 01       	movw	r24, r12
    2788:	38 d6       	rcall	.+3184   	; 0x33fa <strcat>
						strcat(toSend,":");
    278a:	f6 01       	movw	r30, r12
    278c:	01 90       	ld	r0, Z+
    278e:	00 20       	and	r0, r0
    2790:	e9 f7       	brne	.-6      	; 0x278c <_Z22CheckModuleConnectionsv+0x196>
    2792:	31 97       	sbiw	r30, 0x01	; 1
    2794:	91 82       	std	Z+1, r9	; 0x01
    2796:	80 82       	st	Z, r8
    2798:	4a e0       	ldi	r20, 0x0A	; 10
    279a:	be 01       	movw	r22, r28
    279c:	61 5e       	subi	r22, 0xE1	; 225
    279e:	7f 4f       	sbci	r23, 0xFF	; 255
    27a0:	f7 01       	movw	r30, r14
    27a2:	3a 97       	sbiw	r30, 0x0a	; 10
    27a4:	80 81       	ld	r24, Z
    27a6:	91 81       	ldd	r25, Z+1	; 0x01
    27a8:	86 d6       	rcall	.+3340   	; 0x34b6 <__itoa_ncheck>
						strcat(toSend,itoa(__system_var.relay_modules[i],conv,10));
    27aa:	bc 01       	movw	r22, r24
    27ac:	c6 01       	movw	r24, r12
    27ae:	25 d6       	rcall	.+3146   	; 0x33fa <strcat>
						strcat(toSend,";");
    27b0:	f6 01       	movw	r30, r12
    27b2:	01 90       	ld	r0, Z+
    27b4:	00 20       	and	r0, r0
    27b6:	e9 f7       	brne	.-6      	; 0x27b2 <_Z22CheckModuleConnectionsv+0x1bc>
    27b8:	31 97       	sbiw	r30, 0x01	; 1
    27ba:	b1 82       	std	Z+1, r11	; 0x01
    27bc:	a0 82       	st	Z, r10
		if (__system_var.update_flag == 1){
			__system_var.update_flag = 0;
			if (__network_data.is_server_connected){
				char toSend[30] = "RELAYCONNECTIONS;";
				int i;
				for (i=0;i<4;i++){
    27be:	0f 5f       	subi	r16, 0xFF	; 255
    27c0:	1f 4f       	sbci	r17, 0xFF	; 255
    27c2:	04 30       	cpi	r16, 0x04	; 4
    27c4:	11 05       	cpc	r17, r1
    27c6:	91 f6       	brne	.-92     	; 0x276c <_Z22CheckModuleConnectionsv+0x176>
						strcat(toSend,":");
						strcat(toSend,itoa(__system_var.relay_modules[i],conv,10));
						strcat(toSend,";");
					}
				}
				strcat(toSend,"\n");
    27c8:	ce 01       	movw	r24, r28
    27ca:	01 96       	adiw	r24, 0x01	; 1
    27cc:	fc 01       	movw	r30, r24
    27ce:	01 90       	ld	r0, Z+
    27d0:	00 20       	and	r0, r0
    27d2:	e9 f7       	brne	.-6      	; 0x27ce <_Z22CheckModuleConnectionsv+0x1d8>
    27d4:	31 97       	sbiw	r30, 0x01	; 1
    27d6:	2a e0       	ldi	r18, 0x0A	; 10
    27d8:	30 e0       	ldi	r19, 0x00	; 0
    27da:	31 83       	std	Z+1, r19	; 0x01
    27dc:	20 83       	st	Z, r18
				sendToServer(toSend,CONNECTION);
    27de:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    27e2:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    27e6:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <_Z12sendToServerPci>
			
			}
		}
		__system_time.relay_module_check_timer_buffer = 0;
    27ea:	10 92 09 09 	sts	0x0909, r1	; 0x800909 <__system_time+0x1b>
    27ee:	10 92 08 09 	sts	0x0908, r1	; 0x800908 <__system_time+0x1a>
    27f2:	1e c0       	rjmp	.+60     	; 0x2830 <_Z22CheckModuleConnectionsv+0x23a>
		itoa(__system_time.check_timer_buffer,conv,10);
	
		// CHECK RELAY MODULE CONNECTIONS
		for (i=0;i<4;i++){
			if (digitalRead(__system_var.detect_pins[i]) == 0 && __system_var.module_flags[i] == 0){
				delay(500);
    27f4:	84 ef       	ldi	r24, 0xF4	; 244
    27f6:	91 e0       	ldi	r25, 0x01	; 1
    27f8:	df d1       	rcall	.+958    	; 0x2bb8 <_Z5delayi>
				__system_var.module_connected[i] = 1;
    27fa:	f7 01       	movw	r30, r14
    27fc:	91 86       	std	Z+9, r9	; 0x09
    27fe:	80 86       	std	Z+8, r8	; 0x08
				__system_var.module_flags[i] = 1;
    2800:	91 8a       	std	Z+17, r9	; 0x11
    2802:	80 8a       	std	Z+16, r8	; 0x10
    2804:	0f 2e       	mov	r0, r31
    2806:	f5 e0       	ldi	r31, 0x05	; 5
    2808:	cf 2e       	mov	r12, r31
    280a:	f0 2d       	mov	r31, r0
    280c:	d2 2c       	mov	r13, r2
    280e:	46 cf       	rjmp	.-372    	; 0x269c <_Z22CheckModuleConnectionsv+0xa6>
				__system_var.update_flag = 1;
			
				//delay(500);
			}
			if (digitalRead(__system_var.detect_pins[i]) != 0 && __system_var.module_flags[i] == 1){
				delay(500);
    2810:	84 ef       	ldi	r24, 0xF4	; 244
    2812:	91 e0       	ldi	r25, 0x01	; 1
    2814:	d1 d1       	rcall	.+930    	; 0x2bb8 <_Z5delayi>
				__system_var.module_connected[i] = 0;
    2816:	d5 01       	movw	r26, r10
    2818:	19 96       	adiw	r26, 0x09	; 9
    281a:	1c 92       	st	X, r1
    281c:	1e 92       	st	-X, r1
    281e:	18 97       	sbiw	r26, 0x08	; 8
				__system_var.module_flags[i] = 0;
    2820:	51 96       	adiw	r26, 0x11	; 17
    2822:	1c 92       	st	X, r1
    2824:	1e 92       	st	-X, r1
    2826:	50 97       	sbiw	r26, 0x10	; 16
				__system_var.update_flag = 1;
    2828:	f3 01       	movw	r30, r6
    282a:	91 82       	std	Z+1, r9	; 0x01
    282c:	80 82       	st	Z, r8
    282e:	61 cf       	rjmp	.-318    	; 0x26f2 <_Z22CheckModuleConnectionsv+0xfc>
			
			}
		}
		__system_time.relay_module_check_timer_buffer = 0;
	}
}
    2830:	a3 96       	adiw	r28, 0x23	; 35
    2832:	0f b6       	in	r0, 0x3f	; 63
    2834:	f8 94       	cli
    2836:	de bf       	out	0x3e, r29	; 62
    2838:	0f be       	out	0x3f, r0	; 63
    283a:	cd bf       	out	0x3d, r28	; 61
    283c:	df 91       	pop	r29
    283e:	cf 91       	pop	r28
    2840:	1f 91       	pop	r17
    2842:	0f 91       	pop	r16
    2844:	ff 90       	pop	r15
    2846:	ef 90       	pop	r14
    2848:	df 90       	pop	r13
    284a:	cf 90       	pop	r12
    284c:	bf 90       	pop	r11
    284e:	af 90       	pop	r10
    2850:	9f 90       	pop	r9
    2852:	8f 90       	pop	r8
    2854:	7f 90       	pop	r7
    2856:	6f 90       	pop	r6
    2858:	5f 90       	pop	r5
    285a:	4f 90       	pop	r4
    285c:	3f 90       	pop	r3
    285e:	2f 90       	pop	r2
    2860:	08 95       	ret

00002862 <_Z9HeartBeatv>:

void HeartBeat(){
	// CHECK SERVER CONNECTION
	if (__system_time.check_timer_buffer >= __system_time.check_timer){
    2862:	ee ee       	ldi	r30, 0xEE	; 238
    2864:	f8 e0       	ldi	r31, 0x08	; 8
    2866:	26 89       	ldd	r18, Z+22	; 0x16
    2868:	37 89       	ldd	r19, Z+23	; 0x17
    286a:	84 89       	ldd	r24, Z+20	; 0x14
    286c:	95 89       	ldd	r25, Z+21	; 0x15
    286e:	28 17       	cp	r18, r24
    2870:	39 07       	cpc	r19, r25
    2872:	04 f1       	brlt	.+64     	; 0x28b4 <_Z9HeartBeatv+0x52>
		
		if (__network_data.is_server_connected ){
    2874:	80 91 c3 09 	lds	r24, 0x09C3	; 0x8009c3 <__network_data+0xb1>
    2878:	88 23       	and	r24, r24
    287a:	c1 f0       	breq	.+48     	; 0x28ac <_Z9HeartBeatv+0x4a>
			sendToServer("CHECK\n",CONNECTION);
    287c:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <CONNECTION>
    2880:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <CONNECTION+0x1>
    2884:	8b e4       	ldi	r24, 0x4B	; 75
    2886:	97 e0       	ldi	r25, 0x07	; 7
    2888:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <_Z12sendToServerPci>
			if (readUntil("LIVE",3) == 0){
    288c:	63 e0       	ldi	r22, 0x03	; 3
    288e:	70 e0       	ldi	r23, 0x00	; 0
    2890:	82 e5       	ldi	r24, 0x52	; 82
    2892:	97 e0       	ldi	r25, 0x07	; 7
    2894:	0e 94 c4 08 	call	0x1188	; 0x1188 <_Z9readUntilPKci>
    2898:	89 2b       	or	r24, r25
    289a:	41 f4       	brne	.+16     	; 0x28ac <_Z9HeartBeatv+0x4a>
				__network_data.is_server_connected = FALSE;
    289c:	80 91 b1 03 	lds	r24, 0x03B1	; 0x8003b1 <FALSE>
    28a0:	80 93 c3 09 	sts	0x09C3, r24	; 0x8009c3 <__network_data+0xb1>
				__network_data.is_esp_connected = FALSE;
    28a4:	80 93 c1 09 	sts	0x09C1, r24	; 0x8009c1 <__network_data+0xaf>
				__network_data.is_sim_connected = FALSE;
    28a8:	80 93 c2 09 	sts	0x09C2, r24	; 0x8009c2 <__network_data+0xb0>
			}
		}
		__system_time.check_timer_buffer = 0;
    28ac:	10 92 05 09 	sts	0x0905, r1	; 0x800905 <__system_time+0x17>
    28b0:	10 92 04 09 	sts	0x0904, r1	; 0x800904 <__system_time+0x16>
    28b4:	08 95       	ret

000028b6 <_Z18ProcessRelayTimersv>:
	}
}

void ProcessRelayTimers(){
    28b6:	2f 92       	push	r2
    28b8:	3f 92       	push	r3
    28ba:	4f 92       	push	r4
    28bc:	5f 92       	push	r5
    28be:	6f 92       	push	r6
    28c0:	7f 92       	push	r7
    28c2:	8f 92       	push	r8
    28c4:	9f 92       	push	r9
    28c6:	af 92       	push	r10
    28c8:	bf 92       	push	r11
    28ca:	cf 92       	push	r12
    28cc:	df 92       	push	r13
    28ce:	ef 92       	push	r14
    28d0:	ff 92       	push	r15
    28d2:	0f 93       	push	r16
    28d4:	1f 93       	push	r17
    28d6:	cf 93       	push	r28
    28d8:	df 93       	push	r29
    28da:	00 d0       	rcall	.+0      	; 0x28dc <_Z18ProcessRelayTimersv+0x26>
    28dc:	00 d0       	rcall	.+0      	; 0x28de <_Z18ProcessRelayTimersv+0x28>
    28de:	cd b7       	in	r28, 0x3d	; 61
    28e0:	de b7       	in	r29, 0x3e	; 62
	if ((__system_time.timer_check_timer_buffer >= __system_time.timer_check_timer) && __system_var.enabled_flag == 1){
    28e2:	ee ee       	ldi	r30, 0xEE	; 238
    28e4:	f8 e0       	ldi	r31, 0x08	; 8
    28e6:	26 8d       	ldd	r18, Z+30	; 0x1e
    28e8:	37 8d       	ldd	r19, Z+31	; 0x1f
    28ea:	84 8d       	ldd	r24, Z+28	; 0x1c
    28ec:	95 8d       	ldd	r25, Z+29	; 0x1d
    28ee:	28 17       	cp	r18, r24
    28f0:	39 07       	cpc	r19, r25
    28f2:	0c f4       	brge	.+2      	; 0x28f6 <_Z18ProcessRelayTimersv+0x40>
    28f4:	bc c0       	rjmp	.+376    	; 0x2a6e <_Z18ProcessRelayTimersv+0x1b8>
    28f6:	80 91 cb 0c 	lds	r24, 0x0CCB	; 0x800ccb <__system_var+0x45>
    28fa:	81 30       	cpi	r24, 0x01	; 1
    28fc:	09 f0       	breq	.+2      	; 0x2900 <_Z18ProcessRelayTimersv+0x4a>
    28fe:	b7 c0       	rjmp	.+366    	; 0x2a6e <_Z18ProcessRelayTimersv+0x1b8>
		int module_index;
		char conv[5];
		// this should be initialized after receiving updates from server and after module startup
		initializeTimerSettingIds();
    2900:	0e 94 a7 04 	call	0x94e	; 0x94e <_Z25initializeTimerSettingIdsv>
    2904:	80 e1       	ldi	r24, 0x10	; 16
    2906:	98 e0       	ldi	r25, 0x08	; 8
    2908:	9a 83       	std	Y+2, r25	; 0x02
    290a:	89 83       	std	Y+1, r24	; 0x01
		 
		
		for (module_index=0;module_index<MAX_MODULE_COUNT;module_index++){
    290c:	00 e0       	ldi	r16, 0x00	; 0
    290e:	10 e0       	ldi	r17, 0x00	; 0
		}
		__system_time.check_timer_buffer = 0;
	}
}

void ProcessRelayTimers(){
    2910:	61 2c       	mov	r6, r1
			int relay_index;

			for (relay_index=0;relay_index<MAX_RELAY_COUNT;relay_index++){
				if (__timer_records[module_index].relays[relay_index] != 254){
					char isTimerActive = FALSE;
					__system_var.eeprom_position = EEPROM_CFG_START;
    2912:	0f 2e       	mov	r0, r31
    2914:	f7 ec       	ldi	r31, 0xC7	; 199
    2916:	4f 2e       	mov	r4, r31
    2918:	fc e0       	ldi	r31, 0x0C	; 12
    291a:	5f 2e       	mov	r5, r31
    291c:	f0 2d       	mov	r31, r0
    291e:	20 90 a1 01 	lds	r2, 0x01A1	; 0x8001a1 <EEPROM_CFG_START>
    2922:	30 90 a2 01 	lds	r3, 0x01A2	; 0x8001a2 <EEPROM_CFG_START+0x1>

					// Get all the timers associated with relays
					while (getTimerSetting(module_index,__timer_records[module_index].relays[relay_index]) != 0){
						if (isCurrentTimerActive() == TRUE){
    2926:	e0 90 b3 03 	lds	r14, 0x03B3	; 0x8003b3 <TRUE>
    292a:	f0 90 b4 03 	lds	r15, 0x03B4	; 0x8003b4 <TRUE+0x1>
    292e:	90 c0       	rjmp	.+288    	; 0x2a50 <_Z18ProcessRelayTimersv+0x19a>
    2930:	dc 82       	std	Y+4, r13	; 0x04
    2932:	cb 82       	std	Y+3, r12	; 0x03
		
		for (module_index=0;module_index<MAX_MODULE_COUNT;module_index++){
			int relay_index;

			for (relay_index=0;relay_index<MAX_RELAY_COUNT;relay_index++){
				if (__timer_records[module_index].relays[relay_index] != 254){
    2934:	d6 01       	movw	r26, r12
    2936:	12 96       	adiw	r26, 0x02	; 2
    2938:	8d 91       	ld	r24, X+
    293a:	9c 91       	ld	r25, X
    293c:	13 97       	sbiw	r26, 0x03	; 3
    293e:	8e 3f       	cpi	r24, 0xFE	; 254
    2940:	91 05       	cpc	r25, r1
    2942:	09 f4       	brne	.+2      	; 0x2946 <_Z18ProcessRelayTimersv+0x90>
    2944:	70 c0       	rjmp	.+224    	; 0x2a26 <_Z18ProcessRelayTimersv+0x170>
					char isTimerActive = FALSE;
    2946:	e1 eb       	ldi	r30, 0xB1	; 177
    2948:	f3 e0       	ldi	r31, 0x03	; 3
    294a:	70 80       	ld	r7, Z
					__system_var.eeprom_position = EEPROM_CFG_START;
    294c:	d2 01       	movw	r26, r4
    294e:	2d 92       	st	X+, r2
    2950:	3c 92       	st	X, r3

					// Get all the timers associated with relays
					while (getTimerSetting(module_index,__timer_records[module_index].relays[relay_index]) != 0){
    2952:	06 c0       	rjmp	.+12     	; 0x2960 <_Z18ProcessRelayTimersv+0xaa>
						if (isCurrentTimerActive() == TRUE){
    2954:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <_Z20isCurrentTimerActivev>
    2958:	8e 15       	cp	r24, r14
    295a:	9f 05       	cpc	r25, r15
    295c:	09 f4       	brne	.+2      	; 0x2960 <_Z18ProcessRelayTimersv+0xaa>
							isTimerActive = TRUE;
    295e:	78 2e       	mov	r7, r24
				if (__timer_records[module_index].relays[relay_index] != 254){
					char isTimerActive = FALSE;
					__system_var.eeprom_position = EEPROM_CFG_START;

					// Get all the timers associated with relays
					while (getTimerSetting(module_index,__timer_records[module_index].relays[relay_index]) != 0){
    2960:	eb 81       	ldd	r30, Y+3	; 0x03
    2962:	fc 81       	ldd	r31, Y+4	; 0x04
    2964:	62 81       	ldd	r22, Z+2	; 0x02
    2966:	73 81       	ldd	r23, Z+3	; 0x03
    2968:	c8 01       	movw	r24, r16
    296a:	0e 94 8f 05 	call	0xb1e	; 0xb1e <_Z15getTimerSettingii>
    296e:	89 2b       	or	r24, r25
    2970:	89 f7       	brne	.-30     	; 0x2954 <_Z18ProcessRelayTimersv+0x9e>
						if (isCurrentTimerActive() == TRUE){
							isTimerActive = TRUE;
						}
					}
					// check if module is connected as well
					if (isTimerActive){
    2972:	77 20       	and	r7, r7
    2974:	79 f1       	breq	.+94     	; 0x29d4 <_Z18ProcessRelayTimersv+0x11e>
						char conv[5];
						
						if (module_index < MAX_MODULE_COUNT && relay_index < MAX_RELAY_COUNT){
    2976:	04 30       	cpi	r16, 0x04	; 4
    2978:	11 05       	cpc	r17, r1
    297a:	0c f0       	brlt	.+2      	; 0x297e <_Z18ProcessRelayTimersv+0xc8>
    297c:	54 c0       	rjmp	.+168    	; 0x2a26 <_Z18ProcessRelayTimersv+0x170>
    297e:	fd e0       	ldi	r31, 0x0D	; 13
    2980:	af 16       	cp	r10, r31
    2982:	b1 04       	cpc	r11, r1
    2984:	0c f0       	brlt	.+2      	; 0x2988 <_Z18ProcessRelayTimersv+0xd2>
    2986:	4f c0       	rjmp	.+158    	; 0x2a26 <_Z18ProcessRelayTimersv+0x170>
							if (__relay_states[module_index].states[__timer_records[module_index].relays[relay_index]] == 0){
    2988:	ab 81       	ldd	r26, Y+3	; 0x03
    298a:	bc 81       	ldd	r27, Y+4	; 0x04
    298c:	12 96       	adiw	r26, 0x02	; 2
    298e:	6d 91       	ld	r22, X+
    2990:	7c 91       	ld	r23, X
    2992:	13 97       	sbiw	r26, 0x03	; 3
    2994:	f4 01       	movw	r30, r8
    2996:	e6 0f       	add	r30, r22
    2998:	f7 1f       	adc	r31, r23
    299a:	ee 0f       	add	r30, r30
    299c:	ff 1f       	adc	r31, r31
    299e:	e8 55       	subi	r30, 0x58	; 88
    29a0:	f8 4f       	sbci	r31, 0xF8	; 248
    29a2:	80 81       	ld	r24, Z
    29a4:	91 81       	ldd	r25, Z+1	; 0x01
    29a6:	89 2b       	or	r24, r25
    29a8:	09 f0       	breq	.+2      	; 0x29ac <_Z18ProcessRelayTimersv+0xf6>
    29aa:	3d c0       	rjmp	.+122    	; 0x2a26 <_Z18ProcessRelayTimersv+0x170>
								switchRelay(module_index,__timer_records[module_index].relays[relay_index],1);
    29ac:	41 e0       	ldi	r20, 0x01	; 1
    29ae:	80 2f       	mov	r24, r16
    29b0:	45 dc       	rcall	.-1910   	; 0x223c <_Z11switchRelayccc>
								__relay_states[module_index].states[__timer_records[module_index].relays[relay_index]] = 1;
    29b2:	ab 81       	ldd	r26, Y+3	; 0x03
    29b4:	bc 81       	ldd	r27, Y+4	; 0x04
    29b6:	12 96       	adiw	r26, 0x02	; 2
    29b8:	ed 91       	ld	r30, X+
    29ba:	fc 91       	ld	r31, X
    29bc:	13 97       	sbiw	r26, 0x03	; 3
    29be:	e8 0d       	add	r30, r8
    29c0:	f9 1d       	adc	r31, r9
    29c2:	ee 0f       	add	r30, r30
    29c4:	ff 1f       	adc	r31, r31
    29c6:	e8 55       	subi	r30, 0x58	; 88
    29c8:	f8 4f       	sbci	r31, 0xF8	; 248
    29ca:	81 e0       	ldi	r24, 0x01	; 1
    29cc:	90 e0       	ldi	r25, 0x00	; 0
    29ce:	91 83       	std	Z+1, r25	; 0x01
    29d0:	80 83       	st	Z, r24
    29d2:	29 c0       	rjmp	.+82     	; 0x2a26 <_Z18ProcessRelayTimersv+0x170>
						
						
						} else {
						char conv[5];
						
						if (module_index < MAX_MODULE_COUNT && relay_index < MAX_RELAY_COUNT){
    29d4:	04 30       	cpi	r16, 0x04	; 4
    29d6:	11 05       	cpc	r17, r1
    29d8:	34 f5       	brge	.+76     	; 0x2a26 <_Z18ProcessRelayTimersv+0x170>
    29da:	9d e0       	ldi	r25, 0x0D	; 13
    29dc:	a9 16       	cp	r10, r25
    29de:	b1 04       	cpc	r11, r1
    29e0:	14 f5       	brge	.+68     	; 0x2a26 <_Z18ProcessRelayTimersv+0x170>
							if (__relay_states[module_index].states[__timer_records[module_index].relays[relay_index]] == 1){
    29e2:	ab 81       	ldd	r26, Y+3	; 0x03
    29e4:	bc 81       	ldd	r27, Y+4	; 0x04
    29e6:	12 96       	adiw	r26, 0x02	; 2
    29e8:	6d 91       	ld	r22, X+
    29ea:	7c 91       	ld	r23, X
    29ec:	13 97       	sbiw	r26, 0x03	; 3
    29ee:	f4 01       	movw	r30, r8
    29f0:	e6 0f       	add	r30, r22
    29f2:	f7 1f       	adc	r31, r23
    29f4:	ee 0f       	add	r30, r30
    29f6:	ff 1f       	adc	r31, r31
    29f8:	e8 55       	subi	r30, 0x58	; 88
    29fa:	f8 4f       	sbci	r31, 0xF8	; 248
    29fc:	80 81       	ld	r24, Z
    29fe:	91 81       	ldd	r25, Z+1	; 0x01
    2a00:	01 97       	sbiw	r24, 0x01	; 1
    2a02:	89 f4       	brne	.+34     	; 0x2a26 <_Z18ProcessRelayTimersv+0x170>
								switchRelay(module_index,__timer_records[module_index].relays[relay_index],0);
    2a04:	40 e0       	ldi	r20, 0x00	; 0
    2a06:	80 2f       	mov	r24, r16
    2a08:	19 dc       	rcall	.-1998   	; 0x223c <_Z11switchRelayccc>
								__relay_states[module_index].states[__timer_records[module_index].relays[relay_index]] = 0;
    2a0a:	ab 81       	ldd	r26, Y+3	; 0x03
    2a0c:	bc 81       	ldd	r27, Y+4	; 0x04
    2a0e:	12 96       	adiw	r26, 0x02	; 2
    2a10:	ed 91       	ld	r30, X+
    2a12:	fc 91       	ld	r31, X
    2a14:	13 97       	sbiw	r26, 0x03	; 3
    2a16:	e8 0d       	add	r30, r8
    2a18:	f9 1d       	adc	r31, r9
    2a1a:	ee 0f       	add	r30, r30
    2a1c:	ff 1f       	adc	r31, r31
    2a1e:	e8 55       	subi	r30, 0x58	; 88
    2a20:	f8 4f       	sbci	r31, 0xF8	; 248
    2a22:	11 82       	std	Z+1, r1	; 0x01
    2a24:	10 82       	st	Z, r1
		 
		
		for (module_index=0;module_index<MAX_MODULE_COUNT;module_index++){
			int relay_index;

			for (relay_index=0;relay_index<MAX_RELAY_COUNT;relay_index++){
    2a26:	bf ef       	ldi	r27, 0xFF	; 255
    2a28:	ab 1a       	sub	r10, r27
    2a2a:	bb 0a       	sbc	r11, r27
    2a2c:	e2 e0       	ldi	r30, 0x02	; 2
    2a2e:	ce 0e       	add	r12, r30
    2a30:	d1 1c       	adc	r13, r1
    2a32:	fd e0       	ldi	r31, 0x0D	; 13
    2a34:	af 16       	cp	r10, r31
    2a36:	b1 04       	cpc	r11, r1
    2a38:	09 f0       	breq	.+2      	; 0x2a3c <_Z18ProcessRelayTimersv+0x186>
    2a3a:	7a cf       	rjmp	.-268    	; 0x2930 <_Z18ProcessRelayTimersv+0x7a>
		char conv[5];
		// this should be initialized after receiving updates from server and after module startup
		initializeTimerSettingIds();
		 
		
		for (module_index=0;module_index<MAX_MODULE_COUNT;module_index++){
    2a3c:	0f 5f       	subi	r16, 0xFF	; 255
    2a3e:	1f 4f       	sbci	r17, 0xFF	; 255
    2a40:	89 81       	ldd	r24, Y+1	; 0x01
    2a42:	9a 81       	ldd	r25, Y+2	; 0x02
    2a44:	4c 96       	adiw	r24, 0x1c	; 28
    2a46:	9a 83       	std	Y+2, r25	; 0x02
    2a48:	89 83       	std	Y+1, r24	; 0x01
    2a4a:	04 30       	cpi	r16, 0x04	; 4
    2a4c:	11 05       	cpc	r17, r1
    2a4e:	59 f0       	breq	.+22     	; 0x2a66 <_Z18ProcessRelayTimersv+0x1b0>
		}
		__system_time.check_timer_buffer = 0;
	}
}

void ProcessRelayTimers(){
    2a50:	c9 80       	ldd	r12, Y+1	; 0x01
    2a52:	da 80       	ldd	r13, Y+2	; 0x02
    2a54:	a6 2c       	mov	r10, r6
    2a56:	b1 2c       	mov	r11, r1
						
						} else {
						char conv[5];
						
						if (module_index < MAX_MODULE_COUNT && relay_index < MAX_RELAY_COUNT){
							if (__relay_states[module_index].states[__timer_records[module_index].relays[relay_index]] == 1){
    2a58:	9d e0       	ldi	r25, 0x0D	; 13
    2a5a:	90 9f       	mul	r25, r16
    2a5c:	40 01       	movw	r8, r0
    2a5e:	91 9f       	mul	r25, r17
    2a60:	90 0c       	add	r9, r0
    2a62:	11 24       	eor	r1, r1
    2a64:	65 cf       	rjmp	.-310    	; 0x2930 <_Z18ProcessRelayTimersv+0x7a>
						
					}
				}
			} 
		}
		__system_time.timer_check_timer_buffer = 0;
    2a66:	10 92 0d 09 	sts	0x090D, r1	; 0x80090d <__system_time+0x1f>
    2a6a:	10 92 0c 09 	sts	0x090C, r1	; 0x80090c <__system_time+0x1e>
	}
}
    2a6e:	0f 90       	pop	r0
    2a70:	0f 90       	pop	r0
    2a72:	0f 90       	pop	r0
    2a74:	0f 90       	pop	r0
    2a76:	df 91       	pop	r29
    2a78:	cf 91       	pop	r28
    2a7a:	1f 91       	pop	r17
    2a7c:	0f 91       	pop	r16
    2a7e:	ff 90       	pop	r15
    2a80:	ef 90       	pop	r14
    2a82:	df 90       	pop	r13
    2a84:	cf 90       	pop	r12
    2a86:	bf 90       	pop	r11
    2a88:	af 90       	pop	r10
    2a8a:	9f 90       	pop	r9
    2a8c:	8f 90       	pop	r8
    2a8e:	7f 90       	pop	r7
    2a90:	6f 90       	pop	r6
    2a92:	5f 90       	pop	r5
    2a94:	4f 90       	pop	r4
    2a96:	3f 90       	pop	r3
    2a98:	2f 90       	pop	r2
    2a9a:	08 95       	ret

00002a9c <_Z10chipSelectii>:

	SPDR = toWrite;

	while(!(SPSR & (1<<SPIF)));

}
    2a9c:	1f 93       	push	r17
    2a9e:	cf 93       	push	r28
    2aa0:	df 93       	push	r29
    2aa2:	ec 01       	movw	r28, r24
    2aa4:	16 2f       	mov	r17, r22
    2aa6:	84 e6       	ldi	r24, 0x64	; 100
    2aa8:	90 e0       	ldi	r25, 0x00	; 0
    2aaa:	86 d0       	rcall	.+268    	; 0x2bb8 <_Z5delayi>
    2aac:	c1 30       	cpi	r28, 0x01	; 1
    2aae:	d1 05       	cpc	r29, r1
    2ab0:	89 f0       	breq	.+34     	; 0x2ad4 <_Z10chipSelectii+0x38>
    2ab2:	1c f4       	brge	.+6      	; 0x2aba <_Z10chipSelectii+0x1e>
    2ab4:	cd 2b       	or	r28, r29
    2ab6:	39 f0       	breq	.+14     	; 0x2ac6 <_Z10chipSelectii+0x2a>
    2ab8:	21 c0       	rjmp	.+66     	; 0x2afc <_Z10chipSelectii+0x60>
    2aba:	c2 30       	cpi	r28, 0x02	; 2
    2abc:	d1 05       	cpc	r29, r1
    2abe:	89 f0       	breq	.+34     	; 0x2ae2 <_Z10chipSelectii+0x46>
    2ac0:	23 97       	sbiw	r28, 0x03	; 3
    2ac2:	b1 f0       	breq	.+44     	; 0x2af0 <_Z10chipSelectii+0x54>
    2ac4:	1b c0       	rjmp	.+54     	; 0x2afc <_Z10chipSelectii+0x60>
    2ac6:	61 2f       	mov	r22, r17
    2ac8:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <CS_1>
    2acc:	90 91 98 01 	lds	r25, 0x0198	; 0x800198 <CS_1+0x1>
    2ad0:	e8 d0       	rcall	.+464    	; 0x2ca2 <_Z12digitalWriteic>
    2ad2:	14 c0       	rjmp	.+40     	; 0x2afc <_Z10chipSelectii+0x60>
    2ad4:	61 2f       	mov	r22, r17
    2ad6:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <CS_2>
    2ada:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <CS_2+0x1>
    2ade:	e1 d0       	rcall	.+450    	; 0x2ca2 <_Z12digitalWriteic>
    2ae0:	0d c0       	rjmp	.+26     	; 0x2afc <_Z10chipSelectii+0x60>
    2ae2:	61 2f       	mov	r22, r17
    2ae4:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <CS_3>
    2ae8:	90 91 94 01 	lds	r25, 0x0194	; 0x800194 <CS_3+0x1>
    2aec:	da d0       	rcall	.+436    	; 0x2ca2 <_Z12digitalWriteic>
    2aee:	06 c0       	rjmp	.+12     	; 0x2afc <_Z10chipSelectii+0x60>
    2af0:	61 2f       	mov	r22, r17
    2af2:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <CS_4>
    2af6:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <CS_4+0x1>
    2afa:	d3 d0       	rcall	.+422    	; 0x2ca2 <_Z12digitalWriteic>
    2afc:	84 e6       	ldi	r24, 0x64	; 100
    2afe:	90 e0       	ldi	r25, 0x00	; 0
    2b00:	5b d0       	rcall	.+182    	; 0x2bb8 <_Z5delayi>
    2b02:	df 91       	pop	r29
    2b04:	cf 91       	pop	r28
    2b06:	1f 91       	pop	r17
    2b08:	08 95       	ret

00002b0a <_Z15SPI_init_masterv>:
    2b0a:	81 e5       	ldi	r24, 0x51	; 81
    2b0c:	8c bd       	out	0x2c, r24	; 44
    2b0e:	1e bc       	out	0x2e, r1	; 46
    2b10:	08 95       	ret

00002b12 <_Z13SPI_WriteReadh>:

unsigned char SPI_WriteRead(unsigned char toWrite)
{
	unsigned char data;
												
	SPDR = toWrite;								
    2b12:	8e bd       	out	0x2e, r24	; 46
	
	while(!(SPSR & (1<<SPIF)));
    2b14:	0d b4       	in	r0, 0x2d	; 45
    2b16:	07 fe       	sbrs	r0, 7
    2b18:	fd cf       	rjmp	.-6      	; 0x2b14 <_Z13SPI_WriteReadh+0x2>
	
	data = SPDR;
    2b1a:	8e b5       	in	r24, 0x2e	; 46
	
	return data;
}
    2b1c:	08 95       	ret

00002b1e <_Z10USART_Initv>:
	__network_data.index_esp = 0;
}
void clearGSMBuffer(){
	memset(__network_data.sim_buffer, ' ', sizeof(__network_data.sim_buffer) - 1);
	__network_data.is_sim_read_line = 0;
	__network_data.index_sim = 0;
    2b1e:	20 91 b9 03 	lds	r18, 0x03B9	; 0x8003b9 <BAUD_PRESCALE>
    2b22:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    2b26:	90 91 ba 03 	lds	r25, 0x03BA	; 0x8003ba <BAUD_PRESCALE+0x1>
    2b2a:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    2b2e:	88 e9       	ldi	r24, 0x98	; 152
    2b30:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    2b34:	20 93 cc 00 	sts	0x00CC, r18	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
    2b38:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
    2b3c:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7e00c9>
    2b40:	78 94       	sei
    2b42:	08 95       	ret

00002b44 <_Z15USART1_SendBytec>:
    2b44:	e8 ec       	ldi	r30, 0xC8	; 200
    2b46:	f0 e0       	ldi	r31, 0x00	; 0
    2b48:	90 81       	ld	r25, Z
    2b4a:	95 ff       	sbrs	r25, 5
    2b4c:	fd cf       	rjmp	.-6      	; 0x2b48 <_Z15USART1_SendBytec+0x4>
    2b4e:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
    2b52:	08 95       	ret

00002b54 <_Z17USART1_SendStringPKc>:
    2b54:	cf 93       	push	r28
    2b56:	df 93       	push	r29
    2b58:	ec 01       	movw	r28, r24
    2b5a:	88 81       	ld	r24, Y
    2b5c:	88 23       	and	r24, r24
    2b5e:	29 f0       	breq	.+10     	; 0x2b6a <_Z17USART1_SendStringPKc+0x16>
    2b60:	21 96       	adiw	r28, 0x01	; 1
    2b62:	f0 df       	rcall	.-32     	; 0x2b44 <_Z15USART1_SendBytec>
    2b64:	89 91       	ld	r24, Y+
    2b66:	81 11       	cpse	r24, r1
    2b68:	fc cf       	rjmp	.-8      	; 0x2b62 <_Z17USART1_SendStringPKc+0xe>
    2b6a:	df 91       	pop	r29
    2b6c:	cf 91       	pop	r28
    2b6e:	08 95       	ret

00002b70 <_Z15USART0_SendBytec>:
    2b70:	e0 ec       	ldi	r30, 0xC0	; 192
    2b72:	f0 e0       	ldi	r31, 0x00	; 0
    2b74:	90 81       	ld	r25, Z
    2b76:	95 ff       	sbrs	r25, 5
    2b78:	fd cf       	rjmp	.-6      	; 0x2b74 <_Z15USART0_SendBytec+0x4>
    2b7a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    2b7e:	08 95       	ret

00002b80 <_Z17USART0_SendStringPKc>:
    2b80:	cf 93       	push	r28
    2b82:	df 93       	push	r29
    2b84:	ec 01       	movw	r28, r24
    2b86:	88 81       	ld	r24, Y
    2b88:	88 23       	and	r24, r24
    2b8a:	29 f0       	breq	.+10     	; 0x2b96 <_Z17USART0_SendStringPKc+0x16>
    2b8c:	21 96       	adiw	r28, 0x01	; 1
    2b8e:	f0 df       	rcall	.-32     	; 0x2b70 <_Z15USART0_SendBytec>
    2b90:	89 91       	ld	r24, Y+
    2b92:	81 11       	cpse	r24, r1
    2b94:	fc cf       	rjmp	.-8      	; 0x2b8e <_Z17USART0_SendStringPKc+0xe>
    2b96:	df 91       	pop	r29
    2b98:	cf 91       	pop	r28
    2b9a:	08 95       	ret

00002b9c <_Z16GSM_Write_StringPKc>:
    2b9c:	20 91 a5 01 	lds	r18, 0x01A5	; 0x8001a5 <GSM_DIRECTION>
    2ba0:	30 91 a6 01 	lds	r19, 0x01A6	; 0x8001a6 <GSM_DIRECTION+0x1>
    2ba4:	21 15       	cp	r18, r1
    2ba6:	31 05       	cpc	r19, r1
    2ba8:	11 f4       	brne	.+4      	; 0x2bae <_Z16GSM_Write_StringPKc+0x12>
    2baa:	ea cf       	rjmp	.-44     	; 0x2b80 <_Z17USART0_SendStringPKc>
    2bac:	08 95       	ret
    2bae:	21 30       	cpi	r18, 0x01	; 1
    2bb0:	31 05       	cpc	r19, r1
    2bb2:	09 f4       	brne	.+2      	; 0x2bb6 <_Z16GSM_Write_StringPKc+0x1a>
    2bb4:	cf cf       	rjmp	.-98     	; 0x2b54 <_Z17USART1_SendStringPKc>
    2bb6:	08 95       	ret

00002bb8 <_Z5delayi>:
    2bb8:	18 16       	cp	r1, r24
    2bba:	19 06       	cpc	r1, r25
    2bbc:	44 f4       	brge	.+16     	; 0x2bce <_Z5delayi+0x16>
    2bbe:	e3 ec       	ldi	r30, 0xC3	; 195
    2bc0:	f9 e0       	ldi	r31, 0x09	; 9
    2bc2:	31 97       	sbiw	r30, 0x01	; 1
    2bc4:	f1 f7       	brne	.-4      	; 0x2bc2 <_Z5delayi+0xa>
    2bc6:	00 c0       	rjmp	.+0      	; 0x2bc8 <_Z5delayi+0x10>
    2bc8:	00 00       	nop
    2bca:	01 97       	sbiw	r24, 0x01	; 1
    2bcc:	c1 f7       	brne	.-16     	; 0x2bbe <_Z5delayi+0x6>
    2bce:	08 95       	ret

00002bd0 <_Z7pinModeic>:
    2bd0:	01 97       	sbiw	r24, 0x01	; 1
    2bd2:	8c 32       	cpi	r24, 0x2C	; 44
    2bd4:	91 05       	cpc	r25, r1
    2bd6:	08 f0       	brcs	.+2      	; 0x2bda <_Z7pinModeic+0xa>
    2bd8:	63 c0       	rjmp	.+198    	; 0x2ca0 <_Z7pinModeic+0xd0>
    2bda:	83 5b       	subi	r24, 0xB3	; 179
    2bdc:	9f 4f       	sbci	r25, 0xFF	; 255
    2bde:	fc 01       	movw	r30, r24
    2be0:	a6 c2       	rjmp	.+1356   	; 0x312e <__tablejump2__>
    2be2:	61 30       	cpi	r22, 0x01	; 1
    2be4:	11 f4       	brne	.+4      	; 0x2bea <_Z7pinModeic+0x1a>
    2be6:	25 9a       	sbi	0x04, 5	; 4
    2be8:	08 95       	ret
    2bea:	25 98       	cbi	0x04, 5	; 4
    2bec:	08 95       	ret
    2bee:	61 30       	cpi	r22, 0x01	; 1
    2bf0:	11 f4       	brne	.+4      	; 0x2bf6 <_Z7pinModeic+0x26>
    2bf2:	26 9a       	sbi	0x04, 6	; 4
    2bf4:	08 95       	ret
    2bf6:	26 98       	cbi	0x04, 6	; 4
    2bf8:	08 95       	ret
    2bfa:	61 30       	cpi	r22, 0x01	; 1
    2bfc:	11 f4       	brne	.+4      	; 0x2c02 <_Z7pinModeic+0x32>
    2bfe:	27 9a       	sbi	0x04, 7	; 4
    2c00:	08 95       	ret
    2c02:	27 98       	cbi	0x04, 7	; 4
    2c04:	08 95       	ret
    2c06:	61 30       	cpi	r22, 0x01	; 1
    2c08:	11 f4       	brne	.+4      	; 0x2c0e <_Z7pinModeic+0x3e>
    2c0a:	54 9a       	sbi	0x0a, 4	; 10
    2c0c:	08 95       	ret
    2c0e:	54 98       	cbi	0x0a, 4	; 10
    2c10:	08 95       	ret
    2c12:	61 30       	cpi	r22, 0x01	; 1
    2c14:	11 f4       	brne	.+4      	; 0x2c1a <_Z7pinModeic+0x4a>
    2c16:	55 9a       	sbi	0x0a, 5	; 10
    2c18:	08 95       	ret
    2c1a:	55 98       	cbi	0x0a, 5	; 10
    2c1c:	08 95       	ret
    2c1e:	61 30       	cpi	r22, 0x01	; 1
    2c20:	11 f4       	brne	.+4      	; 0x2c26 <_Z7pinModeic+0x56>
    2c22:	56 9a       	sbi	0x0a, 6	; 10
    2c24:	08 95       	ret
    2c26:	56 98       	cbi	0x0a, 6	; 10
    2c28:	08 95       	ret
    2c2a:	61 30       	cpi	r22, 0x01	; 1
    2c2c:	11 f4       	brne	.+4      	; 0x2c32 <_Z7pinModeic+0x62>
    2c2e:	57 9a       	sbi	0x0a, 7	; 10
    2c30:	08 95       	ret
    2c32:	57 98       	cbi	0x0a, 7	; 10
    2c34:	08 95       	ret
    2c36:	61 30       	cpi	r22, 0x01	; 1
    2c38:	11 f4       	brne	.+4      	; 0x2c3e <_Z7pinModeic+0x6e>
    2c3a:	3a 9a       	sbi	0x07, 2	; 7
    2c3c:	08 95       	ret
    2c3e:	3a 98       	cbi	0x07, 2	; 7
    2c40:	08 95       	ret
    2c42:	61 30       	cpi	r22, 0x01	; 1
    2c44:	11 f4       	brne	.+4      	; 0x2c4a <_Z7pinModeic+0x7a>
    2c46:	3b 9a       	sbi	0x07, 3	; 7
    2c48:	08 95       	ret
    2c4a:	3b 98       	cbi	0x07, 3	; 7
    2c4c:	08 95       	ret
    2c4e:	61 30       	cpi	r22, 0x01	; 1
    2c50:	11 f4       	brne	.+4      	; 0x2c56 <_Z7pinModeic+0x86>
    2c52:	3c 9a       	sbi	0x07, 4	; 7
    2c54:	08 95       	ret
    2c56:	3c 98       	cbi	0x07, 4	; 7
    2c58:	08 95       	ret
    2c5a:	61 30       	cpi	r22, 0x01	; 1
    2c5c:	11 f4       	brne	.+4      	; 0x2c62 <_Z7pinModeic+0x92>
    2c5e:	3d 9a       	sbi	0x07, 5	; 7
    2c60:	08 95       	ret
    2c62:	3d 98       	cbi	0x07, 5	; 7
    2c64:	08 95       	ret
    2c66:	61 30       	cpi	r22, 0x01	; 1
    2c68:	11 f4       	brne	.+4      	; 0x2c6e <_Z7pinModeic+0x9e>
    2c6a:	20 9a       	sbi	0x04, 0	; 4
    2c6c:	08 95       	ret
    2c6e:	20 98       	cbi	0x04, 0	; 4
    2c70:	08 95       	ret
    2c72:	61 30       	cpi	r22, 0x01	; 1
    2c74:	11 f4       	brne	.+4      	; 0x2c7a <_Z7pinModeic+0xaa>
    2c76:	21 9a       	sbi	0x04, 1	; 4
    2c78:	08 95       	ret
    2c7a:	21 98       	cbi	0x04, 1	; 4
    2c7c:	08 95       	ret
    2c7e:	61 30       	cpi	r22, 0x01	; 1
    2c80:	11 f4       	brne	.+4      	; 0x2c86 <_Z7pinModeic+0xb6>
    2c82:	22 9a       	sbi	0x04, 2	; 4
    2c84:	08 95       	ret
    2c86:	22 98       	cbi	0x04, 2	; 4
    2c88:	08 95       	ret
    2c8a:	61 30       	cpi	r22, 0x01	; 1
    2c8c:	11 f4       	brne	.+4      	; 0x2c92 <_Z7pinModeic+0xc2>
    2c8e:	23 9a       	sbi	0x04, 3	; 4
    2c90:	08 95       	ret
    2c92:	23 98       	cbi	0x04, 3	; 4
    2c94:	08 95       	ret
    2c96:	61 30       	cpi	r22, 0x01	; 1
    2c98:	11 f4       	brne	.+4      	; 0x2c9e <_Z7pinModeic+0xce>
    2c9a:	24 9a       	sbi	0x04, 4	; 4
    2c9c:	08 95       	ret
    2c9e:	24 98       	cbi	0x04, 4	; 4
    2ca0:	08 95       	ret

00002ca2 <_Z12digitalWriteic>:
    2ca2:	0d 97       	sbiw	r24, 0x0d	; 13
    2ca4:	8e 31       	cpi	r24, 0x1E	; 30
    2ca6:	91 05       	cpc	r25, r1
    2ca8:	68 f5       	brcc	.+90     	; 0x2d04 <_Z12digitalWriteic+0x62>
    2caa:	87 58       	subi	r24, 0x87	; 135
    2cac:	9f 4f       	sbci	r25, 0xFF	; 255
    2cae:	fc 01       	movw	r30, r24
    2cb0:	3e c2       	rjmp	.+1148   	; 0x312e <__tablejump2__>
    2cb2:	61 30       	cpi	r22, 0x01	; 1
    2cb4:	11 f4       	brne	.+4      	; 0x2cba <_Z12digitalWriteic+0x18>
    2cb6:	5c 9a       	sbi	0x0b, 4	; 11
    2cb8:	08 95       	ret
    2cba:	5c 98       	cbi	0x0b, 4	; 11
    2cbc:	08 95       	ret
    2cbe:	61 30       	cpi	r22, 0x01	; 1
    2cc0:	11 f4       	brne	.+4      	; 0x2cc6 <_Z12digitalWriteic+0x24>
    2cc2:	5d 9a       	sbi	0x0b, 5	; 11
    2cc4:	08 95       	ret
    2cc6:	5d 98       	cbi	0x0b, 5	; 11
    2cc8:	08 95       	ret
    2cca:	61 30       	cpi	r22, 0x01	; 1
    2ccc:	11 f4       	brne	.+4      	; 0x2cd2 <_Z12digitalWriteic+0x30>
    2cce:	5e 9a       	sbi	0x0b, 6	; 11
    2cd0:	08 95       	ret
    2cd2:	5e 98       	cbi	0x0b, 6	; 11
    2cd4:	08 95       	ret
    2cd6:	61 30       	cpi	r22, 0x01	; 1
    2cd8:	11 f4       	brne	.+4      	; 0x2cde <_Z12digitalWriteic+0x3c>
    2cda:	5f 9a       	sbi	0x0b, 7	; 11
    2cdc:	08 95       	ret
    2cde:	5f 98       	cbi	0x0b, 7	; 11
    2ce0:	08 95       	ret
    2ce2:	61 30       	cpi	r22, 0x01	; 1
    2ce4:	11 f4       	brne	.+4      	; 0x2cea <_Z12digitalWriteic+0x48>
    2ce6:	28 9a       	sbi	0x05, 0	; 5
    2ce8:	08 95       	ret
    2cea:	28 98       	cbi	0x05, 0	; 5
    2cec:	08 95       	ret
    2cee:	61 30       	cpi	r22, 0x01	; 1
    2cf0:	11 f4       	brne	.+4      	; 0x2cf6 <_Z12digitalWriteic+0x54>
    2cf2:	29 9a       	sbi	0x05, 1	; 5
    2cf4:	08 95       	ret
    2cf6:	29 98       	cbi	0x05, 1	; 5
    2cf8:	08 95       	ret
    2cfa:	61 30       	cpi	r22, 0x01	; 1
    2cfc:	11 f4       	brne	.+4      	; 0x2d02 <_Z12digitalWriteic+0x60>
    2cfe:	2a 9a       	sbi	0x05, 2	; 5
    2d00:	08 95       	ret
    2d02:	2a 98       	cbi	0x05, 2	; 5
    2d04:	08 95       	ret

00002d06 <_Z11digitalReadi>:
    2d06:	87 31       	cpi	r24, 0x17	; 23
    2d08:	91 05       	cpc	r25, r1
    2d0a:	99 f0       	breq	.+38     	; 0x2d32 <_Z11digitalReadi+0x2c>
    2d0c:	34 f4       	brge	.+12     	; 0x2d1a <_Z11digitalReadi+0x14>
    2d0e:	85 31       	cpi	r24, 0x15	; 21
    2d10:	91 05       	cpc	r25, r1
    2d12:	49 f0       	breq	.+18     	; 0x2d26 <_Z11digitalReadi+0x20>
    2d14:	46 97       	sbiw	r24, 0x16	; 22
    2d16:	51 f0       	breq	.+20     	; 0x2d2c <_Z11digitalReadi+0x26>
    2d18:	15 c0       	rjmp	.+42     	; 0x2d44 <_Z11digitalReadi+0x3e>
    2d1a:	88 31       	cpi	r24, 0x18	; 24
    2d1c:	91 05       	cpc	r25, r1
    2d1e:	61 f0       	breq	.+24     	; 0x2d38 <_Z11digitalReadi+0x32>
    2d20:	8b 97       	sbiw	r24, 0x2b	; 43
    2d22:	69 f0       	breq	.+26     	; 0x2d3e <_Z11digitalReadi+0x38>
    2d24:	0f c0       	rjmp	.+30     	; 0x2d44 <_Z11digitalReadi+0x3e>
    2d26:	86 b1       	in	r24, 0x06	; 6
    2d28:	84 70       	andi	r24, 0x04	; 4
    2d2a:	08 95       	ret
    2d2c:	86 b1       	in	r24, 0x06	; 6
    2d2e:	88 70       	andi	r24, 0x08	; 8
    2d30:	08 95       	ret
    2d32:	86 b1       	in	r24, 0x06	; 6
    2d34:	80 71       	andi	r24, 0x10	; 16
    2d36:	08 95       	ret
    2d38:	86 b1       	in	r24, 0x06	; 6
    2d3a:	80 72       	andi	r24, 0x20	; 32
    2d3c:	08 95       	ret
    2d3e:	83 b1       	in	r24, 0x03	; 3
    2d40:	88 70       	andi	r24, 0x08	; 8
    2d42:	08 95       	ret
    2d44:	80 e0       	ldi	r24, 0x00	; 0
    2d46:	08 95       	ret

00002d48 <_Z9setSourcei>:
    2d48:	20 91 a9 01 	lds	r18, 0x01A9	; 0x8001a9 <HAS_WIFI>
    2d4c:	30 91 aa 01 	lds	r19, 0x01AA	; 0x8001aa <HAS_WIFI+0x1>
    2d50:	23 2b       	or	r18, r19
    2d52:	51 f0       	breq	.+20     	; 0x2d68 <_Z9setSourcei+0x20>
    2d54:	20 91 b7 03 	lds	r18, 0x03B7	; 0x8003b7 <ESP>
    2d58:	30 91 b8 03 	lds	r19, 0x03B8	; 0x8003b8 <ESP+0x1>
    2d5c:	82 17       	cp	r24, r18
    2d5e:	93 07       	cpc	r25, r19
    2d60:	19 f4       	brne	.+6      	; 0x2d68 <_Z9setSourcei+0x20>
    2d62:	80 93 c4 0c 	sts	0x0CC4, r24	; 0x800cc4 <__system_var+0x3e>
    2d66:	08 95       	ret
    2d68:	20 91 a7 01 	lds	r18, 0x01A7	; 0x8001a7 <HAS_GSM>
    2d6c:	30 91 a8 01 	lds	r19, 0x01A8	; 0x8001a8 <HAS_GSM+0x1>
    2d70:	23 2b       	or	r18, r19
    2d72:	51 f0       	breq	.+20     	; 0x2d88 <_Z9setSourcei+0x40>
    2d74:	20 91 b5 03 	lds	r18, 0x03B5	; 0x8003b5 <SIM>
    2d78:	30 91 b6 03 	lds	r19, 0x03B6	; 0x8003b6 <SIM+0x1>
    2d7c:	82 17       	cp	r24, r18
    2d7e:	93 07       	cpc	r25, r19
    2d80:	19 f4       	brne	.+6      	; 0x2d88 <_Z9setSourcei+0x40>
    2d82:	80 93 c4 0c 	sts	0x0CC4, r24	; 0x800cc4 <__system_var+0x3e>
    2d86:	08 95       	ret
    2d88:	8f ef       	ldi	r24, 0xFF	; 255
    2d8a:	80 93 c4 0c 	sts	0x0CC4, r24	; 0x800cc4 <__system_var+0x3e>
    2d8e:	08 95       	ret

00002d90 <_Z15defaultSettingsv>:
    2d90:	ee ee       	ldi	r30, 0xEE	; 238
    2d92:	f8 e0       	ldi	r31, 0x08	; 8
    2d94:	11 82       	std	Z+1, r1	; 0x01
    2d96:	10 82       	st	Z, r1
    2d98:	13 82       	std	Z+3, r1	; 0x03
    2d9a:	12 82       	std	Z+2, r1	; 0x02
    2d9c:	15 82       	std	Z+5, r1	; 0x05
    2d9e:	14 82       	std	Z+4, r1	; 0x04
    2da0:	11 86       	std	Z+9, r1	; 0x09
    2da2:	10 86       	std	Z+8, r1	; 0x08
    2da4:	13 86       	std	Z+11, r1	; 0x0b
    2da6:	12 86       	std	Z+10, r1	; 0x0a
    2da8:	15 86       	std	Z+13, r1	; 0x0d
    2daa:	14 86       	std	Z+12, r1	; 0x0c
    2dac:	17 86       	std	Z+15, r1	; 0x0f
    2dae:	16 86       	std	Z+14, r1	; 0x0e
    2db0:	e4 ea       	ldi	r30, 0xA4	; 164
    2db2:	fc e0       	ldi	r31, 0x0C	; 12
    2db4:	8c ea       	ldi	r24, 0xAC	; 172
    2db6:	9c e0       	ldi	r25, 0x0C	; 12
    2db8:	11 92       	st	Z+, r1
    2dba:	11 92       	st	Z+, r1
    2dbc:	17 82       	std	Z+7, r1	; 0x07
    2dbe:	16 82       	std	Z+6, r1	; 0x06
    2dc0:	17 86       	std	Z+15, r1	; 0x0f
    2dc2:	16 86       	std	Z+14, r1	; 0x0e
    2dc4:	e8 17       	cp	r30, r24
    2dc6:	f9 07       	cpc	r31, r25
    2dc8:	b9 f7       	brne	.-18     	; 0x2db8 <_Z15defaultSettingsv+0x28>
    2dca:	e8 ea       	ldi	r30, 0xA8	; 168
    2dcc:	f7 e0       	ldi	r31, 0x07	; 7
    2dce:	20 e1       	ldi	r18, 0x10	; 16
    2dd0:	38 e0       	ldi	r19, 0x08	; 8
    2dd2:	09 c0       	rjmp	.+18     	; 0x2de6 <_Z15defaultSettingsv+0x56>
    2dd4:	11 92       	st	Z+, r1
    2dd6:	11 92       	st	Z+, r1
    2dd8:	e8 17       	cp	r30, r24
    2dda:	f9 07       	cpc	r31, r25
    2ddc:	d9 f7       	brne	.-10     	; 0x2dd4 <_Z15defaultSettingsv+0x44>
    2dde:	fc 01       	movw	r30, r24
    2de0:	28 17       	cp	r18, r24
    2de2:	39 07       	cpc	r19, r25
    2de4:	19 f0       	breq	.+6      	; 0x2dec <_Z15defaultSettingsv+0x5c>
    2de6:	cf 01       	movw	r24, r30
    2de8:	4a 96       	adiw	r24, 0x1a	; 26
    2dea:	f4 cf       	rjmp	.-24     	; 0x2dd4 <_Z15defaultSettingsv+0x44>
    2dec:	e6 e8       	ldi	r30, 0x86	; 134
    2dee:	fc e0       	ldi	r31, 0x0C	; 12
    2df0:	10 92 ca 0c 	sts	0x0CCA, r1	; 0x800cca <__system_var+0x44>
    2df4:	10 92 c9 0c 	sts	0x0CC9, r1	; 0x800cc9 <__system_var+0x43>
    2df8:	80 91 8f 01 	lds	r24, 0x018F	; 0x80018f <DETECT_0>
    2dfc:	90 91 90 01 	lds	r25, 0x0190	; 0x800190 <DETECT_0+0x1>
    2e00:	97 ab       	std	Z+55, r25	; 0x37
    2e02:	86 ab       	std	Z+54, r24	; 0x36
    2e04:	80 91 8d 01 	lds	r24, 0x018D	; 0x80018d <DETECT_1>
    2e08:	90 91 8e 01 	lds	r25, 0x018E	; 0x80018e <DETECT_1+0x1>
    2e0c:	91 af       	std	Z+57, r25	; 0x39
    2e0e:	80 af       	std	Z+56, r24	; 0x38
    2e10:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <DETECT_2>
    2e14:	90 91 8c 01 	lds	r25, 0x018C	; 0x80018c <DETECT_2+0x1>
    2e18:	93 af       	std	Z+59, r25	; 0x3b
    2e1a:	82 af       	std	Z+58, r24	; 0x3a
    2e1c:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <DETECT_3>
    2e20:	90 91 8a 01 	lds	r25, 0x018A	; 0x80018a <DETECT_3+0x1>
    2e24:	95 af       	std	Z+61, r25	; 0x3d
    2e26:	84 af       	std	Z+60, r24	; 0x3c
    2e28:	10 92 c6 0c 	sts	0x0CC6, r1	; 0x800cc6 <__system_var+0x40>
    2e2c:	10 92 c5 0c 	sts	0x0CC5, r1	; 0x800cc5 <__system_var+0x3f>
    2e30:	10 92 c8 0c 	sts	0x0CC8, r1	; 0x800cc8 <__system_var+0x42>
    2e34:	10 92 c7 0c 	sts	0x0CC7, r1	; 0x800cc7 <__system_var+0x41>
    2e38:	81 e0       	ldi	r24, 0x01	; 1
    2e3a:	80 93 cb 0c 	sts	0x0CCB, r24	; 0x800ccb <__system_var+0x45>
    2e3e:	69 eb       	ldi	r22, 0xB9	; 185
    2e40:	71 e0       	ldi	r23, 0x01	; 1
    2e42:	82 e1       	ldi	r24, 0x12	; 18
    2e44:	99 e0       	ldi	r25, 0x09	; 9
    2e46:	ef d2       	rcall	.+1502   	; 0x3426 <strcpy>
    2e48:	64 eb       	ldi	r22, 0xB4	; 180
    2e4a:	71 e0       	ldi	r23, 0x01	; 1
    2e4c:	86 e7       	ldi	r24, 0x76	; 118
    2e4e:	99 e0       	ldi	r25, 0x09	; 9
    2e50:	ea d2       	rcall	.+1492   	; 0x3426 <strcpy>
    2e52:	80 91 b1 03 	lds	r24, 0x03B1	; 0x8003b1 <FALSE>
    2e56:	80 93 c1 09 	sts	0x09C1, r24	; 0x8009c1 <__network_data+0xaf>
    2e5a:	80 93 c2 09 	sts	0x09C2, r24	; 0x8009c2 <__network_data+0xb0>
    2e5e:	80 93 c3 09 	sts	0x09C3, r24	; 0x8009c3 <__network_data+0xb1>
    2e62:	24 ef       	ldi	r18, 0xF4	; 244
    2e64:	31 e0       	ldi	r19, 0x01	; 1
    2e66:	e4 ec       	ldi	r30, 0xC4	; 196
    2e68:	f9 e0       	ldi	r31, 0x09	; 9
    2e6a:	df 01       	movw	r26, r30
    2e6c:	a9 01       	movw	r20, r18
    2e6e:	1d 92       	st	X+, r1
    2e70:	41 50       	subi	r20, 0x01	; 1
    2e72:	50 40       	sbci	r21, 0x00	; 0
    2e74:	e1 f7       	brne	.-8      	; 0x2e6e <_Z15defaultSettingsv+0xde>
    2e76:	98 ec       	ldi	r25, 0xC8	; 200
    2e78:	e8 eb       	ldi	r30, 0xB8	; 184
    2e7a:	fb e0       	ldi	r31, 0x0B	; 11
    2e7c:	df 01       	movw	r26, r30
    2e7e:	1d 92       	st	X+, r1
    2e80:	9a 95       	dec	r25
    2e82:	e9 f7       	brne	.-6      	; 0x2e7e <_Z15defaultSettingsv+0xee>
    2e84:	80 93 80 0c 	sts	0x0C80, r24	; 0x800c80 <__network_data+0x36e>
    2e88:	80 93 81 0c 	sts	0x0C81, r24	; 0x800c81 <__network_data+0x36f>
    2e8c:	10 92 83 0c 	sts	0x0C83, r1	; 0x800c83 <__network_data+0x371>
    2e90:	10 92 82 0c 	sts	0x0C82, r1	; 0x800c82 <__network_data+0x370>
    2e94:	10 92 85 0c 	sts	0x0C85, r1	; 0x800c85 <__network_data+0x373>
    2e98:	10 92 84 0c 	sts	0x0C84, r1	; 0x800c84 <__network_data+0x372>
    2e9c:	ee ee       	ldi	r30, 0xEE	; 238
    2e9e:	f8 e0       	ldi	r31, 0x08	; 8
    2ea0:	13 8a       	std	Z+19, r1	; 0x13
    2ea2:	12 8a       	std	Z+18, r1	; 0x12
    2ea4:	8a e0       	ldi	r24, 0x0A	; 10
    2ea6:	90 e0       	ldi	r25, 0x00	; 0
    2ea8:	91 8b       	std	Z+17, r25	; 0x11
    2eaa:	80 8b       	std	Z+16, r24	; 0x10
    2eac:	17 8a       	std	Z+23, r1	; 0x17
    2eae:	16 8a       	std	Z+22, r1	; 0x16
    2eb0:	8e e1       	ldi	r24, 0x1E	; 30
    2eb2:	90 e0       	ldi	r25, 0x00	; 0
    2eb4:	95 8b       	std	Z+21, r25	; 0x15
    2eb6:	84 8b       	std	Z+20, r24	; 0x14
    2eb8:	13 8e       	std	Z+27, r1	; 0x1b
    2eba:	12 8e       	std	Z+26, r1	; 0x1a
    2ebc:	25 e0       	ldi	r18, 0x05	; 5
    2ebe:	30 e0       	ldi	r19, 0x00	; 0
    2ec0:	31 8f       	std	Z+25, r19	; 0x19
    2ec2:	20 8f       	std	Z+24, r18	; 0x18
    2ec4:	17 8e       	std	Z+31, r1	; 0x1f
    2ec6:	16 8e       	std	Z+30, r1	; 0x1e
    2ec8:	95 8f       	std	Z+29, r25	; 0x1d
    2eca:	84 8f       	std	Z+28, r24	; 0x1c
    2ecc:	13 a2       	std	Z+35, r1	; 0x23
    2ece:	12 a2       	std	Z+34, r1	; 0x22
    2ed0:	84 eb       	ldi	r24, 0xB4	; 180
    2ed2:	90 e0       	ldi	r25, 0x00	; 0
    2ed4:	91 a3       	std	Z+33, r25	; 0x21
    2ed6:	80 a3       	std	Z+32, r24	; 0x20
    2ed8:	85 e0       	ldi	r24, 0x05	; 5
    2eda:	ed e7       	ldi	r30, 0x7D	; 125
    2edc:	f7 e0       	ldi	r31, 0x07	; 7
    2ede:	a6 e8       	ldi	r26, 0x86	; 134
    2ee0:	bc e0       	ldi	r27, 0x0C	; 12
    2ee2:	01 90       	ld	r0, Z+
    2ee4:	0d 92       	st	X+, r0
    2ee6:	8a 95       	dec	r24
    2ee8:	e1 f7       	brne	.-8      	; 0x2ee2 <_Z15defaultSettingsv+0x152>
    2eea:	8f e0       	ldi	r24, 0x0F	; 15
    2eec:	e5 e9       	ldi	r30, 0x95	; 149
    2eee:	fc e0       	ldi	r31, 0x0C	; 12
    2ef0:	df 01       	movw	r26, r30
    2ef2:	1d 92       	st	X+, r1
    2ef4:	8a 95       	dec	r24
    2ef6:	e9 f7       	brne	.-6      	; 0x2ef2 <_Z15defaultSettingsv+0x162>
    2ef8:	21 e0       	ldi	r18, 0x01	; 1
    2efa:	30 e0       	ldi	r19, 0x00	; 0
    2efc:	44 e3       	ldi	r20, 0x34	; 52
    2efe:	52 e0       	ldi	r21, 0x02	; 2
    2f00:	6f e0       	ldi	r22, 0x0F	; 15
    2f02:	70 e0       	ldi	r23, 0x00	; 0
    2f04:	86 e8       	ldi	r24, 0x86	; 134
    2f06:	9c e0       	ldi	r25, 0x0C	; 12
    2f08:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <_Z19eepromReadAttributePciS_i>
    2f0c:	81 11       	cpse	r24, r1
    2f0e:	09 c0       	rjmp	.+18     	; 0x2f22 <_Z15defaultSettingsv+0x192>
    2f10:	85 e0       	ldi	r24, 0x05	; 5
    2f12:	ed e7       	ldi	r30, 0x7D	; 125
    2f14:	f7 e0       	ldi	r31, 0x07	; 7
    2f16:	a6 e8       	ldi	r26, 0x86	; 134
    2f18:	bc e0       	ldi	r27, 0x0C	; 12
    2f1a:	01 90       	ld	r0, Z+
    2f1c:	0d 92       	st	X+, r0
    2f1e:	8a 95       	dec	r24
    2f20:	e1 f7       	brne	.-8      	; 0x2f1a <_Z15defaultSettingsv+0x18a>
    2f22:	0c 94 20 04 	jmp	0x840	; 0x840 <_Z21getAccessPointSettingv>
    2f26:	08 95       	ret

00002f28 <_Z13clearReadLinev>:
    2f28:	80 91 c4 0c 	lds	r24, 0x0CC4	; 0x800cc4 <__system_var+0x3e>
    2f2c:	90 e0       	ldi	r25, 0x00	; 0
    2f2e:	20 91 b7 03 	lds	r18, 0x03B7	; 0x8003b7 <ESP>
    2f32:	30 91 b8 03 	lds	r19, 0x03B8	; 0x8003b8 <ESP+0x1>
    2f36:	82 17       	cp	r24, r18
    2f38:	93 07       	cpc	r25, r19
    2f3a:	69 f4       	brne	.+26     	; 0x2f56 <_Z13clearReadLinev+0x2e>
    2f3c:	43 ef       	ldi	r20, 0xF3	; 243
    2f3e:	51 e0       	ldi	r21, 0x01	; 1
    2f40:	60 e2       	ldi	r22, 0x20	; 32
    2f42:	70 e0       	ldi	r23, 0x00	; 0
    2f44:	84 ec       	ldi	r24, 0xC4	; 196
    2f46:	99 e0       	ldi	r25, 0x09	; 9
    2f48:	51 d2       	rcall	.+1186   	; 0x33ec <memset>
    2f4a:	10 92 80 0c 	sts	0x0C80, r1	; 0x800c80 <__network_data+0x36e>
    2f4e:	10 92 83 0c 	sts	0x0C83, r1	; 0x800c83 <__network_data+0x371>
    2f52:	10 92 82 0c 	sts	0x0C82, r1	; 0x800c82 <__network_data+0x370>
    2f56:	08 95       	ret

00002f58 <_Z9initTimerv>:
}

void initTimer(){
	// Setting no prescaler
	TCCR0B |= (1 << CS00);
    2f58:	85 b5       	in	r24, 0x25	; 37
    2f5a:	81 60       	ori	r24, 0x01	; 1
    2f5c:	85 bd       	out	0x25, r24	; 37
	// Initialize Timer0
	TCNT0 = 0;
    2f5e:	16 bc       	out	0x26, r1	; 38
	// Initialize the overflow interrupt for TIMER0
	TIMSK0 |= (1 << TOIE0);
    2f60:	ee e6       	ldi	r30, 0x6E	; 110
    2f62:	f0 e0       	ldi	r31, 0x00	; 0
    2f64:	80 81       	ld	r24, Z
    2f66:	81 60       	ori	r24, 0x01	; 1
    2f68:	80 83       	st	Z, r24
    2f6a:	08 95       	ret

00002f6c <_Z14powerUpModulesv>:
}
void powerUpModules(){
    2f6c:	cf 93       	push	r28
    2f6e:	df 93       	push	r29
	

	if (HAS_GSM){
    2f70:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <HAS_GSM>
    2f74:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <HAS_GSM+0x1>
    2f78:	89 2b       	or	r24, r25
    2f7a:	e9 f0       	breq	.+58     	; 0x2fb6 <_Z14powerUpModulesv+0x4a>
		setSource(SIM);
    2f7c:	80 91 b5 03 	lds	r24, 0x03B5	; 0x8003b5 <SIM>
    2f80:	90 91 b6 03 	lds	r25, 0x03B6	; 0x8003b6 <SIM+0x1>
    2f84:	e1 de       	rcall	.-574    	; 0x2d48 <_Z9setSourcei>
		GSM_Write_String("AT\r\n");
    2f86:	88 e7       	ldi	r24, 0x78	; 120
    2f88:	97 e0       	ldi	r25, 0x07	; 7
    2f8a:	08 de       	rcall	.-1008   	; 0x2b9c <_Z16GSM_Write_StringPKc>
		delay(500);
    2f8c:	84 ef       	ldi	r24, 0xF4	; 244
    2f8e:	91 e0       	ldi	r25, 0x01	; 1
    2f90:	13 de       	rcall	.-986    	; 0x2bb8 <_Z5delayi>
		if (strstr(__network_data.sim_buffer,"OK") == 0){
			//turnOnSim900();
			//delay(2000);
		}
		GSM_Write_String("AT+CMGF=1\r\n");
    2f92:	82 e8       	ldi	r24, 0x82	; 130
    2f94:	97 e0       	ldi	r25, 0x07	; 7
    2f96:	02 de       	rcall	.-1020   	; 0x2b9c <_Z16GSM_Write_StringPKc>
		delay(300);
    2f98:	8c e2       	ldi	r24, 0x2C	; 44
    2f9a:	91 e0       	ldi	r25, 0x01	; 1
    2f9c:	0d de       	rcall	.-998    	; 0x2bb8 <_Z5delayi>
		GSM_Write_String("AT+CLTS=1\r\n");
    2f9e:	8e e8       	ldi	r24, 0x8E	; 142
    2fa0:	97 e0       	ldi	r25, 0x07	; 7
    2fa2:	fc dd       	rcall	.-1032   	; 0x2b9c <_Z16GSM_Write_StringPKc>
		delay(300);
    2fa4:	8c e2       	ldi	r24, 0x2C	; 44
    2fa6:	91 e0       	ldi	r25, 0x01	; 1
    2fa8:	07 de       	rcall	.-1010   	; 0x2bb8 <_Z5delayi>
		GSM_Write_String("AT+CLIP=1\r\n");
    2faa:	8a e9       	ldi	r24, 0x9A	; 154
    2fac:	97 e0       	ldi	r25, 0x07	; 7
    2fae:	f6 dd       	rcall	.-1044   	; 0x2b9c <_Z16GSM_Write_StringPKc>
		delay(300);
    2fb0:	8c e2       	ldi	r24, 0x2C	; 44
    2fb2:	91 e0       	ldi	r25, 0x01	; 1
    2fb4:	01 de       	rcall	.-1022   	; 0x2bb8 <_Z5delayi>
	}
	
	if (HAS_WIFI){
    2fb6:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <HAS_WIFI>
    2fba:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <HAS_WIFI+0x1>
    2fbe:	89 2b       	or	r24, r25
    2fc0:	b1 f0       	breq	.+44     	; 0x2fee <_Z14powerUpModulesv+0x82>
	_delay_ms(1000);
	digitalWrite(SIM_PWR,0);

}
void espPower(const char pin, const char status){
	digitalWrite(pin,status);
    2fc2:	c0 91 99 01 	lds	r28, 0x0199	; 0x800199 <ESP_PWR>
    2fc6:	d0 91 9a 01 	lds	r29, 0x019A	; 0x80019a <ESP_PWR+0x1>
    2fca:	dd 27       	eor	r29, r29
    2fcc:	61 e0       	ldi	r22, 0x01	; 1
    2fce:	ce 01       	movw	r24, r28
    2fd0:	68 de       	rcall	.-816    	; 0x2ca2 <_Z12digitalWriteic>
		delay(300);
	}
	
	if (HAS_WIFI){
		espPower(ESP_PWR,1);
		delay(500);
    2fd2:	84 ef       	ldi	r24, 0xF4	; 244
    2fd4:	91 e0       	ldi	r25, 0x01	; 1
    2fd6:	f0 dd       	rcall	.-1056   	; 0x2bb8 <_Z5delayi>
	_delay_ms(1000);
	digitalWrite(SIM_PWR,0);

}
void espPower(const char pin, const char status){
	digitalWrite(pin,status);
    2fd8:	60 e0       	ldi	r22, 0x00	; 0
    2fda:	ce 01       	movw	r24, r28
    2fdc:	62 de       	rcall	.-828    	; 0x2ca2 <_Z12digitalWriteic>
	
	if (HAS_WIFI){
		espPower(ESP_PWR,1);
		delay(500);
		espPower(ESP_PWR,0);
		delay(1000);
    2fde:	88 ee       	ldi	r24, 0xE8	; 232
    2fe0:	93 e0       	ldi	r25, 0x03	; 3
    2fe2:	ea dd       	rcall	.-1068   	; 0x2bb8 <_Z5delayi>
		setSource(ESP);
    2fe4:	80 91 b7 03 	lds	r24, 0x03B7	; 0x8003b7 <ESP>
    2fe8:	90 91 b8 03 	lds	r25, 0x03B8	; 0x8003b8 <ESP+0x1>
    2fec:	ad de       	rcall	.-678    	; 0x2d48 <_Z9setSourcei>
	}
	
}
    2fee:	df 91       	pop	r29
    2ff0:	cf 91       	pop	r28
    2ff2:	08 95       	ret

00002ff4 <_Z11atmegaSetupv>:
void atmegaSetup(){
    2ff4:	cf 93       	push	r28
    2ff6:	df 93       	push	r29
	if (HAS_WIFI){
    2ff8:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <HAS_WIFI>
    2ffc:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <HAS_WIFI+0x1>
    3000:	89 2b       	or	r24, r25
    3002:	39 f0       	breq	.+14     	; 0x3012 <_Z11atmegaSetupv+0x1e>
		pinMode(ESP_PWR,OUTPUT);
    3004:	60 91 95 03 	lds	r22, 0x0395	; 0x800395 <OUTPUT>
    3008:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <ESP_PWR>
    300c:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <ESP_PWR+0x1>
    3010:	df dd       	rcall	.-1090   	; 0x2bd0 <_Z7pinModeic>
	}
	if (HAS_GSM){
    3012:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <HAS_GSM>
    3016:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <HAS_GSM+0x1>
    301a:	89 2b       	or	r24, r25
    301c:	39 f0       	breq	.+14     	; 0x302c <_Z11atmegaSetupv+0x38>
		pinMode(SIM_PWR,OUTPUT);
    301e:	60 91 95 03 	lds	r22, 0x0395	; 0x800395 <OUTPUT>
    3022:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <SIM_PWR>
    3026:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <SIM_PWR+0x1>
    302a:	d2 dd       	rcall	.-1116   	; 0x2bd0 <_Z7pinModeic>
	}
		
	pinMode(CS_1,OUTPUT);
    302c:	c0 91 95 03 	lds	r28, 0x0395	; 0x800395 <OUTPUT>
    3030:	6c 2f       	mov	r22, r28
    3032:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <CS_1>
    3036:	90 91 98 01 	lds	r25, 0x0198	; 0x800198 <CS_1+0x1>
    303a:	ca dd       	rcall	.-1132   	; 0x2bd0 <_Z7pinModeic>
	pinMode(CS_2,OUTPUT);
    303c:	6c 2f       	mov	r22, r28
    303e:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <CS_2>
    3042:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <CS_2+0x1>
    3046:	c4 dd       	rcall	.-1144   	; 0x2bd0 <_Z7pinModeic>
	pinMode(CS_3,OUTPUT);
    3048:	6c 2f       	mov	r22, r28
    304a:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <CS_3>
    304e:	90 91 94 01 	lds	r25, 0x0194	; 0x800194 <CS_3+0x1>
    3052:	be dd       	rcall	.-1156   	; 0x2bd0 <_Z7pinModeic>
	pinMode(CS_4,OUTPUT);
    3054:	6c 2f       	mov	r22, r28
    3056:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <CS_4>
    305a:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <CS_4+0x1>
    305e:	b8 dd       	rcall	.-1168   	; 0x2bd0 <_Z7pinModeic>
	pinMode(DETECT_0,INPUT);
    3060:	d0 91 97 03 	lds	r29, 0x0397	; 0x800397 <INPUT>
    3064:	6d 2f       	mov	r22, r29
    3066:	80 91 8f 01 	lds	r24, 0x018F	; 0x80018f <DETECT_0>
    306a:	90 91 90 01 	lds	r25, 0x0190	; 0x800190 <DETECT_0+0x1>
    306e:	b0 dd       	rcall	.-1184   	; 0x2bd0 <_Z7pinModeic>
	pinMode(DETECT_1,INPUT);
    3070:	6d 2f       	mov	r22, r29
    3072:	80 91 8d 01 	lds	r24, 0x018D	; 0x80018d <DETECT_1>
    3076:	90 91 8e 01 	lds	r25, 0x018E	; 0x80018e <DETECT_1+0x1>
    307a:	aa dd       	rcall	.-1196   	; 0x2bd0 <_Z7pinModeic>
	pinMode(DETECT_2,INPUT);
    307c:	6d 2f       	mov	r22, r29
    307e:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <DETECT_2>
    3082:	90 91 8c 01 	lds	r25, 0x018C	; 0x80018c <DETECT_2+0x1>
    3086:	a4 dd       	rcall	.-1208   	; 0x2bd0 <_Z7pinModeic>
	pinMode(DETECT_3,INPUT);
    3088:	6d 2f       	mov	r22, r29
    308a:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <DETECT_3>
    308e:	90 91 8a 01 	lds	r25, 0x018A	; 0x80018a <DETECT_3+0x1>
    3092:	9e dd       	rcall	.-1220   	; 0x2bd0 <_Z7pinModeic>
	pinMode(SCK,OUTPUT);
    3094:	6c 2f       	mov	r22, r28
    3096:	80 91 87 01 	lds	r24, 0x0187	; 0x800187 <SCK>
    309a:	90 91 88 01 	lds	r25, 0x0188	; 0x800188 <SCK+0x1>
    309e:	98 dd       	rcall	.-1232   	; 0x2bd0 <_Z7pinModeic>
	pinMode(MOSI,OUTPUT);
    30a0:	6c 2f       	mov	r22, r28
    30a2:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <MOSI>
    30a6:	90 91 86 01 	lds	r25, 0x0186	; 0x800186 <MOSI+0x1>
    30aa:	92 dd       	rcall	.-1244   	; 0x2bd0 <_Z7pinModeic>
	pinMode(MISO,INPUT);
    30ac:	6d 2f       	mov	r22, r29
    30ae:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <MISO>
    30b2:	90 91 84 01 	lds	r25, 0x0184	; 0x800184 <MISO+0x1>
    30b6:	8c dd       	rcall	.-1256   	; 0x2bd0 <_Z7pinModeic>
	pinMode(SS,OUTPUT);
    30b8:	6c 2f       	mov	r22, r28
    30ba:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <SS>
    30be:	90 91 82 01 	lds	r25, 0x0182	; 0x800182 <SS+0x1>
    30c2:	86 dd       	rcall	.-1268   	; 0x2bd0 <_Z7pinModeic>

	
	USART_Init();
    30c4:	2c dd       	rcall	.-1448   	; 0x2b1e <_Z10USART_Initv>
	delay(100);	
    30c6:	84 e6       	ldi	r24, 0x64	; 100
    30c8:	90 e0       	ldi	r25, 0x00	; 0
    30ca:	76 dd       	rcall	.-1300   	; 0x2bb8 <_Z5delayi>
	
	SPI_init_master();
    30cc:	1e dd       	rcall	.-1476   	; 0x2b0a <_Z15SPI_init_masterv>
}
    30ce:	df 91       	pop	r29
    30d0:	cf 91       	pop	r28
    30d2:	08 95       	ret

000030d4 <_Z5setupv>:

void setup(){
	
	atmegaSetup();
    30d4:	8f df       	rcall	.-226    	; 0x2ff4 <_Z11atmegaSetupv>

	defaultSettings();
    30d6:	5c de       	rcall	.-840    	; 0x2d90 <_Z15defaultSettingsv>

	initTimer();
    30d8:	3f df       	rcall	.-386    	; 0x2f58 <_Z9initTimerv>
	
	powerUpModules();
    30da:	48 cf       	rjmp	.-368    	; 0x2f6c <_Z14powerUpModulesv>
    30dc:	08 95       	ret

000030de <_Z9processIOv>:
	}
}
void processIO(){
	
	// Processes wifi responses
	if (__network_data.is_esp_read_line == 1){
    30de:	80 91 80 0c 	lds	r24, 0x0C80	; 0x800c80 <__network_data+0x36e>
    30e2:	81 30       	cpi	r24, 0x01	; 1
    30e4:	49 f4       	brne	.+18     	; 0x30f8 <_Z9processIOv+0x1a>
		
		delay(100);
    30e6:	84 e6       	ldi	r24, 0x64	; 100
    30e8:	90 e0       	ldi	r25, 0x00	; 0
    30ea:	66 dd       	rcall	.-1332   	; 0x2bb8 <_Z5delayi>
		
		decodeBuffer(ESP);
		
		RelayControl();
    30ec:	a3 d9       	rcall	.-3258   	; 0x2434 <_Z12RelayControlv>
		
		ReceiveSettings();
    30ee:	fc d9       	rcall	.-3080   	; 0x24e8 <_Z15ReceiveSettingsv>
		
		WebApp();	
    30f0:	0e 94 85 0e 	call	0x1d0a	; 0x1d0a <_Z6WebAppv>
		
		__network_data.is_esp_read_line = 0;	
    30f4:	10 92 80 0c 	sts	0x0C80, r1	; 0x800c80 <__network_data+0x36e>
	}
	
	// Processes gsm responses
	if (__network_data.is_sim_read_line == 1){
    30f8:	80 91 81 0c 	lds	r24, 0x0C81	; 0x800c81 <__network_data+0x36f>
    30fc:	81 30       	cpi	r24, 0x01	; 1
    30fe:	11 f4       	brne	.+4      	; 0x3104 <_Z9processIOv+0x26>
		
		__network_data.is_sim_read_line = 0;
    3100:	10 92 81 0c 	sts	0x0C81, r1	; 0x800c81 <__network_data+0x36f>
    3104:	08 95       	ret

00003106 <_Z15systemProcessesv>:
	
}
void systemProcesses(){
	
	// Detects when a module is connected or disconnected, notifies server of this event
	CheckModuleConnections();
    3106:	77 da       	rcall	.-2834   	; 0x25f6 <_Z22CheckModuleConnectionsv>
	// Regularly sends heartbeats to the server to keep the connection alive
	HeartBeat(); 
    3108:	ac db       	rcall	.-2216   	; 0x2862 <_Z9HeartBeatv>
	// Process Timers
	ProcessRelayTimers();
    310a:	d5 cb       	rjmp	.-2134   	; 0x28b6 <_Z18ProcessRelayTimersv>
    310c:	08 95       	ret

0000310e <main>:
 

int main (void)
{
	int i=0;
	setup();
    310e:	e2 df       	rcall	.-60     	; 0x30d4 <_Z5setupv>
	
	for (i=0;i<1000;i++){
    3110:	c0 e0       	ldi	r28, 0x00	; 0
    3112:	d0 e0       	ldi	r29, 0x00	; 0
		 USART0_SendByte(eeprom_read_byte((uint8_t*)i));
    3114:	ce 01       	movw	r24, r28
    3116:	0d d2       	rcall	.+1050   	; 0x3532 <eeprom_read_byte>
    3118:	2b dd       	rcall	.-1450   	; 0x2b70 <_Z15USART0_SendBytec>
int main (void)
{
	int i=0;
	setup();
	
	for (i=0;i<1000;i++){
    311a:	21 96       	adiw	r28, 0x01	; 1
    311c:	c8 3e       	cpi	r28, 0xE8	; 232
    311e:	83 e0       	ldi	r24, 0x03	; 3
    3120:	d8 07       	cpc	r29, r24
    3122:	c1 f7       	brne	.-16     	; 0x3114 <main+0x6>
	}
	 
	while(1)
	{
		
		networking();
    3124:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <_Z10networkingv>
		
		processIO();
    3128:	da df       	rcall	.-76     	; 0x30de <_Z9processIOv>
		
		systemProcesses();	
    312a:	ed df       	rcall	.-38     	; 0x3106 <_Z15systemProcessesv>
		
	}
    312c:	fb cf       	rjmp	.-10     	; 0x3124 <main+0x16>

0000312e <__tablejump2__>:
    312e:	ee 0f       	add	r30, r30
    3130:	ff 1f       	adc	r31, r31
    3132:	00 24       	eor	r0, r0
    3134:	00 1c       	adc	r0, r0
    3136:	0b be       	out	0x3b, r0	; 59
    3138:	07 90       	elpm	r0, Z+
    313a:	f6 91       	elpm	r31, Z
    313c:	e0 2d       	mov	r30, r0
    313e:	09 94       	ijmp

00003140 <malloc>:
    3140:	cf 93       	push	r28
    3142:	df 93       	push	r29
    3144:	82 30       	cpi	r24, 0x02	; 2
    3146:	91 05       	cpc	r25, r1
    3148:	10 f4       	brcc	.+4      	; 0x314e <malloc+0xe>
    314a:	82 e0       	ldi	r24, 0x02	; 2
    314c:	90 e0       	ldi	r25, 0x00	; 0
    314e:	e0 91 ce 0c 	lds	r30, 0x0CCE	; 0x800cce <__flp>
    3152:	f0 91 cf 0c 	lds	r31, 0x0CCF	; 0x800ccf <__flp+0x1>
    3156:	20 e0       	ldi	r18, 0x00	; 0
    3158:	30 e0       	ldi	r19, 0x00	; 0
    315a:	c0 e0       	ldi	r28, 0x00	; 0
    315c:	d0 e0       	ldi	r29, 0x00	; 0
    315e:	30 97       	sbiw	r30, 0x00	; 0
    3160:	11 f1       	breq	.+68     	; 0x31a6 <malloc+0x66>
    3162:	40 81       	ld	r20, Z
    3164:	51 81       	ldd	r21, Z+1	; 0x01
    3166:	48 17       	cp	r20, r24
    3168:	59 07       	cpc	r21, r25
    316a:	c0 f0       	brcs	.+48     	; 0x319c <malloc+0x5c>
    316c:	48 17       	cp	r20, r24
    316e:	59 07       	cpc	r21, r25
    3170:	61 f4       	brne	.+24     	; 0x318a <malloc+0x4a>
    3172:	82 81       	ldd	r24, Z+2	; 0x02
    3174:	93 81       	ldd	r25, Z+3	; 0x03
    3176:	20 97       	sbiw	r28, 0x00	; 0
    3178:	19 f0       	breq	.+6      	; 0x3180 <malloc+0x40>
    317a:	9b 83       	std	Y+3, r25	; 0x03
    317c:	8a 83       	std	Y+2, r24	; 0x02
    317e:	2b c0       	rjmp	.+86     	; 0x31d6 <malloc+0x96>
    3180:	90 93 cf 0c 	sts	0x0CCF, r25	; 0x800ccf <__flp+0x1>
    3184:	80 93 ce 0c 	sts	0x0CCE, r24	; 0x800cce <__flp>
    3188:	26 c0       	rjmp	.+76     	; 0x31d6 <malloc+0x96>
    318a:	21 15       	cp	r18, r1
    318c:	31 05       	cpc	r19, r1
    318e:	19 f0       	breq	.+6      	; 0x3196 <malloc+0x56>
    3190:	42 17       	cp	r20, r18
    3192:	53 07       	cpc	r21, r19
    3194:	18 f4       	brcc	.+6      	; 0x319c <malloc+0x5c>
    3196:	9a 01       	movw	r18, r20
    3198:	be 01       	movw	r22, r28
    319a:	df 01       	movw	r26, r30
    319c:	ef 01       	movw	r28, r30
    319e:	02 80       	ldd	r0, Z+2	; 0x02
    31a0:	f3 81       	ldd	r31, Z+3	; 0x03
    31a2:	e0 2d       	mov	r30, r0
    31a4:	dc cf       	rjmp	.-72     	; 0x315e <malloc+0x1e>
    31a6:	21 15       	cp	r18, r1
    31a8:	31 05       	cpc	r19, r1
    31aa:	09 f1       	breq	.+66     	; 0x31ee <malloc+0xae>
    31ac:	28 1b       	sub	r18, r24
    31ae:	39 0b       	sbc	r19, r25
    31b0:	24 30       	cpi	r18, 0x04	; 4
    31b2:	31 05       	cpc	r19, r1
    31b4:	90 f4       	brcc	.+36     	; 0x31da <malloc+0x9a>
    31b6:	12 96       	adiw	r26, 0x02	; 2
    31b8:	8d 91       	ld	r24, X+
    31ba:	9c 91       	ld	r25, X
    31bc:	13 97       	sbiw	r26, 0x03	; 3
    31be:	61 15       	cp	r22, r1
    31c0:	71 05       	cpc	r23, r1
    31c2:	21 f0       	breq	.+8      	; 0x31cc <malloc+0x8c>
    31c4:	fb 01       	movw	r30, r22
    31c6:	93 83       	std	Z+3, r25	; 0x03
    31c8:	82 83       	std	Z+2, r24	; 0x02
    31ca:	04 c0       	rjmp	.+8      	; 0x31d4 <malloc+0x94>
    31cc:	90 93 cf 0c 	sts	0x0CCF, r25	; 0x800ccf <__flp+0x1>
    31d0:	80 93 ce 0c 	sts	0x0CCE, r24	; 0x800cce <__flp>
    31d4:	fd 01       	movw	r30, r26
    31d6:	32 96       	adiw	r30, 0x02	; 2
    31d8:	44 c0       	rjmp	.+136    	; 0x3262 <malloc+0x122>
    31da:	fd 01       	movw	r30, r26
    31dc:	e2 0f       	add	r30, r18
    31de:	f3 1f       	adc	r31, r19
    31e0:	81 93       	st	Z+, r24
    31e2:	91 93       	st	Z+, r25
    31e4:	22 50       	subi	r18, 0x02	; 2
    31e6:	31 09       	sbc	r19, r1
    31e8:	2d 93       	st	X+, r18
    31ea:	3c 93       	st	X, r19
    31ec:	3a c0       	rjmp	.+116    	; 0x3262 <malloc+0x122>
    31ee:	20 91 cc 0c 	lds	r18, 0x0CCC	; 0x800ccc <__brkval>
    31f2:	30 91 cd 0c 	lds	r19, 0x0CCD	; 0x800ccd <__brkval+0x1>
    31f6:	23 2b       	or	r18, r19
    31f8:	41 f4       	brne	.+16     	; 0x320a <malloc+0xca>
    31fa:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    31fe:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    3202:	30 93 cd 0c 	sts	0x0CCD, r19	; 0x800ccd <__brkval+0x1>
    3206:	20 93 cc 0c 	sts	0x0CCC, r18	; 0x800ccc <__brkval>
    320a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    320e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    3212:	21 15       	cp	r18, r1
    3214:	31 05       	cpc	r19, r1
    3216:	41 f4       	brne	.+16     	; 0x3228 <malloc+0xe8>
    3218:	2d b7       	in	r18, 0x3d	; 61
    321a:	3e b7       	in	r19, 0x3e	; 62
    321c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    3220:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    3224:	24 1b       	sub	r18, r20
    3226:	35 0b       	sbc	r19, r21
    3228:	e0 91 cc 0c 	lds	r30, 0x0CCC	; 0x800ccc <__brkval>
    322c:	f0 91 cd 0c 	lds	r31, 0x0CCD	; 0x800ccd <__brkval+0x1>
    3230:	e2 17       	cp	r30, r18
    3232:	f3 07       	cpc	r31, r19
    3234:	a0 f4       	brcc	.+40     	; 0x325e <malloc+0x11e>
    3236:	2e 1b       	sub	r18, r30
    3238:	3f 0b       	sbc	r19, r31
    323a:	28 17       	cp	r18, r24
    323c:	39 07       	cpc	r19, r25
    323e:	78 f0       	brcs	.+30     	; 0x325e <malloc+0x11e>
    3240:	ac 01       	movw	r20, r24
    3242:	4e 5f       	subi	r20, 0xFE	; 254
    3244:	5f 4f       	sbci	r21, 0xFF	; 255
    3246:	24 17       	cp	r18, r20
    3248:	35 07       	cpc	r19, r21
    324a:	48 f0       	brcs	.+18     	; 0x325e <malloc+0x11e>
    324c:	4e 0f       	add	r20, r30
    324e:	5f 1f       	adc	r21, r31
    3250:	50 93 cd 0c 	sts	0x0CCD, r21	; 0x800ccd <__brkval+0x1>
    3254:	40 93 cc 0c 	sts	0x0CCC, r20	; 0x800ccc <__brkval>
    3258:	81 93       	st	Z+, r24
    325a:	91 93       	st	Z+, r25
    325c:	02 c0       	rjmp	.+4      	; 0x3262 <malloc+0x122>
    325e:	e0 e0       	ldi	r30, 0x00	; 0
    3260:	f0 e0       	ldi	r31, 0x00	; 0
    3262:	cf 01       	movw	r24, r30
    3264:	df 91       	pop	r29
    3266:	cf 91       	pop	r28
    3268:	08 95       	ret

0000326a <free>:
    326a:	0f 93       	push	r16
    326c:	1f 93       	push	r17
    326e:	cf 93       	push	r28
    3270:	df 93       	push	r29
    3272:	00 97       	sbiw	r24, 0x00	; 0
    3274:	09 f4       	brne	.+2      	; 0x3278 <free+0xe>
    3276:	8c c0       	rjmp	.+280    	; 0x3390 <free+0x126>
    3278:	fc 01       	movw	r30, r24
    327a:	32 97       	sbiw	r30, 0x02	; 2
    327c:	13 82       	std	Z+3, r1	; 0x03
    327e:	12 82       	std	Z+2, r1	; 0x02
    3280:	00 91 ce 0c 	lds	r16, 0x0CCE	; 0x800cce <__flp>
    3284:	10 91 cf 0c 	lds	r17, 0x0CCF	; 0x800ccf <__flp+0x1>
    3288:	01 15       	cp	r16, r1
    328a:	11 05       	cpc	r17, r1
    328c:	81 f4       	brne	.+32     	; 0x32ae <free+0x44>
    328e:	20 81       	ld	r18, Z
    3290:	31 81       	ldd	r19, Z+1	; 0x01
    3292:	82 0f       	add	r24, r18
    3294:	93 1f       	adc	r25, r19
    3296:	20 91 cc 0c 	lds	r18, 0x0CCC	; 0x800ccc <__brkval>
    329a:	30 91 cd 0c 	lds	r19, 0x0CCD	; 0x800ccd <__brkval+0x1>
    329e:	28 17       	cp	r18, r24
    32a0:	39 07       	cpc	r19, r25
    32a2:	79 f5       	brne	.+94     	; 0x3302 <free+0x98>
    32a4:	f0 93 cd 0c 	sts	0x0CCD, r31	; 0x800ccd <__brkval+0x1>
    32a8:	e0 93 cc 0c 	sts	0x0CCC, r30	; 0x800ccc <__brkval>
    32ac:	71 c0       	rjmp	.+226    	; 0x3390 <free+0x126>
    32ae:	d8 01       	movw	r26, r16
    32b0:	40 e0       	ldi	r20, 0x00	; 0
    32b2:	50 e0       	ldi	r21, 0x00	; 0
    32b4:	ae 17       	cp	r26, r30
    32b6:	bf 07       	cpc	r27, r31
    32b8:	50 f4       	brcc	.+20     	; 0x32ce <free+0x64>
    32ba:	12 96       	adiw	r26, 0x02	; 2
    32bc:	2d 91       	ld	r18, X+
    32be:	3c 91       	ld	r19, X
    32c0:	13 97       	sbiw	r26, 0x03	; 3
    32c2:	ad 01       	movw	r20, r26
    32c4:	21 15       	cp	r18, r1
    32c6:	31 05       	cpc	r19, r1
    32c8:	09 f1       	breq	.+66     	; 0x330c <free+0xa2>
    32ca:	d9 01       	movw	r26, r18
    32cc:	f3 cf       	rjmp	.-26     	; 0x32b4 <free+0x4a>
    32ce:	9d 01       	movw	r18, r26
    32d0:	da 01       	movw	r26, r20
    32d2:	33 83       	std	Z+3, r19	; 0x03
    32d4:	22 83       	std	Z+2, r18	; 0x02
    32d6:	60 81       	ld	r22, Z
    32d8:	71 81       	ldd	r23, Z+1	; 0x01
    32da:	86 0f       	add	r24, r22
    32dc:	97 1f       	adc	r25, r23
    32de:	82 17       	cp	r24, r18
    32e0:	93 07       	cpc	r25, r19
    32e2:	69 f4       	brne	.+26     	; 0x32fe <free+0x94>
    32e4:	ec 01       	movw	r28, r24
    32e6:	28 81       	ld	r18, Y
    32e8:	39 81       	ldd	r19, Y+1	; 0x01
    32ea:	26 0f       	add	r18, r22
    32ec:	37 1f       	adc	r19, r23
    32ee:	2e 5f       	subi	r18, 0xFE	; 254
    32f0:	3f 4f       	sbci	r19, 0xFF	; 255
    32f2:	31 83       	std	Z+1, r19	; 0x01
    32f4:	20 83       	st	Z, r18
    32f6:	8a 81       	ldd	r24, Y+2	; 0x02
    32f8:	9b 81       	ldd	r25, Y+3	; 0x03
    32fa:	93 83       	std	Z+3, r25	; 0x03
    32fc:	82 83       	std	Z+2, r24	; 0x02
    32fe:	45 2b       	or	r20, r21
    3300:	29 f4       	brne	.+10     	; 0x330c <free+0xa2>
    3302:	f0 93 cf 0c 	sts	0x0CCF, r31	; 0x800ccf <__flp+0x1>
    3306:	e0 93 ce 0c 	sts	0x0CCE, r30	; 0x800cce <__flp>
    330a:	42 c0       	rjmp	.+132    	; 0x3390 <free+0x126>
    330c:	13 96       	adiw	r26, 0x03	; 3
    330e:	fc 93       	st	X, r31
    3310:	ee 93       	st	-X, r30
    3312:	12 97       	sbiw	r26, 0x02	; 2
    3314:	ed 01       	movw	r28, r26
    3316:	49 91       	ld	r20, Y+
    3318:	59 91       	ld	r21, Y+
    331a:	9e 01       	movw	r18, r28
    331c:	24 0f       	add	r18, r20
    331e:	35 1f       	adc	r19, r21
    3320:	e2 17       	cp	r30, r18
    3322:	f3 07       	cpc	r31, r19
    3324:	71 f4       	brne	.+28     	; 0x3342 <free+0xd8>
    3326:	80 81       	ld	r24, Z
    3328:	91 81       	ldd	r25, Z+1	; 0x01
    332a:	84 0f       	add	r24, r20
    332c:	95 1f       	adc	r25, r21
    332e:	02 96       	adiw	r24, 0x02	; 2
    3330:	11 96       	adiw	r26, 0x01	; 1
    3332:	9c 93       	st	X, r25
    3334:	8e 93       	st	-X, r24
    3336:	82 81       	ldd	r24, Z+2	; 0x02
    3338:	93 81       	ldd	r25, Z+3	; 0x03
    333a:	13 96       	adiw	r26, 0x03	; 3
    333c:	9c 93       	st	X, r25
    333e:	8e 93       	st	-X, r24
    3340:	12 97       	sbiw	r26, 0x02	; 2
    3342:	e0 e0       	ldi	r30, 0x00	; 0
    3344:	f0 e0       	ldi	r31, 0x00	; 0
    3346:	d8 01       	movw	r26, r16
    3348:	12 96       	adiw	r26, 0x02	; 2
    334a:	8d 91       	ld	r24, X+
    334c:	9c 91       	ld	r25, X
    334e:	13 97       	sbiw	r26, 0x03	; 3
    3350:	00 97       	sbiw	r24, 0x00	; 0
    3352:	19 f0       	breq	.+6      	; 0x335a <free+0xf0>
    3354:	f8 01       	movw	r30, r16
    3356:	8c 01       	movw	r16, r24
    3358:	f6 cf       	rjmp	.-20     	; 0x3346 <free+0xdc>
    335a:	8d 91       	ld	r24, X+
    335c:	9c 91       	ld	r25, X
    335e:	98 01       	movw	r18, r16
    3360:	2e 5f       	subi	r18, 0xFE	; 254
    3362:	3f 4f       	sbci	r19, 0xFF	; 255
    3364:	82 0f       	add	r24, r18
    3366:	93 1f       	adc	r25, r19
    3368:	20 91 cc 0c 	lds	r18, 0x0CCC	; 0x800ccc <__brkval>
    336c:	30 91 cd 0c 	lds	r19, 0x0CCD	; 0x800ccd <__brkval+0x1>
    3370:	28 17       	cp	r18, r24
    3372:	39 07       	cpc	r19, r25
    3374:	69 f4       	brne	.+26     	; 0x3390 <free+0x126>
    3376:	30 97       	sbiw	r30, 0x00	; 0
    3378:	29 f4       	brne	.+10     	; 0x3384 <free+0x11a>
    337a:	10 92 cf 0c 	sts	0x0CCF, r1	; 0x800ccf <__flp+0x1>
    337e:	10 92 ce 0c 	sts	0x0CCE, r1	; 0x800cce <__flp>
    3382:	02 c0       	rjmp	.+4      	; 0x3388 <free+0x11e>
    3384:	13 82       	std	Z+3, r1	; 0x03
    3386:	12 82       	std	Z+2, r1	; 0x02
    3388:	10 93 cd 0c 	sts	0x0CCD, r17	; 0x800ccd <__brkval+0x1>
    338c:	00 93 cc 0c 	sts	0x0CCC, r16	; 0x800ccc <__brkval>
    3390:	df 91       	pop	r29
    3392:	cf 91       	pop	r28
    3394:	1f 91       	pop	r17
    3396:	0f 91       	pop	r16
    3398:	08 95       	ret

0000339a <atoi>:
    339a:	fc 01       	movw	r30, r24
    339c:	88 27       	eor	r24, r24
    339e:	99 27       	eor	r25, r25
    33a0:	e8 94       	clt
    33a2:	21 91       	ld	r18, Z+
    33a4:	20 32       	cpi	r18, 0x20	; 32
    33a6:	e9 f3       	breq	.-6      	; 0x33a2 <atoi+0x8>
    33a8:	29 30       	cpi	r18, 0x09	; 9
    33aa:	10 f0       	brcs	.+4      	; 0x33b0 <atoi+0x16>
    33ac:	2e 30       	cpi	r18, 0x0E	; 14
    33ae:	c8 f3       	brcs	.-14     	; 0x33a2 <atoi+0x8>
    33b0:	2b 32       	cpi	r18, 0x2B	; 43
    33b2:	39 f0       	breq	.+14     	; 0x33c2 <atoi+0x28>
    33b4:	2d 32       	cpi	r18, 0x2D	; 45
    33b6:	31 f4       	brne	.+12     	; 0x33c4 <atoi+0x2a>
    33b8:	68 94       	set
    33ba:	03 c0       	rjmp	.+6      	; 0x33c2 <atoi+0x28>
    33bc:	86 d0       	rcall	.+268    	; 0x34ca <__mulhi_const_10>
    33be:	82 0f       	add	r24, r18
    33c0:	91 1d       	adc	r25, r1
    33c2:	21 91       	ld	r18, Z+
    33c4:	20 53       	subi	r18, 0x30	; 48
    33c6:	2a 30       	cpi	r18, 0x0A	; 10
    33c8:	c8 f3       	brcs	.-14     	; 0x33bc <atoi+0x22>
    33ca:	1e f4       	brtc	.+6      	; 0x33d2 <atoi+0x38>
    33cc:	90 95       	com	r25
    33ce:	81 95       	neg	r24
    33d0:	9f 4f       	sbci	r25, 0xFF	; 255
    33d2:	08 95       	ret

000033d4 <isupper>:
    33d4:	85 fd       	sbrc	r24, 5
    33d6:	9a c0       	rjmp	.+308    	; 0x350c <__ctype_isfalse>

000033d8 <isalpha>:
    33d8:	80 62       	ori	r24, 0x20	; 32

000033da <islower>:
    33da:	91 11       	cpse	r25, r1
    33dc:	97 c0       	rjmp	.+302    	; 0x350c <__ctype_isfalse>
    33de:	81 56       	subi	r24, 0x61	; 97
    33e0:	8a 51       	subi	r24, 0x1A	; 26
    33e2:	e0 f7       	brcc	.-8      	; 0x33dc <islower+0x2>
    33e4:	08 95       	ret

000033e6 <strtok>:
    33e6:	46 ea       	ldi	r20, 0xA6	; 166
    33e8:	57 e0       	ldi	r21, 0x07	; 7
    33ea:	3e c0       	rjmp	.+124    	; 0x3468 <strtok_r>

000033ec <memset>:
    33ec:	dc 01       	movw	r26, r24
    33ee:	01 c0       	rjmp	.+2      	; 0x33f2 <memset+0x6>
    33f0:	6d 93       	st	X+, r22
    33f2:	41 50       	subi	r20, 0x01	; 1
    33f4:	50 40       	sbci	r21, 0x00	; 0
    33f6:	e0 f7       	brcc	.-8      	; 0x33f0 <memset+0x4>
    33f8:	08 95       	ret

000033fa <strcat>:
    33fa:	fb 01       	movw	r30, r22
    33fc:	dc 01       	movw	r26, r24
    33fe:	0d 90       	ld	r0, X+
    3400:	00 20       	and	r0, r0
    3402:	e9 f7       	brne	.-6      	; 0x33fe <strcat+0x4>
    3404:	11 97       	sbiw	r26, 0x01	; 1
    3406:	01 90       	ld	r0, Z+
    3408:	0d 92       	st	X+, r0
    340a:	00 20       	and	r0, r0
    340c:	e1 f7       	brne	.-8      	; 0x3406 <strcat+0xc>
    340e:	08 95       	ret

00003410 <strchr>:
    3410:	fc 01       	movw	r30, r24
    3412:	81 91       	ld	r24, Z+
    3414:	86 17       	cp	r24, r22
    3416:	21 f0       	breq	.+8      	; 0x3420 <strchr+0x10>
    3418:	88 23       	and	r24, r24
    341a:	d9 f7       	brne	.-10     	; 0x3412 <strchr+0x2>
    341c:	99 27       	eor	r25, r25
    341e:	08 95       	ret
    3420:	31 97       	sbiw	r30, 0x01	; 1
    3422:	cf 01       	movw	r24, r30
    3424:	08 95       	ret

00003426 <strcpy>:
    3426:	fb 01       	movw	r30, r22
    3428:	dc 01       	movw	r26, r24
    342a:	01 90       	ld	r0, Z+
    342c:	0d 92       	st	X+, r0
    342e:	00 20       	and	r0, r0
    3430:	e1 f7       	brne	.-8      	; 0x342a <strcpy+0x4>
    3432:	08 95       	ret

00003434 <strstr>:
    3434:	fb 01       	movw	r30, r22
    3436:	51 91       	ld	r21, Z+
    3438:	55 23       	and	r21, r21
    343a:	a9 f0       	breq	.+42     	; 0x3466 <strstr+0x32>
    343c:	bf 01       	movw	r22, r30
    343e:	dc 01       	movw	r26, r24
    3440:	4d 91       	ld	r20, X+
    3442:	45 17       	cp	r20, r21
    3444:	41 11       	cpse	r20, r1
    3446:	e1 f7       	brne	.-8      	; 0x3440 <strstr+0xc>
    3448:	59 f4       	brne	.+22     	; 0x3460 <strstr+0x2c>
    344a:	cd 01       	movw	r24, r26
    344c:	01 90       	ld	r0, Z+
    344e:	00 20       	and	r0, r0
    3450:	49 f0       	breq	.+18     	; 0x3464 <strstr+0x30>
    3452:	4d 91       	ld	r20, X+
    3454:	40 15       	cp	r20, r0
    3456:	41 11       	cpse	r20, r1
    3458:	c9 f3       	breq	.-14     	; 0x344c <strstr+0x18>
    345a:	fb 01       	movw	r30, r22
    345c:	41 11       	cpse	r20, r1
    345e:	ef cf       	rjmp	.-34     	; 0x343e <strstr+0xa>
    3460:	81 e0       	ldi	r24, 0x01	; 1
    3462:	90 e0       	ldi	r25, 0x00	; 0
    3464:	01 97       	sbiw	r24, 0x01	; 1
    3466:	08 95       	ret

00003468 <strtok_r>:
    3468:	fa 01       	movw	r30, r20
    346a:	a1 91       	ld	r26, Z+
    346c:	b0 81       	ld	r27, Z
    346e:	00 97       	sbiw	r24, 0x00	; 0
    3470:	19 f4       	brne	.+6      	; 0x3478 <strtok_r+0x10>
    3472:	10 97       	sbiw	r26, 0x00	; 0
    3474:	e1 f0       	breq	.+56     	; 0x34ae <strtok_r+0x46>
    3476:	cd 01       	movw	r24, r26
    3478:	dc 01       	movw	r26, r24
    347a:	cd 01       	movw	r24, r26
    347c:	0d 90       	ld	r0, X+
    347e:	00 20       	and	r0, r0
    3480:	11 f4       	brne	.+4      	; 0x3486 <strtok_r+0x1e>
    3482:	c0 01       	movw	r24, r0
    3484:	13 c0       	rjmp	.+38     	; 0x34ac <strtok_r+0x44>
    3486:	fb 01       	movw	r30, r22
    3488:	21 91       	ld	r18, Z+
    348a:	22 23       	and	r18, r18
    348c:	19 f0       	breq	.+6      	; 0x3494 <strtok_r+0x2c>
    348e:	20 15       	cp	r18, r0
    3490:	d9 f7       	brne	.-10     	; 0x3488 <strtok_r+0x20>
    3492:	f3 cf       	rjmp	.-26     	; 0x347a <strtok_r+0x12>
    3494:	fb 01       	movw	r30, r22
    3496:	21 91       	ld	r18, Z+
    3498:	20 15       	cp	r18, r0
    349a:	19 f4       	brne	.+6      	; 0x34a2 <strtok_r+0x3a>
    349c:	1e 92       	st	-X, r1
    349e:	11 96       	adiw	r26, 0x01	; 1
    34a0:	06 c0       	rjmp	.+12     	; 0x34ae <strtok_r+0x46>
    34a2:	22 23       	and	r18, r18
    34a4:	c1 f7       	brne	.-16     	; 0x3496 <strtok_r+0x2e>
    34a6:	0d 90       	ld	r0, X+
    34a8:	00 20       	and	r0, r0
    34aa:	a1 f7       	brne	.-24     	; 0x3494 <strtok_r+0x2c>
    34ac:	d0 01       	movw	r26, r0
    34ae:	fa 01       	movw	r30, r20
    34b0:	a1 93       	st	Z+, r26
    34b2:	b0 83       	st	Z, r27
    34b4:	08 95       	ret

000034b6 <__itoa_ncheck>:
    34b6:	bb 27       	eor	r27, r27
    34b8:	4a 30       	cpi	r20, 0x0A	; 10
    34ba:	31 f4       	brne	.+12     	; 0x34c8 <__itoa_ncheck+0x12>
    34bc:	99 23       	and	r25, r25
    34be:	22 f4       	brpl	.+8      	; 0x34c8 <__itoa_ncheck+0x12>
    34c0:	bd e2       	ldi	r27, 0x2D	; 45
    34c2:	90 95       	com	r25
    34c4:	81 95       	neg	r24
    34c6:	9f 4f       	sbci	r25, 0xFF	; 255
    34c8:	09 c0       	rjmp	.+18     	; 0x34dc <__utoa_common>

000034ca <__mulhi_const_10>:
    34ca:	7a e0       	ldi	r23, 0x0A	; 10
    34cc:	97 9f       	mul	r25, r23
    34ce:	90 2d       	mov	r25, r0
    34d0:	87 9f       	mul	r24, r23
    34d2:	80 2d       	mov	r24, r0
    34d4:	91 0d       	add	r25, r1
    34d6:	11 24       	eor	r1, r1
    34d8:	08 95       	ret

000034da <__utoa_ncheck>:
    34da:	bb 27       	eor	r27, r27

000034dc <__utoa_common>:
    34dc:	fb 01       	movw	r30, r22
    34de:	55 27       	eor	r21, r21
    34e0:	aa 27       	eor	r26, r26
    34e2:	88 0f       	add	r24, r24
    34e4:	99 1f       	adc	r25, r25
    34e6:	aa 1f       	adc	r26, r26
    34e8:	a4 17       	cp	r26, r20
    34ea:	10 f0       	brcs	.+4      	; 0x34f0 <__utoa_common+0x14>
    34ec:	a4 1b       	sub	r26, r20
    34ee:	83 95       	inc	r24
    34f0:	50 51       	subi	r21, 0x10	; 16
    34f2:	b9 f7       	brne	.-18     	; 0x34e2 <__utoa_common+0x6>
    34f4:	a0 5d       	subi	r26, 0xD0	; 208
    34f6:	aa 33       	cpi	r26, 0x3A	; 58
    34f8:	08 f0       	brcs	.+2      	; 0x34fc <__utoa_common+0x20>
    34fa:	a9 5d       	subi	r26, 0xD9	; 217
    34fc:	a1 93       	st	Z+, r26
    34fe:	00 97       	sbiw	r24, 0x00	; 0
    3500:	79 f7       	brne	.-34     	; 0x34e0 <__utoa_common+0x4>
    3502:	b1 11       	cpse	r27, r1
    3504:	b1 93       	st	Z+, r27
    3506:	11 92       	st	Z+, r1
    3508:	cb 01       	movw	r24, r22
    350a:	03 c0       	rjmp	.+6      	; 0x3512 <strrev>

0000350c <__ctype_isfalse>:
    350c:	99 27       	eor	r25, r25
    350e:	88 27       	eor	r24, r24

00003510 <__ctype_istrue>:
    3510:	08 95       	ret

00003512 <strrev>:
    3512:	dc 01       	movw	r26, r24
    3514:	fc 01       	movw	r30, r24
    3516:	67 2f       	mov	r22, r23
    3518:	71 91       	ld	r23, Z+
    351a:	77 23       	and	r23, r23
    351c:	e1 f7       	brne	.-8      	; 0x3516 <strrev+0x4>
    351e:	32 97       	sbiw	r30, 0x02	; 2
    3520:	04 c0       	rjmp	.+8      	; 0x352a <strrev+0x18>
    3522:	7c 91       	ld	r23, X
    3524:	6d 93       	st	X+, r22
    3526:	70 83       	st	Z, r23
    3528:	62 91       	ld	r22, -Z
    352a:	ae 17       	cp	r26, r30
    352c:	bf 07       	cpc	r27, r31
    352e:	c8 f3       	brcs	.-14     	; 0x3522 <strrev+0x10>
    3530:	08 95       	ret

00003532 <eeprom_read_byte>:
    3532:	f9 99       	sbic	0x1f, 1	; 31
    3534:	fe cf       	rjmp	.-4      	; 0x3532 <eeprom_read_byte>
    3536:	92 bd       	out	0x22, r25	; 34
    3538:	81 bd       	out	0x21, r24	; 33
    353a:	f8 9a       	sbi	0x1f, 0	; 31
    353c:	99 27       	eor	r25, r25
    353e:	80 b5       	in	r24, 0x20	; 32
    3540:	08 95       	ret

00003542 <eeprom_write_byte>:
    3542:	26 2f       	mov	r18, r22

00003544 <eeprom_write_r18>:
    3544:	f9 99       	sbic	0x1f, 1	; 31
    3546:	fe cf       	rjmp	.-4      	; 0x3544 <eeprom_write_r18>
    3548:	1f ba       	out	0x1f, r1	; 31
    354a:	92 bd       	out	0x22, r25	; 34
    354c:	81 bd       	out	0x21, r24	; 33
    354e:	20 bd       	out	0x20, r18	; 32
    3550:	0f b6       	in	r0, 0x3f	; 63
    3552:	f8 94       	cli
    3554:	fa 9a       	sbi	0x1f, 2	; 31
    3556:	f9 9a       	sbi	0x1f, 1	; 31
    3558:	0f be       	out	0x3f, r0	; 63
    355a:	01 96       	adiw	r24, 0x01	; 1
    355c:	08 95       	ret

0000355e <_exit>:
    355e:	f8 94       	cli

00003560 <__stop_program>:
    3560:	ff cf       	rjmp	.-2      	; 0x3560 <__stop_program>
