
relay_module.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  00000482  000004f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000482  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000518  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000548  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000c8  00000000  00000000  00000588  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000090c  00000000  00000000  00000650  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004d5  00000000  00000000  00000f5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000082a  00000000  00000000  00001431  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000160  00000000  00000000  00001c5c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004c1  00000000  00000000  00001dbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000034e  00000000  00000000  0000227d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  000025cb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__ctors_end>
   4:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
   8:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
   c:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  10:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  14:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  18:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  1c:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  20:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  24:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  28:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  2c:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  30:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  34:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  38:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  3c:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  40:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  44:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  48:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  4c:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  50:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  54:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  58:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  5c:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  60:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  64:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  68:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  6c:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  70:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  74:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  78:	0c 94 9b 00 	jmp	0x136	; 0x136 <__bad_interrupt>
  7c:	b2 00       	.word	0x00b2	; ????
  7e:	b8 00       	.word	0x00b8	; ????
  80:	be 00       	.word	0x00be	; ????
  82:	11 01       	movw	r2, r2
  84:	11 01       	movw	r2, r2
  86:	11 01       	movw	r2, r2
  88:	11 01       	movw	r2, r2
  8a:	11 01       	movw	r2, r2
  8c:	11 01       	movw	r2, r2
  8e:	11 01       	movw	r2, r2
  90:	11 01       	movw	r2, r2
  92:	c4 00       	.word	0x00c4	; ????
  94:	ca 00       	.word	0x00ca	; ????
  96:	d0 00       	.word	0x00d0	; ????
  98:	d6 00       	.word	0x00d6	; ????
  9a:	dc 00       	.word	0x00dc	; ????
  9c:	11 01       	movw	r2, r2
  9e:	11 01       	movw	r2, r2
  a0:	e2 00       	.word	0x00e2	; ????
  a2:	11 01       	movw	r2, r2
  a4:	11 01       	movw	r2, r2
  a6:	11 01       	movw	r2, r2
  a8:	e8 00       	.word	0x00e8	; ????
  aa:	ee 00       	.word	0x00ee	; ????
  ac:	f4 00       	.word	0x00f4	; ????
  ae:	fa 00       	.word	0x00fa	; ????
  b0:	11 01       	movw	r2, r2
  b2:	11 01       	movw	r2, r2
  b4:	11 01       	movw	r2, r2
  b6:	00 01       	movw	r0, r0
  b8:	06 01       	movw	r0, r12
  ba:	11 01       	movw	r2, r2
  bc:	11 01       	movw	r2, r2
  be:	11 01       	movw	r2, r2
  c0:	11 01       	movw	r2, r2
  c2:	11 01       	movw	r2, r2
  c4:	11 01       	movw	r2, r2
  c6:	11 01       	movw	r2, r2
  c8:	11 01       	movw	r2, r2
  ca:	11 01       	movw	r2, r2
  cc:	11 01       	movw	r2, r2
  ce:	11 01       	movw	r2, r2
  d0:	11 01       	movw	r2, r2
  d2:	0c 01       	movw	r0, r24
  d4:	1c 01       	movw	r2, r24
  d6:	22 01       	movw	r4, r4
  d8:	28 01       	movw	r4, r16
  da:	2e 01       	movw	r4, r28
  dc:	34 01       	movw	r6, r8
  de:	63 01       	movw	r12, r6
  e0:	63 01       	movw	r12, r6
  e2:	3a 01       	movw	r6, r20
  e4:	63 01       	movw	r12, r6
  e6:	63 01       	movw	r12, r6
  e8:	63 01       	movw	r12, r6
  ea:	40 01       	movw	r8, r0
  ec:	46 01       	movw	r8, r12
  ee:	4c 01       	movw	r8, r24
  f0:	52 01       	movw	r10, r4
  f2:	63 01       	movw	r12, r6
  f4:	63 01       	movw	r12, r6
  f6:	63 01       	movw	r12, r6
  f8:	58 01       	movw	r10, r16
  fa:	5e 01       	movw	r10, r28

000000fc <__ctors_end>:
  fc:	11 24       	eor	r1, r1
  fe:	1f be       	out	0x3f, r1	; 63
 100:	cf ef       	ldi	r28, 0xFF	; 255
 102:	d0 e1       	ldi	r29, 0x10	; 16
 104:	de bf       	out	0x3e, r29	; 62
 106:	cd bf       	out	0x3d, r28	; 61

00000108 <__do_copy_data>:
 108:	11 e0       	ldi	r17, 0x01	; 1
 10a:	a0 e0       	ldi	r26, 0x00	; 0
 10c:	b1 e0       	ldi	r27, 0x01	; 1
 10e:	e2 e8       	ldi	r30, 0x82	; 130
 110:	f4 e0       	ldi	r31, 0x04	; 4
 112:	02 c0       	rjmp	.+4      	; 0x118 <__do_copy_data+0x10>
 114:	05 90       	lpm	r0, Z+
 116:	0d 92       	st	X+, r0
 118:	a2 32       	cpi	r26, 0x22	; 34
 11a:	b1 07       	cpc	r27, r17
 11c:	d9 f7       	brne	.-10     	; 0x114 <__do_copy_data+0xc>

0000011e <__do_clear_bss>:
 11e:	21 e0       	ldi	r18, 0x01	; 1
 120:	a2 e2       	ldi	r26, 0x22	; 34
 122:	b1 e0       	ldi	r27, 0x01	; 1
 124:	01 c0       	rjmp	.+2      	; 0x128 <.do_clear_bss_start>

00000126 <.do_clear_bss_loop>:
 126:	1d 92       	st	X+, r1

00000128 <.do_clear_bss_start>:
 128:	a2 32       	cpi	r26, 0x22	; 34
 12a:	b2 07       	cpc	r27, r18
 12c:	e1 f7       	brne	.-8      	; 0x126 <.do_clear_bss_loop>
 12e:	0e 94 f7 01 	call	0x3ee	; 0x3ee <main>
 132:	0c 94 3f 02 	jmp	0x47e	; 0x47e <_exit>

00000136 <__bad_interrupt>:
 136:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000013a <_Z14SPI_Init_Slavev>:
 13a:	8c b5       	in	r24, 0x2c	; 44
 13c:	80 64       	ori	r24, 0x40	; 64
 13e:	8c bd       	out	0x2c, r24	; 44
 140:	1e bc       	out	0x2e, r1	; 46
 142:	08 95       	ret

00000144 <_Z13SPI_WriteReadh>:
 144:	8e bd       	out	0x2e, r24	; 46
 146:	0d b4       	in	r0, 0x2d	; 45
 148:	07 fe       	sbrs	r0, 7
 14a:	fd cf       	rjmp	.-6      	; 0x146 <_Z13SPI_WriteReadh+0x2>
 14c:	8e b5       	in	r24, 0x2e	; 46
 14e:	08 95       	ret

00000150 <_Z7pinModeic>:
 150:	01 97       	sbiw	r24, 0x01	; 1
 152:	8c 32       	cpi	r24, 0x2C	; 44
 154:	91 05       	cpc	r25, r1
 156:	08 f0       	brcs	.+2      	; 0x15a <_Z7pinModeic+0xa>
 158:	64 c0       	rjmp	.+200    	; 0x222 <_Z7pinModeic+0xd2>
 15a:	82 5c       	subi	r24, 0xC2	; 194
 15c:	9f 4f       	sbci	r25, 0xFF	; 255
 15e:	fc 01       	movw	r30, r24
 160:	0c 94 23 02 	jmp	0x446	; 0x446 <__tablejump2__>
 164:	61 30       	cpi	r22, 0x01	; 1
 166:	11 f4       	brne	.+4      	; 0x16c <_Z7pinModeic+0x1c>
 168:	25 9a       	sbi	0x04, 5	; 4
 16a:	08 95       	ret
 16c:	25 98       	cbi	0x04, 5	; 4
 16e:	08 95       	ret
 170:	61 30       	cpi	r22, 0x01	; 1
 172:	11 f4       	brne	.+4      	; 0x178 <_Z7pinModeic+0x28>
 174:	26 9a       	sbi	0x04, 6	; 4
 176:	08 95       	ret
 178:	26 98       	cbi	0x04, 6	; 4
 17a:	08 95       	ret
 17c:	61 30       	cpi	r22, 0x01	; 1
 17e:	11 f4       	brne	.+4      	; 0x184 <_Z7pinModeic+0x34>
 180:	27 9a       	sbi	0x04, 7	; 4
 182:	08 95       	ret
 184:	27 98       	cbi	0x04, 7	; 4
 186:	08 95       	ret
 188:	61 30       	cpi	r22, 0x01	; 1
 18a:	11 f4       	brne	.+4      	; 0x190 <_Z7pinModeic+0x40>
 18c:	53 9a       	sbi	0x0a, 3	; 10
 18e:	08 95       	ret
 190:	53 98       	cbi	0x0a, 3	; 10
 192:	08 95       	ret
 194:	61 30       	cpi	r22, 0x01	; 1
 196:	11 f4       	brne	.+4      	; 0x19c <_Z7pinModeic+0x4c>
 198:	54 9a       	sbi	0x0a, 4	; 10
 19a:	08 95       	ret
 19c:	54 98       	cbi	0x0a, 4	; 10
 19e:	08 95       	ret
 1a0:	61 30       	cpi	r22, 0x01	; 1
 1a2:	11 f4       	brne	.+4      	; 0x1a8 <_Z7pinModeic+0x58>
 1a4:	55 9a       	sbi	0x0a, 5	; 10
 1a6:	08 95       	ret
 1a8:	55 98       	cbi	0x0a, 5	; 10
 1aa:	08 95       	ret
 1ac:	61 30       	cpi	r22, 0x01	; 1
 1ae:	11 f4       	brne	.+4      	; 0x1b4 <_Z7pinModeic+0x64>
 1b0:	56 9a       	sbi	0x0a, 6	; 10
 1b2:	08 95       	ret
 1b4:	56 98       	cbi	0x0a, 6	; 10
 1b6:	08 95       	ret
 1b8:	61 30       	cpi	r22, 0x01	; 1
 1ba:	11 f4       	brne	.+4      	; 0x1c0 <_Z7pinModeic+0x70>
 1bc:	57 9a       	sbi	0x0a, 7	; 10
 1be:	08 95       	ret
 1c0:	57 98       	cbi	0x0a, 7	; 10
 1c2:	08 95       	ret
 1c4:	61 30       	cpi	r22, 0x01	; 1
 1c6:	11 f4       	brne	.+4      	; 0x1cc <_Z7pinModeic+0x7c>
 1c8:	38 9a       	sbi	0x07, 0	; 7
 1ca:	08 95       	ret
 1cc:	38 98       	cbi	0x07, 0	; 7
 1ce:	08 95       	ret
 1d0:	61 30       	cpi	r22, 0x01	; 1
 1d2:	11 f4       	brne	.+4      	; 0x1d8 <_Z7pinModeic+0x88>
 1d4:	3c 9a       	sbi	0x07, 4	; 7
 1d6:	08 95       	ret
 1d8:	3c 98       	cbi	0x07, 4	; 7
 1da:	08 95       	ret
 1dc:	61 30       	cpi	r22, 0x01	; 1
 1de:	11 f4       	brne	.+4      	; 0x1e4 <_Z7pinModeic+0x94>
 1e0:	3d 9a       	sbi	0x07, 5	; 7
 1e2:	08 95       	ret
 1e4:	3d 98       	cbi	0x07, 5	; 7
 1e6:	08 95       	ret
 1e8:	61 30       	cpi	r22, 0x01	; 1
 1ea:	11 f4       	brne	.+4      	; 0x1f0 <_Z7pinModeic+0xa0>
 1ec:	3e 9a       	sbi	0x07, 6	; 7
 1ee:	08 95       	ret
 1f0:	3e 98       	cbi	0x07, 6	; 7
 1f2:	08 95       	ret
 1f4:	61 30       	cpi	r22, 0x01	; 1
 1f6:	11 f4       	brne	.+4      	; 0x1fc <_Z7pinModeic+0xac>
 1f8:	3f 9a       	sbi	0x07, 7	; 7
 1fa:	08 95       	ret
 1fc:	3f 98       	cbi	0x07, 7	; 7
 1fe:	08 95       	ret
 200:	61 30       	cpi	r22, 0x01	; 1
 202:	11 f4       	brne	.+4      	; 0x208 <_Z7pinModeic+0xb8>
 204:	0f 9a       	sbi	0x01, 7	; 1
 206:	08 95       	ret
 208:	0f 98       	cbi	0x01, 7	; 1
 20a:	08 95       	ret
 20c:	61 30       	cpi	r22, 0x01	; 1
 20e:	11 f4       	brne	.+4      	; 0x214 <_Z7pinModeic+0xc4>
 210:	0e 9a       	sbi	0x01, 6	; 1
 212:	08 95       	ret
 214:	0e 98       	cbi	0x01, 6	; 1
 216:	08 95       	ret
 218:	61 30       	cpi	r22, 0x01	; 1
 21a:	11 f4       	brne	.+4      	; 0x220 <_Z7pinModeic+0xd0>
 21c:	24 9a       	sbi	0x04, 4	; 4
 21e:	08 95       	ret
 220:	24 98       	cbi	0x04, 4	; 4
 222:	08 95       	ret

00000224 <_Z12digitalWriteic>:
 224:	0c 97       	sbiw	r24, 0x0c	; 12
 226:	84 31       	cpi	r24, 0x14	; 20
 228:	91 05       	cpc	r25, r1
 22a:	08 f0       	brcs	.+2      	; 0x22e <_Z12digitalWriteic+0xa>
 22c:	4c c0       	rjmp	.+152    	; 0x2c6 <_Z12digitalWriteic+0xa2>
 22e:	86 59       	subi	r24, 0x96	; 150
 230:	9f 4f       	sbci	r25, 0xFF	; 255
 232:	fc 01       	movw	r30, r24
 234:	0c 94 23 02 	jmp	0x446	; 0x446 <__tablejump2__>
 238:	61 30       	cpi	r22, 0x01	; 1
 23a:	11 f4       	brne	.+4      	; 0x240 <_Z12digitalWriteic+0x1c>
 23c:	5b 9a       	sbi	0x0b, 3	; 11
 23e:	08 95       	ret
 240:	5b 98       	cbi	0x0b, 3	; 11
 242:	08 95       	ret
 244:	61 30       	cpi	r22, 0x01	; 1
 246:	11 f4       	brne	.+4      	; 0x24c <_Z12digitalWriteic+0x28>
 248:	5c 9a       	sbi	0x0b, 4	; 11
 24a:	08 95       	ret
 24c:	5c 98       	cbi	0x0b, 4	; 11
 24e:	08 95       	ret
 250:	61 30       	cpi	r22, 0x01	; 1
 252:	11 f4       	brne	.+4      	; 0x258 <_Z12digitalWriteic+0x34>
 254:	5d 9a       	sbi	0x0b, 5	; 11
 256:	08 95       	ret
 258:	5d 98       	cbi	0x0b, 5	; 11
 25a:	08 95       	ret
 25c:	61 30       	cpi	r22, 0x01	; 1
 25e:	11 f4       	brne	.+4      	; 0x264 <_Z12digitalWriteic+0x40>
 260:	5e 9a       	sbi	0x0b, 6	; 11
 262:	08 95       	ret
 264:	5e 98       	cbi	0x0b, 6	; 11
 266:	08 95       	ret
 268:	61 30       	cpi	r22, 0x01	; 1
 26a:	11 f4       	brne	.+4      	; 0x270 <_Z12digitalWriteic+0x4c>
 26c:	5f 9a       	sbi	0x0b, 7	; 11
 26e:	08 95       	ret
 270:	5f 98       	cbi	0x0b, 7	; 11
 272:	08 95       	ret
 274:	61 30       	cpi	r22, 0x01	; 1
 276:	11 f4       	brne	.+4      	; 0x27c <_Z12digitalWriteic+0x58>
 278:	40 9a       	sbi	0x08, 0	; 8
 27a:	08 95       	ret
 27c:	40 98       	cbi	0x08, 0	; 8
 27e:	08 95       	ret
 280:	61 30       	cpi	r22, 0x01	; 1
 282:	11 f4       	brne	.+4      	; 0x288 <_Z12digitalWriteic+0x64>
 284:	44 9a       	sbi	0x08, 4	; 8
 286:	08 95       	ret
 288:	44 98       	cbi	0x08, 4	; 8
 28a:	08 95       	ret
 28c:	61 30       	cpi	r22, 0x01	; 1
 28e:	11 f4       	brne	.+4      	; 0x294 <_Z12digitalWriteic+0x70>
 290:	45 9a       	sbi	0x08, 5	; 8
 292:	08 95       	ret
 294:	45 98       	cbi	0x08, 5	; 8
 296:	08 95       	ret
 298:	61 30       	cpi	r22, 0x01	; 1
 29a:	11 f4       	brne	.+4      	; 0x2a0 <_Z12digitalWriteic+0x7c>
 29c:	46 9a       	sbi	0x08, 6	; 8
 29e:	08 95       	ret
 2a0:	46 98       	cbi	0x08, 6	; 8
 2a2:	08 95       	ret
 2a4:	61 30       	cpi	r22, 0x01	; 1
 2a6:	11 f4       	brne	.+4      	; 0x2ac <_Z12digitalWriteic+0x88>
 2a8:	47 9a       	sbi	0x08, 7	; 8
 2aa:	08 95       	ret
 2ac:	47 98       	cbi	0x08, 7	; 8
 2ae:	08 95       	ret
 2b0:	61 30       	cpi	r22, 0x01	; 1
 2b2:	11 f4       	brne	.+4      	; 0x2b8 <_Z12digitalWriteic+0x94>
 2b4:	17 9a       	sbi	0x02, 7	; 2
 2b6:	08 95       	ret
 2b8:	17 98       	cbi	0x02, 7	; 2
 2ba:	08 95       	ret
 2bc:	61 30       	cpi	r22, 0x01	; 1
 2be:	11 f4       	brne	.+4      	; 0x2c4 <_Z12digitalWriteic+0xa0>
 2c0:	16 9a       	sbi	0x02, 6	; 2
 2c2:	08 95       	ret
 2c4:	16 98       	cbi	0x02, 6	; 2
 2c6:	08 95       	ret

000002c8 <_Z11digitalReadi>:
 2c8:	8c 97       	sbiw	r24, 0x2c	; 44
 2ca:	19 f4       	brne	.+6      	; 0x2d2 <_Z11digitalReadi+0xa>
 2cc:	83 b1       	in	r24, 0x03	; 3
 2ce:	80 71       	andi	r24, 0x10	; 16
 2d0:	08 95       	ret
 2d2:	80 e0       	ldi	r24, 0x00	; 0
 2d4:	08 95       	ret

000002d6 <_Z11atmegaSetupv>:
 2d6:	ef 92       	push	r14
 2d8:	ff 92       	push	r15
 2da:	0f 93       	push	r16
 2dc:	1f 93       	push	r17
 2de:	cf 93       	push	r28
 2e0:	df 93       	push	r29
 2e2:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <RELAY_COUNT>
 2e6:	88 23       	and	r24, r24
 2e8:	89 f0       	breq	.+34     	; 0x30c <_Z11atmegaSetupv+0x36>
 2ea:	08 e0       	ldi	r16, 0x08	; 8
 2ec:	11 e0       	ldi	r17, 0x01	; 1
 2ee:	c0 e0       	ldi	r28, 0x00	; 0
 2f0:	d0 e0       	ldi	r29, 0x00	; 0
 2f2:	e8 2e       	mov	r14, r24
 2f4:	f1 2c       	mov	r15, r1
 2f6:	61 e0       	ldi	r22, 0x01	; 1
 2f8:	f8 01       	movw	r30, r16
 2fa:	81 91       	ld	r24, Z+
 2fc:	91 91       	ld	r25, Z+
 2fe:	8f 01       	movw	r16, r30
 300:	0e 94 a8 00 	call	0x150	; 0x150 <_Z7pinModeic>
 304:	21 96       	adiw	r28, 0x01	; 1
 306:	ce 15       	cp	r28, r14
 308:	df 05       	cpc	r29, r15
 30a:	a8 f3       	brcs	.-22     	; 0x2f6 <_Z11atmegaSetupv+0x20>
 30c:	60 e0       	ldi	r22, 0x00	; 0
 30e:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <SCK>
 312:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <SCK+0x1>
 316:	0e 94 a8 00 	call	0x150	; 0x150 <_Z7pinModeic>
 31a:	61 e0       	ldi	r22, 0x01	; 1
 31c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <MISO>
 320:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <MISO+0x1>
 324:	0e 94 a8 00 	call	0x150	; 0x150 <_Z7pinModeic>
 328:	60 e0       	ldi	r22, 0x00	; 0
 32a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <MOSI>
 32e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <MOSI+0x1>
 332:	0e 94 a8 00 	call	0x150	; 0x150 <_Z7pinModeic>
 336:	60 e0       	ldi	r22, 0x00	; 0
 338:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <CS>
 33c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <CS+0x1>
 340:	0e 94 a8 00 	call	0x150	; 0x150 <_Z7pinModeic>
 344:	df 91       	pop	r29
 346:	cf 91       	pop	r28
 348:	1f 91       	pop	r17
 34a:	0f 91       	pop	r16
 34c:	ff 90       	pop	r15
 34e:	ef 90       	pop	r14
 350:	08 95       	ret

00000352 <_Z5setupv>:
 352:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <_Z11atmegaSetupv>
 356:	08 95       	ret

00000358 <_Z18restoreRelayStatesv>:
const char OFF = 6;
const char OK = 7;

char relay_flag = 0;

void restoreRelayStates(){
 358:	ef 92       	push	r14
 35a:	ff 92       	push	r15
 35c:	0f 93       	push	r16
 35e:	1f 93       	push	r17
 360:	cf 93       	push	r28
 362:	df 93       	push	r29
	int i; int state;
	for (i=0;i<RELAY_COUNT;i++){
 364:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <RELAY_COUNT>
 368:	88 23       	and	r24, r24
 36a:	c9 f0       	breq	.+50     	; 0x39e <_Z18restoreRelayStatesv+0x46>
 36c:	08 e0       	ldi	r16, 0x08	; 8
 36e:	11 e0       	ldi	r17, 0x01	; 1
 370:	c0 e0       	ldi	r28, 0x00	; 0
 372:	d0 e0       	ldi	r29, 0x00	; 0
 374:	e8 2e       	mov	r14, r24
 376:	f1 2c       	mov	r15, r1
		while (!eeprom_is_ready());
 378:	f9 99       	sbic	0x1f, 1	; 31
 37a:	fe cf       	rjmp	.-4      	; 0x378 <_Z18restoreRelayStatesv+0x20>
		state = eeprom_read_byte((uint8_t*)i);
 37c:	ce 01       	movw	r24, r28
 37e:	0e 94 29 02 	call	0x452	; 0x452 <eeprom_read_byte>
		if (state == 1){
 382:	81 30       	cpi	r24, 0x01	; 1
 384:	31 f4       	brne	.+12     	; 0x392 <_Z18restoreRelayStatesv+0x3a>
			digitalWrite(pins[i],1);
 386:	61 e0       	ldi	r22, 0x01	; 1
 388:	f8 01       	movw	r30, r16
 38a:	80 81       	ld	r24, Z
 38c:	91 81       	ldd	r25, Z+1	; 0x01
 38e:	0e 94 12 01 	call	0x224	; 0x224 <_Z12digitalWriteic>

char relay_flag = 0;

void restoreRelayStates(){
	int i; int state;
	for (i=0;i<RELAY_COUNT;i++){
 392:	21 96       	adiw	r28, 0x01	; 1
 394:	0e 5f       	subi	r16, 0xFE	; 254
 396:	1f 4f       	sbci	r17, 0xFF	; 255
 398:	ce 15       	cp	r28, r14
 39a:	df 05       	cpc	r29, r15
 39c:	6c f3       	brlt	.-38     	; 0x378 <_Z18restoreRelayStatesv+0x20>
		state = eeprom_read_byte((uint8_t*)i);
		if (state == 1){
			digitalWrite(pins[i],1);
		}	
	}
}
 39e:	df 91       	pop	r29
 3a0:	cf 91       	pop	r28
 3a2:	1f 91       	pop	r17
 3a4:	0f 91       	pop	r16
 3a6:	ff 90       	pop	r15
 3a8:	ef 90       	pop	r14
 3aa:	08 95       	ret

000003ac <_Z11switchRelayii>:

void switchRelay(const int relay, const int status){
 3ac:	0f 93       	push	r16
 3ae:	1f 93       	push	r17
 3b0:	cf 93       	push	r28
 3b2:	df 93       	push	r29
 3b4:	8c 01       	movw	r16, r24
 3b6:	eb 01       	movw	r28, r22
	digitalWrite(pins[relay],status);
 3b8:	fc 01       	movw	r30, r24
 3ba:	ee 0f       	add	r30, r30
 3bc:	ff 1f       	adc	r31, r31
 3be:	e8 5f       	subi	r30, 0xF8	; 248
 3c0:	fe 4f       	sbci	r31, 0xFE	; 254
 3c2:	80 81       	ld	r24, Z
 3c4:	91 81       	ldd	r25, Z+1	; 0x01
 3c6:	0e 94 12 01 	call	0x224	; 0x224 <_Z12digitalWriteic>
	while (!eeprom_is_ready());
 3ca:	f9 99       	sbic	0x1f, 1	; 31
 3cc:	fe cf       	rjmp	.-4      	; 0x3ca <_Z11switchRelayii+0x1e>
	if (status == 1){
 3ce:	21 97       	sbiw	r28, 0x01	; 1
 3d0:	29 f4       	brne	.+10     	; 0x3dc <_Z11switchRelayii+0x30>
		eeprom_write_byte((uint8_t*)relay,1);
 3d2:	61 e0       	ldi	r22, 0x01	; 1
 3d4:	c8 01       	movw	r24, r16
 3d6:	0e 94 31 02 	call	0x462	; 0x462 <eeprom_write_byte>
 3da:	04 c0       	rjmp	.+8      	; 0x3e4 <_Z11switchRelayii+0x38>
	} else {
		eeprom_write_byte((uint8_t*)relay,0);
 3dc:	60 e0       	ldi	r22, 0x00	; 0
 3de:	c8 01       	movw	r24, r16
 3e0:	0e 94 31 02 	call	0x462	; 0x462 <eeprom_write_byte>
	}
}
 3e4:	df 91       	pop	r29
 3e6:	cf 91       	pop	r28
 3e8:	1f 91       	pop	r17
 3ea:	0f 91       	pop	r16
 3ec:	08 95       	ret

000003ee <main>:

int main(void)
{
	int i; char read;
	unsigned char command, reply;
	setup();
 3ee:	0e 94 a9 01 	call	0x352	; 0x352 <_Z5setupv>
	restoreRelayStates();
 3f2:	0e 94 ac 01 	call	0x358	; 0x358 <_Z18restoreRelayStatesv>
	SPDR = 0;
 3f6:	1e bc       	out	0x2e, r1	; 46
	
	SPI_Init_Slave();
 3f8:	0e 94 9d 00 	call	0x13a	; 0x13a <_Z14SPI_Init_Slavev>

	while (1)
	{
		
		if (digitalRead(CS) == 0){
 3fc:	c0 91 00 01 	lds	r28, 0x0100	; 0x800100 <CS>
 400:	d0 91 01 01 	lds	r29, 0x0101	; 0x800101 <CS+0x1>
			
			read = SPI_WriteRead(RELAY_COUNT);
 404:	10 91 20 01 	lds	r17, 0x0120	; 0x800120 <RELAY_COUNT>
	SPI_Init_Slave();

	while (1)
	{
		
		if (digitalRead(CS) == 0){
 408:	ce 01       	movw	r24, r28
 40a:	0e 94 64 01 	call	0x2c8	; 0x2c8 <_Z11digitalReadi>
 40e:	81 11       	cpse	r24, r1
 410:	fb cf       	rjmp	.-10     	; 0x408 <__FUSE_REGION_LENGTH__+0x8>
			
			read = SPI_WriteRead(RELAY_COUNT);
 412:	81 2f       	mov	r24, r17
 414:	0e 94 a2 00 	call	0x144	; 0x144 <_Z13SPI_WriteReadh>
			
			switch (read){
 418:	81 30       	cpi	r24, 0x01	; 1
 41a:	19 f0       	breq	.+6      	; 0x422 <__FUSE_REGION_LENGTH__+0x22>
 41c:	84 30       	cpi	r24, 0x04	; 4
 41e:	29 f0       	breq	.+10     	; 0x42a <__FUSE_REGION_LENGTH__+0x2a>
 420:	f3 cf       	rjmp	.-26     	; 0x408 <__FUSE_REGION_LENGTH__+0x8>
				
				case REQUEST_RELAY_COUNT:
					SPI_WriteRead(RELAY_COUNT);
 422:	81 2f       	mov	r24, r17
 424:	0e 94 a2 00 	call	0x144	; 0x144 <_Z13SPI_WriteReadh>
					break;
 428:	ef cf       	rjmp	.-34     	; 0x408 <__FUSE_REGION_LENGTH__+0x8>
				case SWITCH_RELAY:
					char relay,status;
					relay = SPI_WriteRead(OK);
 42a:	87 e0       	ldi	r24, 0x07	; 7
 42c:	0e 94 a2 00 	call	0x144	; 0x144 <_Z13SPI_WriteReadh>
 430:	08 2f       	mov	r16, r24
					status = SPI_WriteRead(OK);
 432:	87 e0       	ldi	r24, 0x07	; 7
 434:	0e 94 a2 00 	call	0x144	; 0x144 <_Z13SPI_WriteReadh>
					switchRelay(relay,status);
 438:	68 2f       	mov	r22, r24
 43a:	70 e0       	ldi	r23, 0x00	; 0
 43c:	80 2f       	mov	r24, r16
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	0e 94 d6 01 	call	0x3ac	; 0x3ac <_Z11switchRelayii>
					break;
 444:	e1 cf       	rjmp	.-62     	; 0x408 <__FUSE_REGION_LENGTH__+0x8>

00000446 <__tablejump2__>:
 446:	ee 0f       	add	r30, r30
 448:	ff 1f       	adc	r31, r31
 44a:	05 90       	lpm	r0, Z+
 44c:	f4 91       	lpm	r31, Z
 44e:	e0 2d       	mov	r30, r0
 450:	09 94       	ijmp

00000452 <eeprom_read_byte>:
 452:	f9 99       	sbic	0x1f, 1	; 31
 454:	fe cf       	rjmp	.-4      	; 0x452 <eeprom_read_byte>
 456:	92 bd       	out	0x22, r25	; 34
 458:	81 bd       	out	0x21, r24	; 33
 45a:	f8 9a       	sbi	0x1f, 0	; 31
 45c:	99 27       	eor	r25, r25
 45e:	80 b5       	in	r24, 0x20	; 32
 460:	08 95       	ret

00000462 <eeprom_write_byte>:
 462:	26 2f       	mov	r18, r22

00000464 <eeprom_write_r18>:
 464:	f9 99       	sbic	0x1f, 1	; 31
 466:	fe cf       	rjmp	.-4      	; 0x464 <eeprom_write_r18>
 468:	1f ba       	out	0x1f, r1	; 31
 46a:	92 bd       	out	0x22, r25	; 34
 46c:	81 bd       	out	0x21, r24	; 33
 46e:	20 bd       	out	0x20, r18	; 32
 470:	0f b6       	in	r0, 0x3f	; 63
 472:	f8 94       	cli
 474:	fa 9a       	sbi	0x1f, 2	; 31
 476:	f9 9a       	sbi	0x1f, 1	; 31
 478:	0f be       	out	0x3f, r0	; 63
 47a:	01 96       	adiw	r24, 0x01	; 1
 47c:	08 95       	ret

0000047e <_exit>:
 47e:	f8 94       	cli

00000480 <__stop_program>:
 480:	ff cf       	rjmp	.-2      	; 0x480 <__stop_program>
